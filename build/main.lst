ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_SDMMC1_SD_Init,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-sp-d16
  24              	MX_SDMMC1_SD_Init:
  25              	.LFB176:
  26              		.file 1 "main.c"
   1:main.c        **** 
   2:main.c        **** /**
   3:main.c        ****   ******************************************************************************
   4:main.c        ****   * @file           : main.c
   5:main.c        ****   * @brief          : Main program body
   6:main.c        ****   ******************************************************************************
   7:main.c        ****   * This notice applies to any and all portions of this file
   8:main.c        ****   * that are not between comment pairs USER CODE BEGIN and
   9:main.c        ****   * USER CODE END. Other portions of this file, whether 
  10:main.c        ****   * inserted by the user or by software development tools
  11:main.c        ****   * are owned by their respective copyright owners.
  12:main.c        ****   *
  13:main.c        ****   * Copyright (c) 2018 STMicroelectronics International N.V. 
  14:main.c        ****   * All rights reserved.
  15:main.c        ****   *
  16:main.c        ****   * Redistribution and use in source and binary forms, with or without 
  17:main.c        ****   * modification, are permitted, provided that the following conditions are met:
  18:main.c        ****   *
  19:main.c        ****   * 1. Redistribution of source code must retain the above copyright notice, 
  20:main.c        ****   *    this list of conditions and the following disclaimer.
  21:main.c        ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  22:main.c        ****   *    this list of conditions and the following disclaimer in the documentation
  23:main.c        ****   *    and/or other materials provided with the distribution.
  24:main.c        ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  25:main.c        ****   *    contributors to this software may be used to endorse or promote products 
  26:main.c        ****   *    derived from this software without specific written permission.
  27:main.c        ****   * 4. This software, including modifications and/or derivative works of this 
  28:main.c        ****   *    software, must execute solely and exclusively on microcontroller or
  29:main.c        ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  30:main.c        ****   * 5. Redistribution and use of this software other than as permitted under 
  31:main.c        ****   *    this license is void and will automatically terminate your rights under 
  32:main.c        ****   *    this license. 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 2


  33:main.c        ****   *
  34:main.c        ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  35:main.c        ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  36:main.c        ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  37:main.c        ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  38:main.c        ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  39:main.c        ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  40:main.c        ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  41:main.c        ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  42:main.c        ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  43:main.c        ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  44:main.c        ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  45:main.c        ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  46:main.c        ****   *
  47:main.c        ****   ******************************************************************************
  48:main.c        ****   */
  49:main.c        **** /* Includes ------------------------------------------------------------------*/
  50:main.c        **** #include "main.h"
  51:main.c        **** #include "stm32f7xx_hal.h"
  52:main.c        **** #include "cmsis_os.h"
  53:main.c        **** #include "fatfs.h"
  54:main.c        **** #include "lwip.h"
  55:main.c        **** #include "usb_host.h"
  56:main.c        **** 
  57:main.c        **** /* USER CODE BEGIN Includes */
  58:main.c        **** #include  <errno.h>
  59:main.c        **** #include  <sys/unistd.h>
  60:main.c        **** 
  61:main.c        **** #include "stm32746g_discovery_lcd.h"
  62:main.c        **** #include "Utilities/Fonts/fonts.h"
  63:main.c        **** #include "stm32746g_discovery_ts.h"
  64:main.c        **** #include "stm32746g_discovery_audio.h"
  65:main.c        **** #include "term_io.h"
  66:main.c        **** #include "dbgu.h"
  67:main.c        **** #include "ansi.h"
  68:main.c        **** 
  69:main.c        **** #include "FreeRTOS.h"
  70:main.c        **** #include "task.h"
  71:main.c        **** #include "queue.h"
  72:main.c        **** 
  73:main.c        **** #include "lwip/opt.h"
  74:main.c        **** #include "lwip/api.h"
  75:main.c        **** #include "lwip/apps/fs.h"
  76:main.c        **** #include "lwip/dhcp.h"
  77:main.c        **** #include "lwip/tcpip.h"
  78:main.c        **** #include "lwip/netdb.h"
  79:main.c        **** #include "lwip/sockets.h"
  80:main.c        **** 
  81:main.c        **** #include "lwip.h"
  82:main.c        **** 
  83:main.c        **** #include "wm8994/wm8994.h"
  84:main.c        **** 
  85:main.c        **** /* Modules imports */
  86:main.c        **** #include "Modules/gui.h"
  87:main.c        **** #include "Modules/controls.h"
  88:main.c        **** #include "Modules/audio_loader.h"
  89:main.c        **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 3


  90:main.c        **** 
  91:main.c        **** /* USER CODE END Includes */
  92:main.c        **** 
  93:main.c        **** /* Private variables ---------------------------------------------------------*/
  94:main.c        **** ADC_HandleTypeDef hadc3;
  95:main.c        **** 
  96:main.c        **** CRC_HandleTypeDef hcrc;
  97:main.c        **** 
  98:main.c        **** DCMI_HandleTypeDef hdcmi;
  99:main.c        **** 
 100:main.c        **** DMA2D_HandleTypeDef hdma2d;
 101:main.c        **** 
 102:main.c        **** I2C_HandleTypeDef hi2c1;
 103:main.c        **** I2C_HandleTypeDef hi2c3;
 104:main.c        **** 
 105:main.c        **** LTDC_HandleTypeDef hltdc;
 106:main.c        **** 
 107:main.c        **** QSPI_HandleTypeDef hqspi;
 108:main.c        **** 
 109:main.c        **** RTC_HandleTypeDef hrtc;
 110:main.c        **** 
 111:main.c        **** SAI_HandleTypeDef hsai_BlockA2;
 112:main.c        **** SAI_HandleTypeDef hsai_BlockB2;
 113:main.c        **** 
 114:main.c        **** SD_HandleTypeDef hsd1;
 115:main.c        **** 
 116:main.c        **** SPDIFRX_HandleTypeDef hspdif;
 117:main.c        **** 
 118:main.c        **** SPI_HandleTypeDef hspi2;
 119:main.c        **** 
 120:main.c        **** TIM_HandleTypeDef htim1;
 121:main.c        **** TIM_HandleTypeDef htim2;
 122:main.c        **** TIM_HandleTypeDef htim3;
 123:main.c        **** TIM_HandleTypeDef htim5;
 124:main.c        **** TIM_HandleTypeDef htim7;
 125:main.c        **** TIM_HandleTypeDef htim8;
 126:main.c        **** TIM_HandleTypeDef htim12;
 127:main.c        **** 
 128:main.c        **** UART_HandleTypeDef huart1;
 129:main.c        **** UART_HandleTypeDef huart6;
 130:main.c        **** 
 131:main.c        **** SDRAM_HandleTypeDef hsdram1;
 132:main.c        **** 
 133:main.c        **** osThreadId defaultTaskHandle;
 134:main.c        **** osThreadId touchscreenTaskHandle;
 135:main.c        **** 
 136:main.c        **** /* USER CODE BEGIN PV */
 137:main.c        **** /* Private variables ---------------------------------------------------------*/
 138:main.c        **** 
 139:main.c        **** /* USER CODE END PV */
 140:main.c        **** 
 141:main.c        **** /* Private function prototypes -----------------------------------------------*/
 142:main.c        **** void SystemClock_Config(void);
 143:main.c        **** 
 144:main.c        **** static void MX_GPIO_Init(void);
 145:main.c        **** 
 146:main.c        **** static void MX_ADC3_Init(void);
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 4


 147:main.c        **** 
 148:main.c        **** static void MX_CRC_Init(void);
 149:main.c        **** 
 150:main.c        **** static void MX_DCMI_Init(void);
 151:main.c        **** 
 152:main.c        **** static void MX_DMA2D_Init(void);
 153:main.c        **** 
 154:main.c        **** static void MX_FMC_Init(void);
 155:main.c        **** 
 156:main.c        **** static void MX_I2C1_Init(void);
 157:main.c        **** 
 158:main.c        **** static void MX_I2C3_Init(void);
 159:main.c        **** 
 160:main.c        **** static void MX_LTDC_Init(void);
 161:main.c        **** 
 162:main.c        **** static void MX_QUADSPI_Init(void);
 163:main.c        **** 
 164:main.c        **** static void MX_RTC_Init(void);
 165:main.c        **** 
 166:main.c        **** static void MX_SAI2_Init(void);
 167:main.c        **** 
 168:main.c        **** static void MX_SDMMC1_SD_Init(void);
 169:main.c        **** 
 170:main.c        **** static void MX_SPDIFRX_Init(void);
 171:main.c        **** 
 172:main.c        **** static void MX_SPI2_Init(void);
 173:main.c        **** 
 174:main.c        **** static void MX_TIM1_Init(void);
 175:main.c        **** 
 176:main.c        **** static void MX_TIM2_Init(void);
 177:main.c        **** 
 178:main.c        **** static void MX_TIM3_Init(void);
 179:main.c        **** 
 180:main.c        **** static void MX_TIM5_Init(void);
 181:main.c        **** 
 182:main.c        **** static void MX_TIM8_Init(void);
 183:main.c        **** 
 184:main.c        **** static void MX_TIM12_Init(void);
 185:main.c        **** 
 186:main.c        **** static void MX_USART1_UART_Init(void);
 187:main.c        **** 
 188:main.c        **** static void MX_USART6_UART_Init(void);
 189:main.c        **** 
 190:main.c        **** static void MX_TIM7_Init(void);
 191:main.c        **** 
 192:main.c        **** /* TASKS */
 193:main.c        **** 
 194:main.c        **** void StartDefaultTask(void const *argument);
 195:main.c        **** 
 196:main.c        **** void StartTouchscreenTask(void const *argument);
 197:main.c        **** 
 198:main.c        **** void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
 199:main.c        **** 
 200:main.c        **** #define AUDIO_OUT_BUFFER_SIZE                      8192
 201:main.c        **** #define MASS_STORAGE_BUF_SIZE        ( 1024 * 1024 )
 202:main.c        **** 
 203:main.c        **** #define LCD_X_SIZE      RK043FN48H_WIDTH
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 5


 204:main.c        **** #define LCD_Y_SIZE      RK043FN48H_HEIGHT
 205:main.c        **** 
 206:main.c        **** #define PRINTF_USES_HAL_TX    0
 207:main.c        **** 
 208:main.c        **** #define THREAD_STACK_SIZE 2048
 209:main.c        **** 
 210:main.c        **** enum {
 211:main.c        ****     BUFFER_OFFSET_NONE = 0,
 212:main.c        ****     BUFFER_OFFSET_HALF,
 213:main.c        ****     BUFFER_OFFSET_FULL,
 214:main.c        **** };
 215:main.c        **** 
 216:main.c        **** static FIL testFile;
 217:main.c        **** extern ApplicationTypeDef Appli_state;
 218:main.c        **** static uint8_t player_state = 0;
 219:main.c        **** static uint8_t buf_offs = BUFFER_OFFSET_NONE;
 220:main.c        **** static uint32_t fpos = 0;
 221:main.c        **** 
 222:main.c        **** uint8_t buff[AUDIO_OUT_BUFFER_SIZE];
 223:main.c        **** static uint32_t lcd_image_fg[LCD_Y_SIZE][LCD_X_SIZE] __attribute__((section(".sdram"))) __attribute
 224:main.c        **** static uint32_t lcd_image_bg[LCD_Y_SIZE][LCD_X_SIZE] __attribute__((section(".sdram"))) __attribute
 225:main.c        **** static uint32_t mass_storage_buf[MASS_STORAGE_BUF_SIZE] __attribute__((section(".sdram"))) __attrib
 226:main.c        **** 
 227:main.c        **** static TS_StateTypeDef TS_State;
 228:main.c        **** 
 229:main.c        **** int __io_putchar(int ch) {
 230:main.c        ****     uint8_t data = ch;
 231:main.c        **** #if PRINTF_USES_HAL_TX
 232:main.c        ****     HAL_StatusTypeDef status = HAL_UART_Transmit(&huart1, (uint8_t*)&data, len, 100);
 233:main.c        **** #else
 234:main.c        ****     while (__HAL_UART_GET_FLAG(&huart1, UART_FLAG_TXE) == RESET) { ; }
 235:main.c        ****     huart1.Instance->TDR = (uint16_t) data;
 236:main.c        **** #endif
 237:main.c        ****     return 0;
 238:main.c        **** }
 239:main.c        **** 
 240:main.c        **** char inkey(void) {
 241:main.c        ****     uint32_t flags = huart1.Instance->ISR;
 242:main.c        **** 
 243:main.c        ****     if ((flags & UART_FLAG_RXNE) || (flags & UART_FLAG_ORE)) {
 244:main.c        ****         __HAL_UART_CLEAR_OREFLAG(&huart1);
 245:main.c        ****         return (huart1.Instance->RDR);
 246:main.c        ****     } else
 247:main.c        ****         return 0;
 248:main.c        **** }
 249:main.c        **** 
 250:main.c        **** static int TS_Initialize_Touchscreen(void) {
 251:main.c        ****     uint8_t status = 0;
 252:main.c        ****     status = BSP_TS_Init(BSP_LCD_GetXSize(), BSP_LCD_GetYSize());
 253:main.c        ****     if (status != TS_OK) return -1;
 254:main.c        ****     return 0;
 255:main.c        **** }
 256:main.c        **** 
 257:main.c        **** static void LCD_Initialize_Screen(void) {
 258:main.c        ****     /* LCD Initialization */
 259:main.c        ****     BSP_LCD_Init();
 260:main.c        **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 6


 261:main.c        ****     /* LCD Initialization */
 262:main.c        ****     BSP_LCD_LayerDefaultInit(0, (unsigned int) lcd_image_bg);
 263:main.c        ****     //BSP_LCD_LayerDefaultInit(1, (unsigned int)lcd_image_bg+(LCD_X_SIZE*LCD_Y_SIZE*4));
 264:main.c        ****     BSP_LCD_LayerDefaultInit(1, (unsigned int) lcd_image_fg);
 265:main.c        **** 
 266:main.c        ****     /* Enable the LCD */
 267:main.c        ****     BSP_LCD_DisplayOn();
 268:main.c        **** 
 269:main.c        ****     /* Select the LCD Background Layer  */
 270:main.c        ****     BSP_LCD_SelectLayer(0);
 271:main.c        **** 
 272:main.c        ****     /* Clear the Background Layer */
 273:main.c        ****     BSP_LCD_Clear(LCD_COLOR_WHITE);
 274:main.c        ****     BSP_LCD_SetBackColor(LCD_COLOR_WHITE);
 275:main.c        **** 
 276:main.c        ****     BSP_LCD_SetColorKeying(1, LCD_COLOR_WHITE);
 277:main.c        **** 
 278:main.c        ****     /* Select the LCD Foreground Layer  */
 279:main.c        ****     BSP_LCD_SelectLayer(1);
 280:main.c        **** 
 281:main.c        ****     /* Clear the Foreground Layer */
 282:main.c        ****     BSP_LCD_Clear(LCD_COLOR_WHITE);
 283:main.c        ****     BSP_LCD_SetBackColor(LCD_COLOR_WHITE);
 284:main.c        **** 
 285:main.c        ****     /* Configure the transparency for foreground and background :
 286:main.c        ****        Increase the transparency */
 287:main.c        ****     BSP_LCD_SetTransparency(0, 255);
 288:main.c        ****     BSP_LCD_SetTransparency(1, 255);
 289:main.c        **** }
 290:main.c        **** 
 291:main.c        **** static void LCD_Draw_GUI(void) {
 292:main.c        ****     GUI_DrawButtons();
 293:main.c        **** }
 294:main.c        **** 
 295:main.c        **** /* USER CODE END 0 */
 296:main.c        **** 
 297:main.c        **** /**
 298:main.c        ****   * @brief  The application entry point.
 299:main.c        ****   *
 300:main.c        ****   * @retval None
 301:main.c        ****   */
 302:main.c        **** int main(void) {
 303:main.c        ****     /* USER CODE BEGIN 1 */
 304:main.c        **** 
 305:main.c        ****     /* USER CODE END 1 */
 306:main.c        **** 
 307:main.c        ****     /* MCU Configuration----------------------------------------------------------*/
 308:main.c        **** 
 309:main.c        ****     /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 310:main.c        ****     HAL_Init();
 311:main.c        **** 
 312:main.c        ****     /* USER CODE BEGIN Init */
 313:main.c        **** 
 314:main.c        ****     /* USER CODE END Init */
 315:main.c        **** 
 316:main.c        ****     /* Configure the system clock */
 317:main.c        ****     SystemClock_Config();
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 7


 318:main.c        **** 
 319:main.c        ****     /* USER CODE BEGIN SysInit */
 320:main.c        **** 
 321:main.c        ****     /* USER CODE END SysInit */
 322:main.c        **** 
 323:main.c        ****     /* Initialize all configured peripherals */
 324:main.c        ****     MX_GPIO_Init();
 325:main.c        ****     MX_ADC3_Init();
 326:main.c        ****     MX_CRC_Init();
 327:main.c        ****     MX_DCMI_Init();
 328:main.c        ****     MX_DMA2D_Init();
 329:main.c        ****     MX_FMC_Init();
 330:main.c        ****     MX_I2C1_Init();
 331:main.c        ****     MX_I2C3_Init();
 332:main.c        ****     MX_LTDC_Init();
 333:main.c        ****     MX_QUADSPI_Init();
 334:main.c        ****     MX_RTC_Init();
 335:main.c        ****     MX_SAI2_Init();
 336:main.c        ****     MX_SDMMC1_SD_Init();
 337:main.c        ****     MX_SPDIFRX_Init();
 338:main.c        ****     MX_SPI2_Init();
 339:main.c        ****     MX_TIM1_Init();
 340:main.c        ****     MX_TIM2_Init();
 341:main.c        ****     MX_TIM3_Init();
 342:main.c        ****     MX_TIM5_Init();
 343:main.c        ****     MX_TIM8_Init();
 344:main.c        ****     MX_TIM12_Init();
 345:main.c        ****     MX_USART1_UART_Init();
 346:main.c        ****     MX_USART6_UART_Init();
 347:main.c        ****     MX_TIM7_Init();
 348:main.c        ****     /* USER CODE BEGIN 2 */
 349:main.c        ****     debug_init(&huart1);
 350:main.c        **** 
 351:main.c        ****     xprintf(ANSI_FG_GREEN
 352:main.c        ****             "STM32F746 Discovery Project"
 353:main.c        ****             ANSI_FG_DEFAULT
 354:main.c        ****             "\r\n");
 355:main.c        **** 
 356:main.c        ****     LCD_Initialize_Screen();
 357:main.c        ****     TS_Initialize_Touchscreen();
 358:main.c        **** 
 359:main.c        ****     /* USER CODE END 2 */
 360:main.c        **** 
 361:main.c        ****     /* USER CODE BEGIN RTOS_MUTEX */
 362:main.c        ****     /* add mutexes, ... */
 363:main.c        ****     /* USER CODE END RTOS_MUTEX */
 364:main.c        **** 
 365:main.c        ****     /* USER CODE BEGIN RTOS_SEMAPHORES */
 366:main.c        ****     /* add semaphores, ... */
 367:main.c        ****     /* USER CODE END RTOS_SEMAPHORES */
 368:main.c        **** 
 369:main.c        ****     /* USER CODE BEGIN RTOS_TIMERS */
 370:main.c        ****     /* start timers, add new ones, ... */
 371:main.c        ****     /* USER CODE END RTOS_TIMERS */
 372:main.c        **** 
 373:main.c        ****     /* Create the thread(s) */
 374:main.c        ****     /* definition and creation of defaultTask */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 8


 375:main.c        ****     osThreadDef(defaultTask, StartDefaultTask, osPriorityNormal, 1, THREAD_STACK_SIZE);
 376:main.c        ****     osThreadDef(touchscreenTask, StartTouchscreenTask, osPriorityHigh, 1, THREAD_STACK_SIZE);
 377:main.c        ****     touchscreenTaskHandle = osThreadCreate(osThread(touchscreenTask), NULL);
 378:main.c        **** 	defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 379:main.c        ****     
 380:main.c        **** 
 381:main.c        ****     /* USER CODE BEGIN RTOS_THREADS */
 382:main.c        ****     /* add threads, ... */
 383:main.c        ****     /* USER CODE END RTOS_THREADS */
 384:main.c        **** 
 385:main.c        ****     /* USER CODE BEGIN RTOS_QUEUES */
 386:main.c        ****     /* add queues, ... */
 387:main.c        ****     /* USER CODE END RTOS_QUEUES */
 388:main.c        **** 
 389:main.c        **** 
 390:main.c        ****     /* Start scheduler */
 391:main.c        ****     osKernelStart();
 392:main.c        **** 
 393:main.c        ****     /* We should never get here as control is now taken by the scheduler */
 394:main.c        ****     /* Infinite loop */
 395:main.c        ****     while (1) {}
 396:main.c        **** }
 397:main.c        **** 
 398:main.c        **** void StartDefaultTask(void const *argument) {
 399:main.c        ****     /* init code for FATFS */
 400:main.c        ****     MX_FATFS_Init();
 401:main.c        **** 
 402:main.c        ****     /* init code for USB_HOST */
 403:main.c        ****     MX_USB_HOST_Init();
 404:main.c        **** 
 405:main.c        ****     vTaskDelay(1000);
 406:main.c        ****     xprintf("Waiting for USB mass storage.\r\n");
 407:main.c        **** 
 408:main.c        ****     do {
 409:main.c        ****         vTaskDelay(250);
 410:main.c        ****     } while (Appli_state != APPLICATION_READY);
 411:main.c        **** 
 412:main.c        ****     xprintf("Initializing audio codec.\r\n");
 413:main.c        ****     if (BSP_AUDIO_OUT_Init(OUTPUT_DEVICE_HEADPHONE1, 60, AUDIO_FREQUENCY_44K) == 0) {
 414:main.c        ****         xprintf("Audio codec initialized successfully.\r\n");
 415:main.c        ****     } else {
 416:main.c        ****         xprintf("Audio codec initialized with errors.\r\n");
 417:main.c        ****     }
 418:main.c        ****     BSP_AUDIO_OUT_SetAudioFrameSlot(CODEC_AUDIOFRAME_SLOT_02);
 419:main.c        **** 
 420:main.c        ****     LCD_Initialize_Screen(); // todo: redundant?
 421:main.c        ****     LCD_Draw_GUI();
 422:main.c        ****     AUDIO_L_PerformScan();
 423:main.c        **** 
 424:main.c        ****     /* Infinite loop */
 425:main.c        ****     for (;;) {
 426:main.c        ****         char key = inkey();
 427:main.c        **** 
 428:main.c        ****         switch (key) {
 429:main.c        ****             case 0:
 430:main.c        ****                 break;
 431:main.c        ****             case 'a': {
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 9


 432:main.c        ****                 xprintf("Odebrano polecenie a\n");
 433:main.c        ****                 break;
 434:main.c        ****             }
 435:main.c        **** 
 436:main.c        ****             case 'p': {
 437:main.c        ****                 xprintf("play command...\n");
 438:main.c        ****                 if (player_state) {
 439:main.c        ****                     xprintf("already playing\n");
 440:main.c        ****                     break;
 441:main.c        ****                 }
 442:main.c        **** 
 443:main.c        ****                 FRESULT res;
 444:main.c        ****                 res = f_open(&testFile, "1:/testwave.wav", FA_READ);
 445:main.c        ****                 if (res == FR_OK) {
 446:main.c        ****                     xprintf("wave file open OK\n");
 447:main.c        ****                 } else {
 448:main.c        ****                     xprintf("wave file open ERROR, res = %d\n", res);
 449:main.c        ****                 }
 450:main.c        ****                 player_state = 1;
 451:main.c        ****                 BSP_AUDIO_OUT_Play((uint16_t *) &buff[0], AUDIO_OUT_BUFFER_SIZE);
 452:main.c        ****                 fpos = 0;
 453:main.c        ****                 buf_offs = BUFFER_OFFSET_NONE;
 454:main.c        ****                 break;
 455:main.c        ****             }
 456:main.c        ****             default: {
 457:main.c        ****                 xprintf("Nie rozpoznane polecenie: %c = %02X\n", key, key);
 458:main.c        ****                 break;
 459:main.c        ****             }
 460:main.c        ****         }
 461:main.c        **** 
 462:main.c        ****         if (player_state) {
 463:main.c        ****             uint32_t br;
 464:main.c        **** 
 465:main.c        ****             if (buf_offs == BUFFER_OFFSET_HALF) {
 466:main.c        ****                 if (f_read(&testFile,
 467:main.c        ****                            &buff[0],
 468:main.c        ****                            AUDIO_OUT_BUFFER_SIZE / 2,
 469:main.c        ****                            (void *) &br) != FR_OK) {
 470:main.c        ****                     BSP_AUDIO_OUT_Stop(CODEC_PDWN_SW);
 471:main.c        ****                     xprintf("f_read error on half\n");
 472:main.c        ****                 }
 473:main.c        ****                 buf_offs = BUFFER_OFFSET_NONE;
 474:main.c        ****                 fpos += br;
 475:main.c        **** 
 476:main.c        ****             }
 477:main.c        **** 
 478:main.c        ****             if (buf_offs == BUFFER_OFFSET_FULL) {
 479:main.c        ****                 if (f_read(&testFile,
 480:main.c        ****                            &buff[AUDIO_OUT_BUFFER_SIZE / 2],
 481:main.c        ****                            AUDIO_OUT_BUFFER_SIZE / 2,
 482:main.c        ****                            (void *) &br) != FR_OK) {
 483:main.c        ****                     BSP_AUDIO_OUT_Stop(CODEC_PDWN_SW);
 484:main.c        ****                     xprintf("f_read error on full\n");
 485:main.c        ****                 }
 486:main.c        **** 
 487:main.c        ****                 buf_offs = BUFFER_OFFSET_NONE;
 488:main.c        ****                 fpos += br;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 10


 489:main.c        ****             }
 490:main.c        **** 
 491:main.c        ****             if ((br < AUDIO_OUT_BUFFER_SIZE / 2) && fpos) {
 492:main.c        ****                 xprintf("stop at eof\n");
 493:main.c        ****                 BSP_AUDIO_OUT_Stop(CODEC_PDWN_SW);
 494:main.c        ****                 f_close(&testFile);
 495:main.c        ****                 player_state = 0;
 496:main.c        ****                 fpos = 0;
 497:main.c        ****                 buf_offs = BUFFER_OFFSET_NONE;
 498:main.c        ****             }
 499:main.c        ****         }
 500:main.c        ****         vTaskDelay(100);
 501:main.c        ****     }
 502:main.c        **** }
 503:main.c        **** 
 504:main.c        **** void StartTouchscreenTask(void const *argument) {
 505:main.c        ****     while (1) {
 506:main.c        ****         vTaskDelay(100);
 507:main.c        ****         BSP_TS_GetState(&TS_State);
 508:main.c        ****         GUI_HandleTouch(&TS_State, CON_HandleButtonTouched);
 509:main.c        ****     }
 510:main.c        **** }
 511:main.c        **** 
 512:main.c        **** /**
 513:main.c        ****   * @brief System Clock Configuration
 514:main.c        ****   * @retval None
 515:main.c        ****   */
 516:main.c        **** void SystemClock_Config(void) {
 517:main.c        **** 
 518:main.c        ****     RCC_OscInitTypeDef RCC_OscInitStruct;
 519:main.c        ****     RCC_ClkInitTypeDef RCC_ClkInitStruct;
 520:main.c        ****     RCC_PeriphCLKInitTypeDef PeriphClkInitStruct;
 521:main.c        **** 
 522:main.c        ****     /**Configure the main internal regulator output voltage 
 523:main.c        ****     */
 524:main.c        ****     __HAL_RCC_PWR_CLK_ENABLE();
 525:main.c        **** 
 526:main.c        ****     __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 527:main.c        **** 
 528:main.c        ****     /**Initializes the CPU, AHB and APB busses clocks 
 529:main.c        ****     */
 530:main.c        ****     RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_LSI | RCC_OSCILLATORTYPE_HSE;
 531:main.c        ****     RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 532:main.c        ****     RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 533:main.c        ****     RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 534:main.c        ****     RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 535:main.c        ****     RCC_OscInitStruct.PLL.PLLM = 25;
 536:main.c        ****     RCC_OscInitStruct.PLL.PLLN = 400;
 537:main.c        ****     RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 538:main.c        ****     RCC_OscInitStruct.PLL.PLLQ = 8;
 539:main.c        ****     if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 540:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 541:main.c        ****     }
 542:main.c        **** 
 543:main.c        ****     /**Activate the Over-Drive mode 
 544:main.c        ****     */
 545:main.c        ****     if (HAL_PWREx_EnableOverDrive() != HAL_OK) {
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 11


 546:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 547:main.c        ****     }
 548:main.c        **** 
 549:main.c        ****     /**Initializes the CPU, AHB and APB busses clocks 
 550:main.c        ****     */
 551:main.c        ****     RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK
 552:main.c        ****                                   | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 553:main.c        ****     RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 554:main.c        ****     RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 555:main.c        ****     RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 556:main.c        ****     RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 557:main.c        **** 
 558:main.c        ****     if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_6) != HAL_OK) {
 559:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 560:main.c        ****     }
 561:main.c        **** 
 562:main.c        ****     PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_SPDIFRX | RCC_PERIPHCLK_LTDC
 563:main.c        ****                                                | RCC_PERIPHCLK_RTC | RCC_PERIPHCLK_USART1
 564:main.c        ****                                                | RCC_PERIPHCLK_USART6 | RCC_PERIPHCLK_SAI2
 565:main.c        ****                                                | RCC_PERIPHCLK_I2C1 | RCC_PERIPHCLK_I2C3
 566:main.c        ****                                                | RCC_PERIPHCLK_SDMMC1 | RCC_PERIPHCLK_CLK48;
 567:main.c        ****     PeriphClkInitStruct.PLLI2S.PLLI2SN = 100;
 568:main.c        ****     PeriphClkInitStruct.PLLI2S.PLLI2SP = RCC_PLLP_DIV2;
 569:main.c        ****     PeriphClkInitStruct.PLLI2S.PLLI2SR = 2;
 570:main.c        ****     PeriphClkInitStruct.PLLI2S.PLLI2SQ = 2;
 571:main.c        ****     PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 572:main.c        ****     PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 573:main.c        ****     PeriphClkInitStruct.PLLSAI.PLLSAIQ = 4;
 574:main.c        ****     PeriphClkInitStruct.PLLSAI.PLLSAIP = RCC_PLLSAIP_DIV4;
 575:main.c        ****     PeriphClkInitStruct.PLLI2SDivQ = 1;
 576:main.c        ****     PeriphClkInitStruct.PLLSAIDivQ = 1;
 577:main.c        ****     PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 578:main.c        ****     PeriphClkInitStruct.RTCClockSelection = RCC_RTCCLKSOURCE_LSI;
 579:main.c        ****     PeriphClkInitStruct.Sai2ClockSelection = RCC_SAI2CLKSOURCE_PLLSAI;
 580:main.c        ****     PeriphClkInitStruct.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK2;
 581:main.c        ****     PeriphClkInitStruct.Usart6ClockSelection = RCC_USART6CLKSOURCE_PCLK2;
 582:main.c        ****     PeriphClkInitStruct.I2c1ClockSelection = RCC_I2C1CLKSOURCE_PCLK1;
 583:main.c        ****     PeriphClkInitStruct.I2c3ClockSelection = RCC_I2C3CLKSOURCE_PCLK1;
 584:main.c        ****     PeriphClkInitStruct.Clk48ClockSelection = RCC_CLK48SOURCE_PLLSAIP;
 585:main.c        ****     PeriphClkInitStruct.Sdmmc1ClockSelection = RCC_SDMMC1CLKSOURCE_CLK48;
 586:main.c        ****     if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK) {
 587:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 588:main.c        ****     }
 589:main.c        **** 
 590:main.c        ****     /**Configure the Systick interrupt time 
 591:main.c        ****     */
 592:main.c        ****     HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq() / 1000);
 593:main.c        **** 
 594:main.c        ****     /**Configure the Systick 
 595:main.c        ****     */
 596:main.c        ****     HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 597:main.c        **** 
 598:main.c        ****     /* SysTick_IRQn interrupt configuration */
 599:main.c        ****     HAL_NVIC_SetPriority(SysTick_IRQn, 15, 0);
 600:main.c        **** }
 601:main.c        **** 
 602:main.c        **** /* ADC3 init function */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 12


 603:main.c        **** static void MX_ADC3_Init(void) {
 604:main.c        **** 
 605:main.c        ****     ADC_ChannelConfTypeDef sConfig;
 606:main.c        **** 
 607:main.c        ****     /**Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of co
 608:main.c        ****     */
 609:main.c        ****     hadc3.Instance = ADC3;
 610:main.c        ****     hadc3.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 611:main.c        ****     hadc3.Init.Resolution = ADC_RESOLUTION_12B;
 612:main.c        ****     hadc3.Init.ScanConvMode = ADC_SCAN_DISABLE;
 613:main.c        ****     hadc3.Init.ContinuousConvMode = DISABLE;
 614:main.c        ****     hadc3.Init.DiscontinuousConvMode = DISABLE;
 615:main.c        ****     hadc3.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 616:main.c        ****     hadc3.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 617:main.c        ****     hadc3.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 618:main.c        ****     hadc3.Init.NbrOfConversion = 1;
 619:main.c        ****     hadc3.Init.DMAContinuousRequests = DISABLE;
 620:main.c        ****     hadc3.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 621:main.c        ****     if (HAL_ADC_Init(&hadc3) != HAL_OK) {
 622:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 623:main.c        ****     }
 624:main.c        **** 
 625:main.c        ****     /**Configure for the selected ADC regular channel its corresponding rank in the sequencer and i
 626:main.c        ****     */
 627:main.c        ****     sConfig.Channel = ADC_CHANNEL_4;
 628:main.c        ****     sConfig.Rank = ADC_REGULAR_RANK_1;
 629:main.c        ****     sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 630:main.c        ****     if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK) {
 631:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 632:main.c        ****     }
 633:main.c        **** 
 634:main.c        **** }
 635:main.c        **** 
 636:main.c        **** /* CRC init function */
 637:main.c        **** static void MX_CRC_Init(void) {
 638:main.c        **** 
 639:main.c        ****     hcrc.Instance = CRC;
 640:main.c        ****     hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
 641:main.c        ****     hcrc.Init.DefaultInitValueUse = DEFAULT_INIT_VALUE_ENABLE;
 642:main.c        ****     hcrc.Init.InputDataInversionMode = CRC_INPUTDATA_INVERSION_NONE;
 643:main.c        ****     hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
 644:main.c        ****     hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
 645:main.c        ****     if (HAL_CRC_Init(&hcrc) != HAL_OK) {
 646:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 647:main.c        ****     }
 648:main.c        **** 
 649:main.c        **** }
 650:main.c        **** 
 651:main.c        **** /* DCMI init function */
 652:main.c        **** static void MX_DCMI_Init(void) {
 653:main.c        **** 
 654:main.c        ****     hdcmi.Instance = DCMI;
 655:main.c        ****     hdcmi.Init.SynchroMode = DCMI_SYNCHRO_HARDWARE;
 656:main.c        ****     hdcmi.Init.PCKPolarity = DCMI_PCKPOLARITY_FALLING;
 657:main.c        ****     hdcmi.Init.VSPolarity = DCMI_VSPOLARITY_LOW;
 658:main.c        ****     hdcmi.Init.HSPolarity = DCMI_HSPOLARITY_LOW;
 659:main.c        ****     hdcmi.Init.CaptureRate = DCMI_CR_ALL_FRAME;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 13


 660:main.c        ****     hdcmi.Init.ExtendedDataMode = DCMI_EXTEND_DATA_8B;
 661:main.c        ****     hdcmi.Init.JPEGMode = DCMI_JPEG_DISABLE;
 662:main.c        ****     hdcmi.Init.ByteSelectMode = DCMI_BSM_ALL;
 663:main.c        ****     hdcmi.Init.ByteSelectStart = DCMI_OEBS_ODD;
 664:main.c        ****     hdcmi.Init.LineSelectMode = DCMI_LSM_ALL;
 665:main.c        ****     hdcmi.Init.LineSelectStart = DCMI_OELS_ODD;
 666:main.c        ****     if (HAL_DCMI_Init(&hdcmi) != HAL_OK) {
 667:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 668:main.c        ****     }
 669:main.c        **** 
 670:main.c        **** }
 671:main.c        **** 
 672:main.c        **** /* DMA2D init function */
 673:main.c        **** static void MX_DMA2D_Init(void) {
 674:main.c        **** 
 675:main.c        ****     hdma2d.Instance = DMA2D;
 676:main.c        ****     hdma2d.Init.Mode = DMA2D_M2M;
 677:main.c        ****     hdma2d.Init.ColorMode = DMA2D_OUTPUT_ARGB8888;
 678:main.c        ****     hdma2d.Init.OutputOffset = 0;
 679:main.c        ****     hdma2d.LayerCfg[1].InputOffset = 0;
 680:main.c        ****     hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_ARGB8888;
 681:main.c        ****     hdma2d.LayerCfg[1].AlphaMode = DMA2D_NO_MODIF_ALPHA;
 682:main.c        ****     hdma2d.LayerCfg[1].InputAlpha = 0;
 683:main.c        ****     if (HAL_DMA2D_Init(&hdma2d) != HAL_OK) {
 684:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 685:main.c        ****     }
 686:main.c        **** 
 687:main.c        ****     if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK) {
 688:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 689:main.c        ****     }
 690:main.c        **** 
 691:main.c        **** }
 692:main.c        **** 
 693:main.c        **** /* I2C1 init function */
 694:main.c        **** static void MX_I2C1_Init(void) {
 695:main.c        **** 
 696:main.c        ****     hi2c1.Instance = I2C1;
 697:main.c        ****     hi2c1.Init.Timing = 0x00C0EAFF;
 698:main.c        ****     hi2c1.Init.OwnAddress1 = 0;
 699:main.c        ****     hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 700:main.c        ****     hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 701:main.c        ****     hi2c1.Init.OwnAddress2 = 0;
 702:main.c        ****     hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 703:main.c        ****     hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 704:main.c        ****     hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 705:main.c        ****     if (HAL_I2C_Init(&hi2c1) != HAL_OK) {
 706:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 707:main.c        ****     }
 708:main.c        **** 
 709:main.c        ****     /**Configure Analogue filter 
 710:main.c        ****     */
 711:main.c        ****     if (HAL_I2CEx_ConfigAnalogFilter(&hi2c1, I2C_ANALOGFILTER_ENABLE) != HAL_OK) {
 712:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 713:main.c        ****     }
 714:main.c        **** 
 715:main.c        ****     /**Configure Digital filter 
 716:main.c        ****     */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 14


 717:main.c        ****     if (HAL_I2CEx_ConfigDigitalFilter(&hi2c1, 0) != HAL_OK) {
 718:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 719:main.c        ****     }
 720:main.c        **** 
 721:main.c        **** }
 722:main.c        **** 
 723:main.c        **** /* I2C3 init function */
 724:main.c        **** static void MX_I2C3_Init(void) {
 725:main.c        **** 
 726:main.c        ****     hi2c3.Instance = I2C3;
 727:main.c        ****     hi2c3.Init.Timing = 0x00C0EAFF;
 728:main.c        ****     hi2c3.Init.OwnAddress1 = 0;
 729:main.c        ****     hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 730:main.c        ****     hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 731:main.c        ****     hi2c3.Init.OwnAddress2 = 0;
 732:main.c        ****     hi2c3.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 733:main.c        ****     hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 734:main.c        ****     hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 735:main.c        ****     if (HAL_I2C_Init(&hi2c3) != HAL_OK) {
 736:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 737:main.c        ****     }
 738:main.c        **** 
 739:main.c        ****     /**Configure Analogue filter 
 740:main.c        ****     */
 741:main.c        ****     if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_ENABLE) != HAL_OK) {
 742:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 743:main.c        ****     }
 744:main.c        **** 
 745:main.c        ****     /**Configure Digital filter 
 746:main.c        ****     */
 747:main.c        ****     if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK) {
 748:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 749:main.c        ****     }
 750:main.c        **** 
 751:main.c        **** }
 752:main.c        **** 
 753:main.c        **** /* LTDC init function */
 754:main.c        **** static void MX_LTDC_Init(void) {
 755:main.c        **** 
 756:main.c        ****     LTDC_LayerCfgTypeDef pLayerCfg;
 757:main.c        **** 
 758:main.c        ****     hltdc.Instance = LTDC;
 759:main.c        ****     hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 760:main.c        ****     hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
 761:main.c        ****     hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 762:main.c        ****     hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 763:main.c        ****     hltdc.Init.HorizontalSync = 40;
 764:main.c        ****     hltdc.Init.VerticalSync = 9;
 765:main.c        ****     hltdc.Init.AccumulatedHBP = 53;
 766:main.c        ****     hltdc.Init.AccumulatedVBP = 11;
 767:main.c        ****     hltdc.Init.AccumulatedActiveW = 533;
 768:main.c        ****     hltdc.Init.AccumulatedActiveH = 283;
 769:main.c        ****     hltdc.Init.TotalWidth = 565;
 770:main.c        ****     hltdc.Init.TotalHeigh = 285;
 771:main.c        ****     hltdc.Init.Backcolor.Blue = 0;
 772:main.c        ****     hltdc.Init.Backcolor.Green = 0;
 773:main.c        ****     hltdc.Init.Backcolor.Red = 0;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 15


 774:main.c        ****     if (HAL_LTDC_Init(&hltdc) != HAL_OK) {
 775:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 776:main.c        ****     }
 777:main.c        **** 
 778:main.c        ****     pLayerCfg.WindowX0 = 0;
 779:main.c        ****     pLayerCfg.WindowX1 = 480;
 780:main.c        ****     pLayerCfg.WindowY0 = 0;
 781:main.c        ****     pLayerCfg.WindowY1 = 272;
 782:main.c        ****     pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_ARGB8888;
 783:main.c        ****     pLayerCfg.Alpha = 255;
 784:main.c        ****     pLayerCfg.Alpha0 = 0;
 785:main.c        ****     pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_PAxCA;
 786:main.c        ****     pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_PAxCA;
 787:main.c        ****     pLayerCfg.FBStartAdress = 0xC0000000;
 788:main.c        ****     pLayerCfg.ImageWidth = 480;
 789:main.c        ****     pLayerCfg.ImageHeight = 272;
 790:main.c        ****     pLayerCfg.Backcolor.Blue = 0;
 791:main.c        ****     pLayerCfg.Backcolor.Green = 0;
 792:main.c        ****     pLayerCfg.Backcolor.Red = 0;
 793:main.c        ****     if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK) {
 794:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 795:main.c        ****     }
 796:main.c        **** 
 797:main.c        **** }
 798:main.c        **** 
 799:main.c        **** /* QUADSPI init function */
 800:main.c        **** static void MX_QUADSPI_Init(void) {
 801:main.c        **** 
 802:main.c        ****     /* QUADSPI parameter configuration*/
 803:main.c        ****     hqspi.Instance = QUADSPI;
 804:main.c        ****     hqspi.Init.ClockPrescaler = 255;
 805:main.c        ****     hqspi.Init.FifoThreshold = 1;
 806:main.c        ****     hqspi.Init.SampleShifting = QSPI_SAMPLE_SHIFTING_NONE;
 807:main.c        ****     hqspi.Init.FlashSize = 1;
 808:main.c        ****     hqspi.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_1_CYCLE;
 809:main.c        ****     hqspi.Init.ClockMode = QSPI_CLOCK_MODE_0;
 810:main.c        ****     hqspi.Init.FlashID = QSPI_FLASH_ID_1;
 811:main.c        ****     hqspi.Init.DualFlash = QSPI_DUALFLASH_DISABLE;
 812:main.c        ****     if (HAL_QSPI_Init(&hqspi) != HAL_OK) {
 813:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 814:main.c        ****     }
 815:main.c        **** 
 816:main.c        **** }
 817:main.c        **** 
 818:main.c        **** /* RTC init function */
 819:main.c        **** static void MX_RTC_Init(void) {
 820:main.c        **** 
 821:main.c        ****     /* USER CODE BEGIN RTC_Init 0 */
 822:main.c        **** 
 823:main.c        ****     /* USER CODE END RTC_Init 0 */
 824:main.c        **** 
 825:main.c        ****     RTC_TimeTypeDef sTime;
 826:main.c        ****     RTC_DateTypeDef sDate;
 827:main.c        ****     RTC_AlarmTypeDef sAlarm;
 828:main.c        **** 
 829:main.c        ****     /* USER CODE BEGIN RTC_Init 1 */
 830:main.c        **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 16


 831:main.c        ****     /* USER CODE END RTC_Init 1 */
 832:main.c        **** 
 833:main.c        ****     /**Initialize RTC Only 
 834:main.c        ****     */
 835:main.c        ****     hrtc.Instance = RTC;
 836:main.c        ****     hrtc.Init.HourFormat = RTC_HOURFORMAT_24;
 837:main.c        ****     hrtc.Init.AsynchPrediv = 127;
 838:main.c        ****     hrtc.Init.SynchPrediv = 255;
 839:main.c        ****     hrtc.Init.OutPut = RTC_OUTPUT_DISABLE;
 840:main.c        ****     hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
 841:main.c        ****     hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 842:main.c        ****     if (HAL_RTC_Init(&hrtc) != HAL_OK) {
 843:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 844:main.c        ****     }
 845:main.c        **** 
 846:main.c        ****     /**Initialize RTC and set the Time and Date 
 847:main.c        ****     */
 848:main.c        ****     sTime.Hours = 0x0;
 849:main.c        ****     sTime.Minutes = 0x0;
 850:main.c        ****     sTime.Seconds = 0x0;
 851:main.c        ****     sTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
 852:main.c        ****     sTime.StoreOperation = RTC_STOREOPERATION_RESET;
 853:main.c        ****     if (HAL_RTC_SetTime(&hrtc, &sTime, RTC_FORMAT_BCD) != HAL_OK) {
 854:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 855:main.c        ****     }
 856:main.c        **** 
 857:main.c        ****     sDate.WeekDay = RTC_WEEKDAY_MONDAY;
 858:main.c        ****     sDate.Month = RTC_MONTH_JANUARY;
 859:main.c        ****     sDate.Date = 0x1;
 860:main.c        ****     sDate.Year = 0x0;
 861:main.c        **** 
 862:main.c        ****     if (HAL_RTC_SetDate(&hrtc, &sDate, RTC_FORMAT_BCD) != HAL_OK) {
 863:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 864:main.c        ****     }
 865:main.c        **** 
 866:main.c        ****     /**Enable the Alarm A 
 867:main.c        ****     */
 868:main.c        ****     sAlarm.AlarmTime.Hours = 0x0;
 869:main.c        ****     sAlarm.AlarmTime.Minutes = 0x0;
 870:main.c        ****     sAlarm.AlarmTime.Seconds = 0x0;
 871:main.c        ****     sAlarm.AlarmTime.SubSeconds = 0x0;
 872:main.c        ****     sAlarm.AlarmTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
 873:main.c        ****     sAlarm.AlarmTime.StoreOperation = RTC_STOREOPERATION_RESET;
 874:main.c        ****     sAlarm.AlarmMask = RTC_ALARMMASK_NONE;
 875:main.c        ****     sAlarm.AlarmSubSecondMask = RTC_ALARMSUBSECONDMASK_ALL;
 876:main.c        ****     sAlarm.AlarmDateWeekDaySel = RTC_ALARMDATEWEEKDAYSEL_DATE;
 877:main.c        ****     sAlarm.AlarmDateWeekDay = 0x1;
 878:main.c        ****     sAlarm.Alarm = RTC_ALARM_A;
 879:main.c        ****     if (HAL_RTC_SetAlarm(&hrtc, &sAlarm, RTC_FORMAT_BCD) != HAL_OK) {
 880:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 881:main.c        ****     }
 882:main.c        **** 
 883:main.c        ****     /**Enable the Alarm B 
 884:main.c        ****     */
 885:main.c        ****     sAlarm.AlarmDateWeekDay = 0x1;
 886:main.c        ****     sAlarm.Alarm = RTC_ALARM_B;
 887:main.c        ****     if (HAL_RTC_SetAlarm(&hrtc, &sAlarm, RTC_FORMAT_BCD) != HAL_OK) {
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 17


 888:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 889:main.c        ****     }
 890:main.c        **** 
 891:main.c        ****     /**Enable the TimeStamp 
 892:main.c        ****     */
 893:main.c        ****     if (HAL_RTCEx_SetTimeStamp(&hrtc, RTC_TIMESTAMPEDGE_RISING, RTC_TIMESTAMPPIN_POS1) != HAL_OK) {
 894:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 895:main.c        ****     }
 896:main.c        **** 
 897:main.c        **** }
 898:main.c        **** 
 899:main.c        **** /* SAI2 init function */
 900:main.c        **** static void MX_SAI2_Init(void) {
 901:main.c        **** 
 902:main.c        ****     hsai_BlockA2.Instance = SAI2_Block_A;
 903:main.c        ****     hsai_BlockA2.Init.Protocol = SAI_FREE_PROTOCOL;
 904:main.c        ****     hsai_BlockA2.Init.AudioMode = SAI_MODEMASTER_TX;
 905:main.c        ****     hsai_BlockA2.Init.DataSize = SAI_DATASIZE_24;
 906:main.c        ****     hsai_BlockA2.Init.FirstBit = SAI_FIRSTBIT_MSB;
 907:main.c        ****     hsai_BlockA2.Init.ClockStrobing = SAI_CLOCKSTROBING_FALLINGEDGE;
 908:main.c        ****     hsai_BlockA2.Init.Synchro = SAI_ASYNCHRONOUS;
 909:main.c        ****     hsai_BlockA2.Init.OutputDrive = SAI_OUTPUTDRIVE_DISABLE;
 910:main.c        ****     hsai_BlockA2.Init.NoDivider = SAI_MASTERDIVIDER_ENABLE;
 911:main.c        ****     hsai_BlockA2.Init.FIFOThreshold = SAI_FIFOTHRESHOLD_EMPTY;
 912:main.c        ****     hsai_BlockA2.Init.AudioFrequency = SAI_AUDIO_FREQUENCY_192K;
 913:main.c        ****     hsai_BlockA2.Init.SynchroExt = SAI_SYNCEXT_DISABLE;
 914:main.c        ****     hsai_BlockA2.Init.MonoStereoMode = SAI_STEREOMODE;
 915:main.c        ****     hsai_BlockA2.Init.CompandingMode = SAI_NOCOMPANDING;
 916:main.c        ****     hsai_BlockA2.Init.TriState = SAI_OUTPUT_NOTRELEASED;
 917:main.c        ****     hsai_BlockA2.FrameInit.FrameLength = 8;
 918:main.c        ****     hsai_BlockA2.FrameInit.ActiveFrameLength = 1;
 919:main.c        ****     hsai_BlockA2.FrameInit.FSDefinition = SAI_FS_STARTFRAME;
 920:main.c        ****     hsai_BlockA2.FrameInit.FSPolarity = SAI_FS_ACTIVE_LOW;
 921:main.c        ****     hsai_BlockA2.FrameInit.FSOffset = SAI_FS_FIRSTBIT;
 922:main.c        ****     hsai_BlockA2.SlotInit.FirstBitOffset = 0;
 923:main.c        ****     hsai_BlockA2.SlotInit.SlotSize = SAI_SLOTSIZE_DATASIZE;
 924:main.c        ****     hsai_BlockA2.SlotInit.SlotNumber = 1;
 925:main.c        ****     hsai_BlockA2.SlotInit.SlotActive = 0x00000000;
 926:main.c        ****     if (HAL_SAI_Init(&hsai_BlockA2) != HAL_OK) {
 927:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 928:main.c        ****     }
 929:main.c        **** 
 930:main.c        ****     hsai_BlockB2.Instance = SAI2_Block_B;
 931:main.c        ****     hsai_BlockB2.Init.Protocol = SAI_FREE_PROTOCOL;
 932:main.c        ****     hsai_BlockB2.Init.AudioMode = SAI_MODESLAVE_RX;
 933:main.c        ****     hsai_BlockB2.Init.DataSize = SAI_DATASIZE_24;
 934:main.c        ****     hsai_BlockB2.Init.FirstBit = SAI_FIRSTBIT_MSB;
 935:main.c        ****     hsai_BlockB2.Init.ClockStrobing = SAI_CLOCKSTROBING_FALLINGEDGE;
 936:main.c        ****     hsai_BlockB2.Init.Synchro = SAI_SYNCHRONOUS;
 937:main.c        ****     hsai_BlockB2.Init.OutputDrive = SAI_OUTPUTDRIVE_DISABLE;
 938:main.c        ****     hsai_BlockB2.Init.FIFOThreshold = SAI_FIFOTHRESHOLD_EMPTY;
 939:main.c        ****     hsai_BlockB2.Init.SynchroExt = SAI_SYNCEXT_DISABLE;
 940:main.c        ****     hsai_BlockB2.Init.MonoStereoMode = SAI_STEREOMODE;
 941:main.c        ****     hsai_BlockB2.Init.CompandingMode = SAI_NOCOMPANDING;
 942:main.c        ****     hsai_BlockB2.Init.TriState = SAI_OUTPUT_NOTRELEASED;
 943:main.c        ****     hsai_BlockB2.FrameInit.FrameLength = 8;
 944:main.c        ****     hsai_BlockB2.FrameInit.ActiveFrameLength = 1;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 18


 945:main.c        ****     hsai_BlockB2.FrameInit.FSDefinition = SAI_FS_STARTFRAME;
 946:main.c        ****     hsai_BlockB2.FrameInit.FSPolarity = SAI_FS_ACTIVE_LOW;
 947:main.c        ****     hsai_BlockB2.FrameInit.FSOffset = SAI_FS_FIRSTBIT;
 948:main.c        ****     hsai_BlockB2.SlotInit.FirstBitOffset = 0;
 949:main.c        ****     hsai_BlockB2.SlotInit.SlotSize = SAI_SLOTSIZE_DATASIZE;
 950:main.c        ****     hsai_BlockB2.SlotInit.SlotNumber = 1;
 951:main.c        ****     hsai_BlockB2.SlotInit.SlotActive = 0x00000000;
 952:main.c        ****     if (HAL_SAI_Init(&hsai_BlockB2) != HAL_OK) {
 953:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 954:main.c        ****     }
 955:main.c        **** 
 956:main.c        **** }
 957:main.c        **** 
 958:main.c        **** /* SDMMC1 init function */
 959:main.c        **** static void MX_SDMMC1_SD_Init(void) {
  27              		.loc 1 959 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 960:main.c        **** 
 961:main.c        ****     hsd1.Instance = SDMMC1;
  32              		.loc 1 961 0
  33 0000 054B     		ldr	r3, .L2
  34 0002 064A     		ldr	r2, .L2+4
  35 0004 1A60     		str	r2, [r3]
 962:main.c        ****     hsd1.Init.ClockEdge = SDMMC_CLOCK_EDGE_RISING;
  36              		.loc 1 962 0
  37 0006 0022     		movs	r2, #0
  38 0008 5A60     		str	r2, [r3, #4]
 963:main.c        ****     hsd1.Init.ClockBypass = SDMMC_CLOCK_BYPASS_DISABLE;
  39              		.loc 1 963 0
  40 000a 9A60     		str	r2, [r3, #8]
 964:main.c        ****     hsd1.Init.ClockPowerSave = SDMMC_CLOCK_POWER_SAVE_DISABLE;
  41              		.loc 1 964 0
  42 000c DA60     		str	r2, [r3, #12]
 965:main.c        ****     hsd1.Init.BusWide = SDMMC_BUS_WIDE_1B;
  43              		.loc 1 965 0
  44 000e 1A61     		str	r2, [r3, #16]
 966:main.c        ****     hsd1.Init.HardwareFlowControl = SDMMC_HARDWARE_FLOW_CONTROL_DISABLE;
  45              		.loc 1 966 0
  46 0010 5A61     		str	r2, [r3, #20]
 967:main.c        ****     hsd1.Init.ClockDiv = 0;
  47              		.loc 1 967 0
  48 0012 9A61     		str	r2, [r3, #24]
  49 0014 7047     		bx	lr
  50              	.L3:
  51 0016 00BF     		.align	2
  52              	.L2:
  53 0018 00000000 		.word	hsd1
  54 001c 002C0140 		.word	1073818624
  55              		.cfi_endproc
  56              	.LFE176:
  58              		.section	.text.MX_GPIO_Init,"ax",%progbits
  59              		.align	1
  60              		.syntax unified
  61              		.thumb
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 19


  62              		.thumb_func
  63              		.fpu fpv5-sp-d16
  65              	MX_GPIO_Init:
  66              	.LFB189:
 968:main.c        **** 
 969:main.c        **** }
 970:main.c        **** 
 971:main.c        **** /* SPDIFRX init function */
 972:main.c        **** static void MX_SPDIFRX_Init(void) {
 973:main.c        **** 
 974:main.c        ****     hspdif.Instance = SPDIFRX;
 975:main.c        ****     hspdif.Init.InputSelection = SPDIFRX_INPUT_IN0;
 976:main.c        ****     hspdif.Init.Retries = SPDIFRX_MAXRETRIES_NONE;
 977:main.c        ****     hspdif.Init.WaitForActivity = SPDIFRX_WAITFORACTIVITY_OFF;
 978:main.c        ****     hspdif.Init.ChannelSelection = SPDIFRX_CHANNEL_A;
 979:main.c        ****     hspdif.Init.DataFormat = SPDIFRX_DATAFORMAT_LSB;
 980:main.c        ****     hspdif.Init.StereoMode = SPDIFRX_STEREOMODE_DISABLE;
 981:main.c        ****     hspdif.Init.PreambleTypeMask = SPDIFRX_PREAMBLETYPEMASK_OFF;
 982:main.c        ****     hspdif.Init.ChannelStatusMask = SPDIFRX_CHANNELSTATUS_OFF;
 983:main.c        ****     hspdif.Init.ValidityBitMask = SPDIFRX_VALIDITYMASK_OFF;
 984:main.c        ****     hspdif.Init.ParityErrorMask = SPDIFRX_PARITYERRORMASK_OFF;
 985:main.c        ****     if (HAL_SPDIFRX_Init(&hspdif) != HAL_OK) {
 986:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 987:main.c        ****     }
 988:main.c        **** 
 989:main.c        **** }
 990:main.c        **** 
 991:main.c        **** /* SPI2 init function */
 992:main.c        **** static void MX_SPI2_Init(void) {
 993:main.c        **** 
 994:main.c        ****     /* SPI2 parameter configuration*/
 995:main.c        ****     hspi2.Instance = SPI2;
 996:main.c        ****     hspi2.Init.Mode = SPI_MODE_MASTER;
 997:main.c        ****     hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 998:main.c        ****     hspi2.Init.DataSize = SPI_DATASIZE_4BIT;
 999:main.c        ****     hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
1000:main.c        ****     hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
1001:main.c        ****     hspi2.Init.NSS = SPI_NSS_SOFT;
1002:main.c        ****     hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
1003:main.c        ****     hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
1004:main.c        ****     hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
1005:main.c        ****     hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
1006:main.c        ****     hspi2.Init.CRCPolynomial = 7;
1007:main.c        ****     hspi2.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
1008:main.c        ****     hspi2.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
1009:main.c        ****     if (HAL_SPI_Init(&hspi2) != HAL_OK) {
1010:main.c        ****         _Error_Handler(__FILE__, __LINE__);
1011:main.c        ****     }
1012:main.c        **** 
1013:main.c        **** }
1014:main.c        **** 
1015:main.c        **** /* TIM1 init function */
1016:main.c        **** static void MX_TIM1_Init(void) {
1017:main.c        **** 
1018:main.c        ****     TIM_ClockConfigTypeDef sClockSourceConfig;
1019:main.c        ****     TIM_MasterConfigTypeDef sMasterConfig;
1020:main.c        ****     TIM_OC_InitTypeDef sConfigOC;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 20


1021:main.c        ****     TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig;
1022:main.c        **** 
1023:main.c        ****     htim1.Instance = TIM1;
1024:main.c        ****     htim1.Init.Prescaler = 0;
1025:main.c        ****     htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
1026:main.c        ****     htim1.Init.Period = 0;
1027:main.c        ****     htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
1028:main.c        ****     htim1.Init.RepetitionCounter = 0;
1029:main.c        ****     htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
1030:main.c        ****     if (HAL_TIM_Base_Init(&htim1) != HAL_OK) {
1031:main.c        ****         _Error_Handler(__FILE__, __LINE__);
1032:main.c        ****     }
1033:main.c        **** 
1034:main.c        ****     sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
1035:main.c        ****     if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK) {
1036:main.c        ****         _Error_Handler(__FILE__, __LINE__);
1037:main.c        ****     }
1038:main.c        **** 
1039:main.c        ****     if (HAL_TIM_PWM_Init(&htim1) != HAL_OK) {
1040:main.c        ****         _Error_Handler(__FILE__, __LINE__);
1041:main.c        ****     }
1042:main.c        **** 
1043:main.c        ****     sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
1044:main.c        ****     sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
1045:main.c        ****     sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
1046:main.c        ****     if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK) {
1047:main.c        ****         _Error_Handler(__FILE__, __LINE__);
1048:main.c        ****     }
1049:main.c        **** 
1050:main.c        ****     sConfigOC.OCMode = TIM_OCMODE_PWM1;
1051:main.c        ****     sConfigOC.Pulse = 0;
1052:main.c        ****     sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
1053:main.c        ****     sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
1054:main.c        ****     sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
1055:main.c        ****     sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
1056:main.c        ****     sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
1057:main.c        ****     if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK) {
1058:main.c        ****         _Error_Handler(__FILE__, __LINE__);
1059:main.c        ****     }
1060:main.c        **** 
1061:main.c        ****     sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
1062:main.c        ****     sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
1063:main.c        ****     sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
1064:main.c        ****     sBreakDeadTimeConfig.DeadTime = 0;
1065:main.c        ****     sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
1066:main.c        ****     sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
1067:main.c        ****     sBreakDeadTimeConfig.BreakFilter = 0;
1068:main.c        ****     sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
1069:main.c        ****     sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
1070:main.c        ****     sBreakDeadTimeConfig.Break2Filter = 0;
1071:main.c        ****     sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
1072:main.c        ****     if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK) {
1073:main.c        ****         _Error_Handler(__FILE__, __LINE__);
1074:main.c        ****     }
1075:main.c        **** 
1076:main.c        ****     HAL_TIM_MspPostInit(&htim1);
1077:main.c        **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 21


1078:main.c        **** }
1079:main.c        **** 
1080:main.c        **** /* TIM2 init function */
1081:main.c        **** static void MX_TIM2_Init(void) {
1082:main.c        **** 
1083:main.c        ****     TIM_ClockConfigTypeDef sClockSourceConfig;
1084:main.c        ****     TIM_MasterConfigTypeDef sMasterConfig;
1085:main.c        ****     TIM_OC_InitTypeDef sConfigOC;
1086:main.c        **** 
1087:main.c        ****     htim2.Instance = TIM2;
1088:main.c        ****     htim2.Init.Prescaler = 0;
1089:main.c        ****     htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
1090:main.c        ****     htim2.Init.Period = 0;
1091:main.c        ****     htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
1092:main.c        ****     htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
1093:main.c        ****     if (HAL_TIM_Base_Init(&htim2) != HAL_OK) {
1094:main.c        ****         _Error_Handler(__FILE__, __LINE__);
1095:main.c        ****     }
1096:main.c        **** 
1097:main.c        ****     sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
1098:main.c        ****     if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK) {
1099:main.c        ****         _Error_Handler(__FILE__, __LINE__);
1100:main.c        ****     }
1101:main.c        **** 
1102:main.c        ****     if (HAL_TIM_PWM_Init(&htim2) != HAL_OK) {
1103:main.c        ****         _Error_Handler(__FILE__, __LINE__);
1104:main.c        ****     }
1105:main.c        **** 
1106:main.c        ****     sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
1107:main.c        ****     sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
1108:main.c        ****     if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK) {
1109:main.c        ****         _Error_Handler(__FILE__, __LINE__);
1110:main.c        ****     }
1111:main.c        **** 
1112:main.c        ****     sConfigOC.OCMode = TIM_OCMODE_PWM1;
1113:main.c        ****     sConfigOC.Pulse = 0;
1114:main.c        ****     sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
1115:main.c        ****     sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
1116:main.c        ****     if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK) {
1117:main.c        ****         _Error_Handler(__FILE__, __LINE__);
1118:main.c        ****     }
1119:main.c        **** 
1120:main.c        ****     HAL_TIM_MspPostInit(&htim2);
1121:main.c        **** 
1122:main.c        **** }
1123:main.c        **** 
1124:main.c        **** /* TIM3 init function */
1125:main.c        **** static void MX_TIM3_Init(void) {
1126:main.c        **** 
1127:main.c        ****     TIM_ClockConfigTypeDef sClockSourceConfig;
1128:main.c        ****     TIM_MasterConfigTypeDef sMasterConfig;
1129:main.c        ****     TIM_OC_InitTypeDef sConfigOC;
1130:main.c        **** 
1131:main.c        ****     htim3.Instance = TIM3;
1132:main.c        ****     htim3.Init.Prescaler = 0;
1133:main.c        ****     htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
1134:main.c        ****     htim3.Init.Period = 0;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 22


1135:main.c        ****     htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
1136:main.c        ****     htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
1137:main.c        ****     if (HAL_TIM_Base_Init(&htim3) != HAL_OK) {
1138:main.c        ****         _Error_Handler(__FILE__, __LINE__);
1139:main.c        ****     }
1140:main.c        **** 
1141:main.c        ****     sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
1142:main.c        ****     if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK) {
1143:main.c        ****         _Error_Handler(__FILE__, __LINE__);
1144:main.c        ****     }
1145:main.c        **** 
1146:main.c        ****     if (HAL_TIM_PWM_Init(&htim3) != HAL_OK) {
1147:main.c        ****         _Error_Handler(__FILE__, __LINE__);
1148:main.c        ****     }
1149:main.c        **** 
1150:main.c        ****     sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
1151:main.c        ****     sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
1152:main.c        ****     if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK) {
1153:main.c        ****         _Error_Handler(__FILE__, __LINE__);
1154:main.c        ****     }
1155:main.c        **** 
1156:main.c        ****     sConfigOC.OCMode = TIM_OCMODE_PWM1;
1157:main.c        ****     sConfigOC.Pulse = 0;
1158:main.c        ****     sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
1159:main.c        ****     sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
1160:main.c        ****     if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK) {
1161:main.c        ****         _Error_Handler(__FILE__, __LINE__);
1162:main.c        ****     }
1163:main.c        **** 
1164:main.c        ****     HAL_TIM_MspPostInit(&htim3);
1165:main.c        **** 
1166:main.c        **** }
1167:main.c        **** 
1168:main.c        **** /* TIM5 init function */
1169:main.c        **** static void MX_TIM5_Init(void) {
1170:main.c        **** 
1171:main.c        ****     TIM_ClockConfigTypeDef sClockSourceConfig;
1172:main.c        ****     TIM_MasterConfigTypeDef sMasterConfig;
1173:main.c        ****     TIM_OC_InitTypeDef sConfigOC;
1174:main.c        **** 
1175:main.c        ****     htim5.Instance = TIM5;
1176:main.c        ****     htim5.Init.Prescaler = 0;
1177:main.c        ****     htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
1178:main.c        ****     htim5.Init.Period = 0;
1179:main.c        ****     htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
1180:main.c        ****     htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
1181:main.c        ****     if (HAL_TIM_Base_Init(&htim5) != HAL_OK) {
1182:main.c        ****         _Error_Handler(__FILE__, __LINE__);
1183:main.c        ****     }
1184:main.c        **** 
1185:main.c        ****     sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
1186:main.c        ****     if (HAL_TIM_ConfigClockSource(&htim5, &sClockSourceConfig) != HAL_OK) {
1187:main.c        ****         _Error_Handler(__FILE__, __LINE__);
1188:main.c        ****     }
1189:main.c        **** 
1190:main.c        ****     if (HAL_TIM_PWM_Init(&htim5) != HAL_OK) {
1191:main.c        ****         _Error_Handler(__FILE__, __LINE__);
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 23


1192:main.c        ****     }
1193:main.c        **** 
1194:main.c        ****     sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
1195:main.c        ****     sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
1196:main.c        ****     if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK) {
1197:main.c        ****         _Error_Handler(__FILE__, __LINE__);
1198:main.c        ****     }
1199:main.c        **** 
1200:main.c        ****     sConfigOC.OCMode = TIM_OCMODE_PWM1;
1201:main.c        ****     sConfigOC.Pulse = 0;
1202:main.c        ****     sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
1203:main.c        ****     sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
1204:main.c        ****     if (HAL_TIM_PWM_ConfigChannel(&htim5, &sConfigOC, TIM_CHANNEL_4) != HAL_OK) {
1205:main.c        ****         _Error_Handler(__FILE__, __LINE__);
1206:main.c        ****     }
1207:main.c        **** 
1208:main.c        ****     HAL_TIM_MspPostInit(&htim5);
1209:main.c        **** 
1210:main.c        **** }
1211:main.c        **** 
1212:main.c        **** /* TIM7 init function */
1213:main.c        **** static void MX_TIM7_Init(void) {
1214:main.c        **** 
1215:main.c        ****     TIM_MasterConfigTypeDef sMasterConfig;
1216:main.c        **** 
1217:main.c        ****     htim7.Instance = TIM7;
1218:main.c        ****     htim7.Init.Prescaler = 0;
1219:main.c        ****     htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
1220:main.c        ****     htim7.Init.Period = 0;
1221:main.c        ****     htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
1222:main.c        ****     if (HAL_TIM_Base_Init(&htim7) != HAL_OK) {
1223:main.c        ****         _Error_Handler(__FILE__, __LINE__);
1224:main.c        ****     }
1225:main.c        **** 
1226:main.c        ****     sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
1227:main.c        ****     sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
1228:main.c        ****     if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK) {
1229:main.c        ****         _Error_Handler(__FILE__, __LINE__);
1230:main.c        ****     }
1231:main.c        **** 
1232:main.c        **** }
1233:main.c        **** 
1234:main.c        **** /* TIM8 init function */
1235:main.c        **** static void MX_TIM8_Init(void) {
1236:main.c        **** 
1237:main.c        ****     TIM_ClockConfigTypeDef sClockSourceConfig;
1238:main.c        ****     TIM_MasterConfigTypeDef sMasterConfig;
1239:main.c        **** 
1240:main.c        ****     htim8.Instance = TIM8;
1241:main.c        ****     htim8.Init.Prescaler = 0;
1242:main.c        ****     htim8.Init.CounterMode = TIM_COUNTERMODE_UP;
1243:main.c        ****     htim8.Init.Period = 0;
1244:main.c        ****     htim8.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
1245:main.c        ****     htim8.Init.RepetitionCounter = 0;
1246:main.c        ****     htim8.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
1247:main.c        ****     if (HAL_TIM_Base_Init(&htim8) != HAL_OK) {
1248:main.c        ****         _Error_Handler(__FILE__, __LINE__);
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 24


1249:main.c        ****     }
1250:main.c        **** 
1251:main.c        ****     sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
1252:main.c        ****     if (HAL_TIM_ConfigClockSource(&htim8, &sClockSourceConfig) != HAL_OK) {
1253:main.c        ****         _Error_Handler(__FILE__, __LINE__);
1254:main.c        ****     }
1255:main.c        **** 
1256:main.c        ****     sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
1257:main.c        ****     sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
1258:main.c        ****     sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
1259:main.c        ****     if (HAL_TIMEx_MasterConfigSynchronization(&htim8, &sMasterConfig) != HAL_OK) {
1260:main.c        ****         _Error_Handler(__FILE__, __LINE__);
1261:main.c        ****     }
1262:main.c        **** 
1263:main.c        **** }
1264:main.c        **** 
1265:main.c        **** /* TIM12 init function */
1266:main.c        **** static void MX_TIM12_Init(void) {
1267:main.c        **** 
1268:main.c        ****     TIM_OC_InitTypeDef sConfigOC;
1269:main.c        **** 
1270:main.c        ****     htim12.Instance = TIM12;
1271:main.c        ****     htim12.Init.Prescaler = 0;
1272:main.c        ****     htim12.Init.CounterMode = TIM_COUNTERMODE_UP;
1273:main.c        ****     htim12.Init.Period = 0;
1274:main.c        ****     htim12.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
1275:main.c        ****     htim12.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
1276:main.c        ****     if (HAL_TIM_PWM_Init(&htim12) != HAL_OK) {
1277:main.c        ****         _Error_Handler(__FILE__, __LINE__);
1278:main.c        ****     }
1279:main.c        **** 
1280:main.c        ****     sConfigOC.OCMode = TIM_OCMODE_PWM1;
1281:main.c        ****     sConfigOC.Pulse = 0;
1282:main.c        ****     sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
1283:main.c        ****     sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
1284:main.c        ****     if (HAL_TIM_PWM_ConfigChannel(&htim12, &sConfigOC, TIM_CHANNEL_1) != HAL_OK) {
1285:main.c        ****         _Error_Handler(__FILE__, __LINE__);
1286:main.c        ****     }
1287:main.c        **** 
1288:main.c        ****     HAL_TIM_MspPostInit(&htim12);
1289:main.c        **** 
1290:main.c        **** }
1291:main.c        **** 
1292:main.c        **** /* USART1 init function */
1293:main.c        **** static void MX_USART1_UART_Init(void) {
1294:main.c        **** 
1295:main.c        ****     huart1.Instance = USART1;
1296:main.c        ****     huart1.Init.BaudRate = 115200;
1297:main.c        ****     huart1.Init.WordLength = UART_WORDLENGTH_8B;
1298:main.c        ****     huart1.Init.StopBits = UART_STOPBITS_1;
1299:main.c        ****     huart1.Init.Parity = UART_PARITY_NONE;
1300:main.c        ****     huart1.Init.Mode = UART_MODE_TX_RX;
1301:main.c        ****     huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
1302:main.c        ****     huart1.Init.OverSampling = UART_OVERSAMPLING_16;
1303:main.c        ****     huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
1304:main.c        ****     huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
1305:main.c        ****     if (HAL_UART_Init(&huart1) != HAL_OK) {
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 25


1306:main.c        ****         _Error_Handler(__FILE__, __LINE__);
1307:main.c        ****     }
1308:main.c        **** 
1309:main.c        **** }
1310:main.c        **** 
1311:main.c        **** /* USART6 init function */
1312:main.c        **** static void MX_USART6_UART_Init(void) {
1313:main.c        **** 
1314:main.c        ****     huart6.Instance = USART6;
1315:main.c        ****     huart6.Init.BaudRate = 115200;
1316:main.c        ****     huart6.Init.WordLength = UART_WORDLENGTH_8B;
1317:main.c        ****     huart6.Init.StopBits = UART_STOPBITS_1;
1318:main.c        ****     huart6.Init.Parity = UART_PARITY_NONE;
1319:main.c        ****     huart6.Init.Mode = UART_MODE_TX_RX;
1320:main.c        ****     huart6.Init.HwFlowCtl = UART_HWCONTROL_NONE;
1321:main.c        ****     huart6.Init.OverSampling = UART_OVERSAMPLING_16;
1322:main.c        ****     huart6.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
1323:main.c        ****     huart6.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
1324:main.c        ****     if (HAL_UART_Init(&huart6) != HAL_OK) {
1325:main.c        ****         _Error_Handler(__FILE__, __LINE__);
1326:main.c        ****     }
1327:main.c        **** 
1328:main.c        **** }
1329:main.c        **** 
1330:main.c        **** /* FMC initialization function */
1331:main.c        **** static void MX_FMC_Init(void) {
1332:main.c        ****     FMC_SDRAM_TimingTypeDef SdramTiming;
1333:main.c        **** 
1334:main.c        ****     /** Perform the SDRAM1 memory initialization sequence
1335:main.c        ****     */
1336:main.c        ****     hsdram1.Instance = FMC_SDRAM_DEVICE;
1337:main.c        ****     /* hsdram1.Init */
1338:main.c        ****     hsdram1.Init.SDBank = FMC_SDRAM_BANK1;
1339:main.c        ****     hsdram1.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
1340:main.c        ****     hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
1341:main.c        ****     hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
1342:main.c        ****     hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
1343:main.c        ****     hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
1344:main.c        ****     hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
1345:main.c        ****     hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
1346:main.c        ****     hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
1347:main.c        ****     hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_0;
1348:main.c        ****     /* SdramTiming */
1349:main.c        ****     SdramTiming.LoadToActiveDelay = 2;
1350:main.c        ****     SdramTiming.ExitSelfRefreshDelay = 7;
1351:main.c        ****     SdramTiming.SelfRefreshTime = 4;
1352:main.c        ****     SdramTiming.RowCycleDelay = 7;
1353:main.c        ****     SdramTiming.WriteRecoveryTime = 3;
1354:main.c        ****     SdramTiming.RPDelay = 2;
1355:main.c        ****     SdramTiming.RCDDelay = 2;
1356:main.c        **** 
1357:main.c        ****     if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK) {
1358:main.c        ****         _Error_Handler(__FILE__, __LINE__);
1359:main.c        ****     }
1360:main.c        **** 
1361:main.c        **** }
1362:main.c        **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 26


1363:main.c        **** /** Configure pins as 
1364:main.c        ****         * Analog 
1365:main.c        ****         * Input 
1366:main.c        ****         * Output
1367:main.c        ****         * EVENT_OUT
1368:main.c        ****         * EXTI
1369:main.c        ****      PB5   ------> USB_OTG_HS_ULPI_D7
1370:main.c        ****      PH4   ------> USB_OTG_HS_ULPI_NXT
1371:main.c        ****      PB13   ------> USB_OTG_HS_ULPI_D6
1372:main.c        ****      PB12   ------> USB_OTG_HS_ULPI_D5
1373:main.c        ****      PC0   ------> USB_OTG_HS_ULPI_STP
1374:main.c        ****      PC2   ------> USB_OTG_HS_ULPI_DIR
1375:main.c        ****      PA5   ------> USB_OTG_HS_ULPI_CK
1376:main.c        ****      PB10   ------> USB_OTG_HS_ULPI_D3
1377:main.c        ****      PA3   ------> USB_OTG_HS_ULPI_D0
1378:main.c        ****      PB1   ------> USB_OTG_HS_ULPI_D2
1379:main.c        ****      PB0   ------> USB_OTG_HS_ULPI_D1
1380:main.c        ****      PB11   ------> USB_OTG_HS_ULPI_D4
1381:main.c        **** */
1382:main.c        **** static void MX_GPIO_Init(void) {
  67              		.loc 1 1382 0
  68              		.cfi_startproc
  69              		@ args = 0, pretend = 0, frame = 64
  70              		@ frame_needed = 0, uses_anonymous_args = 0
  71 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  72              	.LCFI0:
  73              		.cfi_def_cfa_offset 36
  74              		.cfi_offset 4, -36
  75              		.cfi_offset 5, -32
  76              		.cfi_offset 6, -28
  77              		.cfi_offset 7, -24
  78              		.cfi_offset 8, -20
  79              		.cfi_offset 9, -16
  80              		.cfi_offset 10, -12
  81              		.cfi_offset 11, -8
  82              		.cfi_offset 14, -4
  83 0004 91B0     		sub	sp, sp, #68
  84              	.LCFI1:
  85              		.cfi_def_cfa_offset 104
  86              	.LBB2:
1383:main.c        **** 
1384:main.c        ****     GPIO_InitTypeDef GPIO_InitStruct;
1385:main.c        **** 
1386:main.c        ****     /* GPIO Ports Clock Enable */
1387:main.c        ****     __HAL_RCC_GPIOE_CLK_ENABLE();
  87              		.loc 1 1387 0
  88 0006 9A4B     		ldr	r3, .L6
  89 0008 1A6B     		ldr	r2, [r3, #48]
  90 000a 42F01002 		orr	r2, r2, #16
  91 000e 1A63     		str	r2, [r3, #48]
  92 0010 1A6B     		ldr	r2, [r3, #48]
  93 0012 02F01002 		and	r2, r2, #16
  94 0016 0092     		str	r2, [sp]
  95 0018 009A     		ldr	r2, [sp]
  96              	.LBE2:
  97              	.LBB3:
1388:main.c        ****     __HAL_RCC_GPIOG_CLK_ENABLE();
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 27


  98              		.loc 1 1388 0
  99 001a 1A6B     		ldr	r2, [r3, #48]
 100 001c 42F04002 		orr	r2, r2, #64
 101 0020 1A63     		str	r2, [r3, #48]
 102 0022 1A6B     		ldr	r2, [r3, #48]
 103 0024 02F04002 		and	r2, r2, #64
 104 0028 0192     		str	r2, [sp, #4]
 105 002a 019A     		ldr	r2, [sp, #4]
 106              	.LBE3:
 107              	.LBB4:
1389:main.c        ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 108              		.loc 1 1389 0
 109 002c 1A6B     		ldr	r2, [r3, #48]
 110 002e 42F00202 		orr	r2, r2, #2
 111 0032 1A63     		str	r2, [r3, #48]
 112 0034 1A6B     		ldr	r2, [r3, #48]
 113 0036 02F00202 		and	r2, r2, #2
 114 003a 0292     		str	r2, [sp, #8]
 115 003c 029A     		ldr	r2, [sp, #8]
 116              	.LBE4:
 117              	.LBB5:
1390:main.c        ****     __HAL_RCC_GPIOD_CLK_ENABLE();
 118              		.loc 1 1390 0
 119 003e 1A6B     		ldr	r2, [r3, #48]
 120 0040 42F00802 		orr	r2, r2, #8
 121 0044 1A63     		str	r2, [r3, #48]
 122 0046 1A6B     		ldr	r2, [r3, #48]
 123 0048 02F00802 		and	r2, r2, #8
 124 004c 0392     		str	r2, [sp, #12]
 125 004e 039A     		ldr	r2, [sp, #12]
 126              	.LBE5:
 127              	.LBB6:
1391:main.c        ****     __HAL_RCC_GPIOC_CLK_ENABLE();
 128              		.loc 1 1391 0
 129 0050 1A6B     		ldr	r2, [r3, #48]
 130 0052 42F00402 		orr	r2, r2, #4
 131 0056 1A63     		str	r2, [r3, #48]
 132 0058 1A6B     		ldr	r2, [r3, #48]
 133 005a 02F00402 		and	r2, r2, #4
 134 005e 0492     		str	r2, [sp, #16]
 135 0060 049A     		ldr	r2, [sp, #16]
 136              	.LBE6:
 137              	.LBB7:
1392:main.c        ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 138              		.loc 1 1392 0
 139 0062 1A6B     		ldr	r2, [r3, #48]
 140 0064 42F00102 		orr	r2, r2, #1
 141 0068 1A63     		str	r2, [r3, #48]
 142 006a 1A6B     		ldr	r2, [r3, #48]
 143 006c 02F00102 		and	r2, r2, #1
 144 0070 0592     		str	r2, [sp, #20]
 145 0072 059A     		ldr	r2, [sp, #20]
 146              	.LBE7:
 147              	.LBB8:
1393:main.c        ****     __HAL_RCC_GPIOJ_CLK_ENABLE();
 148              		.loc 1 1393 0
 149 0074 1A6B     		ldr	r2, [r3, #48]
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 28


 150 0076 42F40072 		orr	r2, r2, #512
 151 007a 1A63     		str	r2, [r3, #48]
 152 007c 1A6B     		ldr	r2, [r3, #48]
 153 007e 02F40072 		and	r2, r2, #512
 154 0082 0692     		str	r2, [sp, #24]
 155 0084 069A     		ldr	r2, [sp, #24]
 156              	.LBE8:
 157              	.LBB9:
1394:main.c        ****     __HAL_RCC_GPIOI_CLK_ENABLE();
 158              		.loc 1 1394 0
 159 0086 1A6B     		ldr	r2, [r3, #48]
 160 0088 42F48072 		orr	r2, r2, #256
 161 008c 1A63     		str	r2, [r3, #48]
 162 008e 1A6B     		ldr	r2, [r3, #48]
 163 0090 02F48072 		and	r2, r2, #256
 164 0094 0792     		str	r2, [sp, #28]
 165 0096 079A     		ldr	r2, [sp, #28]
 166              	.LBE9:
 167              	.LBB10:
1395:main.c        ****     __HAL_RCC_GPIOK_CLK_ENABLE();
 168              		.loc 1 1395 0
 169 0098 1A6B     		ldr	r2, [r3, #48]
 170 009a 42F48062 		orr	r2, r2, #1024
 171 009e 1A63     		str	r2, [r3, #48]
 172 00a0 1A6B     		ldr	r2, [r3, #48]
 173 00a2 02F48062 		and	r2, r2, #1024
 174 00a6 0892     		str	r2, [sp, #32]
 175 00a8 089A     		ldr	r2, [sp, #32]
 176              	.LBE10:
 177              	.LBB11:
1396:main.c        ****     __HAL_RCC_GPIOF_CLK_ENABLE();
 178              		.loc 1 1396 0
 179 00aa 1A6B     		ldr	r2, [r3, #48]
 180 00ac 42F02002 		orr	r2, r2, #32
 181 00b0 1A63     		str	r2, [r3, #48]
 182 00b2 1A6B     		ldr	r2, [r3, #48]
 183 00b4 02F02002 		and	r2, r2, #32
 184 00b8 0992     		str	r2, [sp, #36]
 185 00ba 099A     		ldr	r2, [sp, #36]
 186              	.LBE11:
 187              	.LBB12:
1397:main.c        ****     __HAL_RCC_GPIOH_CLK_ENABLE();
 188              		.loc 1 1397 0
 189 00bc 1A6B     		ldr	r2, [r3, #48]
 190 00be 42F08002 		orr	r2, r2, #128
 191 00c2 1A63     		str	r2, [r3, #48]
 192 00c4 1B6B     		ldr	r3, [r3, #48]
 193 00c6 03F08003 		and	r3, r3, #128
 194 00ca 0A93     		str	r3, [sp, #40]
 195 00cc 0A9B     		ldr	r3, [sp, #40]
 196              	.LBE12:
1398:main.c        **** 
1399:main.c        ****     /*Configure GPIO pin Output Level */
1400:main.c        ****     HAL_GPIO_WritePin(OTG_FS_PowerSwitchOn_GPIO_Port, OTG_FS_PowerSwitchOn_Pin, GPIO_PIN_SET);
 197              		.loc 1 1400 0
 198 00ce 0122     		movs	r2, #1
 199 00d0 2021     		movs	r1, #32
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 29


 200 00d2 6848     		ldr	r0, .L6+4
 201 00d4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 202              	.LVL0:
1401:main.c        **** 
1402:main.c        ****     /*Configure GPIO pin Output Level */
1403:main.c        ****     HAL_GPIO_WritePin(GPIOI, ARDUINO_D7_Pin | ARDUINO_D8_Pin, GPIO_PIN_RESET);
 203              		.loc 1 1403 0
 204 00d8 0022     		movs	r2, #0
 205 00da 0C21     		movs	r1, #12
 206 00dc 6648     		ldr	r0, .L6+8
 207 00de FFF7FEFF 		bl	HAL_GPIO_WritePin
 208              	.LVL1:
1404:main.c        **** 
1405:main.c        ****     /*Configure GPIO pin Output Level */
1406:main.c        ****     HAL_GPIO_WritePin(LCD_BL_CTRL_GPIO_Port, LCD_BL_CTRL_Pin, GPIO_PIN_SET);
 209              		.loc 1 1406 0
 210 00e2 0122     		movs	r2, #1
 211 00e4 0821     		movs	r1, #8
 212 00e6 6548     		ldr	r0, .L6+12
 213 00e8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 214              	.LVL2:
1407:main.c        **** 
1408:main.c        ****     /*Configure GPIO pin Output Level */
1409:main.c        ****     HAL_GPIO_WritePin(LCD_DISP_GPIO_Port, LCD_DISP_Pin, GPIO_PIN_SET);
 215              		.loc 1 1409 0
 216 00ec 0122     		movs	r2, #1
 217 00ee 4FF48051 		mov	r1, #4096
 218 00f2 6148     		ldr	r0, .L6+8
 219 00f4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 220              	.LVL3:
1410:main.c        **** 
1411:main.c        ****     /*Configure GPIO pin Output Level */
1412:main.c        ****     HAL_GPIO_WritePin(DCMI_PWR_EN_GPIO_Port, DCMI_PWR_EN_Pin, GPIO_PIN_RESET);
 221              		.loc 1 1412 0
 222 00f8 0022     		movs	r2, #0
 223 00fa 4FF40051 		mov	r1, #8192
 224 00fe 6048     		ldr	r0, .L6+16
 225 0100 FFF7FEFF 		bl	HAL_GPIO_WritePin
 226              	.LVL4:
1413:main.c        **** 
1414:main.c        ****     /*Configure GPIO pin Output Level */
1415:main.c        ****     HAL_GPIO_WritePin(GPIOG, ARDUINO_D4_Pin | ARDUINO_D2_Pin | EXT_RST_Pin, GPIO_PIN_RESET);
 227              		.loc 1 1415 0
 228 0104 0022     		movs	r2, #0
 229 0106 C821     		movs	r1, #200
 230 0108 5E48     		ldr	r0, .L6+20
 231 010a FFF7FEFF 		bl	HAL_GPIO_WritePin
 232              	.LVL5:
1416:main.c        **** 
1417:main.c        ****     /*Configure GPIO pin : OTG_HS_OverCurrent_Pin */
1418:main.c        ****     GPIO_InitStruct.Pin = OTG_HS_OverCurrent_Pin;
 233              		.loc 1 1418 0
 234 010e 4FF0080A 		mov	r10, #8
 235 0112 CDF82CA0 		str	r10, [sp, #44]
1419:main.c        ****     GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 236              		.loc 1 1419 0
 237 0116 0024     		movs	r4, #0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 30


 238 0118 0C94     		str	r4, [sp, #48]
1420:main.c        ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 239              		.loc 1 1420 0
 240 011a 0D94     		str	r4, [sp, #52]
1421:main.c        ****     HAL_GPIO_Init(OTG_HS_OverCurrent_GPIO_Port, &GPIO_InitStruct);
 241              		.loc 1 1421 0
 242 011c 0BA9     		add	r1, sp, #44
 243 011e 5A48     		ldr	r0, .L6+24
 244 0120 FFF7FEFF 		bl	HAL_GPIO_Init
 245              	.LVL6:
1422:main.c        **** 
1423:main.c        ****     /*Configure GPIO pins : ULPI_D7_Pin ULPI_D6_Pin ULPI_D5_Pin ULPI_D3_Pin
1424:main.c        ****                              ULPI_D2_Pin ULPI_D1_Pin ULPI_D4_Pin */
1425:main.c        ****     GPIO_InitStruct.Pin = ULPI_D7_Pin | ULPI_D6_Pin | ULPI_D5_Pin | ULPI_D3_Pin
 246              		.loc 1 1425 0
 247 0124 43F62343 		movw	r3, #15395
 248 0128 0B93     		str	r3, [sp, #44]
1426:main.c        ****                           | ULPI_D2_Pin | ULPI_D1_Pin | ULPI_D4_Pin;
1427:main.c        ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 249              		.loc 1 1427 0
 250 012a 4FF00208 		mov	r8, #2
 251 012e CDF83080 		str	r8, [sp, #48]
1428:main.c        ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 252              		.loc 1 1428 0
 253 0132 0D94     		str	r4, [sp, #52]
1429:main.c        ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 254              		.loc 1 1429 0
 255 0134 0327     		movs	r7, #3
 256 0136 0E97     		str	r7, [sp, #56]
1430:main.c        ****     GPIO_InitStruct.Alternate = GPIO_AF10_OTG_HS;
 257              		.loc 1 1430 0
 258 0138 0A26     		movs	r6, #10
 259 013a 0F96     		str	r6, [sp, #60]
1431:main.c        ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 260              		.loc 1 1431 0
 261 013c 0BA9     		add	r1, sp, #44
 262 013e 5348     		ldr	r0, .L6+28
 263 0140 FFF7FEFF 		bl	HAL_GPIO_Init
 264              	.LVL7:
1432:main.c        **** 
1433:main.c        ****     /*Configure GPIO pin : OTG_FS_VBUS_Pin */
1434:main.c        ****     GPIO_InitStruct.Pin = OTG_FS_VBUS_Pin;
 265              		.loc 1 1434 0
 266 0144 4FF48053 		mov	r3, #4096
 267 0148 0B93     		str	r3, [sp, #44]
1435:main.c        ****     GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 268              		.loc 1 1435 0
 269 014a 0C94     		str	r4, [sp, #48]
1436:main.c        ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 270              		.loc 1 1436 0
 271 014c 0D94     		str	r4, [sp, #52]
1437:main.c        ****     HAL_GPIO_Init(OTG_FS_VBUS_GPIO_Port, &GPIO_InitStruct);
 272              		.loc 1 1437 0
 273 014e 0BA9     		add	r1, sp, #44
 274 0150 4F48     		ldr	r0, .L6+32
 275 0152 FFF7FEFF 		bl	HAL_GPIO_Init
 276              	.LVL8:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 31


1438:main.c        **** 
1439:main.c        ****     /*Configure GPIO pin : Audio_INT_Pin */
1440:main.c        ****     GPIO_InitStruct.Pin = Audio_INT_Pin;
 277              		.loc 1 1440 0
 278 0156 4023     		movs	r3, #64
 279 0158 0B93     		str	r3, [sp, #44]
1441:main.c        ****     GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 280              		.loc 1 1441 0
 281 015a DFF840B1 		ldr	fp, .L6+44
 282 015e CDF830B0 		str	fp, [sp, #48]
1442:main.c        ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 283              		.loc 1 1442 0
 284 0162 0D94     		str	r4, [sp, #52]
1443:main.c        ****     HAL_GPIO_Init(Audio_INT_GPIO_Port, &GPIO_InitStruct);
 285              		.loc 1 1443 0
 286 0164 0BA9     		add	r1, sp, #44
 287 0166 4348     		ldr	r0, .L6+4
 288 0168 FFF7FEFF 		bl	HAL_GPIO_Init
 289              	.LVL9:
1444:main.c        **** 
1445:main.c        ****     /*Configure GPIO pin : OTG_FS_PowerSwitchOn_Pin */
1446:main.c        ****     GPIO_InitStruct.Pin = OTG_FS_PowerSwitchOn_Pin;
 290              		.loc 1 1446 0
 291 016c 2023     		movs	r3, #32
 292 016e 0B93     		str	r3, [sp, #44]
1447:main.c        ****     GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 293              		.loc 1 1447 0
 294 0170 0125     		movs	r5, #1
 295 0172 0C95     		str	r5, [sp, #48]
1448:main.c        ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 296              		.loc 1 1448 0
 297 0174 0D94     		str	r4, [sp, #52]
1449:main.c        ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 298              		.loc 1 1449 0
 299 0176 0E94     		str	r4, [sp, #56]
1450:main.c        ****     HAL_GPIO_Init(OTG_FS_PowerSwitchOn_GPIO_Port, &GPIO_InitStruct);
 300              		.loc 1 1450 0
 301 0178 0BA9     		add	r1, sp, #44
 302 017a 3E48     		ldr	r0, .L6+4
 303 017c FFF7FEFF 		bl	HAL_GPIO_Init
 304              	.LVL10:
1451:main.c        **** 
1452:main.c        ****     /*Configure GPIO pins : ARDUINO_D7_Pin ARDUINO_D8_Pin LCD_DISP_Pin */
1453:main.c        ****     GPIO_InitStruct.Pin = ARDUINO_D7_Pin | ARDUINO_D8_Pin | LCD_DISP_Pin;
 305              		.loc 1 1453 0
 306 0180 41F20C03 		movw	r3, #4108
 307 0184 0B93     		str	r3, [sp, #44]
1454:main.c        ****     GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 308              		.loc 1 1454 0
 309 0186 0C95     		str	r5, [sp, #48]
1455:main.c        ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 310              		.loc 1 1455 0
 311 0188 0D94     		str	r4, [sp, #52]
1456:main.c        ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 312              		.loc 1 1456 0
 313 018a 0E94     		str	r4, [sp, #56]
1457:main.c        ****     HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 32


 314              		.loc 1 1457 0
 315 018c 0BA9     		add	r1, sp, #44
 316 018e 3A48     		ldr	r0, .L6+8
 317 0190 FFF7FEFF 		bl	HAL_GPIO_Init
 318              	.LVL11:
1458:main.c        **** 
1459:main.c        ****     /*Configure GPIO pin : uSD_Detect_Pin */
1460:main.c        ****     GPIO_InitStruct.Pin = uSD_Detect_Pin;
 319              		.loc 1 1460 0
 320 0194 4FF40059 		mov	r9, #8192
 321 0198 CDF82C90 		str	r9, [sp, #44]
1461:main.c        ****     GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 322              		.loc 1 1461 0
 323 019c 0C94     		str	r4, [sp, #48]
1462:main.c        ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 324              		.loc 1 1462 0
 325 019e 0D94     		str	r4, [sp, #52]
1463:main.c        ****     HAL_GPIO_Init(uSD_Detect_GPIO_Port, &GPIO_InitStruct);
 326              		.loc 1 1463 0
 327 01a0 0BA9     		add	r1, sp, #44
 328 01a2 3C48     		ldr	r0, .L6+36
 329 01a4 FFF7FEFF 		bl	HAL_GPIO_Init
 330              	.LVL12:
1464:main.c        **** 
1465:main.c        ****     /*Configure GPIO pin : LCD_BL_CTRL_Pin */
1466:main.c        ****     GPIO_InitStruct.Pin = LCD_BL_CTRL_Pin;
 331              		.loc 1 1466 0
 332 01a8 CDF82CA0 		str	r10, [sp, #44]
1467:main.c        ****     GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 333              		.loc 1 1467 0
 334 01ac 0C95     		str	r5, [sp, #48]
1468:main.c        ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 335              		.loc 1 1468 0
 336 01ae 0D94     		str	r4, [sp, #52]
1469:main.c        ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 337              		.loc 1 1469 0
 338 01b0 0E94     		str	r4, [sp, #56]
1470:main.c        ****     HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
 339              		.loc 1 1470 0
 340 01b2 0BA9     		add	r1, sp, #44
 341 01b4 3148     		ldr	r0, .L6+12
 342 01b6 FFF7FEFF 		bl	HAL_GPIO_Init
 343              	.LVL13:
1471:main.c        **** 
1472:main.c        ****     /*Configure GPIO pin : OTG_FS_OverCurrent_Pin */
1473:main.c        ****     GPIO_InitStruct.Pin = OTG_FS_OverCurrent_Pin;
 344              		.loc 1 1473 0
 345 01ba 4FF0100A 		mov	r10, #16
 346 01be CDF82CA0 		str	r10, [sp, #44]
1474:main.c        ****     GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 347              		.loc 1 1474 0
 348 01c2 0C94     		str	r4, [sp, #48]
1475:main.c        ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 349              		.loc 1 1475 0
 350 01c4 0D94     		str	r4, [sp, #52]
1476:main.c        ****     HAL_GPIO_Init(OTG_FS_OverCurrent_GPIO_Port, &GPIO_InitStruct);
 351              		.loc 1 1476 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 33


 352 01c6 0BA9     		add	r1, sp, #44
 353 01c8 2A48     		ldr	r0, .L6+4
 354 01ca FFF7FEFF 		bl	HAL_GPIO_Init
 355              	.LVL14:
1477:main.c        **** 
1478:main.c        ****     /*Configure GPIO pins : TP3_Pin NC2_Pin */
1479:main.c        ****     GPIO_InitStruct.Pin = TP3_Pin | NC2_Pin;
 356              		.loc 1 1479 0
 357 01ce 48F20403 		movw	r3, #32772
 358 01d2 0B93     		str	r3, [sp, #44]
1480:main.c        ****     GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 359              		.loc 1 1480 0
 360 01d4 0C94     		str	r4, [sp, #48]
1481:main.c        ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 361              		.loc 1 1481 0
 362 01d6 0D94     		str	r4, [sp, #52]
1482:main.c        ****     HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 363              		.loc 1 1482 0
 364 01d8 0BA9     		add	r1, sp, #44
 365 01da 2948     		ldr	r0, .L6+16
 366 01dc FFF7FEFF 		bl	HAL_GPIO_Init
 367              	.LVL15:
1483:main.c        **** 
1484:main.c        ****     /*Configure GPIO pin : DCMI_PWR_EN_Pin */
1485:main.c        ****     GPIO_InitStruct.Pin = DCMI_PWR_EN_Pin;
 368              		.loc 1 1485 0
 369 01e0 CDF82C90 		str	r9, [sp, #44]
1486:main.c        ****     GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 370              		.loc 1 1486 0
 371 01e4 0C95     		str	r5, [sp, #48]
1487:main.c        ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 372              		.loc 1 1487 0
 373 01e6 0D94     		str	r4, [sp, #52]
1488:main.c        ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 374              		.loc 1 1488 0
 375 01e8 0E94     		str	r4, [sp, #56]
1489:main.c        ****     HAL_GPIO_Init(DCMI_PWR_EN_GPIO_Port, &GPIO_InitStruct);
 376              		.loc 1 1489 0
 377 01ea 0BA9     		add	r1, sp, #44
 378 01ec 2448     		ldr	r0, .L6+16
 379 01ee FFF7FEFF 		bl	HAL_GPIO_Init
 380              	.LVL16:
1490:main.c        **** 
1491:main.c        ****     /*Configure GPIO pin : LCD_INT_Pin */
1492:main.c        ****     GPIO_InitStruct.Pin = LCD_INT_Pin;
 381              		.loc 1 1492 0
 382 01f2 CDF82C90 		str	r9, [sp, #44]
1493:main.c        ****     GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 383              		.loc 1 1493 0
 384 01f6 CDF830B0 		str	fp, [sp, #48]
1494:main.c        ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 385              		.loc 1 1494 0
 386 01fa 0D94     		str	r4, [sp, #52]
1495:main.c        ****     HAL_GPIO_Init(LCD_INT_GPIO_Port, &GPIO_InitStruct);
 387              		.loc 1 1495 0
 388 01fc 0BA9     		add	r1, sp, #44
 389 01fe 1E48     		ldr	r0, .L6+8
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 34


 390 0200 FFF7FEFF 		bl	HAL_GPIO_Init
 391              	.LVL17:
1496:main.c        **** 
1497:main.c        ****     /*Configure GPIO pin : ULPI_NXT_Pin */
1498:main.c        ****     GPIO_InitStruct.Pin = ULPI_NXT_Pin;
 392              		.loc 1 1498 0
 393 0204 CDF82CA0 		str	r10, [sp, #44]
1499:main.c        ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 394              		.loc 1 1499 0
 395 0208 CDF83080 		str	r8, [sp, #48]
1500:main.c        ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 396              		.loc 1 1500 0
 397 020c 0D94     		str	r4, [sp, #52]
1501:main.c        ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 398              		.loc 1 1501 0
 399 020e 0E97     		str	r7, [sp, #56]
1502:main.c        ****     GPIO_InitStruct.Alternate = GPIO_AF10_OTG_HS;
 400              		.loc 1 1502 0
 401 0210 0F96     		str	r6, [sp, #60]
1503:main.c        ****     HAL_GPIO_Init(ULPI_NXT_GPIO_Port, &GPIO_InitStruct);
 402              		.loc 1 1503 0
 403 0212 0BA9     		add	r1, sp, #44
 404 0214 1A48     		ldr	r0, .L6+16
 405 0216 FFF7FEFF 		bl	HAL_GPIO_Init
 406              	.LVL18:
1504:main.c        **** 
1505:main.c        ****     /*Configure GPIO pins : ARDUINO_D4_Pin ARDUINO_D2_Pin EXT_RST_Pin */
1506:main.c        ****     GPIO_InitStruct.Pin = ARDUINO_D4_Pin | ARDUINO_D2_Pin | EXT_RST_Pin;
 407              		.loc 1 1506 0
 408 021a C823     		movs	r3, #200
 409 021c 0B93     		str	r3, [sp, #44]
1507:main.c        ****     GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 410              		.loc 1 1507 0
 411 021e 0C95     		str	r5, [sp, #48]
1508:main.c        ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 412              		.loc 1 1508 0
 413 0220 0D94     		str	r4, [sp, #52]
1509:main.c        ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 414              		.loc 1 1509 0
 415 0222 0E94     		str	r4, [sp, #56]
1510:main.c        ****     HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 416              		.loc 1 1510 0
 417 0224 0BA9     		add	r1, sp, #44
 418 0226 1748     		ldr	r0, .L6+20
 419 0228 FFF7FEFF 		bl	HAL_GPIO_Init
 420              	.LVL19:
1511:main.c        **** 
1512:main.c        ****     /*Configure GPIO pins : ULPI_STP_Pin ULPI_DIR_Pin */
1513:main.c        ****     GPIO_InitStruct.Pin = ULPI_STP_Pin | ULPI_DIR_Pin;
 421              		.loc 1 1513 0
 422 022c 0523     		movs	r3, #5
 423 022e 0B93     		str	r3, [sp, #44]
1514:main.c        ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 424              		.loc 1 1514 0
 425 0230 CDF83080 		str	r8, [sp, #48]
1515:main.c        ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 426              		.loc 1 1515 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 35


 427 0234 0D94     		str	r4, [sp, #52]
1516:main.c        ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 428              		.loc 1 1516 0
 429 0236 0E97     		str	r7, [sp, #56]
1517:main.c        ****     GPIO_InitStruct.Alternate = GPIO_AF10_OTG_HS;
 430              		.loc 1 1517 0
 431 0238 0F96     		str	r6, [sp, #60]
1518:main.c        ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 432              		.loc 1 1518 0
 433 023a 0BA9     		add	r1, sp, #44
 434 023c 1548     		ldr	r0, .L6+36
 435 023e FFF7FEFF 		bl	HAL_GPIO_Init
 436              	.LVL20:
1519:main.c        **** 
1520:main.c        ****     /*Configure GPIO pin : RMII_RXER_Pin */
1521:main.c        ****     GPIO_InitStruct.Pin = RMII_RXER_Pin;
 437              		.loc 1 1521 0
 438 0242 0423     		movs	r3, #4
 439 0244 0B93     		str	r3, [sp, #44]
1522:main.c        ****     GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 440              		.loc 1 1522 0
 441 0246 0C94     		str	r4, [sp, #48]
1523:main.c        ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 442              		.loc 1 1523 0
 443 0248 0D94     		str	r4, [sp, #52]
1524:main.c        ****     HAL_GPIO_Init(RMII_RXER_GPIO_Port, &GPIO_InitStruct);
 444              		.loc 1 1524 0
 445 024a 0BA9     		add	r1, sp, #44
 446 024c 0D48     		ldr	r0, .L6+20
 447 024e FFF7FEFF 		bl	HAL_GPIO_Init
 448              	.LVL21:
1525:main.c        **** 
1526:main.c        ****     /*Configure GPIO pins : ULPI_CLK_Pin ULPI_D0_Pin */
1527:main.c        ****     GPIO_InitStruct.Pin = ULPI_CLK_Pin | ULPI_D0_Pin;
 449              		.loc 1 1527 0
 450 0252 2823     		movs	r3, #40
 451 0254 0B93     		str	r3, [sp, #44]
1528:main.c        ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 452              		.loc 1 1528 0
 453 0256 CDF83080 		str	r8, [sp, #48]
1529:main.c        ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 454              		.loc 1 1529 0
 455 025a 0D94     		str	r4, [sp, #52]
1530:main.c        ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 456              		.loc 1 1530 0
 457 025c 0E97     		str	r7, [sp, #56]
1531:main.c        ****     GPIO_InitStruct.Alternate = GPIO_AF10_OTG_HS;
 458              		.loc 1 1531 0
 459 025e 0F96     		str	r6, [sp, #60]
1532:main.c        ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 460              		.loc 1 1532 0
 461 0260 0BA9     		add	r1, sp, #44
 462 0262 0D48     		ldr	r0, .L6+40
 463 0264 FFF7FEFF 		bl	HAL_GPIO_Init
 464              	.LVL22:
1533:main.c        **** 
1534:main.c        **** }
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 36


 465              		.loc 1 1534 0
 466 0268 11B0     		add	sp, sp, #68
 467              	.LCFI2:
 468              		.cfi_def_cfa_offset 36
 469              		@ sp needed
 470 026a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 471              	.L7:
 472 026e 00BF     		.align	2
 473              	.L6:
 474 0270 00380240 		.word	1073887232
 475 0274 000C0240 		.word	1073875968
 476 0278 00200240 		.word	1073881088
 477 027c 00280240 		.word	1073883136
 478 0280 001C0240 		.word	1073880064
 479 0284 00180240 		.word	1073879040
 480 0288 00100240 		.word	1073876992
 481 028c 00040240 		.word	1073873920
 482 0290 00240240 		.word	1073882112
 483 0294 00080240 		.word	1073874944
 484 0298 00000240 		.word	1073872896
 485 029c 00001210 		.word	269615104
 486              		.cfi_endproc
 487              	.LFE189:
 489              		.section	.text.LCD_Initialize_Screen,"ax",%progbits
 490              		.align	1
 491              		.syntax unified
 492              		.thumb
 493              		.thumb_func
 494              		.fpu fpv5-sp-d16
 496              	LCD_Initialize_Screen:
 497              	.LFB160:
 257:main.c        ****     /* LCD Initialization */
 498              		.loc 1 257 0
 499              		.cfi_startproc
 500              		@ args = 0, pretend = 0, frame = 0
 501              		@ frame_needed = 0, uses_anonymous_args = 0
 502 0000 08B5     		push	{r3, lr}
 503              	.LCFI3:
 504              		.cfi_def_cfa_offset 8
 505              		.cfi_offset 3, -8
 506              		.cfi_offset 14, -4
 259:main.c        **** 
 507              		.loc 1 259 0
 508 0002 FFF7FEFF 		bl	BSP_LCD_Init
 509              	.LVL23:
 262:main.c        ****     //BSP_LCD_LayerDefaultInit(1, (unsigned int)lcd_image_bg+(LCD_X_SIZE*LCD_Y_SIZE*4));
 510              		.loc 1 262 0
 511 0006 1749     		ldr	r1, .L10
 512 0008 0020     		movs	r0, #0
 513 000a FFF7FEFF 		bl	BSP_LCD_LayerDefaultInit
 514              	.LVL24:
 264:main.c        **** 
 515              		.loc 1 264 0
 516 000e 1649     		ldr	r1, .L10+4
 517 0010 0120     		movs	r0, #1
 518 0012 FFF7FEFF 		bl	BSP_LCD_LayerDefaultInit
 519              	.LVL25:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 37


 267:main.c        **** 
 520              		.loc 1 267 0
 521 0016 FFF7FEFF 		bl	BSP_LCD_DisplayOn
 522              	.LVL26:
 270:main.c        **** 
 523              		.loc 1 270 0
 524 001a 0020     		movs	r0, #0
 525 001c FFF7FEFF 		bl	BSP_LCD_SelectLayer
 526              	.LVL27:
 273:main.c        ****     BSP_LCD_SetBackColor(LCD_COLOR_WHITE);
 527              		.loc 1 273 0
 528 0020 4FF0FF30 		mov	r0, #-1
 529 0024 FFF7FEFF 		bl	BSP_LCD_Clear
 530              	.LVL28:
 274:main.c        **** 
 531              		.loc 1 274 0
 532 0028 4FF0FF30 		mov	r0, #-1
 533 002c FFF7FEFF 		bl	BSP_LCD_SetBackColor
 534              	.LVL29:
 276:main.c        **** 
 535              		.loc 1 276 0
 536 0030 4FF0FF31 		mov	r1, #-1
 537 0034 0120     		movs	r0, #1
 538 0036 FFF7FEFF 		bl	BSP_LCD_SetColorKeying
 539              	.LVL30:
 279:main.c        **** 
 540              		.loc 1 279 0
 541 003a 0120     		movs	r0, #1
 542 003c FFF7FEFF 		bl	BSP_LCD_SelectLayer
 543              	.LVL31:
 282:main.c        ****     BSP_LCD_SetBackColor(LCD_COLOR_WHITE);
 544              		.loc 1 282 0
 545 0040 4FF0FF30 		mov	r0, #-1
 546 0044 FFF7FEFF 		bl	BSP_LCD_Clear
 547              	.LVL32:
 283:main.c        **** 
 548              		.loc 1 283 0
 549 0048 4FF0FF30 		mov	r0, #-1
 550 004c FFF7FEFF 		bl	BSP_LCD_SetBackColor
 551              	.LVL33:
 287:main.c        ****     BSP_LCD_SetTransparency(1, 255);
 552              		.loc 1 287 0
 553 0050 FF21     		movs	r1, #255
 554 0052 0020     		movs	r0, #0
 555 0054 FFF7FEFF 		bl	BSP_LCD_SetTransparency
 556              	.LVL34:
 288:main.c        **** }
 557              		.loc 1 288 0
 558 0058 FF21     		movs	r1, #255
 559 005a 0120     		movs	r0, #1
 560 005c FFF7FEFF 		bl	BSP_LCD_SetTransparency
 561              	.LVL35:
 562 0060 08BD     		pop	{r3, pc}
 563              	.L11:
 564 0062 00BF     		.align	2
 565              	.L10:
 566 0064 00000000 		.word	.LANCHOR0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 38


 567 0068 00F80700 		.word	.LANCHOR1+960
 568              		.cfi_endproc
 569              	.LFE160:
 571              		.section	.text.TS_Initialize_Touchscreen,"ax",%progbits
 572              		.align	1
 573              		.syntax unified
 574              		.thumb
 575              		.thumb_func
 576              		.fpu fpv5-sp-d16
 578              	TS_Initialize_Touchscreen:
 579              	.LFB159:
 250:main.c        ****     uint8_t status = 0;
 580              		.loc 1 250 0
 581              		.cfi_startproc
 582              		@ args = 0, pretend = 0, frame = 0
 583              		@ frame_needed = 0, uses_anonymous_args = 0
 584 0000 10B5     		push	{r4, lr}
 585              	.LCFI4:
 586              		.cfi_def_cfa_offset 8
 587              		.cfi_offset 4, -8
 588              		.cfi_offset 14, -4
 589              	.LVL36:
 252:main.c        ****     if (status != TS_OK) return -1;
 590              		.loc 1 252 0
 591 0002 FFF7FEFF 		bl	BSP_LCD_GetXSize
 592              	.LVL37:
 593 0006 84B2     		uxth	r4, r0
 594 0008 FFF7FEFF 		bl	BSP_LCD_GetYSize
 595              	.LVL38:
 596 000c 81B2     		uxth	r1, r0
 597 000e 2046     		mov	r0, r4
 598 0010 FFF7FEFF 		bl	BSP_TS_Init
 599              	.LVL39:
 253:main.c        ****     return 0;
 600              		.loc 1 253 0
 601 0014 08B9     		cbnz	r0, .L16
 254:main.c        **** }
 602              		.loc 1 254 0
 603 0016 0020     		movs	r0, #0
 604              	.LVL40:
 255:main.c        **** 
 605              		.loc 1 255 0
 606 0018 10BD     		pop	{r4, pc}
 607              	.LVL41:
 608              	.L16:
 253:main.c        ****     return 0;
 609              		.loc 1 253 0
 610 001a 4FF0FF30 		mov	r0, #-1
 611              	.LVL42:
 612 001e 10BD     		pop	{r4, pc}
 613              		.cfi_endproc
 614              	.LFE159:
 616              		.section	.text.LCD_Draw_GUI,"ax",%progbits
 617              		.align	1
 618              		.syntax unified
 619              		.thumb
 620              		.thumb_func
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 39


 621              		.fpu fpv5-sp-d16
 623              	LCD_Draw_GUI:
 624              	.LFB161:
 291:main.c        ****     GUI_DrawButtons();
 625              		.loc 1 291 0
 626              		.cfi_startproc
 627              		@ args = 0, pretend = 0, frame = 0
 628              		@ frame_needed = 0, uses_anonymous_args = 0
 629 0000 08B5     		push	{r3, lr}
 630              	.LCFI5:
 631              		.cfi_def_cfa_offset 8
 632              		.cfi_offset 3, -8
 633              		.cfi_offset 14, -4
 292:main.c        **** }
 634              		.loc 1 292 0
 635 0002 FFF7FEFF 		bl	GUI_DrawButtons
 636              	.LVL43:
 637 0006 08BD     		pop	{r3, pc}
 638              		.cfi_endproc
 639              	.LFE161:
 641              		.section	.text.StartTouchscreenTask,"ax",%progbits
 642              		.align	1
 643              		.global	StartTouchscreenTask
 644              		.syntax unified
 645              		.thumb
 646              		.thumb_func
 647              		.fpu fpv5-sp-d16
 649              	StartTouchscreenTask:
 650              	.LFB164:
 504:main.c        ****     while (1) {
 651              		.loc 1 504 0
 652              		.cfi_startproc
 653              		@ Volatile: function does not return.
 654              		@ args = 0, pretend = 0, frame = 0
 655              		@ frame_needed = 0, uses_anonymous_args = 0
 656              	.LVL44:
 657 0000 08B5     		push	{r3, lr}
 658              	.LCFI6:
 659              		.cfi_def_cfa_offset 8
 660              		.cfi_offset 3, -8
 661              		.cfi_offset 14, -4
 662              	.LVL45:
 663              	.L20:
 506:main.c        ****         BSP_TS_GetState(&TS_State);
 664              		.loc 1 506 0 discriminator 1
 665 0002 6420     		movs	r0, #100
 666 0004 FFF7FEFF 		bl	vTaskDelay
 667              	.LVL46:
 507:main.c        ****         GUI_HandleTouch(&TS_State, CON_HandleButtonTouched);
 668              		.loc 1 507 0 discriminator 1
 669 0008 044C     		ldr	r4, .L22
 670 000a 2046     		mov	r0, r4
 671 000c FFF7FEFF 		bl	BSP_TS_GetState
 672              	.LVL47:
 508:main.c        ****     }
 673              		.loc 1 508 0 discriminator 1
 674 0010 0349     		ldr	r1, .L22+4
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 40


 675 0012 2046     		mov	r0, r4
 676 0014 FFF7FEFF 		bl	GUI_HandleTouch
 677              	.LVL48:
 678 0018 F3E7     		b	.L20
 679              	.L23:
 680 001a 00BF     		.align	2
 681              	.L22:
 682 001c 00000000 		.word	.LANCHOR2
 683 0020 00000000 		.word	CON_HandleButtonTouched
 684              		.cfi_endproc
 685              	.LFE164:
 687              		.section	.text.__io_putchar,"ax",%progbits
 688              		.align	1
 689              		.global	__io_putchar
 690              		.syntax unified
 691              		.thumb
 692              		.thumb_func
 693              		.fpu fpv5-sp-d16
 695              	__io_putchar:
 696              	.LFB157:
 229:main.c        ****     uint8_t data = ch;
 697              		.loc 1 229 0
 698              		.cfi_startproc
 699              		@ args = 0, pretend = 0, frame = 0
 700              		@ frame_needed = 0, uses_anonymous_args = 0
 701              		@ link register save eliminated.
 702              	.LVL49:
 703              	.L25:
 234:main.c        ****     huart1.Instance->TDR = (uint16_t) data;
 704              		.loc 1 234 0 discriminator 1
 705 0000 044B     		ldr	r3, .L26
 706 0002 1B68     		ldr	r3, [r3]
 707 0004 DA69     		ldr	r2, [r3, #28]
 708 0006 12F0800F 		tst	r2, #128
 709 000a F9D0     		beq	.L25
 235:main.c        **** #endif
 710              		.loc 1 235 0
 711 000c C0B2     		uxtb	r0, r0
 712              	.LVL50:
 713 000e 9862     		str	r0, [r3, #40]
 238:main.c        **** 
 714              		.loc 1 238 0
 715 0010 0020     		movs	r0, #0
 716 0012 7047     		bx	lr
 717              	.L27:
 718              		.align	2
 719              	.L26:
 720 0014 00000000 		.word	huart1
 721              		.cfi_endproc
 722              	.LFE157:
 724              		.section	.text.inkey,"ax",%progbits
 725              		.align	1
 726              		.global	inkey
 727              		.syntax unified
 728              		.thumb
 729              		.thumb_func
 730              		.fpu fpv5-sp-d16
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 41


 732              	inkey:
 733              	.LFB158:
 240:main.c        ****     uint32_t flags = huart1.Instance->ISR;
 734              		.loc 1 240 0
 735              		.cfi_startproc
 736              		@ args = 0, pretend = 0, frame = 0
 737              		@ frame_needed = 0, uses_anonymous_args = 0
 738              		@ link register save eliminated.
 241:main.c        **** 
 739              		.loc 1 241 0
 740 0000 064B     		ldr	r3, .L31
 741 0002 1B68     		ldr	r3, [r3]
 742 0004 DA69     		ldr	r2, [r3, #28]
 743              	.LVL51:
 243:main.c        ****         __HAL_UART_CLEAR_OREFLAG(&huart1);
 744              		.loc 1 243 0
 745 0006 12F0280F 		tst	r2, #40
 746 000a 04D0     		beq	.L30
 244:main.c        ****         return (huart1.Instance->RDR);
 747              		.loc 1 244 0
 748 000c 0822     		movs	r2, #8
 749              	.LVL52:
 750 000e 1A62     		str	r2, [r3, #32]
 245:main.c        ****     } else
 751              		.loc 1 245 0
 752 0010 586A     		ldr	r0, [r3, #36]
 753 0012 C0B2     		uxtb	r0, r0
 754 0014 7047     		bx	lr
 755              	.LVL53:
 756              	.L30:
 247:main.c        **** }
 757              		.loc 1 247 0
 758 0016 0020     		movs	r0, #0
 248:main.c        **** 
 759              		.loc 1 248 0
 760 0018 7047     		bx	lr
 761              	.L32:
 762 001a 00BF     		.align	2
 763              	.L31:
 764 001c 00000000 		.word	huart1
 765              		.cfi_endproc
 766              	.LFE158:
 768              		.section	.text.StartDefaultTask,"ax",%progbits
 769              		.align	1
 770              		.global	StartDefaultTask
 771              		.syntax unified
 772              		.thumb
 773              		.thumb_func
 774              		.fpu fpv5-sp-d16
 776              	StartDefaultTask:
 777              	.LFB163:
 398:main.c        ****     /* init code for FATFS */
 778              		.loc 1 398 0
 779              		.cfi_startproc
 780              		@ args = 0, pretend = 0, frame = 8
 781              		@ frame_needed = 0, uses_anonymous_args = 0
 782              	.LVL54:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 42


 783 0000 00B5     		push	{lr}
 784              	.LCFI7:
 785              		.cfi_def_cfa_offset 4
 786              		.cfi_offset 14, -4
 787 0002 83B0     		sub	sp, sp, #12
 788              	.LCFI8:
 789              		.cfi_def_cfa_offset 16
 400:main.c        **** 
 790              		.loc 1 400 0
 791 0004 FFF7FEFF 		bl	MX_FATFS_Init
 792              	.LVL55:
 403:main.c        **** 
 793              		.loc 1 403 0
 794 0008 FFF7FEFF 		bl	MX_USB_HOST_Init
 795              	.LVL56:
 405:main.c        ****     xprintf("Waiting for USB mass storage.\r\n");
 796              		.loc 1 405 0
 797 000c 4FF47A70 		mov	r0, #1000
 798 0010 FFF7FEFF 		bl	vTaskDelay
 799              	.LVL57:
 406:main.c        **** 
 800              		.loc 1 406 0
 801 0014 5948     		ldr	r0, .L58
 802 0016 FFF7FEFF 		bl	xprintf
 803              	.LVL58:
 804              	.L34:
 409:main.c        ****     } while (Appli_state != APPLICATION_READY);
 805              		.loc 1 409 0 discriminator 1
 806 001a FA20     		movs	r0, #250
 807 001c FFF7FEFF 		bl	vTaskDelay
 808              	.LVL59:
 410:main.c        **** 
 809              		.loc 1 410 0 discriminator 1
 810 0020 574B     		ldr	r3, .L58+4
 811 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 812 0024 022B     		cmp	r3, #2
 813 0026 F8D1     		bne	.L34
 412:main.c        ****     if (BSP_AUDIO_OUT_Init(OUTPUT_DEVICE_HEADPHONE1, 60, AUDIO_FREQUENCY_44K) == 0) {
 814              		.loc 1 412 0
 815 0028 5648     		ldr	r0, .L58+8
 816 002a FFF7FEFF 		bl	xprintf
 817              	.LVL60:
 413:main.c        ****         xprintf("Audio codec initialized successfully.\r\n");
 818              		.loc 1 413 0
 819 002e 4AF64442 		movw	r2, #44100
 820 0032 3C21     		movs	r1, #60
 821 0034 0220     		movs	r0, #2
 822 0036 FFF7FEFF 		bl	BSP_AUDIO_OUT_Init
 823              	.LVL61:
 824 003a 60B9     		cbnz	r0, .L35
 414:main.c        ****     } else {
 825              		.loc 1 414 0
 826 003c 5248     		ldr	r0, .L58+12
 827 003e FFF7FEFF 		bl	xprintf
 828              	.LVL62:
 829              	.L36:
 418:main.c        **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 43


 830              		.loc 1 418 0
 831 0042 0520     		movs	r0, #5
 832 0044 FFF7FEFF 		bl	BSP_AUDIO_OUT_SetAudioFrameSlot
 833              	.LVL63:
 420:main.c        ****     LCD_Draw_GUI();
 834              		.loc 1 420 0
 835 0048 FFF7FEFF 		bl	LCD_Initialize_Screen
 836              	.LVL64:
 421:main.c        ****     AUDIO_L_PerformScan();
 837              		.loc 1 421 0
 838 004c FFF7FEFF 		bl	LCD_Draw_GUI
 839              	.LVL65:
 422:main.c        **** 
 840              		.loc 1 422 0
 841 0050 FFF7FEFF 		bl	AUDIO_L_PerformScan
 842              	.LVL66:
 843 0054 1CE0     		b	.L50
 844              	.L35:
 416:main.c        ****     }
 845              		.loc 1 416 0
 846 0056 4D48     		ldr	r0, .L58+16
 847 0058 FFF7FEFF 		bl	xprintf
 848              	.LVL67:
 849 005c F1E7     		b	.L36
 850              	.LVL68:
 851              	.L38:
 852              	.LBB13:
 432:main.c        ****                 break;
 853              		.loc 1 432 0
 854 005e 4C48     		ldr	r0, .L58+20
 855              	.LVL69:
 856 0060 FFF7FEFF 		bl	xprintf
 857              	.LVL70:
 858              	.L40:
 462:main.c        ****             uint32_t br;
 859              		.loc 1 462 0
 860 0064 4B4B     		ldr	r3, .L58+24
 861 0066 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 862 0068 7BB1     		cbz	r3, .L44
 863              	.LBB14:
 465:main.c        ****                 if (f_read(&testFile,
 864              		.loc 1 465 0
 865 006a 4B4B     		ldr	r3, .L58+28
 866 006c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 867 006e 012B     		cmp	r3, #1
 868 0070 42D0     		beq	.L53
 869              	.L45:
 478:main.c        ****                 if (f_read(&testFile,
 870              		.loc 1 478 0
 871 0072 494B     		ldr	r3, .L58+28
 872 0074 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 873 0076 022B     		cmp	r3, #2
 874 0078 56D0     		beq	.L54
 875              	.L47:
 491:main.c        ****                 xprintf("stop at eof\n");
 876              		.loc 1 491 0
 877 007a 019B     		ldr	r3, [sp, #4]
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 44


 878 007c B3F5805F 		cmp	r3, #4096
 879 0080 03D2     		bcs	.L44
 491:main.c        ****                 xprintf("stop at eof\n");
 880              		.loc 1 491 0 is_stmt 0 discriminator 1
 881 0082 464B     		ldr	r3, .L58+32
 882 0084 1B68     		ldr	r3, [r3]
 883 0086 002B     		cmp	r3, #0
 884 0088 66D1     		bne	.L55
 885              	.L44:
 886              	.LBE14:
 500:main.c        ****     }
 887              		.loc 1 500 0 is_stmt 1
 888 008a 6420     		movs	r0, #100
 889 008c FFF7FEFF 		bl	vTaskDelay
 890              	.LVL71:
 891              	.L50:
 426:main.c        **** 
 892              		.loc 1 426 0
 893 0090 FFF7FEFF 		bl	inkey
 894              	.LVL72:
 428:main.c        ****             case 0:
 895              		.loc 1 428 0
 896 0094 6128     		cmp	r0, #97
 897 0096 E2D0     		beq	.L38
 898 0098 7028     		cmp	r0, #112
 899 009a 07D0     		beq	.L39
 900 009c 0028     		cmp	r0, #0
 901 009e E1D0     		beq	.L40
 457:main.c        ****                 break;
 902              		.loc 1 457 0
 903 00a0 0246     		mov	r2, r0
 904 00a2 0146     		mov	r1, r0
 905 00a4 3E48     		ldr	r0, .L58+36
 906              	.LVL73:
 907 00a6 FFF7FEFF 		bl	xprintf
 908              	.LVL74:
 458:main.c        ****             }
 909              		.loc 1 458 0
 910 00aa DBE7     		b	.L40
 911              	.LVL75:
 912              	.L39:
 913              	.LBB15:
 437:main.c        ****                 if (player_state) {
 914              		.loc 1 437 0
 915 00ac 3D48     		ldr	r0, .L58+40
 916              	.LVL76:
 917 00ae FFF7FEFF 		bl	xprintf
 918              	.LVL77:
 438:main.c        ****                     xprintf("already playing\n");
 919              		.loc 1 438 0
 920 00b2 384B     		ldr	r3, .L58+24
 921 00b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 922 00b6 1BB1     		cbz	r3, .L41
 439:main.c        ****                     break;
 923              		.loc 1 439 0
 924 00b8 3B48     		ldr	r0, .L58+44
 925 00ba FFF7FEFF 		bl	xprintf
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 45


 926              	.LVL78:
 440:main.c        ****                 }
 927              		.loc 1 440 0
 928 00be D1E7     		b	.L40
 929              	.L41:
 444:main.c        ****                 if (res == FR_OK) {
 930              		.loc 1 444 0
 931 00c0 0122     		movs	r2, #1
 932 00c2 3A49     		ldr	r1, .L58+48
 933 00c4 3A48     		ldr	r0, .L58+52
 934 00c6 FFF7FEFF 		bl	f_open
 935              	.LVL79:
 445:main.c        ****                     xprintf("wave file open OK\n");
 936              		.loc 1 445 0
 937 00ca 0146     		mov	r1, r0
 938 00cc 80B9     		cbnz	r0, .L42
 446:main.c        ****                 } else {
 939              		.loc 1 446 0
 940 00ce 3948     		ldr	r0, .L58+56
 941              	.LVL80:
 942 00d0 FFF7FEFF 		bl	xprintf
 943              	.LVL81:
 944              	.L43:
 450:main.c        ****                 BSP_AUDIO_OUT_Play((uint16_t *) &buff[0], AUDIO_OUT_BUFFER_SIZE);
 945              		.loc 1 450 0
 946 00d4 0122     		movs	r2, #1
 947 00d6 2F4B     		ldr	r3, .L58+24
 948 00d8 1A70     		strb	r2, [r3]
 451:main.c        ****                 fpos = 0;
 949              		.loc 1 451 0
 950 00da 4FF40051 		mov	r1, #8192
 951 00de 3648     		ldr	r0, .L58+60
 952 00e0 FFF7FEFF 		bl	BSP_AUDIO_OUT_Play
 953              	.LVL82:
 452:main.c        ****                 buf_offs = BUFFER_OFFSET_NONE;
 954              		.loc 1 452 0
 955 00e4 0023     		movs	r3, #0
 956 00e6 2D4A     		ldr	r2, .L58+32
 957 00e8 1360     		str	r3, [r2]
 453:main.c        ****                 break;
 958              		.loc 1 453 0
 959 00ea 2B4A     		ldr	r2, .L58+28
 960 00ec 1370     		strb	r3, [r2]
 454:main.c        ****             }
 961              		.loc 1 454 0
 962 00ee B9E7     		b	.L40
 963              	.LVL83:
 964              	.L42:
 448:main.c        ****                 }
 965              		.loc 1 448 0
 966 00f0 3248     		ldr	r0, .L58+64
 967              	.LVL84:
 968 00f2 FFF7FEFF 		bl	xprintf
 969              	.LVL85:
 970 00f6 EDE7     		b	.L43
 971              	.L53:
 972              	.LBE15:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 46


 973              	.LBB16:
 466:main.c        ****                            &buff[0],
 974              		.loc 1 466 0
 975 00f8 01AB     		add	r3, sp, #4
 976 00fa 4FF48052 		mov	r2, #4096
 977 00fe 2E49     		ldr	r1, .L58+60
 978 0100 2B48     		ldr	r0, .L58+52
 979 0102 FFF7FEFF 		bl	f_read
 980              	.LVL86:
 981 0106 40B9     		cbnz	r0, .L56
 982              	.L46:
 473:main.c        ****                 fpos += br;
 983              		.loc 1 473 0
 984 0108 0022     		movs	r2, #0
 985 010a 234B     		ldr	r3, .L58+28
 986 010c 1A70     		strb	r2, [r3]
 474:main.c        **** 
 987              		.loc 1 474 0
 988 010e 234A     		ldr	r2, .L58+32
 989 0110 1368     		ldr	r3, [r2]
 990 0112 0199     		ldr	r1, [sp, #4]
 991 0114 0B44     		add	r3, r3, r1
 992 0116 1360     		str	r3, [r2]
 993 0118 ABE7     		b	.L45
 994              	.L56:
 470:main.c        ****                     xprintf("f_read error on half\n");
 995              		.loc 1 470 0
 996 011a 0220     		movs	r0, #2
 997 011c FFF7FEFF 		bl	BSP_AUDIO_OUT_Stop
 998              	.LVL87:
 471:main.c        ****                 }
 999              		.loc 1 471 0
 1000 0120 2748     		ldr	r0, .L58+68
 1001 0122 FFF7FEFF 		bl	xprintf
 1002              	.LVL88:
 1003 0126 EFE7     		b	.L46
 1004              	.L54:
 479:main.c        ****                            &buff[AUDIO_OUT_BUFFER_SIZE / 2],
 1005              		.loc 1 479 0
 1006 0128 01AB     		add	r3, sp, #4
 1007 012a 4FF48052 		mov	r2, #4096
 1008 012e 2549     		ldr	r1, .L58+72
 1009 0130 1F48     		ldr	r0, .L58+52
 1010 0132 FFF7FEFF 		bl	f_read
 1011              	.LVL89:
 1012 0136 40B9     		cbnz	r0, .L57
 1013              	.L48:
 487:main.c        ****                 fpos += br;
 1014              		.loc 1 487 0
 1015 0138 0022     		movs	r2, #0
 1016 013a 174B     		ldr	r3, .L58+28
 1017 013c 1A70     		strb	r2, [r3]
 488:main.c        ****             }
 1018              		.loc 1 488 0
 1019 013e 174A     		ldr	r2, .L58+32
 1020 0140 1368     		ldr	r3, [r2]
 1021 0142 0199     		ldr	r1, [sp, #4]
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 47


 1022 0144 0B44     		add	r3, r3, r1
 1023 0146 1360     		str	r3, [r2]
 1024 0148 97E7     		b	.L47
 1025              	.L57:
 483:main.c        ****                     xprintf("f_read error on full\n");
 1026              		.loc 1 483 0
 1027 014a 0220     		movs	r0, #2
 1028 014c FFF7FEFF 		bl	BSP_AUDIO_OUT_Stop
 1029              	.LVL90:
 484:main.c        ****                 }
 1030              		.loc 1 484 0
 1031 0150 1D48     		ldr	r0, .L58+76
 1032 0152 FFF7FEFF 		bl	xprintf
 1033              	.LVL91:
 1034 0156 EFE7     		b	.L48
 1035              	.L55:
 492:main.c        ****                 BSP_AUDIO_OUT_Stop(CODEC_PDWN_SW);
 1036              		.loc 1 492 0
 1037 0158 1C48     		ldr	r0, .L58+80
 1038 015a FFF7FEFF 		bl	xprintf
 1039              	.LVL92:
 493:main.c        ****                 f_close(&testFile);
 1040              		.loc 1 493 0
 1041 015e 0220     		movs	r0, #2
 1042 0160 FFF7FEFF 		bl	BSP_AUDIO_OUT_Stop
 1043              	.LVL93:
 494:main.c        ****                 player_state = 0;
 1044              		.loc 1 494 0
 1045 0164 1248     		ldr	r0, .L58+52
 1046 0166 FFF7FEFF 		bl	f_close
 1047              	.LVL94:
 495:main.c        ****                 fpos = 0;
 1048              		.loc 1 495 0
 1049 016a 0023     		movs	r3, #0
 1050 016c 094A     		ldr	r2, .L58+24
 1051 016e 1370     		strb	r3, [r2]
 496:main.c        ****                 buf_offs = BUFFER_OFFSET_NONE;
 1052              		.loc 1 496 0
 1053 0170 0A4A     		ldr	r2, .L58+32
 1054 0172 1360     		str	r3, [r2]
 497:main.c        ****             }
 1055              		.loc 1 497 0
 1056 0174 084A     		ldr	r2, .L58+28
 1057 0176 1370     		strb	r3, [r2]
 1058 0178 87E7     		b	.L44
 1059              	.L59:
 1060 017a 00BF     		.align	2
 1061              	.L58:
 1062 017c 00000000 		.word	.LC4
 1063 0180 00000000 		.word	Appli_state
 1064 0184 20000000 		.word	.LC5
 1065 0188 3C000000 		.word	.LC6
 1066 018c 64000000 		.word	.LC7
 1067 0190 8C000000 		.word	.LC8
 1068 0194 00000000 		.word	.LANCHOR3
 1069 0198 00000000 		.word	.LANCHOR6
 1070 019c 00000000 		.word	.LANCHOR5
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 48


 1071 01a0 10010000 		.word	.LC14
 1072 01a4 A4000000 		.word	.LC9
 1073 01a8 B8000000 		.word	.LC10
 1074 01ac CC000000 		.word	.LC11
 1075 01b0 00000000 		.word	.LANCHOR4
 1076 01b4 DC000000 		.word	.LC12
 1077 01b8 00000000 		.word	buff
 1078 01bc F0000000 		.word	.LC13
 1079 01c0 38010000 		.word	.LC15
 1080 01c4 00100000 		.word	buff+4096
 1081 01c8 50010000 		.word	.LC16
 1082 01cc 68010000 		.word	.LC17
 1083              	.LBE16:
 1084              	.LBE13:
 1085              		.cfi_endproc
 1086              	.LFE163:
 1088              		.section	.text.BSP_AUDIO_OUT_TransferComplete_CallBack,"ax",%progbits
 1089              		.align	1
 1090              		.global	BSP_AUDIO_OUT_TransferComplete_CallBack
 1091              		.syntax unified
 1092              		.thumb
 1093              		.thumb_func
 1094              		.fpu fpv5-sp-d16
 1096              	BSP_AUDIO_OUT_TransferComplete_CallBack:
 1097              	.LFB190:
1535:main.c        **** 
1536:main.c        **** void BSP_AUDIO_OUT_TransferComplete_CallBack(void) {
 1098              		.loc 1 1536 0
 1099              		.cfi_startproc
 1100              		@ args = 0, pretend = 0, frame = 0
 1101              		@ frame_needed = 0, uses_anonymous_args = 0
 1102              		@ link register save eliminated.
1537:main.c        ****     buf_offs = BUFFER_OFFSET_FULL;
 1103              		.loc 1 1537 0
 1104 0000 0222     		movs	r2, #2
 1105 0002 014B     		ldr	r3, .L61
 1106 0004 1A70     		strb	r2, [r3]
 1107 0006 7047     		bx	lr
 1108              	.L62:
 1109              		.align	2
 1110              	.L61:
 1111 0008 00000000 		.word	.LANCHOR6
 1112              		.cfi_endproc
 1113              	.LFE190:
 1115              		.section	.text.BSP_AUDIO_OUT_HalfTransfer_CallBack,"ax",%progbits
 1116              		.align	1
 1117              		.global	BSP_AUDIO_OUT_HalfTransfer_CallBack
 1118              		.syntax unified
 1119              		.thumb
 1120              		.thumb_func
 1121              		.fpu fpv5-sp-d16
 1123              	BSP_AUDIO_OUT_HalfTransfer_CallBack:
 1124              	.LFB191:
1538:main.c        **** }
1539:main.c        **** 
1540:main.c        **** void BSP_AUDIO_OUT_HalfTransfer_CallBack(void) {
 1125              		.loc 1 1540 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 49


 1126              		.cfi_startproc
 1127              		@ args = 0, pretend = 0, frame = 0
 1128              		@ frame_needed = 0, uses_anonymous_args = 0
 1129              		@ link register save eliminated.
1541:main.c        ****     buf_offs = BUFFER_OFFSET_HALF;
 1130              		.loc 1 1541 0
 1131 0000 0122     		movs	r2, #1
 1132 0002 014B     		ldr	r3, .L64
 1133 0004 1A70     		strb	r2, [r3]
 1134 0006 7047     		bx	lr
 1135              	.L65:
 1136              		.align	2
 1137              	.L64:
 1138 0008 00000000 		.word	.LANCHOR6
 1139              		.cfi_endproc
 1140              	.LFE191:
 1142              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 1143              		.align	1
 1144              		.global	HAL_TIM_PeriodElapsedCallback
 1145              		.syntax unified
 1146              		.thumb
 1147              		.thumb_func
 1148              		.fpu fpv5-sp-d16
 1150              	HAL_TIM_PeriodElapsedCallback:
 1151              	.LFB192:
1542:main.c        **** }
1543:main.c        **** 
1544:main.c        **** /**
1545:main.c        ****   * @brief  Period elapsed callback in non blocking mode
1546:main.c        ****   * @note   This function is called  when TIM6 interrupt took place, inside
1547:main.c        ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
1548:main.c        ****   * a global variable "uwTick" used as application time base.
1549:main.c        ****   * @param  htim : TIM handle
1550:main.c        ****   * @retval None
1551:main.c        ****   */
1552:main.c        **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim) {
 1152              		.loc 1 1552 0
 1153              		.cfi_startproc
 1154              		@ args = 0, pretend = 0, frame = 0
 1155              		@ frame_needed = 0, uses_anonymous_args = 0
 1156              	.LVL95:
 1157 0000 08B5     		push	{r3, lr}
 1158              	.LCFI9:
 1159              		.cfi_def_cfa_offset 8
 1160              		.cfi_offset 3, -8
 1161              		.cfi_offset 14, -4
1553:main.c        ****     /* USER CODE BEGIN Callback 0 */
1554:main.c        **** 
1555:main.c        ****     /* USER CODE END Callback 0 */
1556:main.c        ****     if (htim->Instance == TIM6) {
 1162              		.loc 1 1556 0
 1163 0002 0268     		ldr	r2, [r0]
 1164 0004 034B     		ldr	r3, .L70
 1165 0006 9A42     		cmp	r2, r3
 1166 0008 00D0     		beq	.L69
 1167              	.LVL96:
 1168              	.L66:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 50


 1169 000a 08BD     		pop	{r3, pc}
 1170              	.LVL97:
 1171              	.L69:
1557:main.c        ****         HAL_IncTick();
 1172              		.loc 1 1557 0
 1173 000c FFF7FEFF 		bl	HAL_IncTick
 1174              	.LVL98:
1558:main.c        ****     }
1559:main.c        ****     /* USER CODE BEGIN Callback 1 */
1560:main.c        **** 
1561:main.c        ****     /* USER CODE END Callback 1 */
1562:main.c        **** }
 1175              		.loc 1 1562 0
 1176 0010 FBE7     		b	.L66
 1177              	.L71:
 1178 0012 00BF     		.align	2
 1179              	.L70:
 1180 0014 00100040 		.word	1073745920
 1181              		.cfi_endproc
 1182              	.LFE192:
 1184              		.section	.text._Error_Handler,"ax",%progbits
 1185              		.align	1
 1186              		.global	_Error_Handler
 1187              		.syntax unified
 1188              		.thumb
 1189              		.thumb_func
 1190              		.fpu fpv5-sp-d16
 1192              	_Error_Handler:
 1193              	.LFB193:
1563:main.c        **** 
1564:main.c        **** /**
1565:main.c        ****   * @brief  This function is executed in case of error occurrence.
1566:main.c        ****   * @param  file: The file name as string.
1567:main.c        ****   * @param  line: The line in file as a number.
1568:main.c        ****   * @retval None
1569:main.c        ****   */
1570:main.c        **** void _Error_Handler(char *file, int line) {
 1194              		.loc 1 1570 0
 1195              		.cfi_startproc
 1196              		@ Volatile: function does not return.
 1197              		@ args = 0, pretend = 0, frame = 0
 1198              		@ frame_needed = 0, uses_anonymous_args = 0
 1199              		@ link register save eliminated.
 1200              	.LVL99:
 1201              	.L73:
 1202 0000 FEE7     		b	.L73
 1203              		.cfi_endproc
 1204              	.LFE193:
 1206              		.section	.text.MX_ADC3_Init,"ax",%progbits
 1207              		.align	1
 1208              		.syntax unified
 1209              		.thumb
 1210              		.thumb_func
 1211              		.fpu fpv5-sp-d16
 1213              	MX_ADC3_Init:
 1214              	.LFB166:
 603:main.c        **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 51


 1215              		.loc 1 603 0
 1216              		.cfi_startproc
 1217              		@ args = 0, pretend = 0, frame = 16
 1218              		@ frame_needed = 0, uses_anonymous_args = 0
 603:main.c        **** 
 1219              		.loc 1 603 0
 1220 0000 00B5     		push	{lr}
 1221              	.LCFI10:
 1222              		.cfi_def_cfa_offset 4
 1223              		.cfi_offset 14, -4
 1224 0002 85B0     		sub	sp, sp, #20
 1225              	.LCFI11:
 1226              		.cfi_def_cfa_offset 24
 609:main.c        ****     hadc3.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 1227              		.loc 1 609 0
 1228 0004 1648     		ldr	r0, .L80
 1229 0006 174B     		ldr	r3, .L80+4
 1230 0008 0360     		str	r3, [r0]
 610:main.c        ****     hadc3.Init.Resolution = ADC_RESOLUTION_12B;
 1231              		.loc 1 610 0
 1232 000a 4FF48033 		mov	r3, #65536
 1233 000e 4360     		str	r3, [r0, #4]
 611:main.c        ****     hadc3.Init.ScanConvMode = ADC_SCAN_DISABLE;
 1234              		.loc 1 611 0
 1235 0010 0023     		movs	r3, #0
 1236 0012 8360     		str	r3, [r0, #8]
 612:main.c        ****     hadc3.Init.ContinuousConvMode = DISABLE;
 1237              		.loc 1 612 0
 1238 0014 0361     		str	r3, [r0, #16]
 613:main.c        ****     hadc3.Init.DiscontinuousConvMode = DISABLE;
 1239              		.loc 1 613 0
 1240 0016 8361     		str	r3, [r0, #24]
 614:main.c        ****     hadc3.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 1241              		.loc 1 614 0
 1242 0018 0362     		str	r3, [r0, #32]
 615:main.c        ****     hadc3.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 1243              		.loc 1 615 0
 1244 001a C362     		str	r3, [r0, #44]
 616:main.c        ****     hadc3.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 1245              		.loc 1 616 0
 1246 001c 124A     		ldr	r2, .L80+8
 1247 001e 8262     		str	r2, [r0, #40]
 617:main.c        ****     hadc3.Init.NbrOfConversion = 1;
 1248              		.loc 1 617 0
 1249 0020 C360     		str	r3, [r0, #12]
 618:main.c        ****     hadc3.Init.DMAContinuousRequests = DISABLE;
 1250              		.loc 1 618 0
 1251 0022 0122     		movs	r2, #1
 1252 0024 C261     		str	r2, [r0, #28]
 619:main.c        ****     hadc3.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 1253              		.loc 1 619 0
 1254 0026 0363     		str	r3, [r0, #48]
 620:main.c        ****     if (HAL_ADC_Init(&hadc3) != HAL_OK) {
 1255              		.loc 1 620 0
 1256 0028 4261     		str	r2, [r0, #20]
 621:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 1257              		.loc 1 621 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 52


 1258 002a FFF7FEFF 		bl	HAL_ADC_Init
 1259              	.LVL100:
 1260 002e 68B9     		cbnz	r0, .L78
 627:main.c        ****     sConfig.Rank = ADC_REGULAR_RANK_1;
 1261              		.loc 1 627 0
 1262 0030 0423     		movs	r3, #4
 1263 0032 0093     		str	r3, [sp]
 628:main.c        ****     sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 1264              		.loc 1 628 0
 1265 0034 0123     		movs	r3, #1
 1266 0036 0193     		str	r3, [sp, #4]
 629:main.c        ****     if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK) {
 1267              		.loc 1 629 0
 1268 0038 0023     		movs	r3, #0
 1269 003a 0293     		str	r3, [sp, #8]
 630:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 1270              		.loc 1 630 0
 1271 003c 6946     		mov	r1, sp
 1272 003e 0848     		ldr	r0, .L80
 1273 0040 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 1274              	.LVL101:
 1275 0044 38B9     		cbnz	r0, .L79
 634:main.c        **** 
 1276              		.loc 1 634 0
 1277 0046 05B0     		add	sp, sp, #20
 1278              	.LCFI12:
 1279              		.cfi_remember_state
 1280              		.cfi_def_cfa_offset 4
 1281              		@ sp needed
 1282 0048 5DF804FB 		ldr	pc, [sp], #4
 1283              	.L78:
 1284              	.LCFI13:
 1285              		.cfi_restore_state
 622:main.c        ****     }
 1286              		.loc 1 622 0
 1287 004c 40F26E21 		movw	r1, #622
 1288 0050 0648     		ldr	r0, .L80+12
 1289 0052 FFF7FEFF 		bl	_Error_Handler
 1290              	.LVL102:
 1291              	.L79:
 631:main.c        ****     }
 1292              		.loc 1 631 0
 1293 0056 40F27721 		movw	r1, #631
 1294 005a 0448     		ldr	r0, .L80+12
 1295 005c FFF7FEFF 		bl	_Error_Handler
 1296              	.LVL103:
 1297              	.L81:
 1298              		.align	2
 1299              	.L80:
 1300 0060 00000000 		.word	hadc3
 1301 0064 00220140 		.word	1073816064
 1302 0068 0100000F 		.word	251658241
 1303 006c 00000000 		.word	.LC18
 1304              		.cfi_endproc
 1305              	.LFE166:
 1307              		.section	.text.MX_CRC_Init,"ax",%progbits
 1308              		.align	1
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 53


 1309              		.syntax unified
 1310              		.thumb
 1311              		.thumb_func
 1312              		.fpu fpv5-sp-d16
 1314              	MX_CRC_Init:
 1315              	.LFB167:
 637:main.c        **** 
 1316              		.loc 1 637 0
 1317              		.cfi_startproc
 1318              		@ args = 0, pretend = 0, frame = 0
 1319              		@ frame_needed = 0, uses_anonymous_args = 0
 1320 0000 08B5     		push	{r3, lr}
 1321              	.LCFI14:
 1322              		.cfi_def_cfa_offset 8
 1323              		.cfi_offset 3, -8
 1324              		.cfi_offset 14, -4
 639:main.c        ****     hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
 1325              		.loc 1 639 0
 1326 0002 0948     		ldr	r0, .L86
 1327 0004 094B     		ldr	r3, .L86+4
 1328 0006 0360     		str	r3, [r0]
 640:main.c        ****     hcrc.Init.DefaultInitValueUse = DEFAULT_INIT_VALUE_ENABLE;
 1329              		.loc 1 640 0
 1330 0008 0023     		movs	r3, #0
 1331 000a 0371     		strb	r3, [r0, #4]
 641:main.c        ****     hcrc.Init.InputDataInversionMode = CRC_INPUTDATA_INVERSION_NONE;
 1332              		.loc 1 641 0
 1333 000c 4371     		strb	r3, [r0, #5]
 642:main.c        ****     hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
 1334              		.loc 1 642 0
 1335 000e 4361     		str	r3, [r0, #20]
 643:main.c        ****     hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
 1336              		.loc 1 643 0
 1337 0010 8361     		str	r3, [r0, #24]
 644:main.c        ****     if (HAL_CRC_Init(&hcrc) != HAL_OK) {
 1338              		.loc 1 644 0
 1339 0012 0123     		movs	r3, #1
 1340 0014 0362     		str	r3, [r0, #32]
 645:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 1341              		.loc 1 645 0
 1342 0016 FFF7FEFF 		bl	HAL_CRC_Init
 1343              	.LVL104:
 1344 001a 00B9     		cbnz	r0, .L85
 1345 001c 08BD     		pop	{r3, pc}
 1346              	.L85:
 646:main.c        ****     }
 1347              		.loc 1 646 0
 1348 001e 40F28621 		movw	r1, #646
 1349 0022 0348     		ldr	r0, .L86+8
 1350 0024 FFF7FEFF 		bl	_Error_Handler
 1351              	.LVL105:
 1352              	.L87:
 1353              		.align	2
 1354              	.L86:
 1355 0028 00000000 		.word	hcrc
 1356 002c 00300240 		.word	1073885184
 1357 0030 00000000 		.word	.LC18
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 54


 1358              		.cfi_endproc
 1359              	.LFE167:
 1361              		.section	.text.MX_DCMI_Init,"ax",%progbits
 1362              		.align	1
 1363              		.syntax unified
 1364              		.thumb
 1365              		.thumb_func
 1366              		.fpu fpv5-sp-d16
 1368              	MX_DCMI_Init:
 1369              	.LFB168:
 652:main.c        **** 
 1370              		.loc 1 652 0
 1371              		.cfi_startproc
 1372              		@ args = 0, pretend = 0, frame = 0
 1373              		@ frame_needed = 0, uses_anonymous_args = 0
 1374 0000 08B5     		push	{r3, lr}
 1375              	.LCFI15:
 1376              		.cfi_def_cfa_offset 8
 1377              		.cfi_offset 3, -8
 1378              		.cfi_offset 14, -4
 654:main.c        ****     hdcmi.Init.SynchroMode = DCMI_SYNCHRO_HARDWARE;
 1379              		.loc 1 654 0
 1380 0002 0C48     		ldr	r0, .L92
 1381 0004 0C4B     		ldr	r3, .L92+4
 1382 0006 0360     		str	r3, [r0]
 655:main.c        ****     hdcmi.Init.PCKPolarity = DCMI_PCKPOLARITY_FALLING;
 1383              		.loc 1 655 0
 1384 0008 0023     		movs	r3, #0
 1385 000a 4360     		str	r3, [r0, #4]
 656:main.c        ****     hdcmi.Init.VSPolarity = DCMI_VSPOLARITY_LOW;
 1386              		.loc 1 656 0
 1387 000c 8360     		str	r3, [r0, #8]
 657:main.c        ****     hdcmi.Init.HSPolarity = DCMI_HSPOLARITY_LOW;
 1388              		.loc 1 657 0
 1389 000e C360     		str	r3, [r0, #12]
 658:main.c        ****     hdcmi.Init.CaptureRate = DCMI_CR_ALL_FRAME;
 1390              		.loc 1 658 0
 1391 0010 0361     		str	r3, [r0, #16]
 659:main.c        ****     hdcmi.Init.ExtendedDataMode = DCMI_EXTEND_DATA_8B;
 1392              		.loc 1 659 0
 1393 0012 4361     		str	r3, [r0, #20]
 660:main.c        ****     hdcmi.Init.JPEGMode = DCMI_JPEG_DISABLE;
 1394              		.loc 1 660 0
 1395 0014 8361     		str	r3, [r0, #24]
 661:main.c        ****     hdcmi.Init.ByteSelectMode = DCMI_BSM_ALL;
 1396              		.loc 1 661 0
 1397 0016 0362     		str	r3, [r0, #32]
 662:main.c        ****     hdcmi.Init.ByteSelectStart = DCMI_OEBS_ODD;
 1398              		.loc 1 662 0
 1399 0018 4362     		str	r3, [r0, #36]
 663:main.c        ****     hdcmi.Init.LineSelectMode = DCMI_LSM_ALL;
 1400              		.loc 1 663 0
 1401 001a 8362     		str	r3, [r0, #40]
 664:main.c        ****     hdcmi.Init.LineSelectStart = DCMI_OELS_ODD;
 1402              		.loc 1 664 0
 1403 001c C362     		str	r3, [r0, #44]
 665:main.c        ****     if (HAL_DCMI_Init(&hdcmi) != HAL_OK) {
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 55


 1404              		.loc 1 665 0
 1405 001e 0363     		str	r3, [r0, #48]
 666:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 1406              		.loc 1 666 0
 1407 0020 FFF7FEFF 		bl	HAL_DCMI_Init
 1408              	.LVL106:
 1409 0024 00B9     		cbnz	r0, .L91
 1410 0026 08BD     		pop	{r3, pc}
 1411              	.L91:
 667:main.c        ****     }
 1412              		.loc 1 667 0
 1413 0028 40F29B21 		movw	r1, #667
 1414 002c 0348     		ldr	r0, .L92+8
 1415 002e FFF7FEFF 		bl	_Error_Handler
 1416              	.LVL107:
 1417              	.L93:
 1418 0032 00BF     		.align	2
 1419              	.L92:
 1420 0034 00000000 		.word	hdcmi
 1421 0038 00000550 		.word	1342504960
 1422 003c 00000000 		.word	.LC18
 1423              		.cfi_endproc
 1424              	.LFE168:
 1426              		.section	.text.MX_DMA2D_Init,"ax",%progbits
 1427              		.align	1
 1428              		.syntax unified
 1429              		.thumb
 1430              		.thumb_func
 1431              		.fpu fpv5-sp-d16
 1433              	MX_DMA2D_Init:
 1434              	.LFB169:
 673:main.c        **** 
 1435              		.loc 1 673 0
 1436              		.cfi_startproc
 1437              		@ args = 0, pretend = 0, frame = 0
 1438              		@ frame_needed = 0, uses_anonymous_args = 0
 1439 0000 08B5     		push	{r3, lr}
 1440              	.LCFI16:
 1441              		.cfi_def_cfa_offset 8
 1442              		.cfi_offset 3, -8
 1443              		.cfi_offset 14, -4
 675:main.c        ****     hdma2d.Init.Mode = DMA2D_M2M;
 1444              		.loc 1 675 0
 1445 0002 0F48     		ldr	r0, .L100
 1446 0004 0F4B     		ldr	r3, .L100+4
 1447 0006 0360     		str	r3, [r0]
 676:main.c        ****     hdma2d.Init.ColorMode = DMA2D_OUTPUT_ARGB8888;
 1448              		.loc 1 676 0
 1449 0008 0023     		movs	r3, #0
 1450 000a 4360     		str	r3, [r0, #4]
 677:main.c        ****     hdma2d.Init.OutputOffset = 0;
 1451              		.loc 1 677 0
 1452 000c 8360     		str	r3, [r0, #8]
 678:main.c        ****     hdma2d.LayerCfg[1].InputOffset = 0;
 1453              		.loc 1 678 0
 1454 000e C360     		str	r3, [r0, #12]
 679:main.c        ****     hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_ARGB8888;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 56


 1455              		.loc 1 679 0
 1456 0010 8362     		str	r3, [r0, #40]
 680:main.c        ****     hdma2d.LayerCfg[1].AlphaMode = DMA2D_NO_MODIF_ALPHA;
 1457              		.loc 1 680 0
 1458 0012 C362     		str	r3, [r0, #44]
 681:main.c        ****     hdma2d.LayerCfg[1].InputAlpha = 0;
 1459              		.loc 1 681 0
 1460 0014 0363     		str	r3, [r0, #48]
 682:main.c        ****     if (HAL_DMA2D_Init(&hdma2d) != HAL_OK) {
 1461              		.loc 1 682 0
 1462 0016 4363     		str	r3, [r0, #52]
 683:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 1463              		.loc 1 683 0
 1464 0018 FFF7FEFF 		bl	HAL_DMA2D_Init
 1465              	.LVL108:
 1466 001c 28B9     		cbnz	r0, .L98
 687:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 1467              		.loc 1 687 0
 1468 001e 0121     		movs	r1, #1
 1469 0020 0748     		ldr	r0, .L100
 1470 0022 FFF7FEFF 		bl	HAL_DMA2D_ConfigLayer
 1471              	.LVL109:
 1472 0026 28B9     		cbnz	r0, .L99
 1473 0028 08BD     		pop	{r3, pc}
 1474              	.L98:
 684:main.c        ****     }
 1475              		.loc 1 684 0
 1476 002a 4FF42B71 		mov	r1, #684
 1477 002e 0648     		ldr	r0, .L100+8
 1478 0030 FFF7FEFF 		bl	_Error_Handler
 1479              	.LVL110:
 1480              	.L99:
 688:main.c        ****     }
 1481              		.loc 1 688 0
 1482 0034 4FF42C71 		mov	r1, #688
 1483 0038 0348     		ldr	r0, .L100+8
 1484 003a FFF7FEFF 		bl	_Error_Handler
 1485              	.LVL111:
 1486              	.L101:
 1487 003e 00BF     		.align	2
 1488              	.L100:
 1489 0040 00000000 		.word	hdma2d
 1490 0044 00B00240 		.word	1073917952
 1491 0048 00000000 		.word	.LC18
 1492              		.cfi_endproc
 1493              	.LFE169:
 1495              		.section	.text.MX_FMC_Init,"ax",%progbits
 1496              		.align	1
 1497              		.syntax unified
 1498              		.thumb
 1499              		.thumb_func
 1500              		.fpu fpv5-sp-d16
 1502              	MX_FMC_Init:
 1503              	.LFB188:
1331:main.c        ****     FMC_SDRAM_TimingTypeDef SdramTiming;
 1504              		.loc 1 1331 0
 1505              		.cfi_startproc
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 57


 1506              		@ args = 0, pretend = 0, frame = 32
 1507              		@ frame_needed = 0, uses_anonymous_args = 0
 1508 0000 00B5     		push	{lr}
 1509              	.LCFI17:
 1510              		.cfi_def_cfa_offset 4
 1511              		.cfi_offset 14, -4
 1512 0002 89B0     		sub	sp, sp, #36
 1513              	.LCFI18:
 1514              		.cfi_def_cfa_offset 40
1336:main.c        ****     /* hsdram1.Init */
 1515              		.loc 1 1336 0
 1516 0004 1648     		ldr	r0, .L106
 1517 0006 174B     		ldr	r3, .L106+4
 1518 0008 0360     		str	r3, [r0]
1338:main.c        ****     hsdram1.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
 1519              		.loc 1 1338 0
 1520 000a 0023     		movs	r3, #0
 1521 000c 4360     		str	r3, [r0, #4]
1339:main.c        ****     hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 1522              		.loc 1 1339 0
 1523 000e 8360     		str	r3, [r0, #8]
1340:main.c        ****     hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
 1524              		.loc 1 1340 0
 1525 0010 0421     		movs	r1, #4
 1526 0012 C160     		str	r1, [r0, #12]
1341:main.c        ****     hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 1527              		.loc 1 1341 0
 1528 0014 1022     		movs	r2, #16
 1529 0016 0261     		str	r2, [r0, #16]
1342:main.c        ****     hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 1530              		.loc 1 1342 0
 1531 0018 4022     		movs	r2, #64
 1532 001a 4261     		str	r2, [r0, #20]
1343:main.c        ****     hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 1533              		.loc 1 1343 0
 1534 001c 4FF4C072 		mov	r2, #384
 1535 0020 8261     		str	r2, [r0, #24]
1344:main.c        ****     hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 1536              		.loc 1 1344 0
 1537 0022 C361     		str	r3, [r0, #28]
1345:main.c        ****     hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
 1538              		.loc 1 1345 0
 1539 0024 4FF40062 		mov	r2, #2048
 1540 0028 0262     		str	r2, [r0, #32]
1346:main.c        ****     hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_0;
 1541              		.loc 1 1346 0
 1542 002a 4FF48052 		mov	r2, #4096
 1543 002e 4262     		str	r2, [r0, #36]
1347:main.c        ****     /* SdramTiming */
 1544              		.loc 1 1347 0
 1545 0030 8362     		str	r3, [r0, #40]
1349:main.c        ****     SdramTiming.ExitSelfRefreshDelay = 7;
 1546              		.loc 1 1349 0
 1547 0032 0223     		movs	r3, #2
 1548 0034 0193     		str	r3, [sp, #4]
1350:main.c        ****     SdramTiming.SelfRefreshTime = 4;
 1549              		.loc 1 1350 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 58


 1550 0036 0722     		movs	r2, #7
 1551 0038 0292     		str	r2, [sp, #8]
1351:main.c        ****     SdramTiming.RowCycleDelay = 7;
 1552              		.loc 1 1351 0
 1553 003a 0391     		str	r1, [sp, #12]
1352:main.c        ****     SdramTiming.WriteRecoveryTime = 3;
 1554              		.loc 1 1352 0
 1555 003c 0492     		str	r2, [sp, #16]
1353:main.c        ****     SdramTiming.RPDelay = 2;
 1556              		.loc 1 1353 0
 1557 003e 0322     		movs	r2, #3
 1558 0040 0592     		str	r2, [sp, #20]
1354:main.c        ****     SdramTiming.RCDDelay = 2;
 1559              		.loc 1 1354 0
 1560 0042 0693     		str	r3, [sp, #24]
1355:main.c        **** 
 1561              		.loc 1 1355 0
 1562 0044 0793     		str	r3, [sp, #28]
1357:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 1563              		.loc 1 1357 0
 1564 0046 6944     		add	r1, sp, r1
 1565 0048 FFF7FEFF 		bl	HAL_SDRAM_Init
 1566              	.LVL112:
 1567 004c 10B9     		cbnz	r0, .L105
1361:main.c        **** 
 1568              		.loc 1 1361 0
 1569 004e 09B0     		add	sp, sp, #36
 1570              	.LCFI19:
 1571              		.cfi_remember_state
 1572              		.cfi_def_cfa_offset 4
 1573              		@ sp needed
 1574 0050 5DF804FB 		ldr	pc, [sp], #4
 1575              	.L105:
 1576              	.LCFI20:
 1577              		.cfi_restore_state
1358:main.c        ****     }
 1578              		.loc 1 1358 0
 1579 0054 40F24E51 		movw	r1, #1358
 1580 0058 0348     		ldr	r0, .L106+8
 1581 005a FFF7FEFF 		bl	_Error_Handler
 1582              	.LVL113:
 1583              	.L107:
 1584 005e 00BF     		.align	2
 1585              	.L106:
 1586 0060 00000000 		.word	hsdram1
 1587 0064 400100A0 		.word	-1610612416
 1588 0068 00000000 		.word	.LC18
 1589              		.cfi_endproc
 1590              	.LFE188:
 1592              		.section	.text.MX_I2C1_Init,"ax",%progbits
 1593              		.align	1
 1594              		.syntax unified
 1595              		.thumb
 1596              		.thumb_func
 1597              		.fpu fpv5-sp-d16
 1599              	MX_I2C1_Init:
 1600              	.LFB170:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 59


 694:main.c        **** 
 1601              		.loc 1 694 0
 1602              		.cfi_startproc
 1603              		@ args = 0, pretend = 0, frame = 0
 1604              		@ frame_needed = 0, uses_anonymous_args = 0
 1605 0000 08B5     		push	{r3, lr}
 1606              	.LCFI21:
 1607              		.cfi_def_cfa_offset 8
 1608              		.cfi_offset 3, -8
 1609              		.cfi_offset 14, -4
 696:main.c        ****     hi2c1.Init.Timing = 0x00C0EAFF;
 1610              		.loc 1 696 0
 1611 0002 1548     		ldr	r0, .L116
 1612 0004 154B     		ldr	r3, .L116+4
 1613 0006 0360     		str	r3, [r0]
 697:main.c        ****     hi2c1.Init.OwnAddress1 = 0;
 1614              		.loc 1 697 0
 1615 0008 154B     		ldr	r3, .L116+8
 1616 000a 4360     		str	r3, [r0, #4]
 698:main.c        ****     hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 1617              		.loc 1 698 0
 1618 000c 0023     		movs	r3, #0
 1619 000e 8360     		str	r3, [r0, #8]
 699:main.c        ****     hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 1620              		.loc 1 699 0
 1621 0010 0122     		movs	r2, #1
 1622 0012 C260     		str	r2, [r0, #12]
 700:main.c        ****     hi2c1.Init.OwnAddress2 = 0;
 1623              		.loc 1 700 0
 1624 0014 0361     		str	r3, [r0, #16]
 701:main.c        ****     hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 1625              		.loc 1 701 0
 1626 0016 4361     		str	r3, [r0, #20]
 702:main.c        ****     hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 1627              		.loc 1 702 0
 1628 0018 8361     		str	r3, [r0, #24]
 703:main.c        ****     hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 1629              		.loc 1 703 0
 1630 001a C361     		str	r3, [r0, #28]
 704:main.c        ****     if (HAL_I2C_Init(&hi2c1) != HAL_OK) {
 1631              		.loc 1 704 0
 1632 001c 0362     		str	r3, [r0, #32]
 705:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 1633              		.loc 1 705 0
 1634 001e FFF7FEFF 		bl	HAL_I2C_Init
 1635              	.LVL114:
 1636 0022 50B9     		cbnz	r0, .L113
 711:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 1637              		.loc 1 711 0
 1638 0024 0021     		movs	r1, #0
 1639 0026 0C48     		ldr	r0, .L116
 1640 0028 FFF7FEFF 		bl	HAL_I2CEx_ConfigAnalogFilter
 1641              	.LVL115:
 1642 002c 50B9     		cbnz	r0, .L114
 717:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 1643              		.loc 1 717 0
 1644 002e 0021     		movs	r1, #0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 60


 1645 0030 0948     		ldr	r0, .L116
 1646 0032 FFF7FEFF 		bl	HAL_I2CEx_ConfigDigitalFilter
 1647              	.LVL116:
 1648 0036 50B9     		cbnz	r0, .L115
 1649 0038 08BD     		pop	{r3, pc}
 1650              	.L113:
 706:main.c        ****     }
 1651              		.loc 1 706 0
 1652 003a 40F2C221 		movw	r1, #706
 1653 003e 0948     		ldr	r0, .L116+12
 1654 0040 FFF7FEFF 		bl	_Error_Handler
 1655              	.LVL117:
 1656              	.L114:
 712:main.c        ****     }
 1657              		.loc 1 712 0
 1658 0044 4FF43271 		mov	r1, #712
 1659 0048 0648     		ldr	r0, .L116+12
 1660 004a FFF7FEFF 		bl	_Error_Handler
 1661              	.LVL118:
 1662              	.L115:
 718:main.c        ****     }
 1663              		.loc 1 718 0
 1664 004e 40F2CE21 		movw	r1, #718
 1665 0052 0448     		ldr	r0, .L116+12
 1666 0054 FFF7FEFF 		bl	_Error_Handler
 1667              	.LVL119:
 1668              	.L117:
 1669              		.align	2
 1670              	.L116:
 1671 0058 00000000 		.word	hi2c1
 1672 005c 00540040 		.word	1073763328
 1673 0060 FFEAC000 		.word	12643071
 1674 0064 00000000 		.word	.LC18
 1675              		.cfi_endproc
 1676              	.LFE170:
 1678              		.section	.text.MX_I2C3_Init,"ax",%progbits
 1679              		.align	1
 1680              		.syntax unified
 1681              		.thumb
 1682              		.thumb_func
 1683              		.fpu fpv5-sp-d16
 1685              	MX_I2C3_Init:
 1686              	.LFB171:
 724:main.c        **** 
 1687              		.loc 1 724 0
 1688              		.cfi_startproc
 1689              		@ args = 0, pretend = 0, frame = 0
 1690              		@ frame_needed = 0, uses_anonymous_args = 0
 1691 0000 08B5     		push	{r3, lr}
 1692              	.LCFI22:
 1693              		.cfi_def_cfa_offset 8
 1694              		.cfi_offset 3, -8
 1695              		.cfi_offset 14, -4
 726:main.c        ****     hi2c3.Init.Timing = 0x00C0EAFF;
 1696              		.loc 1 726 0
 1697 0002 1548     		ldr	r0, .L126
 1698 0004 154B     		ldr	r3, .L126+4
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 61


 1699 0006 0360     		str	r3, [r0]
 727:main.c        ****     hi2c3.Init.OwnAddress1 = 0;
 1700              		.loc 1 727 0
 1701 0008 154B     		ldr	r3, .L126+8
 1702 000a 4360     		str	r3, [r0, #4]
 728:main.c        ****     hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 1703              		.loc 1 728 0
 1704 000c 0023     		movs	r3, #0
 1705 000e 8360     		str	r3, [r0, #8]
 729:main.c        ****     hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 1706              		.loc 1 729 0
 1707 0010 0122     		movs	r2, #1
 1708 0012 C260     		str	r2, [r0, #12]
 730:main.c        ****     hi2c3.Init.OwnAddress2 = 0;
 1709              		.loc 1 730 0
 1710 0014 0361     		str	r3, [r0, #16]
 731:main.c        ****     hi2c3.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 1711              		.loc 1 731 0
 1712 0016 4361     		str	r3, [r0, #20]
 732:main.c        ****     hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 1713              		.loc 1 732 0
 1714 0018 8361     		str	r3, [r0, #24]
 733:main.c        ****     hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 1715              		.loc 1 733 0
 1716 001a C361     		str	r3, [r0, #28]
 734:main.c        ****     if (HAL_I2C_Init(&hi2c3) != HAL_OK) {
 1717              		.loc 1 734 0
 1718 001c 0362     		str	r3, [r0, #32]
 735:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 1719              		.loc 1 735 0
 1720 001e FFF7FEFF 		bl	HAL_I2C_Init
 1721              	.LVL120:
 1722 0022 50B9     		cbnz	r0, .L123
 741:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 1723              		.loc 1 741 0
 1724 0024 0021     		movs	r1, #0
 1725 0026 0C48     		ldr	r0, .L126
 1726 0028 FFF7FEFF 		bl	HAL_I2CEx_ConfigAnalogFilter
 1727              	.LVL121:
 1728 002c 50B9     		cbnz	r0, .L124
 747:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 1729              		.loc 1 747 0
 1730 002e 0021     		movs	r1, #0
 1731 0030 0948     		ldr	r0, .L126
 1732 0032 FFF7FEFF 		bl	HAL_I2CEx_ConfigDigitalFilter
 1733              	.LVL122:
 1734 0036 50B9     		cbnz	r0, .L125
 1735 0038 08BD     		pop	{r3, pc}
 1736              	.L123:
 736:main.c        ****     }
 1737              		.loc 1 736 0
 1738 003a 4FF43871 		mov	r1, #736
 1739 003e 0948     		ldr	r0, .L126+12
 1740 0040 FFF7FEFF 		bl	_Error_Handler
 1741              	.LVL123:
 1742              	.L124:
 742:main.c        ****     }
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 62


 1743              		.loc 1 742 0
 1744 0044 40F2E621 		movw	r1, #742
 1745 0048 0648     		ldr	r0, .L126+12
 1746 004a FFF7FEFF 		bl	_Error_Handler
 1747              	.LVL124:
 1748              	.L125:
 748:main.c        ****     }
 1749              		.loc 1 748 0
 1750 004e 4FF43B71 		mov	r1, #748
 1751 0052 0448     		ldr	r0, .L126+12
 1752 0054 FFF7FEFF 		bl	_Error_Handler
 1753              	.LVL125:
 1754              	.L127:
 1755              		.align	2
 1756              	.L126:
 1757 0058 00000000 		.word	hi2c3
 1758 005c 005C0040 		.word	1073765376
 1759 0060 FFEAC000 		.word	12643071
 1760 0064 00000000 		.word	.LC18
 1761              		.cfi_endproc
 1762              	.LFE171:
 1764              		.section	.text.MX_LTDC_Init,"ax",%progbits
 1765              		.align	1
 1766              		.syntax unified
 1767              		.thumb
 1768              		.thumb_func
 1769              		.fpu fpv5-sp-d16
 1771              	MX_LTDC_Init:
 1772              	.LFB172:
 754:main.c        **** 
 1773              		.loc 1 754 0
 1774              		.cfi_startproc
 1775              		@ args = 0, pretend = 0, frame = 56
 1776              		@ frame_needed = 0, uses_anonymous_args = 0
 1777 0000 00B5     		push	{lr}
 1778              	.LCFI23:
 1779              		.cfi_def_cfa_offset 4
 1780              		.cfi_offset 14, -4
 1781 0002 8FB0     		sub	sp, sp, #60
 1782              	.LCFI24:
 1783              		.cfi_def_cfa_offset 64
 758:main.c        ****     hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 1784              		.loc 1 758 0
 1785 0004 2948     		ldr	r0, .L134
 1786 0006 2A4B     		ldr	r3, .L134+4
 1787 0008 0360     		str	r3, [r0]
 759:main.c        ****     hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
 1788              		.loc 1 759 0
 1789 000a 0023     		movs	r3, #0
 1790 000c 4360     		str	r3, [r0, #4]
 760:main.c        ****     hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 1791              		.loc 1 760 0
 1792 000e 8360     		str	r3, [r0, #8]
 761:main.c        ****     hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 1793              		.loc 1 761 0
 1794 0010 C360     		str	r3, [r0, #12]
 762:main.c        ****     hltdc.Init.HorizontalSync = 40;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 63


 1795              		.loc 1 762 0
 1796 0012 0361     		str	r3, [r0, #16]
 763:main.c        ****     hltdc.Init.VerticalSync = 9;
 1797              		.loc 1 763 0
 1798 0014 2822     		movs	r2, #40
 1799 0016 4261     		str	r2, [r0, #20]
 764:main.c        ****     hltdc.Init.AccumulatedHBP = 53;
 1800              		.loc 1 764 0
 1801 0018 0922     		movs	r2, #9
 1802 001a 8261     		str	r2, [r0, #24]
 765:main.c        ****     hltdc.Init.AccumulatedVBP = 11;
 1803              		.loc 1 765 0
 1804 001c 3522     		movs	r2, #53
 1805 001e C261     		str	r2, [r0, #28]
 766:main.c        ****     hltdc.Init.AccumulatedActiveW = 533;
 1806              		.loc 1 766 0
 1807 0020 0B22     		movs	r2, #11
 1808 0022 0262     		str	r2, [r0, #32]
 767:main.c        ****     hltdc.Init.AccumulatedActiveH = 283;
 1809              		.loc 1 767 0
 1810 0024 40F21522 		movw	r2, #533
 1811 0028 4262     		str	r2, [r0, #36]
 768:main.c        ****     hltdc.Init.TotalWidth = 565;
 1812              		.loc 1 768 0
 1813 002a 40F21B12 		movw	r2, #283
 1814 002e 8262     		str	r2, [r0, #40]
 769:main.c        ****     hltdc.Init.TotalHeigh = 285;
 1815              		.loc 1 769 0
 1816 0030 40F23522 		movw	r2, #565
 1817 0034 C262     		str	r2, [r0, #44]
 770:main.c        ****     hltdc.Init.Backcolor.Blue = 0;
 1818              		.loc 1 770 0
 1819 0036 40F21D12 		movw	r2, #285
 1820 003a 0263     		str	r2, [r0, #48]
 771:main.c        ****     hltdc.Init.Backcolor.Green = 0;
 1821              		.loc 1 771 0
 1822 003c 80F83430 		strb	r3, [r0, #52]
 772:main.c        ****     hltdc.Init.Backcolor.Red = 0;
 1823              		.loc 1 772 0
 1824 0040 80F83530 		strb	r3, [r0, #53]
 773:main.c        ****     if (HAL_LTDC_Init(&hltdc) != HAL_OK) {
 1825              		.loc 1 773 0
 1826 0044 80F83630 		strb	r3, [r0, #54]
 774:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 1827              		.loc 1 774 0
 1828 0048 FFF7FEFF 		bl	HAL_LTDC_Init
 1829              	.LVL126:
 1830 004c 20BB     		cbnz	r0, .L132
 778:main.c        ****     pLayerCfg.WindowX1 = 480;
 1831              		.loc 1 778 0
 1832 004e 0022     		movs	r2, #0
 1833 0050 0192     		str	r2, [sp, #4]
 779:main.c        ****     pLayerCfg.WindowY0 = 0;
 1834              		.loc 1 779 0
 1835 0052 4FF4F071 		mov	r1, #480
 1836 0056 0291     		str	r1, [sp, #8]
 780:main.c        ****     pLayerCfg.WindowY1 = 272;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 64


 1837              		.loc 1 780 0
 1838 0058 0392     		str	r2, [sp, #12]
 781:main.c        ****     pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_ARGB8888;
 1839              		.loc 1 781 0
 1840 005a 4FF48873 		mov	r3, #272
 1841 005e 0493     		str	r3, [sp, #16]
 782:main.c        ****     pLayerCfg.Alpha = 255;
 1842              		.loc 1 782 0
 1843 0060 0592     		str	r2, [sp, #20]
 783:main.c        ****     pLayerCfg.Alpha0 = 0;
 1844              		.loc 1 783 0
 1845 0062 FF20     		movs	r0, #255
 1846 0064 0690     		str	r0, [sp, #24]
 784:main.c        ****     pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_PAxCA;
 1847              		.loc 1 784 0
 1848 0066 0792     		str	r2, [sp, #28]
 785:main.c        ****     pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_PAxCA;
 1849              		.loc 1 785 0
 1850 0068 4FF4C060 		mov	r0, #1536
 1851 006c 0890     		str	r0, [sp, #32]
 786:main.c        ****     pLayerCfg.FBStartAdress = 0xC0000000;
 1852              		.loc 1 786 0
 1853 006e 0720     		movs	r0, #7
 1854 0070 0990     		str	r0, [sp, #36]
 787:main.c        ****     pLayerCfg.ImageWidth = 480;
 1855              		.loc 1 787 0
 1856 0072 4FF04040 		mov	r0, #-1073741824
 1857 0076 0A90     		str	r0, [sp, #40]
 788:main.c        ****     pLayerCfg.ImageHeight = 272;
 1858              		.loc 1 788 0
 1859 0078 0B91     		str	r1, [sp, #44]
 789:main.c        ****     pLayerCfg.Backcolor.Blue = 0;
 1860              		.loc 1 789 0
 1861 007a 0C93     		str	r3, [sp, #48]
 790:main.c        ****     pLayerCfg.Backcolor.Green = 0;
 1862              		.loc 1 790 0
 1863 007c 8DF83420 		strb	r2, [sp, #52]
 791:main.c        ****     pLayerCfg.Backcolor.Red = 0;
 1864              		.loc 1 791 0
 1865 0080 8DF83520 		strb	r2, [sp, #53]
 792:main.c        ****     if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK) {
 1866              		.loc 1 792 0
 1867 0084 8DF83620 		strb	r2, [sp, #54]
 793:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 1868              		.loc 1 793 0
 1869 0088 01A9     		add	r1, sp, #4
 1870 008a 0848     		ldr	r0, .L134
 1871 008c FFF7FEFF 		bl	HAL_LTDC_ConfigLayer
 1872              	.LVL127:
 1873 0090 38B9     		cbnz	r0, .L133
 797:main.c        **** 
 1874              		.loc 1 797 0
 1875 0092 0FB0     		add	sp, sp, #60
 1876              	.LCFI25:
 1877              		.cfi_remember_state
 1878              		.cfi_def_cfa_offset 4
 1879              		@ sp needed
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 65


 1880 0094 5DF804FB 		ldr	pc, [sp], #4
 1881              	.L132:
 1882              	.LCFI26:
 1883              		.cfi_restore_state
 775:main.c        ****     }
 1884              		.loc 1 775 0
 1885 0098 40F20731 		movw	r1, #775
 1886 009c 0548     		ldr	r0, .L134+8
 1887 009e FFF7FEFF 		bl	_Error_Handler
 1888              	.LVL128:
 1889              	.L133:
 794:main.c        ****     }
 1890              		.loc 1 794 0
 1891 00a2 40F21A31 		movw	r1, #794
 1892 00a6 0348     		ldr	r0, .L134+8
 1893 00a8 FFF7FEFF 		bl	_Error_Handler
 1894              	.LVL129:
 1895              	.L135:
 1896              		.align	2
 1897              	.L134:
 1898 00ac 00000000 		.word	hltdc
 1899 00b0 00680140 		.word	1073833984
 1900 00b4 00000000 		.word	.LC18
 1901              		.cfi_endproc
 1902              	.LFE172:
 1904              		.section	.text.MX_QUADSPI_Init,"ax",%progbits
 1905              		.align	1
 1906              		.syntax unified
 1907              		.thumb
 1908              		.thumb_func
 1909              		.fpu fpv5-sp-d16
 1911              	MX_QUADSPI_Init:
 1912              	.LFB173:
 800:main.c        **** 
 1913              		.loc 1 800 0
 1914              		.cfi_startproc
 1915              		@ args = 0, pretend = 0, frame = 0
 1916              		@ frame_needed = 0, uses_anonymous_args = 0
 1917 0000 08B5     		push	{r3, lr}
 1918              	.LCFI27:
 1919              		.cfi_def_cfa_offset 8
 1920              		.cfi_offset 3, -8
 1921              		.cfi_offset 14, -4
 803:main.c        ****     hqspi.Init.ClockPrescaler = 255;
 1922              		.loc 1 803 0
 1923 0002 0B48     		ldr	r0, .L140
 1924 0004 0B4B     		ldr	r3, .L140+4
 1925 0006 0360     		str	r3, [r0]
 804:main.c        ****     hqspi.Init.FifoThreshold = 1;
 1926              		.loc 1 804 0
 1927 0008 FF23     		movs	r3, #255
 1928 000a 4360     		str	r3, [r0, #4]
 805:main.c        ****     hqspi.Init.SampleShifting = QSPI_SAMPLE_SHIFTING_NONE;
 1929              		.loc 1 805 0
 1930 000c 0122     		movs	r2, #1
 1931 000e 8260     		str	r2, [r0, #8]
 806:main.c        ****     hqspi.Init.FlashSize = 1;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 66


 1932              		.loc 1 806 0
 1933 0010 0023     		movs	r3, #0
 1934 0012 C360     		str	r3, [r0, #12]
 807:main.c        ****     hqspi.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_1_CYCLE;
 1935              		.loc 1 807 0
 1936 0014 0261     		str	r2, [r0, #16]
 808:main.c        ****     hqspi.Init.ClockMode = QSPI_CLOCK_MODE_0;
 1937              		.loc 1 808 0
 1938 0016 4361     		str	r3, [r0, #20]
 809:main.c        ****     hqspi.Init.FlashID = QSPI_FLASH_ID_1;
 1939              		.loc 1 809 0
 1940 0018 8361     		str	r3, [r0, #24]
 810:main.c        ****     hqspi.Init.DualFlash = QSPI_DUALFLASH_DISABLE;
 1941              		.loc 1 810 0
 1942 001a C361     		str	r3, [r0, #28]
 811:main.c        ****     if (HAL_QSPI_Init(&hqspi) != HAL_OK) {
 1943              		.loc 1 811 0
 1944 001c 0362     		str	r3, [r0, #32]
 812:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 1945              		.loc 1 812 0
 1946 001e FFF7FEFF 		bl	HAL_QSPI_Init
 1947              	.LVL130:
 1948 0022 00B9     		cbnz	r0, .L139
 1949 0024 08BD     		pop	{r3, pc}
 1950              	.L139:
 813:main.c        ****     }
 1951              		.loc 1 813 0
 1952 0026 40F22D31 		movw	r1, #813
 1953 002a 0348     		ldr	r0, .L140+8
 1954 002c FFF7FEFF 		bl	_Error_Handler
 1955              	.LVL131:
 1956              	.L141:
 1957              		.align	2
 1958              	.L140:
 1959 0030 00000000 		.word	hqspi
 1960 0034 001000A0 		.word	-1610608640
 1961 0038 00000000 		.word	.LC18
 1962              		.cfi_endproc
 1963              	.LFE173:
 1965              		.section	.text.MX_RTC_Init,"ax",%progbits
 1966              		.align	1
 1967              		.syntax unified
 1968              		.thumb
 1969              		.thumb_func
 1970              		.fpu fpv5-sp-d16
 1972              	MX_RTC_Init:
 1973              	.LFB174:
 819:main.c        **** 
 1974              		.loc 1 819 0
 1975              		.cfi_startproc
 1976              		@ args = 0, pretend = 0, frame = 72
 1977              		@ frame_needed = 0, uses_anonymous_args = 0
 1978 0000 00B5     		push	{lr}
 1979              	.LCFI28:
 1980              		.cfi_def_cfa_offset 4
 1981              		.cfi_offset 14, -4
 1982 0002 93B0     		sub	sp, sp, #76
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 67


 1983              	.LCFI29:
 1984              		.cfi_def_cfa_offset 80
 835:main.c        ****     hrtc.Init.HourFormat = RTC_HOURFORMAT_24;
 1985              		.loc 1 835 0
 1986 0004 3C48     		ldr	r0, .L156
 1987 0006 3D4B     		ldr	r3, .L156+4
 1988 0008 0360     		str	r3, [r0]
 836:main.c        ****     hrtc.Init.AsynchPrediv = 127;
 1989              		.loc 1 836 0
 1990 000a 0023     		movs	r3, #0
 1991 000c 4360     		str	r3, [r0, #4]
 837:main.c        ****     hrtc.Init.SynchPrediv = 255;
 1992              		.loc 1 837 0
 1993 000e 7F22     		movs	r2, #127
 1994 0010 8260     		str	r2, [r0, #8]
 838:main.c        ****     hrtc.Init.OutPut = RTC_OUTPUT_DISABLE;
 1995              		.loc 1 838 0
 1996 0012 FF22     		movs	r2, #255
 1997 0014 C260     		str	r2, [r0, #12]
 839:main.c        ****     hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
 1998              		.loc 1 839 0
 1999 0016 0361     		str	r3, [r0, #16]
 840:main.c        ****     hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 2000              		.loc 1 840 0
 2001 0018 4361     		str	r3, [r0, #20]
 841:main.c        ****     if (HAL_RTC_Init(&hrtc) != HAL_OK) {
 2002              		.loc 1 841 0
 2003 001a 8361     		str	r3, [r0, #24]
 842:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 2004              		.loc 1 842 0
 2005 001c FFF7FEFF 		bl	HAL_RTC_Init
 2006              	.LVL132:
 2007 0020 0028     		cmp	r0, #0
 2008 0022 4BD1     		bne	.L150
 848:main.c        ****     sTime.Minutes = 0x0;
 2009              		.loc 1 848 0
 2010 0024 0023     		movs	r3, #0
 2011 0026 8DF83030 		strb	r3, [sp, #48]
 849:main.c        ****     sTime.Seconds = 0x0;
 2012              		.loc 1 849 0
 2013 002a 8DF83130 		strb	r3, [sp, #49]
 850:main.c        ****     sTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
 2014              		.loc 1 850 0
 2015 002e 8DF83230 		strb	r3, [sp, #50]
 851:main.c        ****     sTime.StoreOperation = RTC_STOREOPERATION_RESET;
 2016              		.loc 1 851 0
 2017 0032 1093     		str	r3, [sp, #64]
 852:main.c        ****     if (HAL_RTC_SetTime(&hrtc, &sTime, RTC_FORMAT_BCD) != HAL_OK) {
 2018              		.loc 1 852 0
 2019 0034 1193     		str	r3, [sp, #68]
 853:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 2020              		.loc 1 853 0
 2021 0036 0122     		movs	r2, #1
 2022 0038 0CA9     		add	r1, sp, #48
 2023 003a 2F48     		ldr	r0, .L156
 2024 003c FFF7FEFF 		bl	HAL_RTC_SetTime
 2025              	.LVL133:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 68


 2026 0040 0028     		cmp	r0, #0
 2027 0042 40D1     		bne	.L151
 857:main.c        ****     sDate.Month = RTC_MONTH_JANUARY;
 2028              		.loc 1 857 0
 2029 0044 0122     		movs	r2, #1
 2030 0046 8DF82C20 		strb	r2, [sp, #44]
 858:main.c        ****     sDate.Date = 0x1;
 2031              		.loc 1 858 0
 2032 004a 8DF82D20 		strb	r2, [sp, #45]
 859:main.c        ****     sDate.Year = 0x0;
 2033              		.loc 1 859 0
 2034 004e 8DF82E20 		strb	r2, [sp, #46]
 860:main.c        **** 
 2035              		.loc 1 860 0
 2036 0052 0023     		movs	r3, #0
 2037 0054 8DF82F30 		strb	r3, [sp, #47]
 862:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 2038              		.loc 1 862 0
 2039 0058 0BA9     		add	r1, sp, #44
 2040 005a 2748     		ldr	r0, .L156
 2041 005c FFF7FEFF 		bl	HAL_RTC_SetDate
 2042              	.LVL134:
 2043 0060 0028     		cmp	r0, #0
 2044 0062 35D1     		bne	.L152
 868:main.c        ****     sAlarm.AlarmTime.Minutes = 0x0;
 2045              		.loc 1 868 0
 2046 0064 0023     		movs	r3, #0
 2047 0066 8DF80030 		strb	r3, [sp]
 869:main.c        ****     sAlarm.AlarmTime.Seconds = 0x0;
 2048              		.loc 1 869 0
 2049 006a 8DF80130 		strb	r3, [sp, #1]
 870:main.c        ****     sAlarm.AlarmTime.SubSeconds = 0x0;
 2050              		.loc 1 870 0
 2051 006e 8DF80230 		strb	r3, [sp, #2]
 871:main.c        ****     sAlarm.AlarmTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
 2052              		.loc 1 871 0
 2053 0072 0193     		str	r3, [sp, #4]
 872:main.c        ****     sAlarm.AlarmTime.StoreOperation = RTC_STOREOPERATION_RESET;
 2054              		.loc 1 872 0
 2055 0074 0493     		str	r3, [sp, #16]
 873:main.c        ****     sAlarm.AlarmMask = RTC_ALARMMASK_NONE;
 2056              		.loc 1 873 0
 2057 0076 0593     		str	r3, [sp, #20]
 874:main.c        ****     sAlarm.AlarmSubSecondMask = RTC_ALARMSUBSECONDMASK_ALL;
 2058              		.loc 1 874 0
 2059 0078 0693     		str	r3, [sp, #24]
 875:main.c        ****     sAlarm.AlarmDateWeekDaySel = RTC_ALARMDATEWEEKDAYSEL_DATE;
 2060              		.loc 1 875 0
 2061 007a 0793     		str	r3, [sp, #28]
 876:main.c        ****     sAlarm.AlarmDateWeekDay = 0x1;
 2062              		.loc 1 876 0
 2063 007c 0893     		str	r3, [sp, #32]
 877:main.c        ****     sAlarm.Alarm = RTC_ALARM_A;
 2064              		.loc 1 877 0
 2065 007e 0122     		movs	r2, #1
 2066 0080 8DF82420 		strb	r2, [sp, #36]
 878:main.c        ****     if (HAL_RTC_SetAlarm(&hrtc, &sAlarm, RTC_FORMAT_BCD) != HAL_OK) {
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 69


 2067              		.loc 1 878 0
 2068 0084 4FF48073 		mov	r3, #256
 2069 0088 0A93     		str	r3, [sp, #40]
 879:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 2070              		.loc 1 879 0
 2071 008a 6946     		mov	r1, sp
 2072 008c 1A48     		ldr	r0, .L156
 2073 008e FFF7FEFF 		bl	HAL_RTC_SetAlarm
 2074              	.LVL135:
 2075 0092 10BB     		cbnz	r0, .L153
 885:main.c        ****     sAlarm.Alarm = RTC_ALARM_B;
 2076              		.loc 1 885 0
 2077 0094 0122     		movs	r2, #1
 2078 0096 8DF82420 		strb	r2, [sp, #36]
 886:main.c        ****     if (HAL_RTC_SetAlarm(&hrtc, &sAlarm, RTC_FORMAT_BCD) != HAL_OK) {
 2079              		.loc 1 886 0
 2080 009a 4FF40073 		mov	r3, #512
 2081 009e 0A93     		str	r3, [sp, #40]
 887:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 2082              		.loc 1 887 0
 2083 00a0 6946     		mov	r1, sp
 2084 00a2 1548     		ldr	r0, .L156
 2085 00a4 FFF7FEFF 		bl	HAL_RTC_SetAlarm
 2086              	.LVL136:
 2087 00a8 E0B9     		cbnz	r0, .L154
 893:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 2088              		.loc 1 893 0
 2089 00aa 0222     		movs	r2, #2
 2090 00ac 0021     		movs	r1, #0
 2091 00ae 1248     		ldr	r0, .L156
 2092 00b0 FFF7FEFF 		bl	HAL_RTCEx_SetTimeStamp
 2093              	.LVL137:
 2094 00b4 D8B9     		cbnz	r0, .L155
 897:main.c        **** 
 2095              		.loc 1 897 0
 2096 00b6 13B0     		add	sp, sp, #76
 2097              	.LCFI30:
 2098              		.cfi_remember_state
 2099              		.cfi_def_cfa_offset 4
 2100              		@ sp needed
 2101 00b8 5DF804FB 		ldr	pc, [sp], #4
 2102              	.L150:
 2103              	.LCFI31:
 2104              		.cfi_restore_state
 843:main.c        ****     }
 2105              		.loc 1 843 0
 2106 00bc 40F24B31 		movw	r1, #843
 2107 00c0 0F48     		ldr	r0, .L156+8
 2108 00c2 FFF7FEFF 		bl	_Error_Handler
 2109              	.LVL138:
 2110              	.L151:
 854:main.c        ****     }
 2111              		.loc 1 854 0
 2112 00c6 40F25631 		movw	r1, #854
 2113 00ca 0D48     		ldr	r0, .L156+8
 2114 00cc FFF7FEFF 		bl	_Error_Handler
 2115              	.LVL139:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 70


 2116              	.L152:
 863:main.c        ****     }
 2117              		.loc 1 863 0
 2118 00d0 40F25F31 		movw	r1, #863
 2119 00d4 0A48     		ldr	r0, .L156+8
 2120 00d6 FFF7FEFF 		bl	_Error_Handler
 2121              	.LVL140:
 2122              	.L153:
 880:main.c        ****     }
 2123              		.loc 1 880 0
 2124 00da 4FF45C71 		mov	r1, #880
 2125 00de 0848     		ldr	r0, .L156+8
 2126 00e0 FFF7FEFF 		bl	_Error_Handler
 2127              	.LVL141:
 2128              	.L154:
 888:main.c        ****     }
 2129              		.loc 1 888 0
 2130 00e4 4FF45E71 		mov	r1, #888
 2131 00e8 0548     		ldr	r0, .L156+8
 2132 00ea FFF7FEFF 		bl	_Error_Handler
 2133              	.LVL142:
 2134              	.L155:
 894:main.c        ****     }
 2135              		.loc 1 894 0
 2136 00ee 40F27E31 		movw	r1, #894
 2137 00f2 0348     		ldr	r0, .L156+8
 2138 00f4 FFF7FEFF 		bl	_Error_Handler
 2139              	.LVL143:
 2140              	.L157:
 2141              		.align	2
 2142              	.L156:
 2143 00f8 00000000 		.word	hrtc
 2144 00fc 00280040 		.word	1073752064
 2145 0100 00000000 		.word	.LC18
 2146              		.cfi_endproc
 2147              	.LFE174:
 2149              		.section	.text.MX_SAI2_Init,"ax",%progbits
 2150              		.align	1
 2151              		.syntax unified
 2152              		.thumb
 2153              		.thumb_func
 2154              		.fpu fpv5-sp-d16
 2156              	MX_SAI2_Init:
 2157              	.LFB175:
 900:main.c        **** 
 2158              		.loc 1 900 0
 2159              		.cfi_startproc
 2160              		@ args = 0, pretend = 0, frame = 0
 2161              		@ frame_needed = 0, uses_anonymous_args = 0
 2162 0000 08B5     		push	{r3, lr}
 2163              	.LCFI32:
 2164              		.cfi_def_cfa_offset 8
 2165              		.cfi_offset 3, -8
 2166              		.cfi_offset 14, -4
 902:main.c        ****     hsai_BlockA2.Init.Protocol = SAI_FREE_PROTOCOL;
 2167              		.loc 1 902 0
 2168 0002 2648     		ldr	r0, .L164
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 71


 2169 0004 264B     		ldr	r3, .L164+4
 2170 0006 0360     		str	r3, [r0]
 903:main.c        ****     hsai_BlockA2.Init.AudioMode = SAI_MODEMASTER_TX;
 2171              		.loc 1 903 0
 2172 0008 0023     		movs	r3, #0
 2173 000a 0363     		str	r3, [r0, #48]
 904:main.c        ****     hsai_BlockA2.Init.DataSize = SAI_DATASIZE_24;
 2174              		.loc 1 904 0
 2175 000c 4360     		str	r3, [r0, #4]
 905:main.c        ****     hsai_BlockA2.Init.FirstBit = SAI_FIRSTBIT_MSB;
 2176              		.loc 1 905 0
 2177 000e C022     		movs	r2, #192
 2178 0010 4263     		str	r2, [r0, #52]
 906:main.c        ****     hsai_BlockA2.Init.ClockStrobing = SAI_CLOCKSTROBING_FALLINGEDGE;
 2179              		.loc 1 906 0
 2180 0012 8363     		str	r3, [r0, #56]
 907:main.c        ****     hsai_BlockA2.Init.Synchro = SAI_ASYNCHRONOUS;
 2181              		.loc 1 907 0
 2182 0014 C363     		str	r3, [r0, #60]
 908:main.c        ****     hsai_BlockA2.Init.OutputDrive = SAI_OUTPUTDRIVE_DISABLE;
 2183              		.loc 1 908 0
 2184 0016 8360     		str	r3, [r0, #8]
 909:main.c        ****     hsai_BlockA2.Init.NoDivider = SAI_MASTERDIVIDER_ENABLE;
 2185              		.loc 1 909 0
 2186 0018 0361     		str	r3, [r0, #16]
 910:main.c        ****     hsai_BlockA2.Init.FIFOThreshold = SAI_FIFOTHRESHOLD_EMPTY;
 2187              		.loc 1 910 0
 2188 001a 4361     		str	r3, [r0, #20]
 911:main.c        ****     hsai_BlockA2.Init.AudioFrequency = SAI_AUDIO_FREQUENCY_192K;
 2189              		.loc 1 911 0
 2190 001c 8361     		str	r3, [r0, #24]
 912:main.c        ****     hsai_BlockA2.Init.SynchroExt = SAI_SYNCEXT_DISABLE;
 2191              		.loc 1 912 0
 2192 001e 214A     		ldr	r2, .L164+8
 2193 0020 C261     		str	r2, [r0, #28]
 913:main.c        ****     hsai_BlockA2.Init.MonoStereoMode = SAI_STEREOMODE;
 2194              		.loc 1 913 0
 2195 0022 C360     		str	r3, [r0, #12]
 914:main.c        ****     hsai_BlockA2.Init.CompandingMode = SAI_NOCOMPANDING;
 2196              		.loc 1 914 0
 2197 0024 4362     		str	r3, [r0, #36]
 915:main.c        ****     hsai_BlockA2.Init.TriState = SAI_OUTPUT_NOTRELEASED;
 2198              		.loc 1 915 0
 2199 0026 8362     		str	r3, [r0, #40]
 916:main.c        ****     hsai_BlockA2.FrameInit.FrameLength = 8;
 2200              		.loc 1 916 0
 2201 0028 C362     		str	r3, [r0, #44]
 917:main.c        ****     hsai_BlockA2.FrameInit.ActiveFrameLength = 1;
 2202              		.loc 1 917 0
 2203 002a 0822     		movs	r2, #8
 2204 002c 0264     		str	r2, [r0, #64]
 918:main.c        ****     hsai_BlockA2.FrameInit.FSDefinition = SAI_FS_STARTFRAME;
 2205              		.loc 1 918 0
 2206 002e 0122     		movs	r2, #1
 2207 0030 4264     		str	r2, [r0, #68]
 919:main.c        ****     hsai_BlockA2.FrameInit.FSPolarity = SAI_FS_ACTIVE_LOW;
 2208              		.loc 1 919 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 72


 2209 0032 8364     		str	r3, [r0, #72]
 920:main.c        ****     hsai_BlockA2.FrameInit.FSOffset = SAI_FS_FIRSTBIT;
 2210              		.loc 1 920 0
 2211 0034 C364     		str	r3, [r0, #76]
 921:main.c        ****     hsai_BlockA2.SlotInit.FirstBitOffset = 0;
 2212              		.loc 1 921 0
 2213 0036 0365     		str	r3, [r0, #80]
 922:main.c        ****     hsai_BlockA2.SlotInit.SlotSize = SAI_SLOTSIZE_DATASIZE;
 2214              		.loc 1 922 0
 2215 0038 4365     		str	r3, [r0, #84]
 923:main.c        ****     hsai_BlockA2.SlotInit.SlotNumber = 1;
 2216              		.loc 1 923 0
 2217 003a 8365     		str	r3, [r0, #88]
 924:main.c        ****     hsai_BlockA2.SlotInit.SlotActive = 0x00000000;
 2218              		.loc 1 924 0
 2219 003c C265     		str	r2, [r0, #92]
 925:main.c        ****     if (HAL_SAI_Init(&hsai_BlockA2) != HAL_OK) {
 2220              		.loc 1 925 0
 2221 003e 0366     		str	r3, [r0, #96]
 926:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 2222              		.loc 1 926 0
 2223 0040 FFF7FEFF 		bl	HAL_SAI_Init
 2224              	.LVL144:
 2225 0044 00BB     		cbnz	r0, .L162
 930:main.c        ****     hsai_BlockB2.Init.Protocol = SAI_FREE_PROTOCOL;
 2226              		.loc 1 930 0
 2227 0046 1848     		ldr	r0, .L164+12
 2228 0048 184B     		ldr	r3, .L164+16
 2229 004a 0360     		str	r3, [r0]
 931:main.c        ****     hsai_BlockB2.Init.AudioMode = SAI_MODESLAVE_RX;
 2230              		.loc 1 931 0
 2231 004c 0023     		movs	r3, #0
 2232 004e 0363     		str	r3, [r0, #48]
 932:main.c        ****     hsai_BlockB2.Init.DataSize = SAI_DATASIZE_24;
 2233              		.loc 1 932 0
 2234 0050 0322     		movs	r2, #3
 2235 0052 4260     		str	r2, [r0, #4]
 933:main.c        ****     hsai_BlockB2.Init.FirstBit = SAI_FIRSTBIT_MSB;
 2236              		.loc 1 933 0
 2237 0054 C022     		movs	r2, #192
 2238 0056 4263     		str	r2, [r0, #52]
 934:main.c        ****     hsai_BlockB2.Init.ClockStrobing = SAI_CLOCKSTROBING_FALLINGEDGE;
 2239              		.loc 1 934 0
 2240 0058 8363     		str	r3, [r0, #56]
 935:main.c        ****     hsai_BlockB2.Init.Synchro = SAI_SYNCHRONOUS;
 2241              		.loc 1 935 0
 2242 005a C363     		str	r3, [r0, #60]
 936:main.c        ****     hsai_BlockB2.Init.OutputDrive = SAI_OUTPUTDRIVE_DISABLE;
 2243              		.loc 1 936 0
 2244 005c 0122     		movs	r2, #1
 2245 005e 8260     		str	r2, [r0, #8]
 937:main.c        ****     hsai_BlockB2.Init.FIFOThreshold = SAI_FIFOTHRESHOLD_EMPTY;
 2246              		.loc 1 937 0
 2247 0060 0361     		str	r3, [r0, #16]
 938:main.c        ****     hsai_BlockB2.Init.SynchroExt = SAI_SYNCEXT_DISABLE;
 2248              		.loc 1 938 0
 2249 0062 8361     		str	r3, [r0, #24]
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 73


 939:main.c        ****     hsai_BlockB2.Init.MonoStereoMode = SAI_STEREOMODE;
 2250              		.loc 1 939 0
 2251 0064 C360     		str	r3, [r0, #12]
 940:main.c        ****     hsai_BlockB2.Init.CompandingMode = SAI_NOCOMPANDING;
 2252              		.loc 1 940 0
 2253 0066 4362     		str	r3, [r0, #36]
 941:main.c        ****     hsai_BlockB2.Init.TriState = SAI_OUTPUT_NOTRELEASED;
 2254              		.loc 1 941 0
 2255 0068 8362     		str	r3, [r0, #40]
 942:main.c        ****     hsai_BlockB2.FrameInit.FrameLength = 8;
 2256              		.loc 1 942 0
 2257 006a C362     		str	r3, [r0, #44]
 943:main.c        ****     hsai_BlockB2.FrameInit.ActiveFrameLength = 1;
 2258              		.loc 1 943 0
 2259 006c 0821     		movs	r1, #8
 2260 006e 0164     		str	r1, [r0, #64]
 944:main.c        ****     hsai_BlockB2.FrameInit.FSDefinition = SAI_FS_STARTFRAME;
 2261              		.loc 1 944 0
 2262 0070 4264     		str	r2, [r0, #68]
 945:main.c        ****     hsai_BlockB2.FrameInit.FSPolarity = SAI_FS_ACTIVE_LOW;
 2263              		.loc 1 945 0
 2264 0072 8364     		str	r3, [r0, #72]
 946:main.c        ****     hsai_BlockB2.FrameInit.FSOffset = SAI_FS_FIRSTBIT;
 2265              		.loc 1 946 0
 2266 0074 C364     		str	r3, [r0, #76]
 947:main.c        ****     hsai_BlockB2.SlotInit.FirstBitOffset = 0;
 2267              		.loc 1 947 0
 2268 0076 0365     		str	r3, [r0, #80]
 948:main.c        ****     hsai_BlockB2.SlotInit.SlotSize = SAI_SLOTSIZE_DATASIZE;
 2269              		.loc 1 948 0
 2270 0078 4365     		str	r3, [r0, #84]
 949:main.c        ****     hsai_BlockB2.SlotInit.SlotNumber = 1;
 2271              		.loc 1 949 0
 2272 007a 8365     		str	r3, [r0, #88]
 950:main.c        ****     hsai_BlockB2.SlotInit.SlotActive = 0x00000000;
 2273              		.loc 1 950 0
 2274 007c C265     		str	r2, [r0, #92]
 951:main.c        ****     if (HAL_SAI_Init(&hsai_BlockB2) != HAL_OK) {
 2275              		.loc 1 951 0
 2276 007e 0366     		str	r3, [r0, #96]
 952:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 2277              		.loc 1 952 0
 2278 0080 FFF7FEFF 		bl	HAL_SAI_Init
 2279              	.LVL145:
 2280 0084 28B9     		cbnz	r0, .L163
 2281 0086 08BD     		pop	{r3, pc}
 2282              	.L162:
 927:main.c        ****     }
 2283              		.loc 1 927 0
 2284 0088 40F29F31 		movw	r1, #927
 2285 008c 0848     		ldr	r0, .L164+20
 2286 008e FFF7FEFF 		bl	_Error_Handler
 2287              	.LVL146:
 2288              	.L163:
 953:main.c        ****     }
 2289              		.loc 1 953 0
 2290 0092 40F2B931 		movw	r1, #953
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 74


 2291 0096 0648     		ldr	r0, .L164+20
 2292 0098 FFF7FEFF 		bl	_Error_Handler
 2293              	.LVL147:
 2294              	.L165:
 2295              		.align	2
 2296              	.L164:
 2297 009c 00000000 		.word	hsai_BlockA2
 2298 00a0 045C0140 		.word	1073830916
 2299 00a4 00EE0200 		.word	192000
 2300 00a8 00000000 		.word	hsai_BlockB2
 2301 00ac 245C0140 		.word	1073830948
 2302 00b0 00000000 		.word	.LC18
 2303              		.cfi_endproc
 2304              	.LFE175:
 2306              		.section	.text.MX_SPDIFRX_Init,"ax",%progbits
 2307              		.align	1
 2308              		.syntax unified
 2309              		.thumb
 2310              		.thumb_func
 2311              		.fpu fpv5-sp-d16
 2313              	MX_SPDIFRX_Init:
 2314              	.LFB177:
 972:main.c        **** 
 2315              		.loc 1 972 0
 2316              		.cfi_startproc
 2317              		@ args = 0, pretend = 0, frame = 0
 2318              		@ frame_needed = 0, uses_anonymous_args = 0
 2319 0000 08B5     		push	{r3, lr}
 2320              	.LCFI33:
 2321              		.cfi_def_cfa_offset 8
 2322              		.cfi_offset 3, -8
 2323              		.cfi_offset 14, -4
 974:main.c        ****     hspdif.Init.InputSelection = SPDIFRX_INPUT_IN0;
 2324              		.loc 1 974 0
 2325 0002 0C48     		ldr	r0, .L170
 2326 0004 4FF04023 		mov	r3, #1073758208
 2327 0008 0360     		str	r3, [r0]
 975:main.c        ****     hspdif.Init.Retries = SPDIFRX_MAXRETRIES_NONE;
 2328              		.loc 1 975 0
 2329 000a 0023     		movs	r3, #0
 2330 000c 4360     		str	r3, [r0, #4]
 976:main.c        ****     hspdif.Init.WaitForActivity = SPDIFRX_WAITFORACTIVITY_OFF;
 2331              		.loc 1 976 0
 2332 000e 8360     		str	r3, [r0, #8]
 977:main.c        ****     hspdif.Init.ChannelSelection = SPDIFRX_CHANNEL_A;
 2333              		.loc 1 977 0
 2334 0010 C360     		str	r3, [r0, #12]
 978:main.c        ****     hspdif.Init.DataFormat = SPDIFRX_DATAFORMAT_LSB;
 2335              		.loc 1 978 0
 2336 0012 0361     		str	r3, [r0, #16]
 979:main.c        ****     hspdif.Init.StereoMode = SPDIFRX_STEREOMODE_DISABLE;
 2337              		.loc 1 979 0
 2338 0014 4361     		str	r3, [r0, #20]
 980:main.c        ****     hspdif.Init.PreambleTypeMask = SPDIFRX_PREAMBLETYPEMASK_OFF;
 2339              		.loc 1 980 0
 2340 0016 8361     		str	r3, [r0, #24]
 981:main.c        ****     hspdif.Init.ChannelStatusMask = SPDIFRX_CHANNELSTATUS_OFF;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 75


 2341              		.loc 1 981 0
 2342 0018 C361     		str	r3, [r0, #28]
 982:main.c        ****     hspdif.Init.ValidityBitMask = SPDIFRX_VALIDITYMASK_OFF;
 2343              		.loc 1 982 0
 2344 001a 0362     		str	r3, [r0, #32]
 983:main.c        ****     hspdif.Init.ParityErrorMask = SPDIFRX_PARITYERRORMASK_OFF;
 2345              		.loc 1 983 0
 2346 001c 4362     		str	r3, [r0, #36]
 984:main.c        ****     if (HAL_SPDIFRX_Init(&hspdif) != HAL_OK) {
 2347              		.loc 1 984 0
 2348 001e 8362     		str	r3, [r0, #40]
 985:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 2349              		.loc 1 985 0
 2350 0020 FFF7FEFF 		bl	HAL_SPDIFRX_Init
 2351              	.LVL148:
 2352 0024 00B9     		cbnz	r0, .L169
 2353 0026 08BD     		pop	{r3, pc}
 2354              	.L169:
 986:main.c        ****     }
 2355              		.loc 1 986 0
 2356 0028 40F2DA31 		movw	r1, #986
 2357 002c 0248     		ldr	r0, .L170+4
 2358 002e FFF7FEFF 		bl	_Error_Handler
 2359              	.LVL149:
 2360              	.L171:
 2361 0032 00BF     		.align	2
 2362              	.L170:
 2363 0034 00000000 		.word	hspdif
 2364 0038 00000000 		.word	.LC18
 2365              		.cfi_endproc
 2366              	.LFE177:
 2368              		.section	.text.MX_SPI2_Init,"ax",%progbits
 2369              		.align	1
 2370              		.syntax unified
 2371              		.thumb
 2372              		.thumb_func
 2373              		.fpu fpv5-sp-d16
 2375              	MX_SPI2_Init:
 2376              	.LFB178:
 992:main.c        **** 
 2377              		.loc 1 992 0
 2378              		.cfi_startproc
 2379              		@ args = 0, pretend = 0, frame = 0
 2380              		@ frame_needed = 0, uses_anonymous_args = 0
 2381 0000 08B5     		push	{r3, lr}
 2382              	.LCFI34:
 2383              		.cfi_def_cfa_offset 8
 2384              		.cfi_offset 3, -8
 2385              		.cfi_offset 14, -4
 995:main.c        ****     hspi2.Init.Mode = SPI_MODE_MASTER;
 2386              		.loc 1 995 0
 2387 0002 1148     		ldr	r0, .L176
 2388 0004 114B     		ldr	r3, .L176+4
 2389 0006 0360     		str	r3, [r0]
 996:main.c        ****     hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 2390              		.loc 1 996 0
 2391 0008 4FF48273 		mov	r3, #260
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 76


 2392 000c 4360     		str	r3, [r0, #4]
 997:main.c        ****     hspi2.Init.DataSize = SPI_DATASIZE_4BIT;
 2393              		.loc 1 997 0
 2394 000e 0023     		movs	r3, #0
 2395 0010 8360     		str	r3, [r0, #8]
 998:main.c        ****     hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 2396              		.loc 1 998 0
 2397 0012 4FF44072 		mov	r2, #768
 2398 0016 C260     		str	r2, [r0, #12]
 999:main.c        ****     hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 2399              		.loc 1 999 0
 2400 0018 0361     		str	r3, [r0, #16]
1000:main.c        ****     hspi2.Init.NSS = SPI_NSS_SOFT;
 2401              		.loc 1 1000 0
 2402 001a 4361     		str	r3, [r0, #20]
1001:main.c        ****     hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 2403              		.loc 1 1001 0
 2404 001c 4FF40072 		mov	r2, #512
 2405 0020 8261     		str	r2, [r0, #24]
1002:main.c        ****     hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 2406              		.loc 1 1002 0
 2407 0022 C361     		str	r3, [r0, #28]
1003:main.c        ****     hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 2408              		.loc 1 1003 0
 2409 0024 0362     		str	r3, [r0, #32]
1004:main.c        ****     hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 2410              		.loc 1 1004 0
 2411 0026 4362     		str	r3, [r0, #36]
1005:main.c        ****     hspi2.Init.CRCPolynomial = 7;
 2412              		.loc 1 1005 0
 2413 0028 8362     		str	r3, [r0, #40]
1006:main.c        ****     hspi2.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 2414              		.loc 1 1006 0
 2415 002a 0722     		movs	r2, #7
 2416 002c C262     		str	r2, [r0, #44]
1007:main.c        ****     hspi2.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 2417              		.loc 1 1007 0
 2418 002e 0363     		str	r3, [r0, #48]
1008:main.c        ****     if (HAL_SPI_Init(&hspi2) != HAL_OK) {
 2419              		.loc 1 1008 0
 2420 0030 0823     		movs	r3, #8
 2421 0032 4363     		str	r3, [r0, #52]
1009:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 2422              		.loc 1 1009 0
 2423 0034 FFF7FEFF 		bl	HAL_SPI_Init
 2424              	.LVL150:
 2425 0038 00B9     		cbnz	r0, .L175
 2426 003a 08BD     		pop	{r3, pc}
 2427              	.L175:
1010:main.c        ****     }
 2428              		.loc 1 1010 0
 2429 003c 40F2F231 		movw	r1, #1010
 2430 0040 0348     		ldr	r0, .L176+8
 2431 0042 FFF7FEFF 		bl	_Error_Handler
 2432              	.LVL151:
 2433              	.L177:
 2434 0046 00BF     		.align	2
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 77


 2435              	.L176:
 2436 0048 00000000 		.word	hspi2
 2437 004c 00380040 		.word	1073756160
 2438 0050 00000000 		.word	.LC18
 2439              		.cfi_endproc
 2440              	.LFE178:
 2442              		.section	.text.MX_TIM1_Init,"ax",%progbits
 2443              		.align	1
 2444              		.syntax unified
 2445              		.thumb
 2446              		.thumb_func
 2447              		.fpu fpv5-sp-d16
 2449              	MX_TIM1_Init:
 2450              	.LFB179:
1016:main.c        **** 
 2451              		.loc 1 1016 0
 2452              		.cfi_startproc
 2453              		@ args = 0, pretend = 0, frame = 104
 2454              		@ frame_needed = 0, uses_anonymous_args = 0
 2455 0000 00B5     		push	{lr}
 2456              	.LCFI35:
 2457              		.cfi_def_cfa_offset 4
 2458              		.cfi_offset 14, -4
 2459 0002 9BB0     		sub	sp, sp, #108
 2460              	.LCFI36:
 2461              		.cfi_def_cfa_offset 112
1023:main.c        ****     htim1.Init.Prescaler = 0;
 2462              		.loc 1 1023 0
 2463 0004 3748     		ldr	r0, .L192
 2464 0006 384B     		ldr	r3, .L192+4
 2465 0008 0360     		str	r3, [r0]
1024:main.c        ****     htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 2466              		.loc 1 1024 0
 2467 000a 0023     		movs	r3, #0
 2468 000c 4360     		str	r3, [r0, #4]
1025:main.c        ****     htim1.Init.Period = 0;
 2469              		.loc 1 1025 0
 2470 000e 8360     		str	r3, [r0, #8]
1026:main.c        ****     htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2471              		.loc 1 1026 0
 2472 0010 C360     		str	r3, [r0, #12]
1027:main.c        ****     htim1.Init.RepetitionCounter = 0;
 2473              		.loc 1 1027 0
 2474 0012 0361     		str	r3, [r0, #16]
1028:main.c        ****     htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2475              		.loc 1 1028 0
 2476 0014 4361     		str	r3, [r0, #20]
1029:main.c        ****     if (HAL_TIM_Base_Init(&htim1) != HAL_OK) {
 2477              		.loc 1 1029 0
 2478 0016 8361     		str	r3, [r0, #24]
1030:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 2479              		.loc 1 1030 0
 2480 0018 FFF7FEFF 		bl	HAL_TIM_Base_Init
 2481              	.LVL152:
 2482 001c 0028     		cmp	r0, #0
 2483 001e 42D1     		bne	.L186
1034:main.c        ****     if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK) {
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 78


 2484              		.loc 1 1034 0
 2485 0020 1AA9     		add	r1, sp, #104
 2486 0022 4FF48053 		mov	r3, #4096
 2487 0026 41F8103D 		str	r3, [r1, #-16]!
1035:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 2488              		.loc 1 1035 0
 2489 002a 2E48     		ldr	r0, .L192
 2490 002c FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 2491              	.LVL153:
 2492 0030 0028     		cmp	r0, #0
 2493 0032 3DD1     		bne	.L187
1039:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 2494              		.loc 1 1039 0
 2495 0034 2B48     		ldr	r0, .L192
 2496 0036 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 2497              	.LVL154:
 2498 003a 0028     		cmp	r0, #0
 2499 003c 3DD1     		bne	.L188
1043:main.c        ****     sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 2500              		.loc 1 1043 0
 2501 003e 0023     		movs	r3, #0
 2502 0040 1393     		str	r3, [sp, #76]
1044:main.c        ****     sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 2503              		.loc 1 1044 0
 2504 0042 1493     		str	r3, [sp, #80]
1045:main.c        ****     if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK) {
 2505              		.loc 1 1045 0
 2506 0044 1593     		str	r3, [sp, #84]
1046:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 2507              		.loc 1 1046 0
 2508 0046 13A9     		add	r1, sp, #76
 2509 0048 2648     		ldr	r0, .L192
 2510 004a FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 2511              	.LVL155:
 2512 004e 0028     		cmp	r0, #0
 2513 0050 38D1     		bne	.L189
1050:main.c        ****     sConfigOC.Pulse = 0;
 2514              		.loc 1 1050 0
 2515 0052 6023     		movs	r3, #96
 2516 0054 0C93     		str	r3, [sp, #48]
1051:main.c        ****     sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 2517              		.loc 1 1051 0
 2518 0056 0022     		movs	r2, #0
 2519 0058 0D92     		str	r2, [sp, #52]
1052:main.c        ****     sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 2520              		.loc 1 1052 0
 2521 005a 0E92     		str	r2, [sp, #56]
1053:main.c        ****     sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 2522              		.loc 1 1053 0
 2523 005c 0F92     		str	r2, [sp, #60]
1054:main.c        ****     sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 2524              		.loc 1 1054 0
 2525 005e 1092     		str	r2, [sp, #64]
1055:main.c        ****     sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 2526              		.loc 1 1055 0
 2527 0060 1192     		str	r2, [sp, #68]
1056:main.c        ****     if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK) {
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 79


 2528              		.loc 1 1056 0
 2529 0062 1292     		str	r2, [sp, #72]
1057:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 2530              		.loc 1 1057 0
 2531 0064 0CA9     		add	r1, sp, #48
 2532 0066 1F48     		ldr	r0, .L192
 2533 0068 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 2534              	.LVL156:
 2535 006c 0028     		cmp	r0, #0
 2536 006e 2ED1     		bne	.L190
1061:main.c        ****     sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 2537              		.loc 1 1061 0
 2538 0070 0023     		movs	r3, #0
 2539 0072 0193     		str	r3, [sp, #4]
1062:main.c        ****     sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 2540              		.loc 1 1062 0
 2541 0074 0293     		str	r3, [sp, #8]
1063:main.c        ****     sBreakDeadTimeConfig.DeadTime = 0;
 2542              		.loc 1 1063 0
 2543 0076 0393     		str	r3, [sp, #12]
1064:main.c        ****     sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 2544              		.loc 1 1064 0
 2545 0078 0493     		str	r3, [sp, #16]
1065:main.c        ****     sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 2546              		.loc 1 1065 0
 2547 007a 0593     		str	r3, [sp, #20]
1066:main.c        ****     sBreakDeadTimeConfig.BreakFilter = 0;
 2548              		.loc 1 1066 0
 2549 007c 4FF40052 		mov	r2, #8192
 2550 0080 0692     		str	r2, [sp, #24]
1067:main.c        ****     sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 2551              		.loc 1 1067 0
 2552 0082 0793     		str	r3, [sp, #28]
1068:main.c        ****     sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 2553              		.loc 1 1068 0
 2554 0084 0893     		str	r3, [sp, #32]
1069:main.c        ****     sBreakDeadTimeConfig.Break2Filter = 0;
 2555              		.loc 1 1069 0
 2556 0086 4FF00072 		mov	r2, #33554432
 2557 008a 0992     		str	r2, [sp, #36]
1070:main.c        ****     sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 2558              		.loc 1 1070 0
 2559 008c 0A93     		str	r3, [sp, #40]
1071:main.c        ****     if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK) {
 2560              		.loc 1 1071 0
 2561 008e 0B93     		str	r3, [sp, #44]
1072:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 2562              		.loc 1 1072 0
 2563 0090 01A9     		add	r1, sp, #4
 2564 0092 1448     		ldr	r0, .L192
 2565 0094 FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 2566              	.LVL157:
 2567 0098 F0B9     		cbnz	r0, .L191
1076:main.c        **** 
 2568              		.loc 1 1076 0
 2569 009a 1248     		ldr	r0, .L192
 2570 009c FFF7FEFF 		bl	HAL_TIM_MspPostInit
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 80


 2571              	.LVL158:
1078:main.c        **** 
 2572              		.loc 1 1078 0
 2573 00a0 1BB0     		add	sp, sp, #108
 2574              	.LCFI37:
 2575              		.cfi_remember_state
 2576              		.cfi_def_cfa_offset 4
 2577              		@ sp needed
 2578 00a2 5DF804FB 		ldr	pc, [sp], #4
 2579              	.L186:
 2580              	.LCFI38:
 2581              		.cfi_restore_state
1031:main.c        ****     }
 2582              		.loc 1 1031 0
 2583 00a6 40F20741 		movw	r1, #1031
 2584 00aa 1048     		ldr	r0, .L192+8
 2585 00ac FFF7FEFF 		bl	_Error_Handler
 2586              	.LVL159:
 2587              	.L187:
1036:main.c        ****     }
 2588              		.loc 1 1036 0
 2589 00b0 40F20C41 		movw	r1, #1036
 2590 00b4 0D48     		ldr	r0, .L192+8
 2591 00b6 FFF7FEFF 		bl	_Error_Handler
 2592              	.LVL160:
 2593              	.L188:
1040:main.c        ****     }
 2594              		.loc 1 1040 0
 2595 00ba 4FF48261 		mov	r1, #1040
 2596 00be 0B48     		ldr	r0, .L192+8
 2597 00c0 FFF7FEFF 		bl	_Error_Handler
 2598              	.LVL161:
 2599              	.L189:
1047:main.c        ****     }
 2600              		.loc 1 1047 0
 2601 00c4 40F21741 		movw	r1, #1047
 2602 00c8 0848     		ldr	r0, .L192+8
 2603 00ca FFF7FEFF 		bl	_Error_Handler
 2604              	.LVL162:
 2605              	.L190:
1058:main.c        ****     }
 2606              		.loc 1 1058 0
 2607 00ce 40F22241 		movw	r1, #1058
 2608 00d2 0648     		ldr	r0, .L192+8
 2609 00d4 FFF7FEFF 		bl	_Error_Handler
 2610              	.LVL163:
 2611              	.L191:
1073:main.c        ****     }
 2612              		.loc 1 1073 0
 2613 00d8 40F23141 		movw	r1, #1073
 2614 00dc 0348     		ldr	r0, .L192+8
 2615 00de FFF7FEFF 		bl	_Error_Handler
 2616              	.LVL164:
 2617              	.L193:
 2618 00e2 00BF     		.align	2
 2619              	.L192:
 2620 00e4 00000000 		.word	htim1
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 81


 2621 00e8 00000140 		.word	1073807360
 2622 00ec 00000000 		.word	.LC18
 2623              		.cfi_endproc
 2624              	.LFE179:
 2626              		.section	.text.MX_TIM2_Init,"ax",%progbits
 2627              		.align	1
 2628              		.syntax unified
 2629              		.thumb
 2630              		.thumb_func
 2631              		.fpu fpv5-sp-d16
 2633              	MX_TIM2_Init:
 2634              	.LFB180:
1081:main.c        **** 
 2635              		.loc 1 1081 0
 2636              		.cfi_startproc
 2637              		@ args = 0, pretend = 0, frame = 56
 2638              		@ frame_needed = 0, uses_anonymous_args = 0
 2639 0000 00B5     		push	{lr}
 2640              	.LCFI39:
 2641              		.cfi_def_cfa_offset 4
 2642              		.cfi_offset 14, -4
 2643 0002 8FB0     		sub	sp, sp, #60
 2644              	.LCFI40:
 2645              		.cfi_def_cfa_offset 64
1087:main.c        ****     htim2.Init.Prescaler = 0;
 2646              		.loc 1 1087 0
 2647 0004 2548     		ldr	r0, .L206
 2648 0006 4FF08043 		mov	r3, #1073741824
 2649 000a 0360     		str	r3, [r0]
1088:main.c        ****     htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 2650              		.loc 1 1088 0
 2651 000c 0023     		movs	r3, #0
 2652 000e 4360     		str	r3, [r0, #4]
1089:main.c        ****     htim2.Init.Period = 0;
 2653              		.loc 1 1089 0
 2654 0010 8360     		str	r3, [r0, #8]
1090:main.c        ****     htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2655              		.loc 1 1090 0
 2656 0012 C360     		str	r3, [r0, #12]
1091:main.c        ****     htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2657              		.loc 1 1091 0
 2658 0014 0361     		str	r3, [r0, #16]
1092:main.c        ****     if (HAL_TIM_Base_Init(&htim2) != HAL_OK) {
 2659              		.loc 1 1092 0
 2660 0016 8361     		str	r3, [r0, #24]
1093:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 2661              		.loc 1 1093 0
 2662 0018 FFF7FEFF 		bl	HAL_TIM_Base_Init
 2663              	.LVL165:
 2664 001c 28BB     		cbnz	r0, .L201
1097:main.c        ****     if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK) {
 2665              		.loc 1 1097 0
 2666 001e 0EA9     		add	r1, sp, #56
 2667 0020 4FF48053 		mov	r3, #4096
 2668 0024 41F8103D 		str	r3, [r1, #-16]!
1098:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 2669              		.loc 1 1098 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 82


 2670 0028 1C48     		ldr	r0, .L206
 2671 002a FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 2672              	.LVL166:
 2673 002e 08BB     		cbnz	r0, .L202
1102:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 2674              		.loc 1 1102 0
 2675 0030 1A48     		ldr	r0, .L206
 2676 0032 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 2677              	.LVL167:
 2678 0036 10BB     		cbnz	r0, .L203
1106:main.c        ****     sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 2679              		.loc 1 1106 0
 2680 0038 0023     		movs	r3, #0
 2681 003a 0793     		str	r3, [sp, #28]
1107:main.c        ****     if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK) {
 2682              		.loc 1 1107 0
 2683 003c 0993     		str	r3, [sp, #36]
1108:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 2684              		.loc 1 1108 0
 2685 003e 07A9     		add	r1, sp, #28
 2686 0040 1648     		ldr	r0, .L206
 2687 0042 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 2688              	.LVL168:
 2689 0046 F8B9     		cbnz	r0, .L204
1112:main.c        ****     sConfigOC.Pulse = 0;
 2690              		.loc 1 1112 0
 2691 0048 6023     		movs	r3, #96
 2692 004a 0093     		str	r3, [sp]
1113:main.c        ****     sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 2693              		.loc 1 1113 0
 2694 004c 0022     		movs	r2, #0
 2695 004e 0192     		str	r2, [sp, #4]
1114:main.c        ****     sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 2696              		.loc 1 1114 0
 2697 0050 0292     		str	r2, [sp, #8]
1115:main.c        ****     if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK) {
 2698              		.loc 1 1115 0
 2699 0052 0492     		str	r2, [sp, #16]
1116:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 2700              		.loc 1 1116 0
 2701 0054 6946     		mov	r1, sp
 2702 0056 1148     		ldr	r0, .L206
 2703 0058 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 2704              	.LVL169:
 2705 005c C8B9     		cbnz	r0, .L205
1120:main.c        **** 
 2706              		.loc 1 1120 0
 2707 005e 0F48     		ldr	r0, .L206
 2708 0060 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 2709              	.LVL170:
1122:main.c        **** 
 2710              		.loc 1 1122 0
 2711 0064 0FB0     		add	sp, sp, #60
 2712              	.LCFI41:
 2713              		.cfi_remember_state
 2714              		.cfi_def_cfa_offset 4
 2715              		@ sp needed
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 83


 2716 0066 5DF804FB 		ldr	pc, [sp], #4
 2717              	.L201:
 2718              	.LCFI42:
 2719              		.cfi_restore_state
1094:main.c        ****     }
 2720              		.loc 1 1094 0
 2721 006a 40F24641 		movw	r1, #1094
 2722 006e 0C48     		ldr	r0, .L206+4
 2723 0070 FFF7FEFF 		bl	_Error_Handler
 2724              	.LVL171:
 2725              	.L202:
1099:main.c        ****     }
 2726              		.loc 1 1099 0
 2727 0074 40F24B41 		movw	r1, #1099
 2728 0078 0948     		ldr	r0, .L206+4
 2729 007a FFF7FEFF 		bl	_Error_Handler
 2730              	.LVL172:
 2731              	.L203:
1103:main.c        ****     }
 2732              		.loc 1 1103 0
 2733 007e 40F24F41 		movw	r1, #1103
 2734 0082 0748     		ldr	r0, .L206+4
 2735 0084 FFF7FEFF 		bl	_Error_Handler
 2736              	.LVL173:
 2737              	.L204:
1109:main.c        ****     }
 2738              		.loc 1 1109 0
 2739 0088 40F25541 		movw	r1, #1109
 2740 008c 0448     		ldr	r0, .L206+4
 2741 008e FFF7FEFF 		bl	_Error_Handler
 2742              	.LVL174:
 2743              	.L205:
1117:main.c        ****     }
 2744              		.loc 1 1117 0
 2745 0092 40F25D41 		movw	r1, #1117
 2746 0096 0248     		ldr	r0, .L206+4
 2747 0098 FFF7FEFF 		bl	_Error_Handler
 2748              	.LVL175:
 2749              	.L207:
 2750              		.align	2
 2751              	.L206:
 2752 009c 00000000 		.word	htim2
 2753 00a0 00000000 		.word	.LC18
 2754              		.cfi_endproc
 2755              	.LFE180:
 2757              		.section	.text.MX_TIM3_Init,"ax",%progbits
 2758              		.align	1
 2759              		.syntax unified
 2760              		.thumb
 2761              		.thumb_func
 2762              		.fpu fpv5-sp-d16
 2764              	MX_TIM3_Init:
 2765              	.LFB181:
1125:main.c        **** 
 2766              		.loc 1 1125 0
 2767              		.cfi_startproc
 2768              		@ args = 0, pretend = 0, frame = 56
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 84


 2769              		@ frame_needed = 0, uses_anonymous_args = 0
 2770 0000 00B5     		push	{lr}
 2771              	.LCFI43:
 2772              		.cfi_def_cfa_offset 4
 2773              		.cfi_offset 14, -4
 2774 0002 8FB0     		sub	sp, sp, #60
 2775              	.LCFI44:
 2776              		.cfi_def_cfa_offset 64
1131:main.c        ****     htim3.Init.Prescaler = 0;
 2777              		.loc 1 1131 0
 2778 0004 2548     		ldr	r0, .L220
 2779 0006 264B     		ldr	r3, .L220+4
 2780 0008 0360     		str	r3, [r0]
1132:main.c        ****     htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 2781              		.loc 1 1132 0
 2782 000a 0023     		movs	r3, #0
 2783 000c 4360     		str	r3, [r0, #4]
1133:main.c        ****     htim3.Init.Period = 0;
 2784              		.loc 1 1133 0
 2785 000e 8360     		str	r3, [r0, #8]
1134:main.c        ****     htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2786              		.loc 1 1134 0
 2787 0010 C360     		str	r3, [r0, #12]
1135:main.c        ****     htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2788              		.loc 1 1135 0
 2789 0012 0361     		str	r3, [r0, #16]
1136:main.c        ****     if (HAL_TIM_Base_Init(&htim3) != HAL_OK) {
 2790              		.loc 1 1136 0
 2791 0014 8361     		str	r3, [r0, #24]
1137:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 2792              		.loc 1 1137 0
 2793 0016 FFF7FEFF 		bl	HAL_TIM_Base_Init
 2794              	.LVL176:
 2795 001a 28BB     		cbnz	r0, .L215
1141:main.c        ****     if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK) {
 2796              		.loc 1 1141 0
 2797 001c 0EA9     		add	r1, sp, #56
 2798 001e 4FF48053 		mov	r3, #4096
 2799 0022 41F8103D 		str	r3, [r1, #-16]!
1142:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 2800              		.loc 1 1142 0
 2801 0026 1D48     		ldr	r0, .L220
 2802 0028 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 2803              	.LVL177:
 2804 002c 08BB     		cbnz	r0, .L216
1146:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 2805              		.loc 1 1146 0
 2806 002e 1B48     		ldr	r0, .L220
 2807 0030 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 2808              	.LVL178:
 2809 0034 10BB     		cbnz	r0, .L217
1150:main.c        ****     sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 2810              		.loc 1 1150 0
 2811 0036 0023     		movs	r3, #0
 2812 0038 0793     		str	r3, [sp, #28]
1151:main.c        ****     if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK) {
 2813              		.loc 1 1151 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 85


 2814 003a 0993     		str	r3, [sp, #36]
1152:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 2815              		.loc 1 1152 0
 2816 003c 07A9     		add	r1, sp, #28
 2817 003e 1748     		ldr	r0, .L220
 2818 0040 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 2819              	.LVL179:
 2820 0044 F8B9     		cbnz	r0, .L218
1156:main.c        ****     sConfigOC.Pulse = 0;
 2821              		.loc 1 1156 0
 2822 0046 6023     		movs	r3, #96
 2823 0048 0093     		str	r3, [sp]
1157:main.c        ****     sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 2824              		.loc 1 1157 0
 2825 004a 0022     		movs	r2, #0
 2826 004c 0192     		str	r2, [sp, #4]
1158:main.c        ****     sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 2827              		.loc 1 1158 0
 2828 004e 0292     		str	r2, [sp, #8]
1159:main.c        ****     if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK) {
 2829              		.loc 1 1159 0
 2830 0050 0492     		str	r2, [sp, #16]
1160:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 2831              		.loc 1 1160 0
 2832 0052 6946     		mov	r1, sp
 2833 0054 1148     		ldr	r0, .L220
 2834 0056 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 2835              	.LVL180:
 2836 005a C8B9     		cbnz	r0, .L219
1164:main.c        **** 
 2837              		.loc 1 1164 0
 2838 005c 0F48     		ldr	r0, .L220
 2839 005e FFF7FEFF 		bl	HAL_TIM_MspPostInit
 2840              	.LVL181:
1166:main.c        **** 
 2841              		.loc 1 1166 0
 2842 0062 0FB0     		add	sp, sp, #60
 2843              	.LCFI45:
 2844              		.cfi_remember_state
 2845              		.cfi_def_cfa_offset 4
 2846              		@ sp needed
 2847 0064 5DF804FB 		ldr	pc, [sp], #4
 2848              	.L215:
 2849              	.LCFI46:
 2850              		.cfi_restore_state
1138:main.c        ****     }
 2851              		.loc 1 1138 0
 2852 0068 40F27241 		movw	r1, #1138
 2853 006c 0D48     		ldr	r0, .L220+8
 2854 006e FFF7FEFF 		bl	_Error_Handler
 2855              	.LVL182:
 2856              	.L216:
1143:main.c        ****     }
 2857              		.loc 1 1143 0
 2858 0072 40F27741 		movw	r1, #1143
 2859 0076 0B48     		ldr	r0, .L220+8
 2860 0078 FFF7FEFF 		bl	_Error_Handler
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 86


 2861              	.LVL183:
 2862              	.L217:
1147:main.c        ****     }
 2863              		.loc 1 1147 0
 2864 007c 40F27B41 		movw	r1, #1147
 2865 0080 0848     		ldr	r0, .L220+8
 2866 0082 FFF7FEFF 		bl	_Error_Handler
 2867              	.LVL184:
 2868              	.L218:
1153:main.c        ****     }
 2869              		.loc 1 1153 0
 2870 0086 40F28141 		movw	r1, #1153
 2871 008a 0648     		ldr	r0, .L220+8
 2872 008c FFF7FEFF 		bl	_Error_Handler
 2873              	.LVL185:
 2874              	.L219:
1161:main.c        ****     }
 2875              		.loc 1 1161 0
 2876 0090 40F28941 		movw	r1, #1161
 2877 0094 0348     		ldr	r0, .L220+8
 2878 0096 FFF7FEFF 		bl	_Error_Handler
 2879              	.LVL186:
 2880              	.L221:
 2881 009a 00BF     		.align	2
 2882              	.L220:
 2883 009c 00000000 		.word	htim3
 2884 00a0 00040040 		.word	1073742848
 2885 00a4 00000000 		.word	.LC18
 2886              		.cfi_endproc
 2887              	.LFE181:
 2889              		.section	.text.MX_TIM5_Init,"ax",%progbits
 2890              		.align	1
 2891              		.syntax unified
 2892              		.thumb
 2893              		.thumb_func
 2894              		.fpu fpv5-sp-d16
 2896              	MX_TIM5_Init:
 2897              	.LFB182:
1169:main.c        **** 
 2898              		.loc 1 1169 0
 2899              		.cfi_startproc
 2900              		@ args = 0, pretend = 0, frame = 56
 2901              		@ frame_needed = 0, uses_anonymous_args = 0
 2902 0000 00B5     		push	{lr}
 2903              	.LCFI47:
 2904              		.cfi_def_cfa_offset 4
 2905              		.cfi_offset 14, -4
 2906 0002 8FB0     		sub	sp, sp, #60
 2907              	.LCFI48:
 2908              		.cfi_def_cfa_offset 64
1175:main.c        ****     htim5.Init.Prescaler = 0;
 2909              		.loc 1 1175 0
 2910 0004 2548     		ldr	r0, .L234
 2911 0006 264B     		ldr	r3, .L234+4
 2912 0008 0360     		str	r3, [r0]
1176:main.c        ****     htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 2913              		.loc 1 1176 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 87


 2914 000a 0023     		movs	r3, #0
 2915 000c 4360     		str	r3, [r0, #4]
1177:main.c        ****     htim5.Init.Period = 0;
 2916              		.loc 1 1177 0
 2917 000e 8360     		str	r3, [r0, #8]
1178:main.c        ****     htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2918              		.loc 1 1178 0
 2919 0010 C360     		str	r3, [r0, #12]
1179:main.c        ****     htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2920              		.loc 1 1179 0
 2921 0012 0361     		str	r3, [r0, #16]
1180:main.c        ****     if (HAL_TIM_Base_Init(&htim5) != HAL_OK) {
 2922              		.loc 1 1180 0
 2923 0014 8361     		str	r3, [r0, #24]
1181:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 2924              		.loc 1 1181 0
 2925 0016 FFF7FEFF 		bl	HAL_TIM_Base_Init
 2926              	.LVL187:
 2927 001a 30BB     		cbnz	r0, .L229
1185:main.c        ****     if (HAL_TIM_ConfigClockSource(&htim5, &sClockSourceConfig) != HAL_OK) {
 2928              		.loc 1 1185 0
 2929 001c 0EA9     		add	r1, sp, #56
 2930 001e 4FF48053 		mov	r3, #4096
 2931 0022 41F8103D 		str	r3, [r1, #-16]!
1186:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 2932              		.loc 1 1186 0
 2933 0026 1D48     		ldr	r0, .L234
 2934 0028 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 2935              	.LVL188:
 2936 002c 10BB     		cbnz	r0, .L230
1190:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 2937              		.loc 1 1190 0
 2938 002e 1B48     		ldr	r0, .L234
 2939 0030 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 2940              	.LVL189:
 2941 0034 18BB     		cbnz	r0, .L231
1194:main.c        ****     sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 2942              		.loc 1 1194 0
 2943 0036 0023     		movs	r3, #0
 2944 0038 0793     		str	r3, [sp, #28]
1195:main.c        ****     if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK) {
 2945              		.loc 1 1195 0
 2946 003a 0993     		str	r3, [sp, #36]
1196:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 2947              		.loc 1 1196 0
 2948 003c 07A9     		add	r1, sp, #28
 2949 003e 1748     		ldr	r0, .L234
 2950 0040 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 2951              	.LVL190:
 2952 0044 00BB     		cbnz	r0, .L232
1200:main.c        ****     sConfigOC.Pulse = 0;
 2953              		.loc 1 1200 0
 2954 0046 6023     		movs	r3, #96
 2955 0048 0093     		str	r3, [sp]
1201:main.c        ****     sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 2956              		.loc 1 1201 0
 2957 004a 0023     		movs	r3, #0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 88


 2958 004c 0193     		str	r3, [sp, #4]
1202:main.c        ****     sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 2959              		.loc 1 1202 0
 2960 004e 0293     		str	r3, [sp, #8]
1203:main.c        ****     if (HAL_TIM_PWM_ConfigChannel(&htim5, &sConfigOC, TIM_CHANNEL_4) != HAL_OK) {
 2961              		.loc 1 1203 0
 2962 0050 0493     		str	r3, [sp, #16]
1204:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 2963              		.loc 1 1204 0
 2964 0052 0C22     		movs	r2, #12
 2965 0054 6946     		mov	r1, sp
 2966 0056 1148     		ldr	r0, .L234
 2967 0058 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 2968              	.LVL191:
 2969 005c C8B9     		cbnz	r0, .L233
1208:main.c        **** 
 2970              		.loc 1 1208 0
 2971 005e 0F48     		ldr	r0, .L234
 2972 0060 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 2973              	.LVL192:
1210:main.c        **** 
 2974              		.loc 1 1210 0
 2975 0064 0FB0     		add	sp, sp, #60
 2976              	.LCFI49:
 2977              		.cfi_remember_state
 2978              		.cfi_def_cfa_offset 4
 2979              		@ sp needed
 2980 0066 5DF804FB 		ldr	pc, [sp], #4
 2981              	.L229:
 2982              	.LCFI50:
 2983              		.cfi_restore_state
1182:main.c        ****     }
 2984              		.loc 1 1182 0
 2985 006a 40F29E41 		movw	r1, #1182
 2986 006e 0D48     		ldr	r0, .L234+8
 2987 0070 FFF7FEFF 		bl	_Error_Handler
 2988              	.LVL193:
 2989              	.L230:
1187:main.c        ****     }
 2990              		.loc 1 1187 0
 2991 0074 40F2A341 		movw	r1, #1187
 2992 0078 0A48     		ldr	r0, .L234+8
 2993 007a FFF7FEFF 		bl	_Error_Handler
 2994              	.LVL194:
 2995              	.L231:
1191:main.c        ****     }
 2996              		.loc 1 1191 0
 2997 007e 40F2A741 		movw	r1, #1191
 2998 0082 0848     		ldr	r0, .L234+8
 2999 0084 FFF7FEFF 		bl	_Error_Handler
 3000              	.LVL195:
 3001              	.L232:
1197:main.c        ****     }
 3002              		.loc 1 1197 0
 3003 0088 40F2AD41 		movw	r1, #1197
 3004 008c 0548     		ldr	r0, .L234+8
 3005 008e FFF7FEFF 		bl	_Error_Handler
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 89


 3006              	.LVL196:
 3007              	.L233:
1205:main.c        ****     }
 3008              		.loc 1 1205 0
 3009 0092 40F2B541 		movw	r1, #1205
 3010 0096 0348     		ldr	r0, .L234+8
 3011 0098 FFF7FEFF 		bl	_Error_Handler
 3012              	.LVL197:
 3013              	.L235:
 3014              		.align	2
 3015              	.L234:
 3016 009c 00000000 		.word	htim5
 3017 00a0 000C0040 		.word	1073744896
 3018 00a4 00000000 		.word	.LC18
 3019              		.cfi_endproc
 3020              	.LFE182:
 3022              		.section	.text.MX_TIM8_Init,"ax",%progbits
 3023              		.align	1
 3024              		.syntax unified
 3025              		.thumb
 3026              		.thumb_func
 3027              		.fpu fpv5-sp-d16
 3029              	MX_TIM8_Init:
 3030              	.LFB184:
1235:main.c        **** 
 3031              		.loc 1 1235 0
 3032              		.cfi_startproc
 3033              		@ args = 0, pretend = 0, frame = 32
 3034              		@ frame_needed = 0, uses_anonymous_args = 0
 3035 0000 00B5     		push	{lr}
 3036              	.LCFI51:
 3037              		.cfi_def_cfa_offset 4
 3038              		.cfi_offset 14, -4
 3039 0002 89B0     		sub	sp, sp, #36
 3040              	.LCFI52:
 3041              		.cfi_def_cfa_offset 40
1240:main.c        ****     htim8.Init.Prescaler = 0;
 3042              		.loc 1 1240 0
 3043 0004 1848     		ldr	r0, .L244
 3044 0006 194B     		ldr	r3, .L244+4
 3045 0008 0360     		str	r3, [r0]
1241:main.c        ****     htim8.Init.CounterMode = TIM_COUNTERMODE_UP;
 3046              		.loc 1 1241 0
 3047 000a 0023     		movs	r3, #0
 3048 000c 4360     		str	r3, [r0, #4]
1242:main.c        ****     htim8.Init.Period = 0;
 3049              		.loc 1 1242 0
 3050 000e 8360     		str	r3, [r0, #8]
1243:main.c        ****     htim8.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 3051              		.loc 1 1243 0
 3052 0010 C360     		str	r3, [r0, #12]
1244:main.c        ****     htim8.Init.RepetitionCounter = 0;
 3053              		.loc 1 1244 0
 3054 0012 0361     		str	r3, [r0, #16]
1245:main.c        ****     htim8.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 3055              		.loc 1 1245 0
 3056 0014 4361     		str	r3, [r0, #20]
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 90


1246:main.c        ****     if (HAL_TIM_Base_Init(&htim8) != HAL_OK) {
 3057              		.loc 1 1246 0
 3058 0016 8361     		str	r3, [r0, #24]
1247:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 3059              		.loc 1 1247 0
 3060 0018 FFF7FEFF 		bl	HAL_TIM_Base_Init
 3061              	.LVL198:
 3062 001c A0B9     		cbnz	r0, .L241
1251:main.c        ****     if (HAL_TIM_ConfigClockSource(&htim8, &sClockSourceConfig) != HAL_OK) {
 3063              		.loc 1 1251 0
 3064 001e 08A9     		add	r1, sp, #32
 3065 0020 4FF48053 		mov	r3, #4096
 3066 0024 41F8103D 		str	r3, [r1, #-16]!
1252:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 3067              		.loc 1 1252 0
 3068 0028 0F48     		ldr	r0, .L244
 3069 002a FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 3070              	.LVL199:
 3071 002e 80B9     		cbnz	r0, .L242
1256:main.c        ****     sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 3072              		.loc 1 1256 0
 3073 0030 0023     		movs	r3, #0
 3074 0032 0193     		str	r3, [sp, #4]
1257:main.c        ****     sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 3075              		.loc 1 1257 0
 3076 0034 0293     		str	r3, [sp, #8]
1258:main.c        ****     if (HAL_TIMEx_MasterConfigSynchronization(&htim8, &sMasterConfig) != HAL_OK) {
 3077              		.loc 1 1258 0
 3078 0036 0393     		str	r3, [sp, #12]
1259:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 3079              		.loc 1 1259 0
 3080 0038 01A9     		add	r1, sp, #4
 3081 003a 0B48     		ldr	r0, .L244
 3082 003c FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 3083              	.LVL200:
 3084 0040 60B9     		cbnz	r0, .L243
1263:main.c        **** 
 3085              		.loc 1 1263 0
 3086 0042 09B0     		add	sp, sp, #36
 3087              	.LCFI53:
 3088              		.cfi_remember_state
 3089              		.cfi_def_cfa_offset 4
 3090              		@ sp needed
 3091 0044 5DF804FB 		ldr	pc, [sp], #4
 3092              	.L241:
 3093              	.LCFI54:
 3094              		.cfi_restore_state
1248:main.c        ****     }
 3095              		.loc 1 1248 0
 3096 0048 4FF49C61 		mov	r1, #1248
 3097 004c 0848     		ldr	r0, .L244+8
 3098 004e FFF7FEFF 		bl	_Error_Handler
 3099              	.LVL201:
 3100              	.L242:
1253:main.c        ****     }
 3101              		.loc 1 1253 0
 3102 0052 40F2E541 		movw	r1, #1253
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 91


 3103 0056 0648     		ldr	r0, .L244+8
 3104 0058 FFF7FEFF 		bl	_Error_Handler
 3105              	.LVL202:
 3106              	.L243:
1260:main.c        ****     }
 3107              		.loc 1 1260 0
 3108 005c 40F2EC41 		movw	r1, #1260
 3109 0060 0348     		ldr	r0, .L244+8
 3110 0062 FFF7FEFF 		bl	_Error_Handler
 3111              	.LVL203:
 3112              	.L245:
 3113 0066 00BF     		.align	2
 3114              	.L244:
 3115 0068 00000000 		.word	htim8
 3116 006c 00040140 		.word	1073808384
 3117 0070 00000000 		.word	.LC18
 3118              		.cfi_endproc
 3119              	.LFE184:
 3121              		.section	.text.MX_TIM12_Init,"ax",%progbits
 3122              		.align	1
 3123              		.syntax unified
 3124              		.thumb
 3125              		.thumb_func
 3126              		.fpu fpv5-sp-d16
 3128              	MX_TIM12_Init:
 3129              	.LFB185:
1266:main.c        **** 
 3130              		.loc 1 1266 0
 3131              		.cfi_startproc
 3132              		@ args = 0, pretend = 0, frame = 32
 3133              		@ frame_needed = 0, uses_anonymous_args = 0
 3134 0000 00B5     		push	{lr}
 3135              	.LCFI55:
 3136              		.cfi_def_cfa_offset 4
 3137              		.cfi_offset 14, -4
 3138 0002 89B0     		sub	sp, sp, #36
 3139              	.LCFI56:
 3140              		.cfi_def_cfa_offset 40
1270:main.c        ****     htim12.Init.Prescaler = 0;
 3141              		.loc 1 1270 0
 3142 0004 1348     		ldr	r0, .L252
 3143 0006 144B     		ldr	r3, .L252+4
 3144 0008 0360     		str	r3, [r0]
1271:main.c        ****     htim12.Init.CounterMode = TIM_COUNTERMODE_UP;
 3145              		.loc 1 1271 0
 3146 000a 0023     		movs	r3, #0
 3147 000c 4360     		str	r3, [r0, #4]
1272:main.c        ****     htim12.Init.Period = 0;
 3148              		.loc 1 1272 0
 3149 000e 8360     		str	r3, [r0, #8]
1273:main.c        ****     htim12.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 3150              		.loc 1 1273 0
 3151 0010 C360     		str	r3, [r0, #12]
1274:main.c        ****     htim12.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 3152              		.loc 1 1274 0
 3153 0012 0361     		str	r3, [r0, #16]
1275:main.c        ****     if (HAL_TIM_PWM_Init(&htim12) != HAL_OK) {
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 92


 3154              		.loc 1 1275 0
 3155 0014 8361     		str	r3, [r0, #24]
1276:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 3156              		.loc 1 1276 0
 3157 0016 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 3158              	.LVL204:
 3159 001a 80B9     		cbnz	r0, .L250
1280:main.c        ****     sConfigOC.Pulse = 0;
 3160              		.loc 1 1280 0
 3161 001c 6023     		movs	r3, #96
 3162 001e 0193     		str	r3, [sp, #4]
1281:main.c        ****     sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 3163              		.loc 1 1281 0
 3164 0020 0022     		movs	r2, #0
 3165 0022 0292     		str	r2, [sp, #8]
1282:main.c        ****     sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 3166              		.loc 1 1282 0
 3167 0024 0392     		str	r2, [sp, #12]
1283:main.c        ****     if (HAL_TIM_PWM_ConfigChannel(&htim12, &sConfigOC, TIM_CHANNEL_1) != HAL_OK) {
 3168              		.loc 1 1283 0
 3169 0026 0592     		str	r2, [sp, #20]
1284:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 3170              		.loc 1 1284 0
 3171 0028 01A9     		add	r1, sp, #4
 3172 002a 0A48     		ldr	r0, .L252
 3173 002c FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 3174              	.LVL205:
 3175 0030 50B9     		cbnz	r0, .L251
1288:main.c        **** 
 3176              		.loc 1 1288 0
 3177 0032 0848     		ldr	r0, .L252
 3178 0034 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 3179              	.LVL206:
1290:main.c        **** 
 3180              		.loc 1 1290 0
 3181 0038 09B0     		add	sp, sp, #36
 3182              	.LCFI57:
 3183              		.cfi_remember_state
 3184              		.cfi_def_cfa_offset 4
 3185              		@ sp needed
 3186 003a 5DF804FB 		ldr	pc, [sp], #4
 3187              	.L250:
 3188              	.LCFI58:
 3189              		.cfi_restore_state
1277:main.c        ****     }
 3190              		.loc 1 1277 0
 3191 003e 40F2FD41 		movw	r1, #1277
 3192 0042 0648     		ldr	r0, .L252+8
 3193 0044 FFF7FEFF 		bl	_Error_Handler
 3194              	.LVL207:
 3195              	.L251:
1285:main.c        ****     }
 3196              		.loc 1 1285 0
 3197 0048 40F20551 		movw	r1, #1285
 3198 004c 0348     		ldr	r0, .L252+8
 3199 004e FFF7FEFF 		bl	_Error_Handler
 3200              	.LVL208:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 93


 3201              	.L253:
 3202 0052 00BF     		.align	2
 3203              	.L252:
 3204 0054 00000000 		.word	htim12
 3205 0058 00180040 		.word	1073747968
 3206 005c 00000000 		.word	.LC18
 3207              		.cfi_endproc
 3208              	.LFE185:
 3210              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 3211              		.align	1
 3212              		.syntax unified
 3213              		.thumb
 3214              		.thumb_func
 3215              		.fpu fpv5-sp-d16
 3217              	MX_USART1_UART_Init:
 3218              	.LFB186:
1293:main.c        **** 
 3219              		.loc 1 1293 0
 3220              		.cfi_startproc
 3221              		@ args = 0, pretend = 0, frame = 0
 3222              		@ frame_needed = 0, uses_anonymous_args = 0
 3223 0000 08B5     		push	{r3, lr}
 3224              	.LCFI59:
 3225              		.cfi_def_cfa_offset 8
 3226              		.cfi_offset 3, -8
 3227              		.cfi_offset 14, -4
1295:main.c        ****     huart1.Init.BaudRate = 115200;
 3228              		.loc 1 1295 0
 3229 0002 0C48     		ldr	r0, .L258
 3230 0004 0C4B     		ldr	r3, .L258+4
 3231 0006 0360     		str	r3, [r0]
1296:main.c        ****     huart1.Init.WordLength = UART_WORDLENGTH_8B;
 3232              		.loc 1 1296 0
 3233 0008 4FF4E133 		mov	r3, #115200
 3234 000c 4360     		str	r3, [r0, #4]
1297:main.c        ****     huart1.Init.StopBits = UART_STOPBITS_1;
 3235              		.loc 1 1297 0
 3236 000e 0023     		movs	r3, #0
 3237 0010 8360     		str	r3, [r0, #8]
1298:main.c        ****     huart1.Init.Parity = UART_PARITY_NONE;
 3238              		.loc 1 1298 0
 3239 0012 C360     		str	r3, [r0, #12]
1299:main.c        ****     huart1.Init.Mode = UART_MODE_TX_RX;
 3240              		.loc 1 1299 0
 3241 0014 0361     		str	r3, [r0, #16]
1300:main.c        ****     huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 3242              		.loc 1 1300 0
 3243 0016 0C22     		movs	r2, #12
 3244 0018 4261     		str	r2, [r0, #20]
1301:main.c        ****     huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 3245              		.loc 1 1301 0
 3246 001a 8361     		str	r3, [r0, #24]
1302:main.c        ****     huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 3247              		.loc 1 1302 0
 3248 001c C361     		str	r3, [r0, #28]
1303:main.c        ****     huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 3249              		.loc 1 1303 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 94


 3250 001e 0362     		str	r3, [r0, #32]
1304:main.c        ****     if (HAL_UART_Init(&huart1) != HAL_OK) {
 3251              		.loc 1 1304 0
 3252 0020 4362     		str	r3, [r0, #36]
1305:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 3253              		.loc 1 1305 0
 3254 0022 FFF7FEFF 		bl	HAL_UART_Init
 3255              	.LVL209:
 3256 0026 00B9     		cbnz	r0, .L257
 3257 0028 08BD     		pop	{r3, pc}
 3258              	.L257:
1306:main.c        ****     }
 3259              		.loc 1 1306 0
 3260 002a 40F21A51 		movw	r1, #1306
 3261 002e 0348     		ldr	r0, .L258+8
 3262 0030 FFF7FEFF 		bl	_Error_Handler
 3263              	.LVL210:
 3264              	.L259:
 3265              		.align	2
 3266              	.L258:
 3267 0034 00000000 		.word	huart1
 3268 0038 00100140 		.word	1073811456
 3269 003c 00000000 		.word	.LC18
 3270              		.cfi_endproc
 3271              	.LFE186:
 3273              		.section	.text.MX_USART6_UART_Init,"ax",%progbits
 3274              		.align	1
 3275              		.syntax unified
 3276              		.thumb
 3277              		.thumb_func
 3278              		.fpu fpv5-sp-d16
 3280              	MX_USART6_UART_Init:
 3281              	.LFB187:
1312:main.c        **** 
 3282              		.loc 1 1312 0
 3283              		.cfi_startproc
 3284              		@ args = 0, pretend = 0, frame = 0
 3285              		@ frame_needed = 0, uses_anonymous_args = 0
 3286 0000 08B5     		push	{r3, lr}
 3287              	.LCFI60:
 3288              		.cfi_def_cfa_offset 8
 3289              		.cfi_offset 3, -8
 3290              		.cfi_offset 14, -4
1314:main.c        ****     huart6.Init.BaudRate = 115200;
 3291              		.loc 1 1314 0
 3292 0002 0C48     		ldr	r0, .L264
 3293 0004 0C4B     		ldr	r3, .L264+4
 3294 0006 0360     		str	r3, [r0]
1315:main.c        ****     huart6.Init.WordLength = UART_WORDLENGTH_8B;
 3295              		.loc 1 1315 0
 3296 0008 4FF4E133 		mov	r3, #115200
 3297 000c 4360     		str	r3, [r0, #4]
1316:main.c        ****     huart6.Init.StopBits = UART_STOPBITS_1;
 3298              		.loc 1 1316 0
 3299 000e 0023     		movs	r3, #0
 3300 0010 8360     		str	r3, [r0, #8]
1317:main.c        ****     huart6.Init.Parity = UART_PARITY_NONE;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 95


 3301              		.loc 1 1317 0
 3302 0012 C360     		str	r3, [r0, #12]
1318:main.c        ****     huart6.Init.Mode = UART_MODE_TX_RX;
 3303              		.loc 1 1318 0
 3304 0014 0361     		str	r3, [r0, #16]
1319:main.c        ****     huart6.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 3305              		.loc 1 1319 0
 3306 0016 0C22     		movs	r2, #12
 3307 0018 4261     		str	r2, [r0, #20]
1320:main.c        ****     huart6.Init.OverSampling = UART_OVERSAMPLING_16;
 3308              		.loc 1 1320 0
 3309 001a 8361     		str	r3, [r0, #24]
1321:main.c        ****     huart6.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 3310              		.loc 1 1321 0
 3311 001c C361     		str	r3, [r0, #28]
1322:main.c        ****     huart6.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 3312              		.loc 1 1322 0
 3313 001e 0362     		str	r3, [r0, #32]
1323:main.c        ****     if (HAL_UART_Init(&huart6) != HAL_OK) {
 3314              		.loc 1 1323 0
 3315 0020 4362     		str	r3, [r0, #36]
1324:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 3316              		.loc 1 1324 0
 3317 0022 FFF7FEFF 		bl	HAL_UART_Init
 3318              	.LVL211:
 3319 0026 00B9     		cbnz	r0, .L263
 3320 0028 08BD     		pop	{r3, pc}
 3321              	.L263:
1325:main.c        ****     }
 3322              		.loc 1 1325 0
 3323 002a 40F22D51 		movw	r1, #1325
 3324 002e 0348     		ldr	r0, .L264+8
 3325 0030 FFF7FEFF 		bl	_Error_Handler
 3326              	.LVL212:
 3327              	.L265:
 3328              		.align	2
 3329              	.L264:
 3330 0034 00000000 		.word	huart6
 3331 0038 00140140 		.word	1073812480
 3332 003c 00000000 		.word	.LC18
 3333              		.cfi_endproc
 3334              	.LFE187:
 3336              		.section	.text.MX_TIM7_Init,"ax",%progbits
 3337              		.align	1
 3338              		.syntax unified
 3339              		.thumb
 3340              		.thumb_func
 3341              		.fpu fpv5-sp-d16
 3343              	MX_TIM7_Init:
 3344              	.LFB183:
1213:main.c        **** 
 3345              		.loc 1 1213 0
 3346              		.cfi_startproc
 3347              		@ args = 0, pretend = 0, frame = 16
 3348              		@ frame_needed = 0, uses_anonymous_args = 0
 3349 0000 00B5     		push	{lr}
 3350              	.LCFI61:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 96


 3351              		.cfi_def_cfa_offset 4
 3352              		.cfi_offset 14, -4
 3353 0002 85B0     		sub	sp, sp, #20
 3354              	.LCFI62:
 3355              		.cfi_def_cfa_offset 24
1217:main.c        ****     htim7.Init.Prescaler = 0;
 3356              		.loc 1 1217 0
 3357 0004 0F48     		ldr	r0, .L272
 3358 0006 104B     		ldr	r3, .L272+4
 3359 0008 0360     		str	r3, [r0]
1218:main.c        ****     htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
 3360              		.loc 1 1218 0
 3361 000a 0023     		movs	r3, #0
 3362 000c 4360     		str	r3, [r0, #4]
1219:main.c        ****     htim7.Init.Period = 0;
 3363              		.loc 1 1219 0
 3364 000e 8360     		str	r3, [r0, #8]
1220:main.c        ****     htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 3365              		.loc 1 1220 0
 3366 0010 C360     		str	r3, [r0, #12]
1221:main.c        ****     if (HAL_TIM_Base_Init(&htim7) != HAL_OK) {
 3367              		.loc 1 1221 0
 3368 0012 8361     		str	r3, [r0, #24]
1222:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 3369              		.loc 1 1222 0
 3370 0014 FFF7FEFF 		bl	HAL_TIM_Base_Init
 3371              	.LVL213:
 3372 0018 50B9     		cbnz	r0, .L270
1226:main.c        ****     sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 3373              		.loc 1 1226 0
 3374 001a 0023     		movs	r3, #0
 3375 001c 0193     		str	r3, [sp, #4]
1227:main.c        ****     if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK) {
 3376              		.loc 1 1227 0
 3377 001e 0393     		str	r3, [sp, #12]
1228:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 3378              		.loc 1 1228 0
 3379 0020 01A9     		add	r1, sp, #4
 3380 0022 0848     		ldr	r0, .L272
 3381 0024 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 3382              	.LVL214:
 3383 0028 38B9     		cbnz	r0, .L271
1232:main.c        **** 
 3384              		.loc 1 1232 0
 3385 002a 05B0     		add	sp, sp, #20
 3386              	.LCFI63:
 3387              		.cfi_remember_state
 3388              		.cfi_def_cfa_offset 4
 3389              		@ sp needed
 3390 002c 5DF804FB 		ldr	pc, [sp], #4
 3391              	.L270:
 3392              	.LCFI64:
 3393              		.cfi_restore_state
1223:main.c        ****     }
 3394              		.loc 1 1223 0
 3395 0030 40F2C741 		movw	r1, #1223
 3396 0034 0548     		ldr	r0, .L272+8
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 97


 3397 0036 FFF7FEFF 		bl	_Error_Handler
 3398              	.LVL215:
 3399              	.L271:
1229:main.c        ****     }
 3400              		.loc 1 1229 0
 3401 003a 40F2CD41 		movw	r1, #1229
 3402 003e 0348     		ldr	r0, .L272+8
 3403 0040 FFF7FEFF 		bl	_Error_Handler
 3404              	.LVL216:
 3405              	.L273:
 3406              		.align	2
 3407              	.L272:
 3408 0044 00000000 		.word	htim7
 3409 0048 00140040 		.word	1073746944
 3410 004c 00000000 		.word	.LC18
 3411              		.cfi_endproc
 3412              	.LFE183:
 3414              		.section	.text.SystemClock_Config,"ax",%progbits
 3415              		.align	1
 3416              		.global	SystemClock_Config
 3417              		.syntax unified
 3418              		.thumb
 3419              		.thumb_func
 3420              		.fpu fpv5-sp-d16
 3422              	SystemClock_Config:
 3423              	.LFB165:
 516:main.c        **** 
 3424              		.loc 1 516 0
 3425              		.cfi_startproc
 3426              		@ args = 0, pretend = 0, frame = 208
 3427              		@ frame_needed = 0, uses_anonymous_args = 0
 3428 0000 00B5     		push	{lr}
 3429              	.LCFI65:
 3430              		.cfi_def_cfa_offset 4
 3431              		.cfi_offset 14, -4
 3432 0002 B5B0     		sub	sp, sp, #212
 3433              	.LCFI66:
 3434              		.cfi_def_cfa_offset 216
 3435              	.LBB17:
 524:main.c        **** 
 3436              		.loc 1 524 0
 3437 0004 474B     		ldr	r3, .L284
 3438 0006 1A6C     		ldr	r2, [r3, #64]
 3439 0008 42F08052 		orr	r2, r2, #268435456
 3440 000c 1A64     		str	r2, [r3, #64]
 3441 000e 1B6C     		ldr	r3, [r3, #64]
 3442 0010 03F08053 		and	r3, r3, #268435456
 3443 0014 0093     		str	r3, [sp]
 3444 0016 009B     		ldr	r3, [sp]
 3445              	.LBE17:
 3446              	.LBB18:
 526:main.c        **** 
 3447              		.loc 1 526 0
 3448 0018 434B     		ldr	r3, .L284+4
 3449 001a 1A68     		ldr	r2, [r3]
 3450 001c 42F44042 		orr	r2, r2, #49152
 3451 0020 1A60     		str	r2, [r3]
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 98


 3452 0022 1B68     		ldr	r3, [r3]
 3453 0024 03F44043 		and	r3, r3, #49152
 3454 0028 0193     		str	r3, [sp, #4]
 3455 002a 019B     		ldr	r3, [sp, #4]
 3456              	.LBE18:
 530:main.c        ****     RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 3457              		.loc 1 530 0
 3458 002c 0923     		movs	r3, #9
 3459 002e 2893     		str	r3, [sp, #160]
 531:main.c        ****     RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 3460              		.loc 1 531 0
 3461 0030 4FF48033 		mov	r3, #65536
 3462 0034 2993     		str	r3, [sp, #164]
 532:main.c        ****     RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 3463              		.loc 1 532 0
 3464 0036 0123     		movs	r3, #1
 3465 0038 2D93     		str	r3, [sp, #180]
 533:main.c        ****     RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 3466              		.loc 1 533 0
 3467 003a 0223     		movs	r3, #2
 3468 003c 2E93     		str	r3, [sp, #184]
 534:main.c        ****     RCC_OscInitStruct.PLL.PLLM = 25;
 3469              		.loc 1 534 0
 3470 003e 4FF48002 		mov	r2, #4194304
 3471 0042 2F92     		str	r2, [sp, #188]
 535:main.c        ****     RCC_OscInitStruct.PLL.PLLN = 400;
 3472              		.loc 1 535 0
 3473 0044 1922     		movs	r2, #25
 3474 0046 3092     		str	r2, [sp, #192]
 536:main.c        ****     RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 3475              		.loc 1 536 0
 3476 0048 4FF4C872 		mov	r2, #400
 3477 004c 3192     		str	r2, [sp, #196]
 537:main.c        ****     RCC_OscInitStruct.PLL.PLLQ = 8;
 3478              		.loc 1 537 0
 3479 004e 3293     		str	r3, [sp, #200]
 538:main.c        ****     if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 3480              		.loc 1 538 0
 3481 0050 0823     		movs	r3, #8
 3482 0052 3393     		str	r3, [sp, #204]
 539:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 3483              		.loc 1 539 0
 3484 0054 28A8     		add	r0, sp, #160
 3485 0056 FFF7FEFF 		bl	HAL_RCC_OscConfig
 3486              	.LVL217:
 3487 005a 0028     		cmp	r0, #0
 3488 005c 4ED1     		bne	.L280
 545:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 3489              		.loc 1 545 0
 3490 005e FFF7FEFF 		bl	HAL_PWREx_EnableOverDrive
 3491              	.LVL218:
 3492 0062 0028     		cmp	r0, #0
 3493 0064 4FD1     		bne	.L281
 551:main.c        ****                                   | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 3494              		.loc 1 551 0
 3495 0066 0F23     		movs	r3, #15
 3496 0068 2393     		str	r3, [sp, #140]
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 99


 553:main.c        ****     RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 3497              		.loc 1 553 0
 3498 006a 0223     		movs	r3, #2
 3499 006c 2493     		str	r3, [sp, #144]
 554:main.c        ****     RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 3500              		.loc 1 554 0
 3501 006e 0023     		movs	r3, #0
 3502 0070 2593     		str	r3, [sp, #148]
 555:main.c        ****     RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 3503              		.loc 1 555 0
 3504 0072 4FF4A053 		mov	r3, #5120
 3505 0076 2693     		str	r3, [sp, #152]
 556:main.c        **** 
 3506              		.loc 1 556 0
 3507 0078 4FF48053 		mov	r3, #4096
 3508 007c 2793     		str	r3, [sp, #156]
 558:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 3509              		.loc 1 558 0
 3510 007e 0621     		movs	r1, #6
 3511 0080 23A8     		add	r0, sp, #140
 3512 0082 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 3513              	.LVL219:
 3514 0086 0028     		cmp	r0, #0
 3515 0088 42D1     		bne	.L282
 562:main.c        ****                                                | RCC_PERIPHCLK_RTC | RCC_PERIPHCLK_USART1
 3516              		.loc 1 562 0
 3517 008a 284B     		ldr	r3, .L284+8
 3518 008c 0293     		str	r3, [sp, #8]
 567:main.c        ****     PeriphClkInitStruct.PLLI2S.PLLI2SP = RCC_PLLP_DIV2;
 3519              		.loc 1 567 0
 3520 008e 6423     		movs	r3, #100
 3521 0090 0393     		str	r3, [sp, #12]
 568:main.c        ****     PeriphClkInitStruct.PLLI2S.PLLI2SR = 2;
 3522              		.loc 1 568 0
 3523 0092 0223     		movs	r3, #2
 3524 0094 0693     		str	r3, [sp, #24]
 569:main.c        ****     PeriphClkInitStruct.PLLI2S.PLLI2SQ = 2;
 3525              		.loc 1 569 0
 3526 0096 0493     		str	r3, [sp, #16]
 570:main.c        ****     PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 3527              		.loc 1 570 0
 3528 0098 0593     		str	r3, [sp, #20]
 571:main.c        ****     PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 3529              		.loc 1 571 0
 3530 009a C023     		movs	r3, #192
 3531 009c 0793     		str	r3, [sp, #28]
 572:main.c        ****     PeriphClkInitStruct.PLLSAI.PLLSAIQ = 4;
 3532              		.loc 1 572 0
 3533 009e 0423     		movs	r3, #4
 3534 00a0 0993     		str	r3, [sp, #36]
 573:main.c        ****     PeriphClkInitStruct.PLLSAI.PLLSAIP = RCC_PLLSAIP_DIV4;
 3535              		.loc 1 573 0
 3536 00a2 0893     		str	r3, [sp, #32]
 574:main.c        ****     PeriphClkInitStruct.PLLI2SDivQ = 1;
 3537              		.loc 1 574 0
 3538 00a4 0123     		movs	r3, #1
 3539 00a6 0A93     		str	r3, [sp, #40]
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 100


 575:main.c        ****     PeriphClkInitStruct.PLLSAIDivQ = 1;
 3540              		.loc 1 575 0
 3541 00a8 0B93     		str	r3, [sp, #44]
 576:main.c        ****     PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 3542              		.loc 1 576 0
 3543 00aa 0C93     		str	r3, [sp, #48]
 577:main.c        ****     PeriphClkInitStruct.RTCClockSelection = RCC_RTCCLKSOURCE_LSI;
 3544              		.loc 1 577 0
 3545 00ac 4FF40033 		mov	r3, #131072
 3546 00b0 0D93     		str	r3, [sp, #52]
 578:main.c        ****     PeriphClkInitStruct.Sai2ClockSelection = RCC_SAI2CLKSOURCE_PLLSAI;
 3547              		.loc 1 578 0
 3548 00b2 4FF40073 		mov	r3, #512
 3549 00b6 0E93     		str	r3, [sp, #56]
 579:main.c        ****     PeriphClkInitStruct.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK2;
 3550              		.loc 1 579 0
 3551 00b8 0023     		movs	r3, #0
 3552 00ba 1293     		str	r3, [sp, #72]
 580:main.c        ****     PeriphClkInitStruct.Usart6ClockSelection = RCC_USART6CLKSOURCE_PCLK2;
 3553              		.loc 1 580 0
 3554 00bc 1393     		str	r3, [sp, #76]
 581:main.c        ****     PeriphClkInitStruct.I2c1ClockSelection = RCC_I2C1CLKSOURCE_PCLK1;
 3555              		.loc 1 581 0
 3556 00be 1893     		str	r3, [sp, #96]
 582:main.c        ****     PeriphClkInitStruct.I2c3ClockSelection = RCC_I2C3CLKSOURCE_PCLK1;
 3557              		.loc 1 582 0
 3558 00c0 1B93     		str	r3, [sp, #108]
 583:main.c        ****     PeriphClkInitStruct.Clk48ClockSelection = RCC_CLK48SOURCE_PLLSAIP;
 3559              		.loc 1 583 0
 3560 00c2 1D93     		str	r3, [sp, #116]
 584:main.c        ****     PeriphClkInitStruct.Sdmmc1ClockSelection = RCC_SDMMC1CLKSOURCE_CLK48;
 3561              		.loc 1 584 0
 3562 00c4 4FF00062 		mov	r2, #134217728
 3563 00c8 2192     		str	r2, [sp, #132]
 585:main.c        ****     if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK) {
 3564              		.loc 1 585 0
 3565 00ca 2293     		str	r3, [sp, #136]
 586:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 3566              		.loc 1 586 0
 3567 00cc 02A8     		add	r0, sp, #8
 3568 00ce FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 3569              	.LVL220:
 3570 00d2 10BB     		cbnz	r0, .L283
 592:main.c        **** 
 3571              		.loc 1 592 0
 3572 00d4 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 3573              	.LVL221:
 3574 00d8 154B     		ldr	r3, .L284+12
 3575 00da A3FB0030 		umull	r3, r0, r3, r0
 3576 00de 8009     		lsrs	r0, r0, #6
 3577 00e0 FFF7FEFF 		bl	HAL_SYSTICK_Config
 3578              	.LVL222:
 596:main.c        **** 
 3579              		.loc 1 596 0
 3580 00e4 0420     		movs	r0, #4
 3581 00e6 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 3582              	.LVL223:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 101


 599:main.c        **** }
 3583              		.loc 1 599 0
 3584 00ea 0022     		movs	r2, #0
 3585 00ec 0F21     		movs	r1, #15
 3586 00ee 4FF0FF30 		mov	r0, #-1
 3587 00f2 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 3588              	.LVL224:
 600:main.c        **** 
 3589              		.loc 1 600 0
 3590 00f6 35B0     		add	sp, sp, #212
 3591              	.LCFI67:
 3592              		.cfi_remember_state
 3593              		.cfi_def_cfa_offset 4
 3594              		@ sp needed
 3595 00f8 5DF804FB 		ldr	pc, [sp], #4
 3596              	.L280:
 3597              	.LCFI68:
 3598              		.cfi_restore_state
 540:main.c        ****     }
 3599              		.loc 1 540 0
 3600 00fc 4FF40771 		mov	r1, #540
 3601 0100 0C48     		ldr	r0, .L284+16
 3602 0102 FFF7FEFF 		bl	_Error_Handler
 3603              	.LVL225:
 3604              	.L281:
 546:main.c        ****     }
 3605              		.loc 1 546 0
 3606 0106 40F22221 		movw	r1, #546
 3607 010a 0A48     		ldr	r0, .L284+16
 3608 010c FFF7FEFF 		bl	_Error_Handler
 3609              	.LVL226:
 3610              	.L282:
 559:main.c        ****     }
 3611              		.loc 1 559 0
 3612 0110 40F22F21 		movw	r1, #559
 3613 0114 0748     		ldr	r0, .L284+16
 3614 0116 FFF7FEFF 		bl	_Error_Handler
 3615              	.LVL227:
 3616              	.L283:
 587:main.c        ****     }
 3617              		.loc 1 587 0
 3618 011a 40F24B21 		movw	r1, #587
 3619 011e 0548     		ldr	r0, .L284+16
 3620 0120 FFF7FEFF 		bl	_Error_Handler
 3621              	.LVL228:
 3622              	.L285:
 3623              		.align	2
 3624              	.L284:
 3625 0124 00380240 		.word	1073887232
 3626 0128 00700040 		.word	1073770496
 3627 012c 6848B101 		.word	28395624
 3628 0130 D34D6210 		.word	274877907
 3629 0134 00000000 		.word	.LC18
 3630              		.cfi_endproc
 3631              	.LFE165:
 3633              		.section	.text.main,"ax",%progbits
 3634              		.align	1
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 102


 3635              		.global	main
 3636              		.syntax unified
 3637              		.thumb
 3638              		.thumb_func
 3639              		.fpu fpv5-sp-d16
 3641              	main:
 3642              	.LFB162:
 302:main.c        ****     /* USER CODE BEGIN 1 */
 3643              		.loc 1 302 0
 3644              		.cfi_startproc
 3645              		@ Volatile: function does not return.
 3646              		@ args = 0, pretend = 0, frame = 40
 3647              		@ frame_needed = 0, uses_anonymous_args = 0
 3648 0000 00B5     		push	{lr}
 3649              	.LCFI69:
 3650              		.cfi_def_cfa_offset 4
 3651              		.cfi_offset 14, -4
 3652 0002 8BB0     		sub	sp, sp, #44
 3653              	.LCFI70:
 3654              		.cfi_def_cfa_offset 48
 310:main.c        **** 
 3655              		.loc 1 310 0
 3656 0004 FFF7FEFF 		bl	HAL_Init
 3657              	.LVL229:
 317:main.c        **** 
 3658              		.loc 1 317 0
 3659 0008 FFF7FEFF 		bl	SystemClock_Config
 3660              	.LVL230:
 324:main.c        ****     MX_ADC3_Init();
 3661              		.loc 1 324 0
 3662 000c FFF7FEFF 		bl	MX_GPIO_Init
 3663              	.LVL231:
 325:main.c        ****     MX_CRC_Init();
 3664              		.loc 1 325 0
 3665 0010 FFF7FEFF 		bl	MX_ADC3_Init
 3666              	.LVL232:
 326:main.c        ****     MX_DCMI_Init();
 3667              		.loc 1 326 0
 3668 0014 FFF7FEFF 		bl	MX_CRC_Init
 3669              	.LVL233:
 327:main.c        ****     MX_DMA2D_Init();
 3670              		.loc 1 327 0
 3671 0018 FFF7FEFF 		bl	MX_DCMI_Init
 3672              	.LVL234:
 328:main.c        ****     MX_FMC_Init();
 3673              		.loc 1 328 0
 3674 001c FFF7FEFF 		bl	MX_DMA2D_Init
 3675              	.LVL235:
 329:main.c        ****     MX_I2C1_Init();
 3676              		.loc 1 329 0
 3677 0020 FFF7FEFF 		bl	MX_FMC_Init
 3678              	.LVL236:
 330:main.c        ****     MX_I2C3_Init();
 3679              		.loc 1 330 0
 3680 0024 FFF7FEFF 		bl	MX_I2C1_Init
 3681              	.LVL237:
 331:main.c        ****     MX_LTDC_Init();
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 103


 3682              		.loc 1 331 0
 3683 0028 FFF7FEFF 		bl	MX_I2C3_Init
 3684              	.LVL238:
 332:main.c        ****     MX_QUADSPI_Init();
 3685              		.loc 1 332 0
 3686 002c FFF7FEFF 		bl	MX_LTDC_Init
 3687              	.LVL239:
 333:main.c        ****     MX_RTC_Init();
 3688              		.loc 1 333 0
 3689 0030 FFF7FEFF 		bl	MX_QUADSPI_Init
 3690              	.LVL240:
 334:main.c        ****     MX_SAI2_Init();
 3691              		.loc 1 334 0
 3692 0034 FFF7FEFF 		bl	MX_RTC_Init
 3693              	.LVL241:
 335:main.c        ****     MX_SDMMC1_SD_Init();
 3694              		.loc 1 335 0
 3695 0038 FFF7FEFF 		bl	MX_SAI2_Init
 3696              	.LVL242:
 336:main.c        ****     MX_SPDIFRX_Init();
 3697              		.loc 1 336 0
 3698 003c FFF7FEFF 		bl	MX_SDMMC1_SD_Init
 3699              	.LVL243:
 337:main.c        ****     MX_SPI2_Init();
 3700              		.loc 1 337 0
 3701 0040 FFF7FEFF 		bl	MX_SPDIFRX_Init
 3702              	.LVL244:
 338:main.c        ****     MX_TIM1_Init();
 3703              		.loc 1 338 0
 3704 0044 FFF7FEFF 		bl	MX_SPI2_Init
 3705              	.LVL245:
 339:main.c        ****     MX_TIM2_Init();
 3706              		.loc 1 339 0
 3707 0048 FFF7FEFF 		bl	MX_TIM1_Init
 3708              	.LVL246:
 340:main.c        ****     MX_TIM3_Init();
 3709              		.loc 1 340 0
 3710 004c FFF7FEFF 		bl	MX_TIM2_Init
 3711              	.LVL247:
 341:main.c        ****     MX_TIM5_Init();
 3712              		.loc 1 341 0
 3713 0050 FFF7FEFF 		bl	MX_TIM3_Init
 3714              	.LVL248:
 342:main.c        ****     MX_TIM8_Init();
 3715              		.loc 1 342 0
 3716 0054 FFF7FEFF 		bl	MX_TIM5_Init
 3717              	.LVL249:
 343:main.c        ****     MX_TIM12_Init();
 3718              		.loc 1 343 0
 3719 0058 FFF7FEFF 		bl	MX_TIM8_Init
 3720              	.LVL250:
 344:main.c        ****     MX_USART1_UART_Init();
 3721              		.loc 1 344 0
 3722 005c FFF7FEFF 		bl	MX_TIM12_Init
 3723              	.LVL251:
 345:main.c        ****     MX_USART6_UART_Init();
 3724              		.loc 1 345 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 104


 3725 0060 FFF7FEFF 		bl	MX_USART1_UART_Init
 3726              	.LVL252:
 346:main.c        ****     MX_TIM7_Init();
 3727              		.loc 1 346 0
 3728 0064 FFF7FEFF 		bl	MX_USART6_UART_Init
 3729              	.LVL253:
 347:main.c        ****     /* USER CODE BEGIN 2 */
 3730              		.loc 1 347 0
 3731 0068 FFF7FEFF 		bl	MX_TIM7_Init
 3732              	.LVL254:
 349:main.c        **** 
 3733              		.loc 1 349 0
 3734 006c 1248     		ldr	r0, .L289
 3735 006e FFF7FEFF 		bl	debug_init
 3736              	.LVL255:
 351:main.c        ****             "STM32F746 Discovery Project"
 3737              		.loc 1 351 0
 3738 0072 1248     		ldr	r0, .L289+4
 3739 0074 FFF7FEFF 		bl	xprintf
 3740              	.LVL256:
 356:main.c        ****     TS_Initialize_Touchscreen();
 3741              		.loc 1 356 0
 3742 0078 FFF7FEFF 		bl	LCD_Initialize_Screen
 3743              	.LVL257:
 357:main.c        **** 
 3744              		.loc 1 357 0
 3745 007c FFF7FEFF 		bl	TS_Initialize_Touchscreen
 3746              	.LVL258:
 375:main.c        ****     osThreadDef(touchscreenTask, StartTouchscreenTask, osPriorityHigh, 1, THREAD_STACK_SIZE);
 3747              		.loc 1 375 0
 3748 0080 0F4C     		ldr	r4, .L289+8
 3749 0082 05AD     		add	r5, sp, #20
 3750 0084 2646     		mov	r6, r4
 3751 0086 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 3752 0088 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 3753 008a 3368     		ldr	r3, [r6]
 3754 008c 2B60     		str	r3, [r5]
 376:main.c        ****     touchscreenTaskHandle = osThreadCreate(osThread(touchscreenTask), NULL);
 3755              		.loc 1 376 0
 3756 008e 6D46     		mov	r5, sp
 3757 0090 1434     		adds	r4, r4, #20
 3758 0092 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 3759 0094 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 3760 0096 2368     		ldr	r3, [r4]
 3761 0098 2B60     		str	r3, [r5]
 377:main.c        **** 	defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 3762              		.loc 1 377 0
 3763 009a 0021     		movs	r1, #0
 3764 009c 6846     		mov	r0, sp
 3765 009e FFF7FEFF 		bl	osThreadCreate
 3766              	.LVL259:
 3767 00a2 084B     		ldr	r3, .L289+12
 3768 00a4 1860     		str	r0, [r3]
 378:main.c        ****     
 3769              		.loc 1 378 0
 3770 00a6 0021     		movs	r1, #0
 3771 00a8 05A8     		add	r0, sp, #20
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 105


 3772 00aa FFF7FEFF 		bl	osThreadCreate
 3773              	.LVL260:
 3774 00ae 064B     		ldr	r3, .L289+16
 3775 00b0 1860     		str	r0, [r3]
 391:main.c        **** 
 3776              		.loc 1 391 0
 3777 00b2 FFF7FEFF 		bl	osKernelStart
 3778              	.LVL261:
 3779              	.L287:
 3780 00b6 FEE7     		b	.L287
 3781              	.L290:
 3782              		.align	2
 3783              	.L289:
 3784 00b8 00000000 		.word	huart1
 3785 00bc 00000000 		.word	.LC19
 3786 00c0 00000000 		.word	.LANCHOR7
 3787 00c4 00000000 		.word	touchscreenTaskHandle
 3788 00c8 00000000 		.word	defaultTaskHandle
 3789              		.cfi_endproc
 3790              	.LFE162:
 3792              		.comm	buff,8192,4
 3793              		.comm	touchscreenTaskHandle,4,4
 3794              		.comm	defaultTaskHandle,4,4
 3795              		.comm	hsdram1,52,4
 3796              		.comm	huart6,112,4
 3797              		.comm	huart1,112,4
 3798              		.comm	htim12,64,4
 3799              		.comm	htim8,64,4
 3800              		.comm	htim7,64,4
 3801              		.comm	htim5,64,4
 3802              		.comm	htim3,64,4
 3803              		.comm	htim2,64,4
 3804              		.comm	htim1,64,4
 3805              		.comm	hspi2,100,4
 3806              		.comm	hspdif,76,4
 3807              		.comm	hsd1,132,4
 3808              		.comm	hsai_BlockB2,132,4
 3809              		.comm	hsai_BlockA2,132,4
 3810              		.comm	hrtc,32,4
 3811              		.comm	hqspi,76,4
 3812              		.comm	hltdc,168,4
 3813              		.comm	hi2c3,76,4
 3814              		.comm	hi2c1,76,4
 3815              		.comm	hdma2d,64,4
 3816              		.comm	hdcmi,80,4
 3817              		.comm	hcrc,36,4
 3818              		.comm	hadc3,72,4
 3819              		.section	.rodata
 3820              		.align	2
 3821              		.set	.LANCHOR7,. + 0
 3822              	.LC20:
 3823 0000 10000000 		.word	.LC0
 3824 0004 00000000 		.word	StartDefaultTask
 3825 0008 0000     		.short	0
 3826 000a 0000     		.space	2
 3827 000c 01000000 		.word	1
 3828 0010 00080000 		.word	2048
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 106


 3829              	.LC21:
 3830 0014 00000000 		.word	.LC2
 3831 0018 00000000 		.word	StartTouchscreenTask
 3832 001c 0200     		.short	2
 3833 001e 0000     		.space	2
 3834 0020 01000000 		.word	1
 3835 0024 00080000 		.word	2048
 3836              		.section	.bss.TS_State,"aw",%nobits
 3837              		.align	2
 3838              		.set	.LANCHOR2,. + 0
 3841              	TS_State:
 3842 0000 00000000 		.space	44
 3842      00000000 
 3842      00000000 
 3842      00000000 
 3842      00000000 
 3843              		.section	.bss.buf_offs,"aw",%nobits
 3844              		.set	.LANCHOR6,. + 0
 3847              	buf_offs:
 3848 0000 00       		.space	1
 3849              		.section	.bss.fpos,"aw",%nobits
 3850              		.align	2
 3851              		.set	.LANCHOR5,. + 0
 3854              	fpos:
 3855 0000 00000000 		.space	4
 3856              		.section	.bss.player_state,"aw",%nobits
 3857              		.set	.LANCHOR3,. + 0
 3860              	player_state:
 3861 0000 00       		.space	1
 3862              		.section	.bss.testFile,"aw",%nobits
 3863              		.align	2
 3864              		.set	.LANCHOR4,. + 0
 3867              	testFile:
 3868 0000 00000000 		.space	560
 3868      00000000 
 3868      00000000 
 3868      00000000 
 3868      00000000 
 3869              		.section	.rodata.MX_ADC3_Init.str1.4,"aMS",%progbits,1
 3870              		.align	2
 3871              	.LC18:
 3872 0000 6D61696E 		.ascii	"main.c\000"
 3872      2E6300
 3873              		.section	.rodata.StartDefaultTask.str1.4,"aMS",%progbits,1
 3874              		.align	2
 3875              	.LC4:
 3876 0000 57616974 		.ascii	"Waiting for USB mass storage.\015\012\000"
 3876      696E6720 
 3876      666F7220 
 3876      55534220 
 3876      6D617373 
 3877              	.LC5:
 3878 0020 496E6974 		.ascii	"Initializing audio codec.\015\012\000"
 3878      69616C69 
 3878      7A696E67 
 3878      20617564 
 3878      696F2063 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 107


 3879              	.LC6:
 3880 003c 41756469 		.ascii	"Audio codec initialized successfully.\015\012\000"
 3880      6F20636F 
 3880      64656320 
 3880      696E6974 
 3880      69616C69 
 3881              	.LC7:
 3882 0064 41756469 		.ascii	"Audio codec initialized with errors.\015\012\000"
 3882      6F20636F 
 3882      64656320 
 3882      696E6974 
 3882      69616C69 
 3883 008b 00       		.space	1
 3884              	.LC8:
 3885 008c 4F646562 		.ascii	"Odebrano polecenie a\012\000"
 3885      72616E6F 
 3885      20706F6C 
 3885      6563656E 
 3885      69652061 
 3886 00a2 0000     		.space	2
 3887              	.LC9:
 3888 00a4 706C6179 		.ascii	"play command...\012\000"
 3888      20636F6D 
 3888      6D616E64 
 3888      2E2E2E0A 
 3888      00
 3889 00b5 000000   		.space	3
 3890              	.LC10:
 3891 00b8 616C7265 		.ascii	"already playing\012\000"
 3891      61647920 
 3891      706C6179 
 3891      696E670A 
 3891      00
 3892 00c9 000000   		.space	3
 3893              	.LC11:
 3894 00cc 313A2F74 		.ascii	"1:/testwave.wav\000"
 3894      65737477 
 3894      6176652E 
 3894      77617600 
 3895              	.LC12:
 3896 00dc 77617665 		.ascii	"wave file open OK\012\000"
 3896      2066696C 
 3896      65206F70 
 3896      656E204F 
 3896      4B0A00
 3897 00ef 00       		.space	1
 3898              	.LC13:
 3899 00f0 77617665 		.ascii	"wave file open ERROR, res = %d\012\000"
 3899      2066696C 
 3899      65206F70 
 3899      656E2045 
 3899      52524F52 
 3900              	.LC14:
 3901 0110 4E696520 		.ascii	"Nie rozpoznane polecenie: %c = %02X\012\000"
 3901      726F7A70 
 3901      6F7A6E61 
 3901      6E652070 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 108


 3901      6F6C6563 
 3902 0135 000000   		.space	3
 3903              	.LC15:
 3904 0138 665F7265 		.ascii	"f_read error on half\012\000"
 3904      61642065 
 3904      72726F72 
 3904      206F6E20 
 3904      68616C66 
 3905 014e 0000     		.space	2
 3906              	.LC16:
 3907 0150 665F7265 		.ascii	"f_read error on full\012\000"
 3907      61642065 
 3907      72726F72 
 3907      206F6E20 
 3907      66756C6C 
 3908 0166 0000     		.space	2
 3909              	.LC17:
 3910 0168 73746F70 		.ascii	"stop at eof\012\000"
 3910      20617420 
 3910      656F660A 
 3910      00
 3911              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 3912              		.align	2
 3913              	.LC19:
 3914 0000 1B5B303B 		.ascii	"\033[0;32mSTM32F746 Discovery Project\033[0;39m\015"
 3914      33326D53 
 3914      544D3332 
 3914      46373436 
 3914      20446973 
 3915 002a 0A00     		.ascii	"\012\000"
 3916              		.section	.rodata.str1.4,"aMS",%progbits,1
 3917              		.align	2
 3918              	.LC2:
 3919 0000 746F7563 		.ascii	"touchscreenTask\000"
 3919      68736372 
 3919      65656E54 
 3919      61736B00 
 3920              	.LC0:
 3921 0010 64656661 		.ascii	"defaultTask\000"
 3921      756C7454 
 3921      61736B00 
 3922              		.section	.sdram,"aw",%progbits
 3923              		.align	2
 3924              		.set	.LANCHOR0,. + 0
 3925              		.set	.LANCHOR1,. + 521280
 3928              	lcd_image_bg:
 3929 0000 00000000 		.space	522240
 3929      00000000 
 3929      00000000 
 3929      00000000 
 3929      00000000 
 3932              	lcd_image_fg:
 3933 7f800 00000000 		.space	522240
 3933      00000000 
 3933      00000000 
 3933      00000000 
 3933      00000000 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 109


 3934              		.text
 3935              	.Letext0:
 3936              		.file 2 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\machine\\_default_types.h"
 3937              		.file 3 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\sys\\_stdint.h"
 3938              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 3939              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 3940              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 3941              		.file 7 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f7xx.h"
 3942              		.file 8 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\sys\\lock.h"
 3943              		.file 9 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\sys\\_types.h"
 3944              		.file 10 "c:\\gcc_toolchain\\6_2017-q1-update\\lib\\gcc\\arm-none-eabi\\6.3.1\\include\\stddef.h"
 3945              		.file 11 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\sys\\reent.h"
 3946              		.file 12 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 3947              		.file 13 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc_ex.h"
 3948              		.file 14 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc.h"
 3949              		.file 15 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_gpio.h"
 3950              		.file 16 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 3951              		.file 17 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_adc.h"
 3952              		.file 18 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_crc.h"
 3953              		.file 19 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma2d.h"
 3954              		.file 20 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dcmi.h"
 3955              		.file 21 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_eth.h"
 3956              		.file 22 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_fmc.h"
 3957              		.file 23 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_sdram.h"
 3958              		.file 24 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_i2c.h"
 3959              		.file 25 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_ltdc.h"
 3960              		.file 26 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_qspi.h"
 3961              		.file 27 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rtc.h"
 3962              		.file 28 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_sai.h"
 3963              		.file 29 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_sdmmc.h"
 3964              		.file 30 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_sd.h"
 3965              		.file 31 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_spdifrx.h"
 3966              		.file 32 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_spi.h"
 3967              		.file 33 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_tim.h"
 3968              		.file 34 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_tim_ex.h"
 3969              		.file 35 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_uart.h"
 3970              		.file 36 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 3971              		.file 37 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 3972              		.file 38 "Middlewares/Third_Party/FreeRTOS/Source/include/semphr.h"
 3973              		.file 39 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 3974              		.file 40 "Middlewares/Third_Party/FatFs/src/integer.h"
 3975              		.file 41 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\stdlib.h"
 3976              		.file 42 "Middlewares/ST/STM32_USB_Host_Library/Core/Inc/usbh_def.h"
 3977              		.file 43 "Middlewares/ST/STM32_USB_Host_Library/Core/Inc/usbh_ctlreq.h"
 3978              		.file 44 "Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc/usbh_msc.h"
 3979              		.file 45 "Middlewares/Third_Party/FatFs/src/ff.h"
 3980              		.file 46 "Middlewares/Third_Party/FatFs/src/diskio.h"
 3981              		.file 47 "Middlewares/Third_Party/FatFs/src/ff_gen_drv.h"
 3982              		.file 48 "Inc/sd_diskio.h"
 3983              		.file 49 "Inc/usbh_diskio.h"
 3984              		.file 50 "Inc/fatfs.h"
 3985              		.file 51 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\time.h"
 3986              		.file 52 "Middlewares/Third_Party/LwIP/src/include/lwip/arch.h"
 3987              		.file 53 "Middlewares/Third_Party/LwIP/src/include/lwip/memp.h"
 3988              		.file 54 "Middlewares/Third_Party/LwIP/src/include/lwip/priv/memp_priv.h"
 3989              		.file 55 "Middlewares/Third_Party/LwIP/src/include/lwip/err.h"
 3990              		.file 56 "Middlewares/Third_Party/LwIP/src/include/lwip/pbuf.h"
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 110


 3991              		.file 57 "Middlewares/Third_Party/LwIP/src/include/lwip/ip4_addr.h"
 3992              		.file 58 "Middlewares/Third_Party/LwIP/src/include/lwip/ip_addr.h"
 3993              		.file 59 "Middlewares/Third_Party/LwIP/src/include/lwip/netif.h"
 3994              		.file 60 "Middlewares/Third_Party/LwIP/src/include/lwip/prot/ip4.h"
 3995              		.file 61 "Middlewares/Third_Party/LwIP/src/include/lwip/prot/ethernet.h"
 3996              		.file 62 "Middlewares/Third_Party/LwIP/src/include/netif/ethernet.h"
 3997              		.file 63 "Middlewares/Third_Party/LwIP/src/include/lwip/ip.h"
 3998              		.file 64 "Middlewares/Third_Party/LwIP/src/include/lwip/udp.h"
 3999              		.file 65 "Middlewares/Third_Party/LwIP/system/arch/sys_arch.h"
 4000              		.file 66 "Middlewares/Third_Party/LwIP/src/include/lwip/timeouts.h"
 4001              		.file 67 "Middlewares/Third_Party/LwIP/src/include/lwip/tcpip.h"
 4002              		.file 68 "Inc/lwip.h"
 4003              		.file 69 "Inc/usb_host.h"
 4004              		.file 70 "Middlewares/Third_Party/LwIP/src/include/lwip/errno.h"
 4005              		.file 71 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\sys\\unistd.h"
 4006              		.file 72 "c:\\users\\student\\music\\embedded_player\\utilities\\fonts\\fonts.h"
 4007              		.file 73 "Drivers/BSP/STM32746G-Discovery/../Components/ft5336/../Common/ts.h"
 4008              		.file 74 "Drivers/BSP/STM32746G-Discovery/../Components/ft5336/ft5336.h"
 4009              		.file 75 "Drivers/BSP/STM32746G-Discovery/stm32746g_discovery_ts.h"
 4010              		.file 76 "Drivers/BSP/STM32746G-Discovery/../Components/wm8994/../Common/audio.h"
 4011              		.file 77 "Drivers/BSP/STM32746G-Discovery/../Components/wm8994/wm8994.h"
 4012              		.file 78 "Drivers/BSP/STM32746G-Discovery/stm32746g_discovery_audio.h"
 4013              		.file 79 "Middlewares/Third_Party/LwIP/src/include/lwip/inet.h"
 4014              		.file 80 "Middlewares/Third_Party/LwIP/src/include/lwip/netdb.h"
 4015              		.file 81 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
 4016              		.file 82 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rtc_ex.h"
 4017              		.file 83 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_i2c_ex.h"
 4018              		.file 84 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_pwr_ex.h"
 4019              		.file 85 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_cortex.h"
 4020              		.file 86 "Modules/gui.h"
 4021              		.file 87 "Inc/term_io.h"
 4022              		.file 88 "Modules/audio_loader.h"
 4023              		.file 89 "Inc/dbgu.h"
 4024              		.file 90 "Drivers/BSP/STM32746G-Discovery/stm32746g_discovery_lcd.h"
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 111


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:18     .text.MX_SDMMC1_SD_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:24     .text.MX_SDMMC1_SD_Init:00000000 MX_SDMMC1_SD_Init
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:53     .text.MX_SDMMC1_SD_Init:00000018 $d
                            *COM*:00000084 hsd1
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:59     .text.MX_GPIO_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:65     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:474    .text.MX_GPIO_Init:00000270 $d
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:490    .text.LCD_Initialize_Screen:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:496    .text.LCD_Initialize_Screen:00000000 LCD_Initialize_Screen
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:566    .text.LCD_Initialize_Screen:00000064 $d
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:572    .text.TS_Initialize_Touchscreen:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:578    .text.TS_Initialize_Touchscreen:00000000 TS_Initialize_Touchscreen
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:617    .text.LCD_Draw_GUI:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:623    .text.LCD_Draw_GUI:00000000 LCD_Draw_GUI
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:642    .text.StartTouchscreenTask:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:649    .text.StartTouchscreenTask:00000000 StartTouchscreenTask
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:682    .text.StartTouchscreenTask:0000001c $d
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:688    .text.__io_putchar:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:695    .text.__io_putchar:00000000 __io_putchar
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:720    .text.__io_putchar:00000014 $d
                            *COM*:00000070 huart1
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:725    .text.inkey:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:732    .text.inkey:00000000 inkey
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:764    .text.inkey:0000001c $d
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:769    .text.StartDefaultTask:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:776    .text.StartDefaultTask:00000000 StartDefaultTask
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:1062   .text.StartDefaultTask:0000017c $d
                            *COM*:00002000 buff
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:1089   .text.BSP_AUDIO_OUT_TransferComplete_CallBack:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:1096   .text.BSP_AUDIO_OUT_TransferComplete_CallBack:00000000 BSP_AUDIO_OUT_TransferComplete_CallBack
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:1111   .text.BSP_AUDIO_OUT_TransferComplete_CallBack:00000008 $d
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:1116   .text.BSP_AUDIO_OUT_HalfTransfer_CallBack:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:1123   .text.BSP_AUDIO_OUT_HalfTransfer_CallBack:00000000 BSP_AUDIO_OUT_HalfTransfer_CallBack
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:1138   .text.BSP_AUDIO_OUT_HalfTransfer_CallBack:00000008 $d
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:1143   .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:1150   .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:1180   .text.HAL_TIM_PeriodElapsedCallback:00000014 $d
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:1185   .text._Error_Handler:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:1192   .text._Error_Handler:00000000 _Error_Handler
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:1207   .text.MX_ADC3_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:1213   .text.MX_ADC3_Init:00000000 MX_ADC3_Init
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:1300   .text.MX_ADC3_Init:00000060 $d
                            *COM*:00000048 hadc3
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:1308   .text.MX_CRC_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:1314   .text.MX_CRC_Init:00000000 MX_CRC_Init
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:1355   .text.MX_CRC_Init:00000028 $d
                            *COM*:00000024 hcrc
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:1362   .text.MX_DCMI_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:1368   .text.MX_DCMI_Init:00000000 MX_DCMI_Init
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:1420   .text.MX_DCMI_Init:00000034 $d
                            *COM*:00000050 hdcmi
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:1427   .text.MX_DMA2D_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:1433   .text.MX_DMA2D_Init:00000000 MX_DMA2D_Init
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:1489   .text.MX_DMA2D_Init:00000040 $d
                            *COM*:00000040 hdma2d
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 112


C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:1496   .text.MX_FMC_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:1502   .text.MX_FMC_Init:00000000 MX_FMC_Init
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:1586   .text.MX_FMC_Init:00000060 $d
                            *COM*:00000034 hsdram1
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:1593   .text.MX_I2C1_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:1599   .text.MX_I2C1_Init:00000000 MX_I2C1_Init
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:1671   .text.MX_I2C1_Init:00000058 $d
                            *COM*:0000004c hi2c1
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:1679   .text.MX_I2C3_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:1685   .text.MX_I2C3_Init:00000000 MX_I2C3_Init
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:1757   .text.MX_I2C3_Init:00000058 $d
                            *COM*:0000004c hi2c3
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:1765   .text.MX_LTDC_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:1771   .text.MX_LTDC_Init:00000000 MX_LTDC_Init
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:1898   .text.MX_LTDC_Init:000000ac $d
                            *COM*:000000a8 hltdc
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:1905   .text.MX_QUADSPI_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:1911   .text.MX_QUADSPI_Init:00000000 MX_QUADSPI_Init
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:1959   .text.MX_QUADSPI_Init:00000030 $d
                            *COM*:0000004c hqspi
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:1966   .text.MX_RTC_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:1972   .text.MX_RTC_Init:00000000 MX_RTC_Init
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:2143   .text.MX_RTC_Init:000000f8 $d
                            *COM*:00000020 hrtc
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:2150   .text.MX_SAI2_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:2156   .text.MX_SAI2_Init:00000000 MX_SAI2_Init
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:2297   .text.MX_SAI2_Init:0000009c $d
                            *COM*:00000084 hsai_BlockA2
                            *COM*:00000084 hsai_BlockB2
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:2307   .text.MX_SPDIFRX_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:2313   .text.MX_SPDIFRX_Init:00000000 MX_SPDIFRX_Init
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:2363   .text.MX_SPDIFRX_Init:00000034 $d
                            *COM*:0000004c hspdif
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:2369   .text.MX_SPI2_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:2375   .text.MX_SPI2_Init:00000000 MX_SPI2_Init
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:2436   .text.MX_SPI2_Init:00000048 $d
                            *COM*:00000064 hspi2
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:2443   .text.MX_TIM1_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:2449   .text.MX_TIM1_Init:00000000 MX_TIM1_Init
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:2620   .text.MX_TIM1_Init:000000e4 $d
                            *COM*:00000040 htim1
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:2627   .text.MX_TIM2_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:2633   .text.MX_TIM2_Init:00000000 MX_TIM2_Init
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:2752   .text.MX_TIM2_Init:0000009c $d
                            *COM*:00000040 htim2
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:2758   .text.MX_TIM3_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:2764   .text.MX_TIM3_Init:00000000 MX_TIM3_Init
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:2883   .text.MX_TIM3_Init:0000009c $d
                            *COM*:00000040 htim3
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:2890   .text.MX_TIM5_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:2896   .text.MX_TIM5_Init:00000000 MX_TIM5_Init
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:3016   .text.MX_TIM5_Init:0000009c $d
                            *COM*:00000040 htim5
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:3023   .text.MX_TIM8_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:3029   .text.MX_TIM8_Init:00000000 MX_TIM8_Init
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:3115   .text.MX_TIM8_Init:00000068 $d
                            *COM*:00000040 htim8
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 113


C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:3122   .text.MX_TIM12_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:3128   .text.MX_TIM12_Init:00000000 MX_TIM12_Init
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:3204   .text.MX_TIM12_Init:00000054 $d
                            *COM*:00000040 htim12
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:3211   .text.MX_USART1_UART_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:3217   .text.MX_USART1_UART_Init:00000000 MX_USART1_UART_Init
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:3267   .text.MX_USART1_UART_Init:00000034 $d
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:3274   .text.MX_USART6_UART_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:3280   .text.MX_USART6_UART_Init:00000000 MX_USART6_UART_Init
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:3330   .text.MX_USART6_UART_Init:00000034 $d
                            *COM*:00000070 huart6
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:3337   .text.MX_TIM7_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:3343   .text.MX_TIM7_Init:00000000 MX_TIM7_Init
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:3408   .text.MX_TIM7_Init:00000044 $d
                            *COM*:00000040 htim7
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:3415   .text.SystemClock_Config:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:3422   .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:3625   .text.SystemClock_Config:00000124 $d
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:3634   .text.main:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:3641   .text.main:00000000 main
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:3784   .text.main:000000b8 $d
                            *COM*:00000004 touchscreenTaskHandle
                            *COM*:00000004 defaultTaskHandle
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:3820   .rodata:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:3837   .bss.TS_State:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:3841   .bss.TS_State:00000000 TS_State
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:3847   .bss.buf_offs:00000000 buf_offs
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:3848   .bss.buf_offs:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:3850   .bss.fpos:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:3854   .bss.fpos:00000000 fpos
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:3860   .bss.player_state:00000000 player_state
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:3861   .bss.player_state:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:3863   .bss.testFile:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:3867   .bss.testFile:00000000 testFile
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:3870   .rodata.MX_ADC3_Init.str1.4:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:3874   .rodata.StartDefaultTask.str1.4:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:3912   .rodata.main.str1.4:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:3917   .rodata.str1.4:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:3923   .sdram:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:3928   .sdram:00000000 lcd_image_bg
C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s:3932   .sdram:0007f800 lcd_image_fg
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
BSP_LCD_Init
BSP_LCD_LayerDefaultInit
BSP_LCD_DisplayOn
BSP_LCD_SelectLayer
BSP_LCD_Clear
BSP_LCD_SetBackColor
BSP_LCD_SetColorKeying
BSP_LCD_SetTransparency
BSP_LCD_GetXSize
BSP_LCD_GetYSize
BSP_TS_Init
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 114


GUI_DrawButtons
vTaskDelay
BSP_TS_GetState
GUI_HandleTouch
CON_HandleButtonTouched
MX_FATFS_Init
MX_USB_HOST_Init
xprintf
BSP_AUDIO_OUT_Init
BSP_AUDIO_OUT_SetAudioFrameSlot
AUDIO_L_PerformScan
f_open
BSP_AUDIO_OUT_Play
f_read
BSP_AUDIO_OUT_Stop
f_close
Appli_state
HAL_IncTick
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_CRC_Init
HAL_DCMI_Init
HAL_DMA2D_Init
HAL_DMA2D_ConfigLayer
HAL_SDRAM_Init
HAL_I2C_Init
HAL_I2CEx_ConfigAnalogFilter
HAL_I2CEx_ConfigDigitalFilter
HAL_LTDC_Init
HAL_LTDC_ConfigLayer
HAL_QSPI_Init
HAL_RTC_Init
HAL_RTC_SetTime
HAL_RTC_SetDate
HAL_RTC_SetAlarm
HAL_RTCEx_SetTimeStamp
HAL_SAI_Init
HAL_SPDIFRX_Init
HAL_SPI_Init
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIMEx_ConfigBreakDeadTime
HAL_TIM_MspPostInit
HAL_UART_Init
HAL_RCC_OscConfig
HAL_PWREx_EnableOverDrive
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
HAL_Init
debug_init
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccMbXhsc.s 			page 115


osThreadCreate
osKernelStart
