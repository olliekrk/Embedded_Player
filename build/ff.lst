ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"ff.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.ld_word,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-sp-d16
  24              	ld_word:
  25              	.LFB141:
  26              		.file 1 "Middlewares/Third_Party/FatFs/src/ff.c"
   1:Middlewares/Third_Party/FatFs/src/ff.c **** /*----------------------------------------------------------------------------/
   2:Middlewares/Third_Party/FatFs/src/ff.c **** /  FatFs - Generic FAT file system module  R0.12c                             /
   3:Middlewares/Third_Party/FatFs/src/ff.c **** /-----------------------------------------------------------------------------/
   4:Middlewares/Third_Party/FatFs/src/ff.c **** /
   5:Middlewares/Third_Party/FatFs/src/ff.c **** / Copyright (C) 2017, ChaN, all right reserved.
   6:Middlewares/Third_Party/FatFs/src/ff.c **** /
   7:Middlewares/Third_Party/FatFs/src/ff.c **** / FatFs module is an open source software. Redistribution and use of FatFs in
   8:Middlewares/Third_Party/FatFs/src/ff.c **** / source and binary forms, with or without modification, are permitted provided
   9:Middlewares/Third_Party/FatFs/src/ff.c **** / that the following condition is met:
  10:Middlewares/Third_Party/FatFs/src/ff.c **** /
  11:Middlewares/Third_Party/FatFs/src/ff.c **** / 1. Redistributions of source code must retain the above copyright notice,
  12:Middlewares/Third_Party/FatFs/src/ff.c **** /    this condition and the following disclaimer.
  13:Middlewares/Third_Party/FatFs/src/ff.c **** /
  14:Middlewares/Third_Party/FatFs/src/ff.c **** / This software is provided by the copyright holder and contributors "AS IS"
  15:Middlewares/Third_Party/FatFs/src/ff.c **** / and any warranties related to this software are DISCLAIMED.
  16:Middlewares/Third_Party/FatFs/src/ff.c **** / The copyright owner or contributors be NOT LIABLE for any damages caused
  17:Middlewares/Third_Party/FatFs/src/ff.c **** / by use of this software.
  18:Middlewares/Third_Party/FatFs/src/ff.c **** /----------------------------------------------------------------------------*/
  19:Middlewares/Third_Party/FatFs/src/ff.c **** 
  20:Middlewares/Third_Party/FatFs/src/ff.c **** 
  21:Middlewares/Third_Party/FatFs/src/ff.c **** #include "ff.h"			/* Declarations of FatFs API */
  22:Middlewares/Third_Party/FatFs/src/ff.c **** #include "diskio.h"		/* Declarations of device I/O functions */
  23:Middlewares/Third_Party/FatFs/src/ff.c **** 
  24:Middlewares/Third_Party/FatFs/src/ff.c **** 
  25:Middlewares/Third_Party/FatFs/src/ff.c **** /*--------------------------------------------------------------------------
  26:Middlewares/Third_Party/FatFs/src/ff.c **** 
  27:Middlewares/Third_Party/FatFs/src/ff.c ****    Module Private Definitions
  28:Middlewares/Third_Party/FatFs/src/ff.c **** 
  29:Middlewares/Third_Party/FatFs/src/ff.c **** ---------------------------------------------------------------------------*/
  30:Middlewares/Third_Party/FatFs/src/ff.c **** 
  31:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FATFS != 68300	/* Revision ID */
  32:Middlewares/Third_Party/FatFs/src/ff.c **** #error Wrong include file (ff.h).
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 2


  33:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
  34:Middlewares/Third_Party/FatFs/src/ff.c **** 
  35:Middlewares/Third_Party/FatFs/src/ff.c **** 
  36:Middlewares/Third_Party/FatFs/src/ff.c **** /* DBCS code ranges and SBCS upper conversion tables */
  37:Middlewares/Third_Party/FatFs/src/ff.c **** 
  38:Middlewares/Third_Party/FatFs/src/ff.c **** #if _CODE_PAGE == 932	/* Japanese Shift-JIS */
  39:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0x81	/* DBC 1st byte range 1 start */
  40:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1E	0x9F	/* DBC 1st byte range 1 end */
  41:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF2S	0xE0	/* DBC 1st byte range 2 start */
  42:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF2E	0xFC	/* DBC 1st byte range 2 end */
  43:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1S	0x40	/* DBC 2nd byte range 1 start */
  44:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1E	0x7E	/* DBC 2nd byte range 1 end */
  45:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2S	0x80	/* DBC 2nd byte range 2 start */
  46:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2E	0xFC	/* DBC 2nd byte range 2 end */
  47:Middlewares/Third_Party/FatFs/src/ff.c **** 
  48:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 936	/* Simplified Chinese GBK */
  49:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0x81
  50:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1E	0xFE
  51:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1S	0x40
  52:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1E	0x7E
  53:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2S	0x80
  54:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2E	0xFE
  55:Middlewares/Third_Party/FatFs/src/ff.c **** 
  56:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 949	/* Korean */
  57:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0x81
  58:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1E	0xFE
  59:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1S	0x41
  60:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1E	0x5A
  61:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2S	0x61
  62:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2E	0x7A
  63:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS3S	0x81
  64:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS3E	0xFE
  65:Middlewares/Third_Party/FatFs/src/ff.c **** 
  66:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 950	/* Traditional Chinese Big5 */
  67:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0x81
  68:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1E	0xFE
  69:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1S	0x40
  70:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1E	0x7E
  71:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2S	0xA1
  72:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2E	0xFE
  73:Middlewares/Third_Party/FatFs/src/ff.c **** 
  74:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 437	/* U.S. */
  75:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
  76:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x45,0x41,0x8E,0x41,0x8F,0x80,0x45,0x45,0x45,0x49,0x49,0x49,0x8E,0x8F, \
  77:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x92,0x92,0x4F,0x99,0x4F,0x55,0x55,0x59,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
  78:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x41,0x49,0x4F,0x55,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
  79:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
  80:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
  81:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
  82:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
  83:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
  84:Middlewares/Third_Party/FatFs/src/ff.c **** 
  85:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 720	/* Arabic */
  86:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
  87:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F, \
  88:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
  89:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA0,0xA1,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 3


  90:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
  91:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
  92:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
  93:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
  94:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
  95:Middlewares/Third_Party/FatFs/src/ff.c **** 
  96:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 737	/* Greek */
  97:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
  98:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F, \
  99:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x92,0x92,0x93,0x94,0x95,0x96,0x97,0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87, \
 100:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x90,0x91,0xAA,0x92,0x93,0x94,0x95,0x96, \
 101:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 102:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 103:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 104:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x97,0xEA,0xEB,0xEC,0xE4,0xED,0xEE,0xEF,0xF5,0xF0,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
 105:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 106:Middlewares/Third_Party/FatFs/src/ff.c **** 
 107:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 771	/* KBL */
 108:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 109:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F, \
 110:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 111:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F, \
 112:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 113:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 114:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDC,0xDE,0xDE, \
 115:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 116:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF0,0xF2,0xF2,0xF4,0xF4,0xF6,0xF6,0xF8,0xF8,0xFA,0xFA,0xFC,0xFC,0xFE,0xFF}
 117:Middlewares/Third_Party/FatFs/src/ff.c **** 
 118:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 775	/* Baltic */
 119:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 120:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x91,0xA0,0x8E,0x95,0x8F,0x80,0xAD,0xED,0x8A,0x8A,0xA1,0x8D,0x8E,0x8F, \
 121:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x92,0x92,0xE2,0x99,0x95,0x96,0x97,0x97,0x99,0x9A,0x9D,0x9C,0x9D,0x9E,0x9F, \
 122:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA0,0xA1,0xE0,0xA3,0xA3,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 123:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 124:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 125:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB5,0xB6,0xB7,0xB8,0xBD,0xBE,0xC6,0xC7,0xA5,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 126:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE5,0xE5,0xE6,0xE3,0xE8,0xE8,0xEA,0xEA,0xEE,0xED,0xEE,0xEF, \
 127:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 128:Middlewares/Third_Party/FatFs/src/ff.c **** 
 129:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 850	/* Latin 1 */
 130:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 131:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x43,0x55,0x45,0x41,0x41,0x41,0x41,0x43,0x45,0x45,0x45,0x49,0x49,0x49,0x41,0x41, \
 132:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x45,0x92,0x92,0x4F,0x4F,0x4F,0x55,0x55,0x59,0x4F,0x55,0x4F,0x9C,0x4F,0x9E,0x9F, \
 133:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x41,0x49,0x4F,0x55,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 134:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0x41,0x41,0x41,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 135:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0x41,0x41,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 136:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD1,0xD1,0x45,0x45,0x45,0x49,0x49,0x49,0x49,0xD9,0xDA,0xDB,0xDC,0xDD,0x49,0xDF, \
 137:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x4F,0xE1,0x4F,0x4F,0x4F,0x4F,0xE6,0xE8,0xE8,0x55,0x55,0x55,0x59,0x59,0xEE,0xEF, \
 138:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 139:Middlewares/Third_Party/FatFs/src/ff.c **** 
 140:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 852	/* Latin 2 */
 141:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 142:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x90,0xB6,0x8E,0xDE,0x8F,0x80,0x9D,0xD3,0x8A,0x8A,0xD7,0x8D,0x8E,0x8F, \
 143:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x91,0x91,0xE2,0x99,0x95,0x95,0x97,0x97,0x99,0x9A,0x9B,0x9B,0x9D,0x9E,0xAC, \
 144:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB5,0xD6,0xE0,0xE9,0xA4,0xA4,0xA6,0xA6,0xA8,0xA8,0xAA,0x8D,0xAC,0xB8,0xAE,0xAF, \
 145:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBD,0xBF, \
 146:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC6,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 4


 147:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD1,0xD1,0xD2,0xD3,0xD2,0xD5,0xD6,0xD7,0xB7,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 148:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE3,0xD5,0xE6,0xE6,0xE8,0xE9,0xE8,0xEB,0xED,0xED,0xDD,0xEF, \
 149:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xEB,0xFC,0xFC,0xFE,0xFF}
 150:Middlewares/Third_Party/FatFs/src/ff.c **** 
 151:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 855	/* Cyrillic */
 152:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 153:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x81,0x81,0x83,0x83,0x85,0x85,0x87,0x87,0x89,0x89,0x8B,0x8B,0x8D,0x8D,0x8F,0x8F, \
 154:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x91,0x91,0x93,0x93,0x95,0x95,0x97,0x97,0x99,0x99,0x9B,0x9B,0x9D,0x9D,0x9F,0x9F, \
 155:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA1,0xA1,0xA3,0xA3,0xA5,0xA5,0xA7,0xA7,0xA9,0xA9,0xAB,0xAB,0xAD,0xAD,0xAE,0xAF, \
 156:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB6,0xB6,0xB8,0xB8,0xB9,0xBA,0xBB,0xBC,0xBE,0xBE,0xBF, \
 157:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC7,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 158:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD1,0xD1,0xD3,0xD3,0xD5,0xD5,0xD7,0xD7,0xDD,0xD9,0xDA,0xDB,0xDC,0xDD,0xE0,0xDF, \
 159:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE2,0xE2,0xE4,0xE4,0xE6,0xE6,0xE8,0xE8,0xEA,0xEA,0xEC,0xEC,0xEE,0xEE,0xEF, \
 160:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF2,0xF2,0xF4,0xF4,0xF6,0xF6,0xF8,0xF8,0xFA,0xFA,0xFC,0xFC,0xFD,0xFE,0xFF}
 161:Middlewares/Third_Party/FatFs/src/ff.c **** 
 162:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 857	/* Turkish */
 163:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 164:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x90,0xB6,0x8E,0xB7,0x8F,0x80,0xD2,0xD3,0xD4,0xD8,0xD7,0x49,0x8E,0x8F, \
 165:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x92,0x92,0xE2,0x99,0xE3,0xEA,0xEB,0x98,0x99,0x9A,0x9D,0x9C,0x9D,0x9E,0x9E, \
 166:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB5,0xD6,0xE0,0xE9,0xA5,0xA5,0xA6,0xA6,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 167:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 168:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC7,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 169:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0x49,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 170:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE5,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xDE,0xED,0xEE,0xEF, \
 171:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 172:Middlewares/Third_Party/FatFs/src/ff.c **** 
 173:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 860	/* Portuguese */
 174:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 175:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x90,0x8F,0x8E,0x91,0x86,0x80,0x89,0x89,0x92,0x8B,0x8C,0x98,0x8E,0x8F, \
 176:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x91,0x92,0x8C,0x99,0xA9,0x96,0x9D,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 177:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x86,0x8B,0x9F,0x96,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 178:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 179:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 180:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 181:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
 182:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 183:Middlewares/Third_Party/FatFs/src/ff.c **** 
 184:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 861	/* Icelandic */
 185:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 186:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x90,0x41,0x8E,0x41,0x8F,0x80,0x45,0x45,0x45,0x8B,0x8B,0x8D,0x8E,0x8F, \
 187:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x92,0x92,0x4F,0x99,0x8D,0x55,0x97,0x97,0x99,0x9A,0x9D,0x9C,0x9D,0x9E,0x9F, \
 188:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA4,0xA5,0xA6,0xA7,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 189:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 190:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 191:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 192:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
 193:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 194:Middlewares/Third_Party/FatFs/src/ff.c **** 
 195:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 862	/* Hebrew */
 196:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 197:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F, \
 198:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 199:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x41,0x49,0x4F,0x55,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 200:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 201:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 202:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 203:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 5


 204:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 205:Middlewares/Third_Party/FatFs/src/ff.c **** 
 206:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 863	/* Canadian-French */
 207:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 208:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x43,0x55,0x45,0x41,0x41,0x41,0x86,0x43,0x45,0x45,0x45,0x49,0x49,0x8D,0x41,0x8F, \
 209:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x45,0x45,0x45,0x4F,0x45,0x49,0x55,0x55,0x98,0x4F,0x55,0x9B,0x9C,0x55,0x55,0x9F, \
 210:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA0,0xA1,0x4F,0x55,0xA4,0xA5,0xA6,0xA7,0x49,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 211:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 212:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 213:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 214:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
 215:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 216:Middlewares/Third_Party/FatFs/src/ff.c **** 
 217:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 864	/* Arabic */
 218:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 219:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x45,0x41,0x8E,0x41,0x8F,0x80,0x45,0x45,0x45,0x49,0x49,0x49,0x8E,0x8F, \
 220:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x92,0x92,0x4F,0x99,0x4F,0x55,0x55,0x59,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 221:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x41,0x49,0x4F,0x55,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 222:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 223:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 224:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 225:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
 226:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 227:Middlewares/Third_Party/FatFs/src/ff.c **** 
 228:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 865	/* Nordic */
 229:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 230:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x90,0x41,0x8E,0x41,0x8F,0x80,0x45,0x45,0x45,0x49,0x49,0x49,0x8E,0x8F, \
 231:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x92,0x92,0x4F,0x99,0x4F,0x55,0x55,0x59,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 232:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x41,0x49,0x4F,0x55,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 233:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 234:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 235:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 236:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
 237:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 238:Middlewares/Third_Party/FatFs/src/ff.c **** 
 239:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 866	/* Russian */
 240:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 241:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F, \
 242:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 243:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F, \
 244:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 245:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 246:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 247:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 248:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF0,0xF2,0xF2,0xF4,0xF4,0xF6,0xF6,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 249:Middlewares/Third_Party/FatFs/src/ff.c **** 
 250:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 869	/* Greek 2 */
 251:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 252:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F, \
 253:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x86,0x9C,0x8D,0x8F,0x90, \
 254:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x91,0x90,0x92,0x95,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 255:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 256:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 257:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xA4,0xA5,0xA6,0xD9,0xDA,0xDB,0xDC,0xA7,0xA8,0xDF, \
 258:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA9,0xAA,0xAC,0xAD,0xB5,0xB6,0xB7,0xB8,0xBD,0xBE,0xC6,0xC7,0xCF,0xCF,0xD0,0xEF, \
 259:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xD1,0xD2,0xD3,0xF5,0xD4,0xF7,0xF8,0xF9,0xD5,0x96,0x95,0x98,0xFE,0xFF}
 260:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 6


 261:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 1	/* ASCII (for only non-LFN cfg) */
 262:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0
 263:Middlewares/Third_Party/FatFs/src/ff.c **** #error Cannot enable LFN without valid code page.
 264:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 265:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 266:Middlewares/Third_Party/FatFs/src/ff.c **** 
 267:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 268:Middlewares/Third_Party/FatFs/src/ff.c **** #error Unknown code page
 269:Middlewares/Third_Party/FatFs/src/ff.c **** 
 270:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 271:Middlewares/Third_Party/FatFs/src/ff.c **** 
 272:Middlewares/Third_Party/FatFs/src/ff.c **** 
 273:Middlewares/Third_Party/FatFs/src/ff.c **** /* Character code support macros */
 274:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsUpper(c)	(((c)>='A')&&((c)<='Z'))
 275:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsLower(c)	(((c)>='a')&&((c)<='z'))
 276:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsDigit(c)	(((c)>='0')&&((c)<='9'))
 277:Middlewares/Third_Party/FatFs/src/ff.c **** 
 278:Middlewares/Third_Party/FatFs/src/ff.c **** #if _DF1S != 0	/* Code page is DBCS */
 279:Middlewares/Third_Party/FatFs/src/ff.c **** 
 280:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _DF2S	/* Two 1st byte areas */
 281:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsDBCS1(c)	(((BYTE)(c) >= _DF1S && (BYTE)(c) <= _DF1E) || ((BYTE)(c) >= _DF2S && (BYTE)(c) 
 282:Middlewares/Third_Party/FatFs/src/ff.c **** #else			/* One 1st byte area */
 283:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsDBCS1(c)	((BYTE)(c) >= _DF1S && (BYTE)(c) <= _DF1E)
 284:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 285:Middlewares/Third_Party/FatFs/src/ff.c **** 
 286:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _DS3S	/* Three 2nd byte areas */
 287:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsDBCS2(c)	(((BYTE)(c) >= _DS1S && (BYTE)(c) <= _DS1E) || ((BYTE)(c) >= _DS2S && (BYTE)(c) 
 288:Middlewares/Third_Party/FatFs/src/ff.c **** #else			/* Two 2nd byte areas */
 289:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsDBCS2(c)	(((BYTE)(c) >= _DS1S && (BYTE)(c) <= _DS1E) || ((BYTE)(c) >= _DS2S && (BYTE)(c) 
 290:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 291:Middlewares/Third_Party/FatFs/src/ff.c **** 
 292:Middlewares/Third_Party/FatFs/src/ff.c **** #else			/* Code page is SBCS */
 293:Middlewares/Third_Party/FatFs/src/ff.c **** 
 294:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsDBCS1(c)	0
 295:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsDBCS2(c)	0
 296:Middlewares/Third_Party/FatFs/src/ff.c **** 
 297:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _DF1S */
 298:Middlewares/Third_Party/FatFs/src/ff.c **** 
 299:Middlewares/Third_Party/FatFs/src/ff.c **** 
 300:Middlewares/Third_Party/FatFs/src/ff.c **** /* Additional file attribute bits for internal use */
 301:Middlewares/Third_Party/FatFs/src/ff.c **** #define	AM_VOL		0x08	/* Volume label */
 302:Middlewares/Third_Party/FatFs/src/ff.c **** #define AM_LFN		0x0F	/* LFN entry */
 303:Middlewares/Third_Party/FatFs/src/ff.c **** #define AM_MASK		0x3F	/* Mask of defined bits */
 304:Middlewares/Third_Party/FatFs/src/ff.c **** 
 305:Middlewares/Third_Party/FatFs/src/ff.c **** 
 306:Middlewares/Third_Party/FatFs/src/ff.c **** /* Additional file access control and file status flags for internal use */
 307:Middlewares/Third_Party/FatFs/src/ff.c **** #define FA_SEEKEND	0x20	/* Seek to end of the file on file open */
 308:Middlewares/Third_Party/FatFs/src/ff.c **** #define FA_MODIFIED	0x40	/* File has been modified */
 309:Middlewares/Third_Party/FatFs/src/ff.c **** #define FA_DIRTY	0x80	/* FIL.buf[] needs to be written-back */
 310:Middlewares/Third_Party/FatFs/src/ff.c **** 
 311:Middlewares/Third_Party/FatFs/src/ff.c **** 
 312:Middlewares/Third_Party/FatFs/src/ff.c **** /* Name status flags in fn[] */
 313:Middlewares/Third_Party/FatFs/src/ff.c **** #define NSFLAG		11		/* Index of the name status byte */
 314:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_LOSS		0x01	/* Out of 8.3 format */
 315:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_LFN		0x02	/* Force to create LFN entry */
 316:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_LAST		0x04	/* Last segment */
 317:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_BODY		0x08	/* Lower case flag (body) */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 7


 318:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_EXT		0x10	/* Lower case flag (ext) */
 319:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_DOT		0x20	/* Dot entry */
 320:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_NOLFN	0x40	/* Do not find LFN */
 321:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_NONAME	0x80	/* Not followed */
 322:Middlewares/Third_Party/FatFs/src/ff.c **** 
 323:Middlewares/Third_Party/FatFs/src/ff.c **** 
 324:Middlewares/Third_Party/FatFs/src/ff.c **** /* Limits and boundaries */
 325:Middlewares/Third_Party/FatFs/src/ff.c **** #define MAX_DIR		0x200000		/* Max size of FAT directory */
 326:Middlewares/Third_Party/FatFs/src/ff.c **** #define MAX_DIR_EX	0x10000000		/* Max size of exFAT directory */
 327:Middlewares/Third_Party/FatFs/src/ff.c **** #define MAX_FAT12	0xFF5			/* Max FAT12 clusters (differs from specs, but correct for real DOS/Windo
 328:Middlewares/Third_Party/FatFs/src/ff.c **** #define	MAX_FAT16	0xFFF5			/* Max FAT16 clusters (differs from specs, but correct for real DOS/Wind
 329:Middlewares/Third_Party/FatFs/src/ff.c **** #define	MAX_FAT32	0x0FFFFFF5		/* Max FAT32 clusters (not specified, practical limit) */
 330:Middlewares/Third_Party/FatFs/src/ff.c **** #define	MAX_EXFAT	0x7FFFFFFD		/* Max exFAT clusters (differs from specs, implementation limit) */
 331:Middlewares/Third_Party/FatFs/src/ff.c **** 
 332:Middlewares/Third_Party/FatFs/src/ff.c **** 
 333:Middlewares/Third_Party/FatFs/src/ff.c **** /* FatFs refers the FAT structure as simple byte array instead of structure member
 334:Middlewares/Third_Party/FatFs/src/ff.c **** / because the C structure is not binary compatible between different platforms */
 335:Middlewares/Third_Party/FatFs/src/ff.c **** 
 336:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_JmpBoot			0		/* x86 jump instruction (3-byte) */
 337:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_OEMName			3		/* OEM name (8-byte) */
 338:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_BytsPerSec		11		/* Sector size [byte] (WORD) */
 339:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_SecPerClus		13		/* Cluster size [sector] (BYTE) */
 340:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_RsvdSecCnt		14		/* Size of reserved area [sector] (WORD) */
 341:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_NumFATs			16		/* Number of FATs (BYTE) */
 342:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_RootEntCnt		17		/* Size of root directory area for FAT12/16 [entry] (WORD) */
 343:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_TotSec16		19		/* Volume size (16-bit) [sector] (WORD) */
 344:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_Media			21		/* Media descriptor byte (BYTE) */
 345:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_FATSz16			22		/* FAT size (16-bit) [sector] (WORD) */
 346:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_SecPerTrk		24		/* Track size for int13h [sector] (WORD) */
 347:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_NumHeads		26		/* Number of heads for int13h (WORD) */
 348:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_HiddSec			28		/* Volume offset from top of the drive (DWORD) */
 349:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_TotSec32		32		/* Volume size (32-bit) [sector] (DWORD) */
 350:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_DrvNum			36		/* Physical drive number for int13h (BYTE) */
 351:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_NTres			37		/* Error flag (BYTE) */
 352:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_BootSig			38		/* Extended boot signature (BYTE) */
 353:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_VolID			39		/* Volume serial number (DWORD) */
 354:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_VolLab			43		/* Volume label string (8-byte) */
 355:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_FilSysType		54		/* File system type string (8-byte) */
 356:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_BootCode			62		/* Boot code (448-byte) */
 357:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_55AA				510		/* Signature word (WORD) */
 358:Middlewares/Third_Party/FatFs/src/ff.c **** 
 359:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_FATSz32			36		/* FAT32: FAT size [sector] (DWORD) */
 360:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_ExtFlags32		40		/* FAT32: Extended flags (WORD) */
 361:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_FSVer32			42		/* FAT32: File system version (WORD) */
 362:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_RootClus32		44		/* FAT32: Root directory cluster (DWORD) */
 363:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_FSInfo32		48		/* FAT32: Offset of FSINFO sector (WORD) */
 364:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_BkBootSec32		50		/* FAT32: Offset of backup boot sector (WORD) */
 365:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_DrvNum32			64		/* FAT32: Physical drive number for int13h (BYTE) */
 366:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_NTres32			65		/* FAT32: Error flag (BYTE) */
 367:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_BootSig32		66		/* FAT32: Extended boot signature (BYTE) */
 368:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_VolID32			67		/* FAT32: Volume serial number (DWORD) */
 369:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_VolLab32			71		/* FAT32: Volume label string (8-byte) */
 370:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_FilSysType32		82		/* FAT32: File system type string (8-byte) */
 371:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_BootCode32		90		/* FAT32: Boot code (420-byte) */
 372:Middlewares/Third_Party/FatFs/src/ff.c **** 
 373:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_ZeroedEx		11		/* exFAT: MBZ field (53-byte) */
 374:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_VolOfsEx		64		/* exFAT: Volume offset from top of the drive [sector] (QWORD) */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 8


 375:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_TotSecEx		72		/* exFAT: Volume size [sector] (QWORD) */
 376:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_FatOfsEx		80		/* exFAT: FAT offset from top of the volume [sector] (DWORD) */
 377:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_FatSzEx			84		/* exFAT: FAT size [sector] (DWORD) */
 378:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_DataOfsEx		88		/* exFAT: Data offset from top of the volume [sector] (DWORD) */
 379:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_NumClusEx		92		/* exFAT: Number of clusters (DWORD) */
 380:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_RootClusEx		96		/* exFAT: Root directory start cluster (DWORD) */
 381:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_VolIDEx			100		/* exFAT: Volume serial number (DWORD) */
 382:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_FSVerEx			104		/* exFAT: File system version (WORD) */
 383:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_VolFlagEx		106		/* exFAT: Volume flags (BYTE) */
 384:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_ActFatEx		107		/* exFAT: Active FAT flags (BYTE) */
 385:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_BytsPerSecEx	108		/* exFAT: Log2 of sector size in unit of byte (BYTE) */
 386:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_SecPerClusEx	109		/* exFAT: Log2 of cluster size in unit of sector (BYTE) */
 387:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_NumFATsEx		110		/* exFAT: Number of FATs (BYTE) */
 388:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_DrvNumEx		111		/* exFAT: Physical drive number for int13h (BYTE) */
 389:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_PercInUseEx		112		/* exFAT: Percent in use (BYTE) */
 390:Middlewares/Third_Party/FatFs/src/ff.c **** #define	BPB_RsvdEx			113		/* exFAT: Reserved (7-byte) */
 391:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_BootCodeEx		120		/* exFAT: Boot code (390-byte) */
 392:Middlewares/Third_Party/FatFs/src/ff.c **** 
 393:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_Name			0		/* Short file name (11-byte) */
 394:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_Attr			11		/* Attribute (BYTE) */
 395:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_NTres			12		/* Lower case flag (BYTE) */
 396:Middlewares/Third_Party/FatFs/src/ff.c **** #define DIR_CrtTime10		13		/* Created time sub-second (BYTE) */
 397:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_CrtTime			14		/* Created time (DWORD) */
 398:Middlewares/Third_Party/FatFs/src/ff.c **** #define DIR_LstAccDate		18		/* Last accessed date (WORD) */
 399:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_FstClusHI		20		/* Higher 16-bit of first cluster (WORD) */
 400:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_ModTime			22		/* Modified time (DWORD) */
 401:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_FstClusLO		26		/* Lower 16-bit of first cluster (WORD) */
 402:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_FileSize		28		/* File size (DWORD) */
 403:Middlewares/Third_Party/FatFs/src/ff.c **** #define	LDIR_Ord			0		/* LFN: LFN order and LLE flag (BYTE) */
 404:Middlewares/Third_Party/FatFs/src/ff.c **** #define	LDIR_Attr			11		/* LFN: LFN attribute (BYTE) */
 405:Middlewares/Third_Party/FatFs/src/ff.c **** #define	LDIR_Type			12		/* LFN: Entry type (BYTE) */
 406:Middlewares/Third_Party/FatFs/src/ff.c **** #define	LDIR_Chksum			13		/* LFN: Checksum of the SFN (BYTE) */
 407:Middlewares/Third_Party/FatFs/src/ff.c **** #define	LDIR_FstClusLO		26		/* LFN: MBZ field (WORD) */
 408:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_Type			0		/* exFAT: Type of exFAT directory entry (BYTE) */
 409:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_NumLabel		1		/* exFAT: Number of volume label characters (BYTE) */
 410:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_Label			2		/* exFAT: Volume label (11-WORD) */
 411:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_CaseSum		4		/* exFAT: Sum of case conversion table (DWORD) */
 412:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_NumSec			1		/* exFAT: Number of secondary entries (BYTE) */
 413:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_SetSum			2		/* exFAT: Sum of the set of directory entries (WORD) */
 414:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_Attr			4		/* exFAT: File attribute (WORD) */
 415:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_CrtTime		8		/* exFAT: Created time (DWORD) */
 416:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_ModTime		12		/* exFAT: Modified time (DWORD) */
 417:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_AccTime		16		/* exFAT: Last accessed time (DWORD) */
 418:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_CrtTime10		20		/* exFAT: Created time subsecond (BYTE) */
 419:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_ModTime10		21		/* exFAT: Modified time subsecond (BYTE) */
 420:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_CrtTZ			22		/* exFAT: Created timezone (BYTE) */
 421:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_ModTZ			23		/* exFAT: Modified timezone (BYTE) */
 422:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_AccTZ			24		/* exFAT: Last accessed timezone (BYTE) */
 423:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_GenFlags		33		/* exFAT: General secondary flags (WORD) */
 424:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_NumName		35		/* exFAT: Number of file name characters (BYTE) */
 425:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_NameHash		36		/* exFAT: Hash of file name (WORD) */
 426:Middlewares/Third_Party/FatFs/src/ff.c **** #define XDIR_ValidFileSize	40		/* exFAT: Valid file size (QWORD) */
 427:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_FstClus		52		/* exFAT: First cluster of the file data (DWORD) */
 428:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_FileSize		56		/* exFAT: File/Directory size (QWORD) */
 429:Middlewares/Third_Party/FatFs/src/ff.c **** 
 430:Middlewares/Third_Party/FatFs/src/ff.c **** #define	SZDIRE				32		/* Size of a directory entry */
 431:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DDEM				0xE5	/* Deleted directory entry mark set to DIR_Name[0] */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 9


 432:Middlewares/Third_Party/FatFs/src/ff.c **** #define	RDDEM				0x05	/* Replacement of the character collides with DDEM */
 433:Middlewares/Third_Party/FatFs/src/ff.c **** #define	LLEF				0x40	/* Last long entry flag in LDIR_Ord */
 434:Middlewares/Third_Party/FatFs/src/ff.c **** 
 435:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FSI_LeadSig			0		/* FAT32 FSI: Leading signature (DWORD) */
 436:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FSI_StrucSig		484		/* FAT32 FSI: Structure signature (DWORD) */
 437:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FSI_Free_Count		488		/* FAT32 FSI: Number of free clusters (DWORD) */
 438:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FSI_Nxt_Free		492		/* FAT32 FSI: Last allocated cluster (DWORD) */
 439:Middlewares/Third_Party/FatFs/src/ff.c **** 
 440:Middlewares/Third_Party/FatFs/src/ff.c **** #define MBR_Table			446		/* MBR: Offset of partition table in the MBR */
 441:Middlewares/Third_Party/FatFs/src/ff.c **** #define	SZ_PTE				16		/* MBR: Size of a partition table entry */
 442:Middlewares/Third_Party/FatFs/src/ff.c **** #define PTE_Boot			0		/* MBR PTE: Boot indicator */
 443:Middlewares/Third_Party/FatFs/src/ff.c **** #define PTE_StHead			1		/* MBR PTE: Start head */
 444:Middlewares/Third_Party/FatFs/src/ff.c **** #define PTE_StSec			2		/* MBR PTE: Start sector */
 445:Middlewares/Third_Party/FatFs/src/ff.c **** #define PTE_StCyl			3		/* MBR PTE: Start cylinder */
 446:Middlewares/Third_Party/FatFs/src/ff.c **** #define PTE_System			4		/* MBR PTE: System ID */
 447:Middlewares/Third_Party/FatFs/src/ff.c **** #define PTE_EdHead			5		/* MBR PTE: End head */
 448:Middlewares/Third_Party/FatFs/src/ff.c **** #define PTE_EdSec			6		/* MBR PTE: End sector */
 449:Middlewares/Third_Party/FatFs/src/ff.c **** #define PTE_EdCyl			7		/* MBR PTE: End cylinder */
 450:Middlewares/Third_Party/FatFs/src/ff.c **** #define PTE_StLba			8		/* MBR PTE: Start in LBA */
 451:Middlewares/Third_Party/FatFs/src/ff.c **** #define PTE_SizLba			12		/* MBR PTE: Size in LBA */
 452:Middlewares/Third_Party/FatFs/src/ff.c **** 
 453:Middlewares/Third_Party/FatFs/src/ff.c **** 
 454:Middlewares/Third_Party/FatFs/src/ff.c **** /* Post process after fatal error on file operation */
 455:Middlewares/Third_Party/FatFs/src/ff.c **** #define	ABORT(fs, res)		{ fp->err = (BYTE)(res); LEAVE_FF(fs, res); }
 456:Middlewares/Third_Party/FatFs/src/ff.c **** 
 457:Middlewares/Third_Party/FatFs/src/ff.c **** 
 458:Middlewares/Third_Party/FatFs/src/ff.c **** /* Reentrancy related */
 459:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT
 460:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN == 1
 461:Middlewares/Third_Party/FatFs/src/ff.c **** #error Static LFN work area cannot be used at thread-safe configuration
 462:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 463:Middlewares/Third_Party/FatFs/src/ff.c **** #define	ENTER_FF(fs)		{ if (!lock_fs(fs)) return FR_TIMEOUT; }
 464:Middlewares/Third_Party/FatFs/src/ff.c **** #define	LEAVE_FF(fs, res)	{ unlock_fs(fs, res); return res; }
 465:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 466:Middlewares/Third_Party/FatFs/src/ff.c **** #define	ENTER_FF(fs)
 467:Middlewares/Third_Party/FatFs/src/ff.c **** #define LEAVE_FF(fs, res)	return res
 468:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 469:Middlewares/Third_Party/FatFs/src/ff.c **** 
 470:Middlewares/Third_Party/FatFs/src/ff.c **** 
 471:Middlewares/Third_Party/FatFs/src/ff.c **** /* Definitions of volume - partition conversion */
 472:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MULTI_PARTITION
 473:Middlewares/Third_Party/FatFs/src/ff.c **** #define LD2PD(vol) VolToPart[vol].pd	/* Get physical drive number */
 474:Middlewares/Third_Party/FatFs/src/ff.c **** #define LD2PT(vol) VolToPart[vol].pt	/* Get partition index */
 475:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 476:Middlewares/Third_Party/FatFs/src/ff.c **** #define LD2PD(vol) (BYTE)(vol)	/* Each logical drive is bound to the same physical drive number */
 477:Middlewares/Third_Party/FatFs/src/ff.c **** #define LD2PT(vol) 0			/* Find first valid partition or in SFD */
 478:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 479:Middlewares/Third_Party/FatFs/src/ff.c **** 
 480:Middlewares/Third_Party/FatFs/src/ff.c **** 
 481:Middlewares/Third_Party/FatFs/src/ff.c **** /* Definitions of sector size */
 482:Middlewares/Third_Party/FatFs/src/ff.c **** #if (_MAX_SS < _MIN_SS) || (_MAX_SS != 512 && _MAX_SS != 1024 && _MAX_SS != 2048 && _MAX_SS != 4096
 483:Middlewares/Third_Party/FatFs/src/ff.c **** #error Wrong sector size configuration
 484:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 485:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS == _MIN_SS
 486:Middlewares/Third_Party/FatFs/src/ff.c **** #define	SS(fs)	((UINT)_MAX_SS)	/* Fixed sector size */
 487:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 488:Middlewares/Third_Party/FatFs/src/ff.c **** #define	SS(fs)	((fs)->ssize)	/* Variable sector size */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 10


 489:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 490:Middlewares/Third_Party/FatFs/src/ff.c **** 
 491:Middlewares/Third_Party/FatFs/src/ff.c **** 
 492:Middlewares/Third_Party/FatFs/src/ff.c **** /* Timestamp */
 493:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_NORTC == 1
 494:Middlewares/Third_Party/FatFs/src/ff.c **** #if _NORTC_YEAR < 1980 || _NORTC_YEAR > 2107 || _NORTC_MON < 1 || _NORTC_MON > 12 || _NORTC_MDAY < 
 495:Middlewares/Third_Party/FatFs/src/ff.c **** #error Invalid _FS_NORTC settings
 496:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 497:Middlewares/Third_Party/FatFs/src/ff.c **** #define GET_FATTIME()	((DWORD)(_NORTC_YEAR - 1980) << 25 | (DWORD)_NORTC_MON << 21 | (DWORD)_NORTC_
 498:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 499:Middlewares/Third_Party/FatFs/src/ff.c **** #define GET_FATTIME()	get_fattime()
 500:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 501:Middlewares/Third_Party/FatFs/src/ff.c **** 
 502:Middlewares/Third_Party/FatFs/src/ff.c **** 
 503:Middlewares/Third_Party/FatFs/src/ff.c **** /* File lock controls */
 504:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 505:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_READONLY
 506:Middlewares/Third_Party/FatFs/src/ff.c **** #error _FS_LOCK must be 0 at read-only configuration
 507:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 508:Middlewares/Third_Party/FatFs/src/ff.c **** typedef struct {
 509:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;		/* Object ID 1, volume (NULL:blank entry) */
 510:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clu;		/* Object ID 2, containing directory (0:root) */
 511:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD ofs;		/* Object ID 3, offset in the directory */
 512:Middlewares/Third_Party/FatFs/src/ff.c **** 	WORD ctr;		/* Object open counter, 0:none, 0x01..0xFF:read mode open count, 0x100:write mode */
 513:Middlewares/Third_Party/FatFs/src/ff.c **** } FILESEM;
 514:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 515:Middlewares/Third_Party/FatFs/src/ff.c **** 
 516:Middlewares/Third_Party/FatFs/src/ff.c **** 
 517:Middlewares/Third_Party/FatFs/src/ff.c **** 
 518:Middlewares/Third_Party/FatFs/src/ff.c **** 
 519:Middlewares/Third_Party/FatFs/src/ff.c **** 
 520:Middlewares/Third_Party/FatFs/src/ff.c **** /*--------------------------------------------------------------------------
 521:Middlewares/Third_Party/FatFs/src/ff.c **** 
 522:Middlewares/Third_Party/FatFs/src/ff.c ****    Module Private Work Area
 523:Middlewares/Third_Party/FatFs/src/ff.c **** 
 524:Middlewares/Third_Party/FatFs/src/ff.c **** ---------------------------------------------------------------------------*/
 525:Middlewares/Third_Party/FatFs/src/ff.c **** 
 526:Middlewares/Third_Party/FatFs/src/ff.c **** /* Remark: Variables defined here without initial value shall be guaranteed
 527:Middlewares/Third_Party/FatFs/src/ff.c **** /  zero/null at start-up. If not, the linker option or start-up routine is
 528:Middlewares/Third_Party/FatFs/src/ff.c **** /  not compliance with C standard. */
 529:Middlewares/Third_Party/FatFs/src/ff.c **** 
 530:Middlewares/Third_Party/FatFs/src/ff.c **** #if _VOLUMES < 1 || _VOLUMES > 10
 531:Middlewares/Third_Party/FatFs/src/ff.c **** #error Wrong _VOLUMES setting
 532:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 533:Middlewares/Third_Party/FatFs/src/ff.c **** static FATFS *FatFs[_VOLUMES];	/* Pointer to the file system objects (logical drives) */
 534:Middlewares/Third_Party/FatFs/src/ff.c **** static WORD Fsid;				/* File system mount ID */
 535:Middlewares/Third_Party/FatFs/src/ff.c **** 
 536:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH != 0 && _VOLUMES >= 2
 537:Middlewares/Third_Party/FatFs/src/ff.c **** static BYTE CurrVol;			/* Current drive */
 538:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 539:Middlewares/Third_Party/FatFs/src/ff.c **** 
 540:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 541:Middlewares/Third_Party/FatFs/src/ff.c **** static FILESEM Files[_FS_LOCK];	/* Open object lock semaphores */
 542:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 543:Middlewares/Third_Party/FatFs/src/ff.c **** 
 544:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN == 0		/* Non-LFN configuration */
 545:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DEF_NAMBUF
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 11


 546:Middlewares/Third_Party/FatFs/src/ff.c **** #define INIT_NAMBUF(fs)
 547:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FREE_NAMBUF()
 548:Middlewares/Third_Party/FatFs/src/ff.c **** 
 549:Middlewares/Third_Party/FatFs/src/ff.c **** #else					/* LFN configuration */
 550:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_LFN < 12 || _MAX_LFN > 255
 551:Middlewares/Third_Party/FatFs/src/ff.c **** #error Wrong _MAX_LFN value
 552:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 553:Middlewares/Third_Party/FatFs/src/ff.c **** #define MAXDIRB(nc)	((nc + 44U) / 15 * SZDIRE)
 554:Middlewares/Third_Party/FatFs/src/ff.c **** 
 555:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN == 1		/* LFN enabled with static working buffer */
 556:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 557:Middlewares/Third_Party/FatFs/src/ff.c **** static BYTE	DirBuf[MAXDIRB(_MAX_LFN)];	/* Directory entry block scratchpad buffer */
 558:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 559:Middlewares/Third_Party/FatFs/src/ff.c **** static WCHAR LfnBuf[_MAX_LFN + 1];	/* LFN enabled with static working buffer */
 560:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DEF_NAMBUF
 561:Middlewares/Third_Party/FatFs/src/ff.c **** #define INIT_NAMBUF(fs)
 562:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FREE_NAMBUF()
 563:Middlewares/Third_Party/FatFs/src/ff.c **** 
 564:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _USE_LFN == 2 	/* LFN enabled with dynamic working buffer on the stack */
 565:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 566:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DEF_NAMBUF		WCHAR lbuf[_MAX_LFN+1]; BYTE dbuf[MAXDIRB(_MAX_LFN)];
 567:Middlewares/Third_Party/FatFs/src/ff.c **** #define INIT_NAMBUF(fs)	{ (fs)->lfnbuf = lbuf; (fs)->dirbuf = dbuf; }
 568:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FREE_NAMBUF()
 569:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 570:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DEF_NAMBUF		WCHAR lbuf[_MAX_LFN+1];
 571:Middlewares/Third_Party/FatFs/src/ff.c **** #define INIT_NAMBUF(fs)	{ (fs)->lfnbuf = lbuf; }
 572:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FREE_NAMBUF()
 573:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 574:Middlewares/Third_Party/FatFs/src/ff.c **** 
 575:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _USE_LFN == 3 	/* LFN enabled with dynamic working buffer on the heap */
 576:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 577:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DEF_NAMBUF		WCHAR *lfn;
 578:Middlewares/Third_Party/FatFs/src/ff.c **** #define INIT_NAMBUF(fs)	{ lfn = ff_memalloc((_MAX_LFN+1)*2 + MAXDIRB(_MAX_LFN)); if (!lfn) LEAVE_FF
 579:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FREE_NAMBUF()	ff_memfree(lfn)
 580:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 581:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DEF_NAMBUF		WCHAR *lfn;
 582:Middlewares/Third_Party/FatFs/src/ff.c **** #define INIT_NAMBUF(fs)	{ lfn = ff_memalloc((_MAX_LFN+1)*2); if (!lfn) LEAVE_FF(fs, FR_NOT_ENOUGH_C
 583:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FREE_NAMBUF()	ff_memfree(lfn)
 584:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 585:Middlewares/Third_Party/FatFs/src/ff.c **** 
 586:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 587:Middlewares/Third_Party/FatFs/src/ff.c **** #error Wrong _USE_LFN setting
 588:Middlewares/Third_Party/FatFs/src/ff.c **** 
 589:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 590:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* else _USE_LFN == 0 */
 591:Middlewares/Third_Party/FatFs/src/ff.c **** 
 592:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _EXCVT
 593:Middlewares/Third_Party/FatFs/src/ff.c **** static const BYTE ExCvt[] = _EXCVT;	/* Upper conversion table for SBCS extended characters */
 594:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 595:Middlewares/Third_Party/FatFs/src/ff.c **** 
 596:Middlewares/Third_Party/FatFs/src/ff.c **** 
 597:Middlewares/Third_Party/FatFs/src/ff.c **** 
 598:Middlewares/Third_Party/FatFs/src/ff.c **** 
 599:Middlewares/Third_Party/FatFs/src/ff.c **** 
 600:Middlewares/Third_Party/FatFs/src/ff.c **** 
 601:Middlewares/Third_Party/FatFs/src/ff.c **** /*--------------------------------------------------------------------------
 602:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 12


 603:Middlewares/Third_Party/FatFs/src/ff.c ****    Module Private Functions
 604:Middlewares/Third_Party/FatFs/src/ff.c **** 
 605:Middlewares/Third_Party/FatFs/src/ff.c **** ---------------------------------------------------------------------------*/
 606:Middlewares/Third_Party/FatFs/src/ff.c **** 
 607:Middlewares/Third_Party/FatFs/src/ff.c **** 
 608:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 609:Middlewares/Third_Party/FatFs/src/ff.c **** /* Load/Store multi-byte word in the FAT structure                       */
 610:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 611:Middlewares/Third_Party/FatFs/src/ff.c **** 
 612:Middlewares/Third_Party/FatFs/src/ff.c **** static
 613:Middlewares/Third_Party/FatFs/src/ff.c **** WORD ld_word (const BYTE* ptr)	/*	 Load a 2-byte little-endian word */
 614:Middlewares/Third_Party/FatFs/src/ff.c **** {
  27              		.loc 1 614 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
 615:Middlewares/Third_Party/FatFs/src/ff.c **** 	WORD rv;
 616:Middlewares/Third_Party/FatFs/src/ff.c **** 
 617:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = ptr[1];
  33              		.loc 1 617 0
  34 0000 4278     		ldrb	r2, [r0, #1]	@ zero_extendqisi2
  35              	.LVL1:
 618:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[0];
  36              		.loc 1 618 0
  37 0002 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
  38              	.LVL2:
 619:Middlewares/Third_Party/FatFs/src/ff.c **** 	return rv;
 620:Middlewares/Third_Party/FatFs/src/ff.c **** }
  39              		.loc 1 620 0
  40 0004 40EA0220 		orr	r0, r0, r2, lsl #8
  41              	.LVL3:
  42 0008 7047     		bx	lr
  43              		.cfi_endproc
  44              	.LFE141:
  46              		.section	.text.ld_dword,"ax",%progbits
  47              		.align	1
  48              		.syntax unified
  49              		.thumb
  50              		.thumb_func
  51              		.fpu fpv5-sp-d16
  53              	ld_dword:
  54              	.LFB142:
 621:Middlewares/Third_Party/FatFs/src/ff.c **** 
 622:Middlewares/Third_Party/FatFs/src/ff.c **** static
 623:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD ld_dword (const BYTE* ptr)	/* Load a 4-byte little-endian word */
 624:Middlewares/Third_Party/FatFs/src/ff.c **** {
  55              		.loc 1 624 0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              		@ link register save eliminated.
  60              	.LVL4:
 625:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD rv;
 626:Middlewares/Third_Party/FatFs/src/ff.c **** 
 627:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = ptr[3];
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 13


  61              		.loc 1 627 0
  62 0000 C278     		ldrb	r2, [r0, #3]	@ zero_extendqisi2
  63              	.LVL5:
 628:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[2];
  64              		.loc 1 628 0
  65 0002 8378     		ldrb	r3, [r0, #2]	@ zero_extendqisi2
  66 0004 43EA0222 		orr	r2, r3, r2, lsl #8
  67              	.LVL6:
 629:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[1];
  68              		.loc 1 629 0
  69 0008 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
  70 000a 43EA0223 		orr	r3, r3, r2, lsl #8
  71              	.LVL7:
 630:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[0];
  72              		.loc 1 630 0
  73 000e 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
  74              	.LVL8:
 631:Middlewares/Third_Party/FatFs/src/ff.c **** 	return rv;
 632:Middlewares/Third_Party/FatFs/src/ff.c **** }
  75              		.loc 1 632 0
  76 0010 40EA0320 		orr	r0, r0, r3, lsl #8
  77              	.LVL9:
  78 0014 7047     		bx	lr
  79              		.cfi_endproc
  80              	.LFE142:
  82              		.section	.text.st_word,"ax",%progbits
  83              		.align	1
  84              		.syntax unified
  85              		.thumb
  86              		.thumb_func
  87              		.fpu fpv5-sp-d16
  89              	st_word:
  90              	.LFB143:
 633:Middlewares/Third_Party/FatFs/src/ff.c **** 
 634:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 635:Middlewares/Third_Party/FatFs/src/ff.c **** static
 636:Middlewares/Third_Party/FatFs/src/ff.c **** QWORD ld_qword (const BYTE* ptr)	/* Load an 8-byte little-endian word */
 637:Middlewares/Third_Party/FatFs/src/ff.c **** {
 638:Middlewares/Third_Party/FatFs/src/ff.c **** 	QWORD rv;
 639:Middlewares/Third_Party/FatFs/src/ff.c **** 
 640:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = ptr[7];
 641:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[6];
 642:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[5];
 643:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[4];
 644:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[3];
 645:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[2];
 646:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[1];
 647:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[0];
 648:Middlewares/Third_Party/FatFs/src/ff.c **** 	return rv;
 649:Middlewares/Third_Party/FatFs/src/ff.c **** }
 650:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 651:Middlewares/Third_Party/FatFs/src/ff.c **** 
 652:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 653:Middlewares/Third_Party/FatFs/src/ff.c **** static
 654:Middlewares/Third_Party/FatFs/src/ff.c **** void st_word (BYTE* ptr, WORD val)	/* Store a 2-byte word in little-endian */
 655:Middlewares/Third_Party/FatFs/src/ff.c **** {
  91              		.loc 1 655 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 14


  92              		.cfi_startproc
  93              		@ args = 0, pretend = 0, frame = 0
  94              		@ frame_needed = 0, uses_anonymous_args = 0
  95              		@ link register save eliminated.
  96              	.LVL10:
 656:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
  97              		.loc 1 656 0
  98 0000 0170     		strb	r1, [r0]
  99              	.LVL11:
 657:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val;
 100              		.loc 1 657 0
 101 0002 090A     		lsrs	r1, r1, #8
 102              	.LVL12:
 103 0004 4170     		strb	r1, [r0, #1]
 104 0006 7047     		bx	lr
 105              		.cfi_endproc
 106              	.LFE143:
 108              		.section	.text.st_dword,"ax",%progbits
 109              		.align	1
 110              		.syntax unified
 111              		.thumb
 112              		.thumb_func
 113              		.fpu fpv5-sp-d16
 115              	st_dword:
 116              	.LFB144:
 658:Middlewares/Third_Party/FatFs/src/ff.c **** }
 659:Middlewares/Third_Party/FatFs/src/ff.c **** 
 660:Middlewares/Third_Party/FatFs/src/ff.c **** static
 661:Middlewares/Third_Party/FatFs/src/ff.c **** void st_dword (BYTE* ptr, DWORD val)	/* Store a 4-byte word in little-endian */
 662:Middlewares/Third_Party/FatFs/src/ff.c **** {
 117              		.loc 1 662 0
 118              		.cfi_startproc
 119              		@ args = 0, pretend = 0, frame = 0
 120              		@ frame_needed = 0, uses_anonymous_args = 0
 121              		@ link register save eliminated.
 122              	.LVL13:
 663:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 123              		.loc 1 663 0
 124 0000 0170     		strb	r1, [r0]
 125              	.LVL14:
 664:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 126              		.loc 1 664 0
 127 0002 C1F30723 		ubfx	r3, r1, #8, #8
 128 0006 4370     		strb	r3, [r0, #1]
 129              	.LVL15:
 665:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 130              		.loc 1 665 0
 131 0008 C1F30743 		ubfx	r3, r1, #16, #8
 132 000c 8370     		strb	r3, [r0, #2]
 133              	.LVL16:
 666:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val;
 134              		.loc 1 666 0
 135 000e 090E     		lsrs	r1, r1, #24
 136              	.LVL17:
 137 0010 C170     		strb	r1, [r0, #3]
 138 0012 7047     		bx	lr
 139              		.cfi_endproc
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 15


 140              	.LFE144:
 142              		.section	.text.mem_cpy,"ax",%progbits
 143              		.align	1
 144              		.syntax unified
 145              		.thumb
 146              		.thumb_func
 147              		.fpu fpv5-sp-d16
 149              	mem_cpy:
 150              	.LFB145:
 667:Middlewares/Third_Party/FatFs/src/ff.c **** }
 668:Middlewares/Third_Party/FatFs/src/ff.c **** 
 669:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 670:Middlewares/Third_Party/FatFs/src/ff.c **** static
 671:Middlewares/Third_Party/FatFs/src/ff.c **** void st_qword (BYTE* ptr, QWORD val)	/* Store an 8-byte word in little-endian */
 672:Middlewares/Third_Party/FatFs/src/ff.c **** {
 673:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 674:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 675:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 676:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 677:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 678:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 679:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 680:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val;
 681:Middlewares/Third_Party/FatFs/src/ff.c **** }
 682:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 683:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* !_FS_READONLY */
 684:Middlewares/Third_Party/FatFs/src/ff.c **** 
 685:Middlewares/Third_Party/FatFs/src/ff.c **** 
 686:Middlewares/Third_Party/FatFs/src/ff.c **** 
 687:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 688:Middlewares/Third_Party/FatFs/src/ff.c **** /* String functions                                                      */
 689:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 690:Middlewares/Third_Party/FatFs/src/ff.c **** 
 691:Middlewares/Third_Party/FatFs/src/ff.c **** /* Copy memory to memory */
 692:Middlewares/Third_Party/FatFs/src/ff.c **** static
 693:Middlewares/Third_Party/FatFs/src/ff.c **** void mem_cpy (void* dst, const void* src, UINT cnt) {
 151              		.loc 1 693 0
 152              		.cfi_startproc
 153              		@ args = 0, pretend = 0, frame = 0
 154              		@ frame_needed = 0, uses_anonymous_args = 0
 155              		@ link register save eliminated.
 156              	.LVL18:
 694:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *d = (BYTE*)dst;
 695:Middlewares/Third_Party/FatFs/src/ff.c **** 	const BYTE *s = (const BYTE*)src;
 696:Middlewares/Third_Party/FatFs/src/ff.c **** 
 697:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (cnt) {
 157              		.loc 1 697 0
 158 0000 1346     		mov	r3, r2
 159 0002 2AB1     		cbz	r2, .L5
 160              	.LVL19:
 161              	.L7:
 698:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
 699:Middlewares/Third_Party/FatFs/src/ff.c **** 			*d++ = *s++;
 162              		.loc 1 699 0 discriminator 1
 163 0004 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 164 0006 0270     		strb	r2, [r0]
 165              	.LVL20:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 16


 166 0008 0130     		adds	r0, r0, #1
 167              	.LVL21:
 168 000a 0131     		adds	r1, r1, #1
 169              	.LVL22:
 700:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (--cnt);
 170              		.loc 1 700 0 discriminator 1
 171 000c 013B     		subs	r3, r3, #1
 172              	.LVL23:
 173 000e F9D1     		bne	.L7
 174              	.L5:
 175 0010 7047     		bx	lr
 176              		.cfi_endproc
 177              	.LFE145:
 179              		.section	.text.mem_set,"ax",%progbits
 180              		.align	1
 181              		.syntax unified
 182              		.thumb
 183              		.thumb_func
 184              		.fpu fpv5-sp-d16
 186              	mem_set:
 187              	.LFB146:
 701:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 702:Middlewares/Third_Party/FatFs/src/ff.c **** }
 703:Middlewares/Third_Party/FatFs/src/ff.c **** 
 704:Middlewares/Third_Party/FatFs/src/ff.c **** /* Fill memory block */
 705:Middlewares/Third_Party/FatFs/src/ff.c **** static
 706:Middlewares/Third_Party/FatFs/src/ff.c **** void mem_set (void* dst, int val, UINT cnt) {
 188              		.loc 1 706 0
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 0
 191              		@ frame_needed = 0, uses_anonymous_args = 0
 192              		@ link register save eliminated.
 193              	.LVL24:
 194              	.L9:
 707:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *d = (BYTE*)dst;
 708:Middlewares/Third_Party/FatFs/src/ff.c **** 
 709:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
 710:Middlewares/Third_Party/FatFs/src/ff.c **** 		*d++ = (BYTE)val;
 195              		.loc 1 710 0 discriminator 1
 196 0000 0170     		strb	r1, [r0]
 197              	.LVL25:
 198 0002 0130     		adds	r0, r0, #1
 199              	.LVL26:
 711:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (--cnt);
 200              		.loc 1 711 0 discriminator 1
 201 0004 013A     		subs	r2, r2, #1
 202              	.LVL27:
 203 0006 FBD1     		bne	.L9
 712:Middlewares/Third_Party/FatFs/src/ff.c **** }
 204              		.loc 1 712 0
 205 0008 7047     		bx	lr
 206              		.cfi_endproc
 207              	.LFE146:
 209              		.section	.text.mem_cmp,"ax",%progbits
 210              		.align	1
 211              		.syntax unified
 212              		.thumb
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 17


 213              		.thumb_func
 214              		.fpu fpv5-sp-d16
 216              	mem_cmp:
 217              	.LFB147:
 713:Middlewares/Third_Party/FatFs/src/ff.c **** 
 714:Middlewares/Third_Party/FatFs/src/ff.c **** /* Compare memory block */
 715:Middlewares/Third_Party/FatFs/src/ff.c **** static
 716:Middlewares/Third_Party/FatFs/src/ff.c **** int mem_cmp (const void* dst, const void* src, UINT cnt) {	/* ZR:same, NZ:different */
 218              		.loc 1 716 0
 219              		.cfi_startproc
 220              		@ args = 0, pretend = 0, frame = 0
 221              		@ frame_needed = 0, uses_anonymous_args = 0
 222              		@ link register save eliminated.
 223              	.LVL28:
 224 0000 30B4     		push	{r4, r5}
 225              	.LCFI0:
 226              		.cfi_def_cfa_offset 8
 227              		.cfi_offset 4, -8
 228              		.cfi_offset 5, -4
 229              	.LVL29:
 230              	.L12:
 717:Middlewares/Third_Party/FatFs/src/ff.c **** 	const BYTE *d = (const BYTE *)dst, *s = (const BYTE *)src;
 718:Middlewares/Third_Party/FatFs/src/ff.c **** 	int r = 0;
 719:Middlewares/Third_Party/FatFs/src/ff.c **** 
 720:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
 721:Middlewares/Third_Party/FatFs/src/ff.c **** 		r = *d++ - *s++;
 231              		.loc 1 721 0 discriminator 2
 232 0002 451C     		adds	r5, r0, #1
 233              	.LVL30:
 234 0004 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 235              	.LVL31:
 236 0006 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 237 0008 1B1A     		subs	r3, r3, r0
 238              	.LVL32:
 722:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (--cnt && r == 0);
 239              		.loc 1 722 0 discriminator 2
 240 000a 013A     		subs	r2, r2, #1
 241              	.LVL33:
 242 000c 04D0     		beq	.L10
 243 000e 4C1C     		adds	r4, r1, #1
 244              	.LVL34:
 721:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (--cnt && r == 0);
 245              		.loc 1 721 0 discriminator 1
 246 0010 2846     		mov	r0, r5
 247 0012 2146     		mov	r1, r4
 248              		.loc 1 722 0 discriminator 1
 249 0014 002B     		cmp	r3, #0
 250 0016 F4D0     		beq	.L12
 251              	.LVL35:
 252              	.L10:
 723:Middlewares/Third_Party/FatFs/src/ff.c **** 
 724:Middlewares/Third_Party/FatFs/src/ff.c **** 	return r;
 725:Middlewares/Third_Party/FatFs/src/ff.c **** }
 253              		.loc 1 725 0
 254 0018 1846     		mov	r0, r3
 255 001a 30BC     		pop	{r4, r5}
 256              	.LCFI1:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 18


 257              		.cfi_restore 5
 258              		.cfi_restore 4
 259              		.cfi_def_cfa_offset 0
 260              	.LVL36:
 261 001c 7047     		bx	lr
 262              		.cfi_endproc
 263              	.LFE147:
 265              		.section	.text.chk_chr,"ax",%progbits
 266              		.align	1
 267              		.syntax unified
 268              		.thumb
 269              		.thumb_func
 270              		.fpu fpv5-sp-d16
 272              	chk_chr:
 273              	.LFB148:
 726:Middlewares/Third_Party/FatFs/src/ff.c **** 
 727:Middlewares/Third_Party/FatFs/src/ff.c **** /* Check if chr is contained in the string */
 728:Middlewares/Third_Party/FatFs/src/ff.c **** static
 729:Middlewares/Third_Party/FatFs/src/ff.c **** int chk_chr (const char* str, int chr) {	/* NZ:contained, ZR:not contained */
 274              		.loc 1 729 0
 275              		.cfi_startproc
 276              		@ args = 0, pretend = 0, frame = 0
 277              		@ frame_needed = 0, uses_anonymous_args = 0
 278              		@ link register save eliminated.
 279              	.LVL37:
 730:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (*str && *str != chr) str++;
 280              		.loc 1 730 0
 281 0000 00E0     		b	.L15
 282              	.L17:
 283              		.loc 1 730 0 is_stmt 0 discriminator 3
 284 0002 0130     		adds	r0, r0, #1
 285              	.LVL38:
 286              	.L15:
 287              		.loc 1 730 0 discriminator 1
 288 0004 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 289 0006 0BB1     		cbz	r3, .L16
 290              		.loc 1 730 0 discriminator 2
 291 0008 8B42     		cmp	r3, r1
 292 000a FAD1     		bne	.L17
 293              	.L16:
 731:Middlewares/Third_Party/FatFs/src/ff.c **** 	return *str;
 732:Middlewares/Third_Party/FatFs/src/ff.c **** }
 294              		.loc 1 732 0 is_stmt 1
 295 000c 1846     		mov	r0, r3
 296              	.LVL39:
 297 000e 7047     		bx	lr
 298              		.cfi_endproc
 299              	.LFE148:
 301              		.section	.text.chk_lock,"ax",%progbits
 302              		.align	1
 303              		.syntax unified
 304              		.thumb
 305              		.thumb_func
 306              		.fpu fpv5-sp-d16
 308              	chk_lock:
 309              	.LFB151:
 733:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 19


 734:Middlewares/Third_Party/FatFs/src/ff.c **** 
 735:Middlewares/Third_Party/FatFs/src/ff.c **** 
 736:Middlewares/Third_Party/FatFs/src/ff.c **** 
 737:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT
 738:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 739:Middlewares/Third_Party/FatFs/src/ff.c **** /* Request/Release grant to access the volume                            */
 740:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 741:Middlewares/Third_Party/FatFs/src/ff.c **** static
 742:Middlewares/Third_Party/FatFs/src/ff.c **** int lock_fs (
 743:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs		/* File system object */
 744:Middlewares/Third_Party/FatFs/src/ff.c **** )
 745:Middlewares/Third_Party/FatFs/src/ff.c **** {
 746:Middlewares/Third_Party/FatFs/src/ff.c **** 	return (fs && ff_req_grant(fs->sobj)) ? 1 : 0;
 747:Middlewares/Third_Party/FatFs/src/ff.c **** }
 748:Middlewares/Third_Party/FatFs/src/ff.c **** 
 749:Middlewares/Third_Party/FatFs/src/ff.c **** 
 750:Middlewares/Third_Party/FatFs/src/ff.c **** static
 751:Middlewares/Third_Party/FatFs/src/ff.c **** void unlock_fs (
 752:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,		/* File system object */
 753:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res		/* Result code to be returned */
 754:Middlewares/Third_Party/FatFs/src/ff.c **** )
 755:Middlewares/Third_Party/FatFs/src/ff.c **** {
 756:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs && res != FR_NOT_ENABLED && res != FR_INVALID_DRIVE && res != FR_TIMEOUT) {
 757:Middlewares/Third_Party/FatFs/src/ff.c **** 		ff_rel_grant(fs->sobj);
 758:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 759:Middlewares/Third_Party/FatFs/src/ff.c **** }
 760:Middlewares/Third_Party/FatFs/src/ff.c **** 
 761:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 762:Middlewares/Third_Party/FatFs/src/ff.c **** 
 763:Middlewares/Third_Party/FatFs/src/ff.c **** 
 764:Middlewares/Third_Party/FatFs/src/ff.c **** 
 765:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 766:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 767:Middlewares/Third_Party/FatFs/src/ff.c **** /* File lock control functions                                           */
 768:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 769:Middlewares/Third_Party/FatFs/src/ff.c **** 
 770:Middlewares/Third_Party/FatFs/src/ff.c **** static
 771:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT chk_lock (	/* Check if the file can be accessed */
 772:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,		/* Directory object pointing the file to be checked */
 773:Middlewares/Third_Party/FatFs/src/ff.c **** 	int acc			/* Desired access type (0:Read, 1:Write, 2:Delete/Rename) */
 774:Middlewares/Third_Party/FatFs/src/ff.c **** )
 775:Middlewares/Third_Party/FatFs/src/ff.c **** {
 310              		.loc 1 775 0
 311              		.cfi_startproc
 312              		@ args = 0, pretend = 0, frame = 0
 313              		@ frame_needed = 0, uses_anonymous_args = 0
 314              		@ link register save eliminated.
 315              	.LVL40:
 316 0000 30B4     		push	{r4, r5}
 317              	.LCFI2:
 318              		.cfi_def_cfa_offset 8
 319              		.cfi_offset 4, -8
 320              		.cfi_offset 5, -4
 321              	.LVL41:
 776:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, be;
 777:Middlewares/Third_Party/FatFs/src/ff.c **** 
 778:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Search file semaphore table */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 20


 779:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (i = be = 0; i < _FS_LOCK; i++) {
 322              		.loc 1 779 0
 323 0002 0025     		movs	r5, #0
 324 0004 2B46     		mov	r3, r5
 325 0006 01E0     		b	.L19
 326              	.LVL42:
 327              	.L25:
 780:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs) {	/* Existing entry */
 781:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (Files[i].fs == dp->obj.fs &&	 	/* Check if the object matched with an open object */
 782:Middlewares/Third_Party/FatFs/src/ff.c **** 				Files[i].clu == dp->obj.sclust &&
 783:Middlewares/Third_Party/FatFs/src/ff.c **** 				Files[i].ofs == dp->dptr) break;
 784:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {			/* Blank entry */
 785:Middlewares/Third_Party/FatFs/src/ff.c **** 			be = 1;
 328              		.loc 1 785 0
 329 0008 0125     		movs	r5, #1
 330              	.LVL43:
 331              	.L20:
 779:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs) {	/* Existing entry */
 332              		.loc 1 779 0 discriminator 2
 333 000a 0133     		adds	r3, r3, #1
 334              	.LVL44:
 335              	.L19:
 779:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs) {	/* Existing entry */
 336              		.loc 1 779 0 is_stmt 0 discriminator 1
 337 000c 012B     		cmp	r3, #1
 338 000e 15D8     		bhi	.L21
 780:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs) {	/* Existing entry */
 339              		.loc 1 780 0 is_stmt 1
 340 0010 1A01     		lsls	r2, r3, #4
 341 0012 174C     		ldr	r4, .L34
 342 0014 A258     		ldr	r2, [r4, r2]
 343 0016 002A     		cmp	r2, #0
 344 0018 F6D0     		beq	.L25
 781:Middlewares/Third_Party/FatFs/src/ff.c **** 				Files[i].clu == dp->obj.sclust &&
 345              		.loc 1 781 0
 346 001a 0468     		ldr	r4, [r0]
 347 001c A242     		cmp	r2, r4
 348 001e F4D1     		bne	.L20
 782:Middlewares/Third_Party/FatFs/src/ff.c **** 				Files[i].ofs == dp->dptr) break;
 349              		.loc 1 782 0 discriminator 1
 350 0020 134A     		ldr	r2, .L34
 351 0022 02EB0312 		add	r2, r2, r3, lsl #4
 352 0026 5468     		ldr	r4, [r2, #4]
 353 0028 8268     		ldr	r2, [r0, #8]
 781:Middlewares/Third_Party/FatFs/src/ff.c **** 				Files[i].clu == dp->obj.sclust &&
 354              		.loc 1 781 0 discriminator 1
 355 002a 9442     		cmp	r4, r2
 356 002c EDD1     		bne	.L20
 783:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {			/* Blank entry */
 357              		.loc 1 783 0
 358 002e 104A     		ldr	r2, .L34
 359 0030 02EB0312 		add	r2, r2, r3, lsl #4
 360 0034 9468     		ldr	r4, [r2, #8]
 361 0036 4269     		ldr	r2, [r0, #20]
 782:Middlewares/Third_Party/FatFs/src/ff.c **** 				Files[i].ofs == dp->dptr) break;
 362              		.loc 1 782 0
 363 0038 9442     		cmp	r4, r2
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 21


 364 003a E6D1     		bne	.L20
 365              	.L21:
 786:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 787:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 788:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (i == _FS_LOCK) {	/* The object is not opened */
 366              		.loc 1 788 0
 367 003c 022B     		cmp	r3, #2
 368 003e 03D0     		beq	.L30
 789:Middlewares/Third_Party/FatFs/src/ff.c **** 		return (be || acc == 2) ? FR_OK : FR_TOO_MANY_OPEN_FILES;	/* Is there a blank entry for new objec
 790:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 791:Middlewares/Third_Party/FatFs/src/ff.c **** 
 792:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* The object has been opened. Reject any open against writing file and all write mode open */
 793:Middlewares/Third_Party/FatFs/src/ff.c **** 	return (acc || Files[i].ctr == 0x100) ? FR_LOCKED : FR_OK;
 369              		.loc 1 793 0
 370 0040 59B1     		cbz	r1, .L31
 371 0042 1020     		movs	r0, #16
 372              	.LVL45:
 373              	.L24:
 794:Middlewares/Third_Party/FatFs/src/ff.c **** }
 374              		.loc 1 794 0
 375 0044 30BC     		pop	{r4, r5}
 376              	.LCFI3:
 377              		.cfi_remember_state
 378              		.cfi_restore 5
 379              		.cfi_restore 4
 380              		.cfi_def_cfa_offset 0
 381 0046 7047     		bx	lr
 382              	.LVL46:
 383              	.L30:
 384              	.LCFI4:
 385              		.cfi_restore_state
 789:Middlewares/Third_Party/FatFs/src/ff.c **** 		return (be || acc == 2) ? FR_OK : FR_TOO_MANY_OPEN_FILES;	/* Is there a blank entry for new objec
 386              		.loc 1 789 0
 387 0048 0229     		cmp	r1, #2
 388 004a 08BF     		it	eq
 389 004c 45F00105 		orreq	r5, r5, #1
 390              	.LVL47:
 391 0050 0DB9     		cbnz	r5, .L32
 392 0052 1220     		movs	r0, #18
 393              	.LVL48:
 394 0054 F6E7     		b	.L24
 395              	.LVL49:
 396              	.L32:
 397 0056 0020     		movs	r0, #0
 398              	.LVL50:
 399 0058 F4E7     		b	.L24
 400              	.LVL51:
 401              	.L31:
 793:Middlewares/Third_Party/FatFs/src/ff.c **** }
 402              		.loc 1 793 0 discriminator 2
 403 005a 054A     		ldr	r2, .L34
 404 005c 02EB0313 		add	r3, r2, r3, lsl #4
 405              	.LVL52:
 406 0060 9B89     		ldrh	r3, [r3, #12]
 407 0062 B3F5807F 		cmp	r3, #256
 408 0066 01D0     		beq	.L33
 793:Middlewares/Third_Party/FatFs/src/ff.c **** }
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 22


 409              		.loc 1 793 0 is_stmt 0
 410 0068 0020     		movs	r0, #0
 411              	.LVL53:
 412 006a EBE7     		b	.L24
 413              	.LVL54:
 414              	.L33:
 415 006c 1020     		movs	r0, #16
 416              	.LVL55:
 417 006e E9E7     		b	.L24
 418              	.L35:
 419              		.align	2
 420              	.L34:
 421 0070 00000000 		.word	.LANCHOR0
 422              		.cfi_endproc
 423              	.LFE151:
 425              		.section	.text.enq_lock,"ax",%progbits
 426              		.align	1
 427              		.syntax unified
 428              		.thumb
 429              		.thumb_func
 430              		.fpu fpv5-sp-d16
 432              	enq_lock:
 433              	.LFB152:
 795:Middlewares/Third_Party/FatFs/src/ff.c **** 
 796:Middlewares/Third_Party/FatFs/src/ff.c **** 
 797:Middlewares/Third_Party/FatFs/src/ff.c **** static
 798:Middlewares/Third_Party/FatFs/src/ff.c **** int enq_lock (void)	/* Check if an entry is available for a new object */
 799:Middlewares/Third_Party/FatFs/src/ff.c **** {
 434              		.loc 1 799 0 is_stmt 1
 435              		.cfi_startproc
 436              		@ args = 0, pretend = 0, frame = 0
 437              		@ frame_needed = 0, uses_anonymous_args = 0
 438              		@ link register save eliminated.
 439              	.LVL56:
 800:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
 801:Middlewares/Third_Party/FatFs/src/ff.c **** 
 802:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (i = 0; i < _FS_LOCK && Files[i].fs; i++) ;
 440              		.loc 1 802 0
 441 0000 0020     		movs	r0, #0
 442 0002 00E0     		b	.L37
 443              	.LVL57:
 444              	.L39:
 445              		.loc 1 802 0 is_stmt 0 discriminator 4
 446 0004 0130     		adds	r0, r0, #1
 447              	.LVL58:
 448              	.L37:
 449              		.loc 1 802 0 discriminator 1
 450 0006 0128     		cmp	r0, #1
 451 0008 04D8     		bhi	.L38
 452              		.loc 1 802 0 discriminator 3
 453 000a 0301     		lsls	r3, r0, #4
 454 000c 034A     		ldr	r2, .L40
 455 000e D358     		ldr	r3, [r2, r3]
 456 0010 002B     		cmp	r3, #0
 457 0012 F7D1     		bne	.L39
 458              	.L38:
 803:Middlewares/Third_Party/FatFs/src/ff.c **** 	return (i == _FS_LOCK) ? 0 : 1;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 23


 804:Middlewares/Third_Party/FatFs/src/ff.c **** }
 459              		.loc 1 804 0 is_stmt 1
 460 0014 0238     		subs	r0, r0, #2
 461              	.LVL59:
 462 0016 18BF     		it	ne
 463 0018 0120     		movne	r0, #1
 464              	.LVL60:
 465 001a 7047     		bx	lr
 466              	.L41:
 467              		.align	2
 468              	.L40:
 469 001c 00000000 		.word	.LANCHOR0
 470              		.cfi_endproc
 471              	.LFE152:
 473              		.section	.text.inc_lock,"ax",%progbits
 474              		.align	1
 475              		.syntax unified
 476              		.thumb
 477              		.thumb_func
 478              		.fpu fpv5-sp-d16
 480              	inc_lock:
 481              	.LFB153:
 805:Middlewares/Third_Party/FatFs/src/ff.c **** 
 806:Middlewares/Third_Party/FatFs/src/ff.c **** 
 807:Middlewares/Third_Party/FatFs/src/ff.c **** static
 808:Middlewares/Third_Party/FatFs/src/ff.c **** UINT inc_lock (	/* Increment object open counter and returns its index (0:Internal error) */
 809:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,	/* Directory object pointing the file to register or increment */
 810:Middlewares/Third_Party/FatFs/src/ff.c **** 	int acc		/* Desired access (0:Read, 1:Write, 2:Delete/Rename) */
 811:Middlewares/Third_Party/FatFs/src/ff.c **** )
 812:Middlewares/Third_Party/FatFs/src/ff.c **** {
 482              		.loc 1 812 0
 483              		.cfi_startproc
 484              		@ args = 0, pretend = 0, frame = 0
 485              		@ frame_needed = 0, uses_anonymous_args = 0
 486              		@ link register save eliminated.
 487              	.LVL61:
 488 0000 70B4     		push	{r4, r5, r6}
 489              	.LCFI5:
 490              		.cfi_def_cfa_offset 12
 491              		.cfi_offset 4, -12
 492              		.cfi_offset 5, -8
 493              		.cfi_offset 6, -4
 494              	.LVL62:
 813:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
 814:Middlewares/Third_Party/FatFs/src/ff.c **** 
 815:Middlewares/Third_Party/FatFs/src/ff.c **** 
 816:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (i = 0; i < _FS_LOCK; i++) {	/* Find the object */
 495              		.loc 1 816 0
 496 0002 0023     		movs	r3, #0
 497 0004 00E0     		b	.L43
 498              	.LVL63:
 499              	.L44:
 500              		.loc 1 816 0 is_stmt 0 discriminator 2
 501 0006 0133     		adds	r3, r3, #1
 502              	.LVL64:
 503              	.L43:
 504              		.loc 1 816 0 discriminator 1
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 24


 505 0008 012B     		cmp	r3, #1
 506 000a 13D8     		bhi	.L45
 817:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs == dp->obj.fs &&
 507              		.loc 1 817 0 is_stmt 1
 508 000c 1A01     		lsls	r2, r3, #4
 509 000e 244C     		ldr	r4, .L60
 510 0010 A458     		ldr	r4, [r4, r2]
 511 0012 0268     		ldr	r2, [r0]
 512 0014 9442     		cmp	r4, r2
 513 0016 F6D1     		bne	.L44
 818:Middlewares/Third_Party/FatFs/src/ff.c **** 			Files[i].clu == dp->obj.sclust &&
 514              		.loc 1 818 0 discriminator 1
 515 0018 214A     		ldr	r2, .L60
 516 001a 02EB0312 		add	r2, r2, r3, lsl #4
 517 001e 5468     		ldr	r4, [r2, #4]
 518 0020 8268     		ldr	r2, [r0, #8]
 817:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs == dp->obj.fs &&
 519              		.loc 1 817 0 discriminator 1
 520 0022 9442     		cmp	r4, r2
 521 0024 EFD1     		bne	.L44
 819:Middlewares/Third_Party/FatFs/src/ff.c **** 			Files[i].ofs == dp->dptr) break;
 522              		.loc 1 819 0
 523 0026 1E4A     		ldr	r2, .L60
 524 0028 02EB0312 		add	r2, r2, r3, lsl #4
 525 002c 9468     		ldr	r4, [r2, #8]
 526 002e 4269     		ldr	r2, [r0, #20]
 818:Middlewares/Third_Party/FatFs/src/ff.c **** 			Files[i].clu == dp->obj.sclust &&
 527              		.loc 1 818 0
 528 0030 9442     		cmp	r4, r2
 529 0032 E8D1     		bne	.L44
 530              	.L45:
 820:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 821:Middlewares/Third_Party/FatFs/src/ff.c **** 
 822:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (i == _FS_LOCK) {				/* Not opened. Register it as new. */
 531              		.loc 1 822 0
 532 0034 022B     		cmp	r3, #2
 533 0036 29D0     		beq	.L59
 534              	.LVL65:
 535              	.L48:
 823:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = 0; i < _FS_LOCK && Files[i].fs; i++) ;
 824:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == _FS_LOCK) return 0;	/* No free entry to register (int err) */
 825:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].fs = dp->obj.fs;
 826:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].clu = dp->obj.sclust;
 827:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].ofs = dp->dptr;
 828:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].ctr = 0;
 829:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 830:Middlewares/Third_Party/FatFs/src/ff.c **** 
 831:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (acc && Files[i].ctr) return 0;	/* Access violation (int err) */
 536              		.loc 1 831 0
 537 0038 21B1     		cbz	r1, .L52
 538              		.loc 1 831 0 is_stmt 0 discriminator 1
 539 003a 194A     		ldr	r2, .L60
 540 003c 02EB0312 		add	r2, r2, r3, lsl #4
 541 0040 9289     		ldrh	r2, [r2, #12]
 542 0042 52BB     		cbnz	r2, .L56
 543              	.L52:
 832:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 25


 833:Middlewares/Third_Party/FatFs/src/ff.c **** 	Files[i].ctr = acc ? 0x100 : Files[i].ctr + 1;	/* Set semaphore value */
 544              		.loc 1 833 0 is_stmt 1
 545 0044 21BB     		cbnz	r1, .L57
 546              		.loc 1 833 0 is_stmt 0 discriminator 1
 547 0046 164A     		ldr	r2, .L60
 548 0048 02EB0312 		add	r2, r2, r3, lsl #4
 549 004c 9189     		ldrh	r1, [r2, #12]
 550              	.LVL66:
 551 004e 0131     		adds	r1, r1, #1
 552 0050 89B2     		uxth	r1, r1
 553              	.L53:
 554              		.loc 1 833 0 discriminator 4
 555 0052 134A     		ldr	r2, .L60
 556 0054 02EB0312 		add	r2, r2, r3, lsl #4
 557 0058 9181     		strh	r1, [r2, #12]	@ movhi
 834:Middlewares/Third_Party/FatFs/src/ff.c **** 
 835:Middlewares/Third_Party/FatFs/src/ff.c **** 	return i + 1;
 558              		.loc 1 835 0 is_stmt 1 discriminator 4
 559 005a 581C     		adds	r0, r3, #1
 560              	.L42:
 836:Middlewares/Third_Party/FatFs/src/ff.c **** }
 561              		.loc 1 836 0
 562 005c 70BC     		pop	{r4, r5, r6}
 563              	.LCFI6:
 564              		.cfi_remember_state
 565              		.cfi_restore 6
 566              		.cfi_restore 5
 567              		.cfi_restore 4
 568              		.cfi_def_cfa_offset 0
 569 005e 7047     		bx	lr
 570              	.LVL67:
 571              	.L50:
 572              	.LCFI7:
 573              		.cfi_restore_state
 823:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == _FS_LOCK) return 0;	/* No free entry to register (int err) */
 574              		.loc 1 823 0 discriminator 4
 575 0060 0133     		adds	r3, r3, #1
 576              	.LVL68:
 577              	.L47:
 823:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == _FS_LOCK) return 0;	/* No free entry to register (int err) */
 578              		.loc 1 823 0 is_stmt 0 discriminator 1
 579 0062 012B     		cmp	r3, #1
 580 0064 04D8     		bhi	.L49
 823:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == _FS_LOCK) return 0;	/* No free entry to register (int err) */
 581              		.loc 1 823 0 discriminator 3
 582 0066 1A01     		lsls	r2, r3, #4
 583 0068 0D4C     		ldr	r4, .L60
 584 006a A258     		ldr	r2, [r4, r2]
 585 006c 002A     		cmp	r2, #0
 586 006e F7D1     		bne	.L50
 587              	.L49:
 824:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].fs = dp->obj.fs;
 588              		.loc 1 824 0 is_stmt 1
 589 0070 022B     		cmp	r3, #2
 590 0072 10D0     		beq	.L55
 825:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].clu = dp->obj.sclust;
 591              		.loc 1 825 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 26


 592 0074 0668     		ldr	r6, [r0]
 593 0076 0A4D     		ldr	r5, .L60
 594 0078 1C01     		lsls	r4, r3, #4
 595 007a 2A19     		adds	r2, r5, r4
 596 007c 2E51     		str	r6, [r5, r4]
 826:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].ofs = dp->dptr;
 597              		.loc 1 826 0
 598 007e 8468     		ldr	r4, [r0, #8]
 599 0080 5460     		str	r4, [r2, #4]
 827:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].ctr = 0;
 600              		.loc 1 827 0
 601 0082 4069     		ldr	r0, [r0, #20]
 602              	.LVL69:
 603 0084 9060     		str	r0, [r2, #8]
 828:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 604              		.loc 1 828 0
 605 0086 0020     		movs	r0, #0
 606 0088 9081     		strh	r0, [r2, #12]	@ movhi
 607 008a D5E7     		b	.L48
 608              	.LVL70:
 609              	.L59:
 610 008c 0023     		movs	r3, #0
 611              	.LVL71:
 612 008e E8E7     		b	.L47
 613              	.LVL72:
 614              	.L57:
 833:Middlewares/Third_Party/FatFs/src/ff.c **** 
 615              		.loc 1 833 0
 616 0090 4FF48071 		mov	r1, #256
 617              	.LVL73:
 618 0094 DDE7     		b	.L53
 619              	.LVL74:
 620              	.L55:
 824:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].fs = dp->obj.fs;
 621              		.loc 1 824 0
 622 0096 0020     		movs	r0, #0
 623              	.LVL75:
 624 0098 E0E7     		b	.L42
 625              	.L56:
 831:Middlewares/Third_Party/FatFs/src/ff.c **** 
 626              		.loc 1 831 0
 627 009a 0020     		movs	r0, #0
 628 009c DEE7     		b	.L42
 629              	.L61:
 630 009e 00BF     		.align	2
 631              	.L60:
 632 00a0 00000000 		.word	.LANCHOR0
 633              		.cfi_endproc
 634              	.LFE153:
 636              		.section	.text.dec_lock,"ax",%progbits
 637              		.align	1
 638              		.syntax unified
 639              		.thumb
 640              		.thumb_func
 641              		.fpu fpv5-sp-d16
 643              	dec_lock:
 644              	.LFB154:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 27


 837:Middlewares/Third_Party/FatFs/src/ff.c **** 
 838:Middlewares/Third_Party/FatFs/src/ff.c **** 
 839:Middlewares/Third_Party/FatFs/src/ff.c **** static
 840:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dec_lock (	/* Decrement object open counter */
 841:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i			/* Semaphore index (1..) */
 842:Middlewares/Third_Party/FatFs/src/ff.c **** )
 843:Middlewares/Third_Party/FatFs/src/ff.c **** {
 645              		.loc 1 843 0
 646              		.cfi_startproc
 647              		@ args = 0, pretend = 0, frame = 0
 648              		@ frame_needed = 0, uses_anonymous_args = 0
 649              		@ link register save eliminated.
 650              	.LVL76:
 844:Middlewares/Third_Party/FatFs/src/ff.c **** 	WORD n;
 845:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 846:Middlewares/Third_Party/FatFs/src/ff.c **** 
 847:Middlewares/Third_Party/FatFs/src/ff.c **** 
 848:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (--i < _FS_LOCK) {	/* Shift index number origin from 0 */
 651              		.loc 1 848 0
 652 0000 0138     		subs	r0, r0, #1
 653              	.LVL77:
 654 0002 0128     		cmp	r0, #1
 655 0004 01D9     		bls	.L69
 849:Middlewares/Third_Party/FatFs/src/ff.c **** 		n = Files[i].ctr;
 850:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (n == 0x100) n = 0;		/* If write mode open, delete the entry */
 851:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (n > 0) n--;				/* Decrement read mode open count */
 852:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].ctr = n;
 853:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (n == 0) Files[i].fs = 0;	/* Delete the entry if open count gets zero */
 854:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_OK;
 855:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
 856:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_INT_ERR;			/* Invalid index nunber */
 656              		.loc 1 856 0
 657 0006 0220     		movs	r0, #2
 658              	.LVL78:
 659 0008 7047     		bx	lr
 660              	.LVL79:
 661              	.L69:
 849:Middlewares/Third_Party/FatFs/src/ff.c **** 		n = Files[i].ctr;
 662              		.loc 1 849 0
 663 000a 0C4B     		ldr	r3, .L71
 664 000c 03EB0013 		add	r3, r3, r0, lsl #4
 665 0010 9B89     		ldrh	r3, [r3, #12]
 666              	.LVL80:
 850:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (n > 0) n--;				/* Decrement read mode open count */
 667              		.loc 1 850 0
 668 0012 B3F5807F 		cmp	r3, #256
 669 0016 0CD0     		beq	.L70
 670              	.LVL81:
 671              	.L64:
 851:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].ctr = n;
 672              		.loc 1 851 0
 673 0018 0BB1     		cbz	r3, .L65
 851:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].ctr = n;
 674              		.loc 1 851 0 is_stmt 0 discriminator 1
 675 001a 013B     		subs	r3, r3, #1
 676              	.LVL82:
 677 001c 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 28


 678              	.LVL83:
 679              	.L65:
 852:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (n == 0) Files[i].fs = 0;	/* Delete the entry if open count gets zero */
 680              		.loc 1 852 0 is_stmt 1
 681 001e 074A     		ldr	r2, .L71
 682 0020 02EB0012 		add	r2, r2, r0, lsl #4
 683 0024 9381     		strh	r3, [r2, #12]	@ movhi
 853:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_OK;
 684              		.loc 1 853 0
 685 0026 33B9     		cbnz	r3, .L68
 853:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_OK;
 686              		.loc 1 853 0 is_stmt 0 discriminator 1
 687 0028 0301     		lsls	r3, r0, #4
 688              	.LVL84:
 689 002a 0020     		movs	r0, #0
 690              	.LVL85:
 691 002c 034A     		ldr	r2, .L71
 692              	.LVL86:
 693 002e D050     		str	r0, [r2, r3]
 694 0030 7047     		bx	lr
 695              	.LVL87:
 696              	.L70:
 850:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (n > 0) n--;				/* Decrement read mode open count */
 697              		.loc 1 850 0 is_stmt 1
 698 0032 0023     		movs	r3, #0
 699              	.LVL88:
 700 0034 F0E7     		b	.L64
 701              	.LVL89:
 702              	.L68:
 854:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
 703              		.loc 1 854 0
 704 0036 0020     		movs	r0, #0
 705              	.LVL90:
 857:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 858:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 859:Middlewares/Third_Party/FatFs/src/ff.c **** }
 706              		.loc 1 859 0
 707 0038 7047     		bx	lr
 708              	.L72:
 709 003a 00BF     		.align	2
 710              	.L71:
 711 003c 00000000 		.word	.LANCHOR0
 712              		.cfi_endproc
 713              	.LFE154:
 715              		.section	.text.clear_lock,"ax",%progbits
 716              		.align	1
 717              		.syntax unified
 718              		.thumb
 719              		.thumb_func
 720              		.fpu fpv5-sp-d16
 722              	clear_lock:
 723              	.LFB155:
 860:Middlewares/Third_Party/FatFs/src/ff.c **** 
 861:Middlewares/Third_Party/FatFs/src/ff.c **** 
 862:Middlewares/Third_Party/FatFs/src/ff.c **** static
 863:Middlewares/Third_Party/FatFs/src/ff.c **** void clear_lock (	/* Clear lock entries of the volume */
 864:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 29


 865:Middlewares/Third_Party/FatFs/src/ff.c **** )
 866:Middlewares/Third_Party/FatFs/src/ff.c **** {
 724              		.loc 1 866 0
 725              		.cfi_startproc
 726              		@ args = 0, pretend = 0, frame = 0
 727              		@ frame_needed = 0, uses_anonymous_args = 0
 728              		@ link register save eliminated.
 729              	.LVL91:
 867:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
 868:Middlewares/Third_Party/FatFs/src/ff.c **** 
 869:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (i = 0; i < _FS_LOCK; i++) {
 730              		.loc 1 869 0
 731 0000 0023     		movs	r3, #0
 732 0002 03E0     		b	.L78
 733              	.LVL92:
 734              	.L84:
 735              	.LCFI8:
 736              		.cfi_def_cfa_offset 4
 737              		.cfi_offset 4, -4
 870:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs == fs) Files[i].fs = 0;
 871:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 872:Middlewares/Third_Party/FatFs/src/ff.c **** }
 738              		.loc 1 872 0
 739 0004 5DF8044B 		ldr	r4, [sp], #4
 740              	.LCFI9:
 741              		.cfi_restore 4
 742              		.cfi_def_cfa_offset 0
 743 0008 7047     		bx	lr
 744              	.L80:
 869:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs == fs) Files[i].fs = 0;
 745              		.loc 1 869 0
 746 000a 0133     		adds	r3, r3, #1
 747              	.LVL93:
 748              	.L78:
 749 000c 012B     		cmp	r3, #1
 750 000e 11D8     		bhi	.L83
 870:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs == fs) Files[i].fs = 0;
 751              		.loc 1 870 0
 752 0010 1A01     		lsls	r2, r3, #4
 753 0012 0949     		ldr	r1, .L85
 754 0014 8A58     		ldr	r2, [r1, r2]
 755 0016 8242     		cmp	r2, r0
 756 0018 F7D1     		bne	.L80
 866:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
 757              		.loc 1 866 0
 758 001a 10B4     		push	{r4}
 759              	.LCFI10:
 760              		.cfi_def_cfa_offset 4
 761              		.cfi_offset 4, -4
 762              	.L79:
 870:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs == fs) Files[i].fs = 0;
 763              		.loc 1 870 0 discriminator 1
 764 001c 1A01     		lsls	r2, r3, #4
 765 001e 0024     		movs	r4, #0
 766 0020 8C50     		str	r4, [r1, r2]
 767              	.L75:
 869:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs == fs) Files[i].fs = 0;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 30


 768              		.loc 1 869 0 discriminator 2
 769 0022 0133     		adds	r3, r3, #1
 770              	.LVL94:
 771 0024 012B     		cmp	r3, #1
 772 0026 EDD8     		bhi	.L84
 870:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs == fs) Files[i].fs = 0;
 773              		.loc 1 870 0
 774 0028 1A01     		lsls	r2, r3, #4
 775 002a 0349     		ldr	r1, .L85
 776 002c 8A58     		ldr	r2, [r1, r2]
 777 002e 8242     		cmp	r2, r0
 778 0030 F7D1     		bne	.L75
 779 0032 F3E7     		b	.L79
 780              	.L83:
 781              	.LCFI11:
 782              		.cfi_def_cfa_offset 0
 783              		.cfi_restore 4
 784 0034 7047     		bx	lr
 785              	.L86:
 786 0036 00BF     		.align	2
 787              	.L85:
 788 0038 00000000 		.word	.LANCHOR0
 789              		.cfi_endproc
 790              	.LFE155:
 792              		.section	.text.clust2sect,"ax",%progbits
 793              		.align	1
 794              		.syntax unified
 795              		.thumb
 796              		.thumb_func
 797              		.fpu fpv5-sp-d16
 799              	clust2sect:
 800              	.LFB159:
 873:Middlewares/Third_Party/FatFs/src/ff.c **** 
 874:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _FS_LOCK != 0 */
 875:Middlewares/Third_Party/FatFs/src/ff.c **** 
 876:Middlewares/Third_Party/FatFs/src/ff.c **** 
 877:Middlewares/Third_Party/FatFs/src/ff.c **** 
 878:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 879:Middlewares/Third_Party/FatFs/src/ff.c **** /* Move/Flush disk access window in the file system object               */
 880:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 881:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 882:Middlewares/Third_Party/FatFs/src/ff.c **** static
 883:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT sync_window (	/* Returns FR_OK or FR_DISK_ERROR */
 884:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs			/* File system object */
 885:Middlewares/Third_Party/FatFs/src/ff.c **** )
 886:Middlewares/Third_Party/FatFs/src/ff.c **** {
 887:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD wsect;
 888:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT nf;
 889:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res = FR_OK;
 890:Middlewares/Third_Party/FatFs/src/ff.c **** 
 891:Middlewares/Third_Party/FatFs/src/ff.c **** 
 892:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->wflag) {	/* Write back the sector if it is dirty */
 893:Middlewares/Third_Party/FatFs/src/ff.c **** 		wsect = fs->winsect;	/* Current sector number */
 894:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_write(fs->drv, fs->win, wsect, 1) != RES_OK) {
 895:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_DISK_ERR;
 896:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 897:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 0;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 31


 898:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (wsect - fs->fatbase < fs->fsize) {		/* Is it in the FAT area? */
 899:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (nf = fs->n_fats; nf >= 2; nf--) {	/* Reflect the change to all FAT copies */
 900:Middlewares/Third_Party/FatFs/src/ff.c **** 					wsect += fs->fsize;
 901:Middlewares/Third_Party/FatFs/src/ff.c **** 					disk_write(fs->drv, fs->win, wsect, 1);
 902:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 903:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 904:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 905:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 906:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 907:Middlewares/Third_Party/FatFs/src/ff.c **** }
 908:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 909:Middlewares/Third_Party/FatFs/src/ff.c **** 
 910:Middlewares/Third_Party/FatFs/src/ff.c **** 
 911:Middlewares/Third_Party/FatFs/src/ff.c **** static
 912:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT move_window (	/* Returns FR_OK or FR_DISK_ERROR */
 913:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,			/* File system object */
 914:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD sector		/* Sector number to make appearance in the fs->win[] */
 915:Middlewares/Third_Party/FatFs/src/ff.c **** )
 916:Middlewares/Third_Party/FatFs/src/ff.c **** {
 917:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res = FR_OK;
 918:Middlewares/Third_Party/FatFs/src/ff.c **** 
 919:Middlewares/Third_Party/FatFs/src/ff.c **** 
 920:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (sector != fs->winsect) {	/* Window offset changed? */
 921:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 922:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = sync_window(fs);		/* Write-back changes */
 923:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 924:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {			/* Fill sector window with new data */
 925:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_read(fs->drv, fs->win, sector, 1) != RES_OK) {
 926:Middlewares/Third_Party/FatFs/src/ff.c **** 				sector = 0xFFFFFFFF;	/* Invalidate window if data is not reliable */
 927:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_DISK_ERR;
 928:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 929:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->winsect = sector;
 930:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 931:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 932:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 933:Middlewares/Third_Party/FatFs/src/ff.c **** }
 934:Middlewares/Third_Party/FatFs/src/ff.c **** 
 935:Middlewares/Third_Party/FatFs/src/ff.c **** 
 936:Middlewares/Third_Party/FatFs/src/ff.c **** 
 937:Middlewares/Third_Party/FatFs/src/ff.c **** 
 938:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 939:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 940:Middlewares/Third_Party/FatFs/src/ff.c **** /* Synchronize file system and strage device                             */
 941:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 942:Middlewares/Third_Party/FatFs/src/ff.c **** 
 943:Middlewares/Third_Party/FatFs/src/ff.c **** static
 944:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT sync_fs (	/* FR_OK:succeeded, !=0:error */
 945:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs		/* File system object */
 946:Middlewares/Third_Party/FatFs/src/ff.c **** )
 947:Middlewares/Third_Party/FatFs/src/ff.c **** {
 948:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 949:Middlewares/Third_Party/FatFs/src/ff.c **** 
 950:Middlewares/Third_Party/FatFs/src/ff.c **** 
 951:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = sync_window(fs);
 952:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 953:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Update FSInfo sector if needed */
 954:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->fs_type == FS_FAT32 && fs->fsi_flag == 1) {
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 32


 955:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Create FSInfo structure */
 956:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(fs->win, 0, SS(fs));
 957:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(fs->win + BS_55AA, 0xAA55);
 958:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(fs->win + FSI_LeadSig, 0x41615252);
 959:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(fs->win + FSI_StrucSig, 0x61417272);
 960:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(fs->win + FSI_Free_Count, fs->free_clst);
 961:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(fs->win + FSI_Nxt_Free, fs->last_clst);
 962:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Write it into the FSInfo sector */
 963:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->winsect = fs->volbase + 1;
 964:Middlewares/Third_Party/FatFs/src/ff.c **** 			disk_write(fs->drv, fs->win, fs->winsect, 1);
 965:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->fsi_flag = 0;
 966:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 967:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Make sure that no pending write process in the physical drive */
 968:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_ioctl(fs->drv, CTRL_SYNC, 0) != RES_OK) res = FR_DISK_ERR;
 969:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 970:Middlewares/Third_Party/FatFs/src/ff.c **** 
 971:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 972:Middlewares/Third_Party/FatFs/src/ff.c **** }
 973:Middlewares/Third_Party/FatFs/src/ff.c **** 
 974:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 975:Middlewares/Third_Party/FatFs/src/ff.c **** 
 976:Middlewares/Third_Party/FatFs/src/ff.c **** 
 977:Middlewares/Third_Party/FatFs/src/ff.c **** 
 978:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 979:Middlewares/Third_Party/FatFs/src/ff.c **** /* Get sector# from cluster#                                             */
 980:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 981:Middlewares/Third_Party/FatFs/src/ff.c **** 
 982:Middlewares/Third_Party/FatFs/src/ff.c **** static
 983:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD clust2sect (	/* !=0:Sector number, 0:Failed (invalid cluster#) */
 984:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,		/* File system object */
 985:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst		/* Cluster# to be converted */
 986:Middlewares/Third_Party/FatFs/src/ff.c **** )
 987:Middlewares/Third_Party/FatFs/src/ff.c **** {
 801              		.loc 1 987 0
 802              		.cfi_startproc
 803              		@ args = 0, pretend = 0, frame = 0
 804              		@ frame_needed = 0, uses_anonymous_args = 0
 805              		@ link register save eliminated.
 806              	.LVL95:
 988:Middlewares/Third_Party/FatFs/src/ff.c **** 	clst -= 2;
 807              		.loc 1 988 0
 808 0000 0239     		subs	r1, r1, #2
 809              	.LVL96:
 989:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst >= fs->n_fatent - 2) return 0;		/* Invalid cluster# */
 810              		.loc 1 989 0
 811 0002 036A     		ldr	r3, [r0, #32]
 812 0004 023B     		subs	r3, r3, #2
 813 0006 9942     		cmp	r1, r3
 814 0008 04D2     		bcs	.L89
 990:Middlewares/Third_Party/FatFs/src/ff.c **** 	return clst * fs->csize + fs->database;
 815              		.loc 1 990 0
 816 000a 4389     		ldrh	r3, [r0, #10]
 817 000c 406B     		ldr	r0, [r0, #52]
 818              	.LVL97:
 819 000e 03FB0100 		mla	r0, r3, r1, r0
 820 0012 7047     		bx	lr
 821              	.LVL98:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 33


 822              	.L89:
 989:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst >= fs->n_fatent - 2) return 0;		/* Invalid cluster# */
 823              		.loc 1 989 0
 824 0014 0020     		movs	r0, #0
 825              	.LVL99:
 991:Middlewares/Third_Party/FatFs/src/ff.c **** }
 826              		.loc 1 991 0
 827 0016 7047     		bx	lr
 828              		.cfi_endproc
 829              	.LFE159:
 831              		.section	.text.clmt_clust,"ax",%progbits
 832              		.align	1
 833              		.syntax unified
 834              		.thumb
 835              		.thumb_func
 836              		.fpu fpv5-sp-d16
 838              	clmt_clust:
 839              	.LFB164:
 992:Middlewares/Third_Party/FatFs/src/ff.c **** 
 993:Middlewares/Third_Party/FatFs/src/ff.c **** 
 994:Middlewares/Third_Party/FatFs/src/ff.c **** 
 995:Middlewares/Third_Party/FatFs/src/ff.c **** 
 996:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 997:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT access - Read value of a FAT entry                                */
 998:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 999:Middlewares/Third_Party/FatFs/src/ff.c **** 
1000:Middlewares/Third_Party/FatFs/src/ff.c **** static
1001:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD get_fat (	/* 0xFFFFFFFF:Disk error, 1:Internal error, 2..0x7FFFFFFF:Cluster status */
1002:Middlewares/Third_Party/FatFs/src/ff.c **** 	_FDID* obj,	/* Corresponding object */
1003:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst	/* Cluster number to get the value */
1004:Middlewares/Third_Party/FatFs/src/ff.c **** )
1005:Middlewares/Third_Party/FatFs/src/ff.c **** {
1006:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT wc, bc;
1007:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD val;
1008:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = obj->fs;
1009:Middlewares/Third_Party/FatFs/src/ff.c **** 
1010:Middlewares/Third_Party/FatFs/src/ff.c **** 
1011:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst < 2 || clst >= fs->n_fatent) {	/* Check if in valid range */
1012:Middlewares/Third_Party/FatFs/src/ff.c **** 		val = 1;	/* Internal error */
1013:Middlewares/Third_Party/FatFs/src/ff.c **** 
1014:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
1015:Middlewares/Third_Party/FatFs/src/ff.c **** 		val = 0xFFFFFFFF;	/* Default value falls on disk error */
1016:Middlewares/Third_Party/FatFs/src/ff.c **** 
1017:Middlewares/Third_Party/FatFs/src/ff.c **** 		switch (fs->fs_type) {
1018:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT12 :
1019:Middlewares/Third_Party/FatFs/src/ff.c **** 			bc = (UINT)clst; bc += bc / 2;
1020:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
1021:Middlewares/Third_Party/FatFs/src/ff.c **** 			wc = fs->win[bc++ % SS(fs)];
1022:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
1023:Middlewares/Third_Party/FatFs/src/ff.c **** 			wc |= fs->win[bc % SS(fs)] << 8;
1024:Middlewares/Third_Party/FatFs/src/ff.c **** 			val = (clst & 1) ? (wc >> 4) : (wc & 0xFFF);
1025:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
1026:Middlewares/Third_Party/FatFs/src/ff.c **** 
1027:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT16 :
1028:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 2))) != FR_OK) break;
1029:Middlewares/Third_Party/FatFs/src/ff.c **** 			val = ld_word(fs->win + clst * 2 % SS(fs));
1030:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 34


1031:Middlewares/Third_Party/FatFs/src/ff.c **** 
1032:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT32 :
1033:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 4))) != FR_OK) break;
1034:Middlewares/Third_Party/FatFs/src/ff.c **** 			val = ld_dword(fs->win + clst * 4 % SS(fs)) & 0x0FFFFFFF;
1035:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
1036:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
1037:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_EXFAT :
1038:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (obj->objsize) {
1039:Middlewares/Third_Party/FatFs/src/ff.c **** 				DWORD cofs = clst - obj->sclust;	/* Offset from start cluster */
1040:Middlewares/Third_Party/FatFs/src/ff.c **** 				DWORD clen = (DWORD)((obj->objsize - 1) / SS(fs)) / fs->csize;	/* Number of clusters - 1 */
1041:Middlewares/Third_Party/FatFs/src/ff.c **** 
1042:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (obj->stat == 2) {	/* Is there no valid chain on the FAT? */
1043:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (cofs <= clen) {
1044:Middlewares/Third_Party/FatFs/src/ff.c **** 						val = (cofs == clen) ? 0x7FFFFFFF : clst + 1;	/* Generate the value */
1045:Middlewares/Third_Party/FatFs/src/ff.c **** 						break;
1046:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
1047:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
1048:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (obj->stat == 3 && cofs < obj->n_cont) {	/* Is it in the 1st fragment? */
1049:Middlewares/Third_Party/FatFs/src/ff.c **** 					val = clst + 1; 	/* Generate the value */
1050:Middlewares/Third_Party/FatFs/src/ff.c **** 					break;
1051:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
1052:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (obj->stat != 2) {	/* Get value from FAT if FAT chain is valid */
1053:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (obj->n_frag != 0) {	/* Is it on the growing edge? */
1054:Middlewares/Third_Party/FatFs/src/ff.c **** 						val = 0x7FFFFFFF;	/* Generate EOC */
1055:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else {
1056:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 4))) != FR_OK) break;
1057:Middlewares/Third_Party/FatFs/src/ff.c **** 						val = ld_dword(fs->win + clst * 4 % SS(fs)) & 0x7FFFFFFF;
1058:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
1059:Middlewares/Third_Party/FatFs/src/ff.c **** 					break;
1060:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
1061:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1062:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* go to default */
1063:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1064:Middlewares/Third_Party/FatFs/src/ff.c **** 		default:
1065:Middlewares/Third_Party/FatFs/src/ff.c **** 			val = 1;	/* Internal error */
1066:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1067:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1068:Middlewares/Third_Party/FatFs/src/ff.c **** 
1069:Middlewares/Third_Party/FatFs/src/ff.c **** 	return val;
1070:Middlewares/Third_Party/FatFs/src/ff.c **** }
1071:Middlewares/Third_Party/FatFs/src/ff.c **** 
1072:Middlewares/Third_Party/FatFs/src/ff.c **** 
1073:Middlewares/Third_Party/FatFs/src/ff.c **** 
1074:Middlewares/Third_Party/FatFs/src/ff.c **** 
1075:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1076:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1077:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT access - Change value of a FAT entry                              */
1078:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1079:Middlewares/Third_Party/FatFs/src/ff.c **** 
1080:Middlewares/Third_Party/FatFs/src/ff.c **** static
1081:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT put_fat (	/* FR_OK(0):succeeded, !=0:error */
1082:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,		/* Corresponding file system object */
1083:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst,		/* FAT index number (cluster number) to be changed */
1084:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD val		/* New value to be set to the entry */
1085:Middlewares/Third_Party/FatFs/src/ff.c **** )
1086:Middlewares/Third_Party/FatFs/src/ff.c **** {
1087:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT bc;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 35


1088:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *p;
1089:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res = FR_INT_ERR;
1090:Middlewares/Third_Party/FatFs/src/ff.c **** 
1091:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst >= 2 && clst < fs->n_fatent) {	/* Check if in valid range */
1092:Middlewares/Third_Party/FatFs/src/ff.c **** 		switch (fs->fs_type) {
1093:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT12 :	/* Bitfield items */
1094:Middlewares/Third_Party/FatFs/src/ff.c **** 			bc = (UINT)clst; bc += bc / 2;
1095:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
1096:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
1097:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = fs->win + bc++ % SS(fs);
1098:Middlewares/Third_Party/FatFs/src/ff.c **** 			*p = (clst & 1) ? ((*p & 0x0F) | ((BYTE)val << 4)) : (BYTE)val;
1099:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
1100:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
1101:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
1102:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = fs->win + bc % SS(fs);
1103:Middlewares/Third_Party/FatFs/src/ff.c **** 			*p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x0F));
1104:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
1105:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
1106:Middlewares/Third_Party/FatFs/src/ff.c **** 
1107:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT16 :	/* WORD aligned items */
1108:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, fs->fatbase + (clst / (SS(fs) / 2)));
1109:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
1110:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(fs->win + clst * 2 % SS(fs), (WORD)val);
1111:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
1112:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
1113:Middlewares/Third_Party/FatFs/src/ff.c **** 
1114:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT32 :	/* DWORD aligned items */
1115:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
1116:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_EXFAT :
1117:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1118:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, fs->fatbase + (clst / (SS(fs) / 4)));
1119:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
1120:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!_FS_EXFAT || fs->fs_type != FS_EXFAT) {
1121:Middlewares/Third_Party/FatFs/src/ff.c **** 				val = (val & 0x0FFFFFFF) | (ld_dword(fs->win + clst * 4 % SS(fs)) & 0xF0000000);
1122:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1123:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(fs->win + clst * 4 % SS(fs), val);
1124:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
1125:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
1126:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1127:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1128:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
1129:Middlewares/Third_Party/FatFs/src/ff.c **** }
1130:Middlewares/Third_Party/FatFs/src/ff.c **** 
1131:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
1132:Middlewares/Third_Party/FatFs/src/ff.c **** 
1133:Middlewares/Third_Party/FatFs/src/ff.c **** 
1134:Middlewares/Third_Party/FatFs/src/ff.c **** 
1135:Middlewares/Third_Party/FatFs/src/ff.c **** 
1136:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT && !_FS_READONLY
1137:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1138:Middlewares/Third_Party/FatFs/src/ff.c **** /* exFAT: Accessing FAT and Allocation Bitmap                            */
1139:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1140:Middlewares/Third_Party/FatFs/src/ff.c **** 
1141:Middlewares/Third_Party/FatFs/src/ff.c **** /*--------------------------------------*/
1142:Middlewares/Third_Party/FatFs/src/ff.c **** /* Find a contiguous free cluster block */
1143:Middlewares/Third_Party/FatFs/src/ff.c **** /*--------------------------------------*/
1144:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 36


1145:Middlewares/Third_Party/FatFs/src/ff.c **** static
1146:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD find_bitmap (	/* 0:Not found, 2..:Cluster block found, 0xFFFFFFFF:Disk error */
1147:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,	/* File system object */
1148:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst,	/* Cluster number to scan from */
1149:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD ncl	/* Number of contiguous clusters to find (1..) */
1150:Middlewares/Third_Party/FatFs/src/ff.c **** )
1151:Middlewares/Third_Party/FatFs/src/ff.c **** {
1152:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE bm, bv;
1153:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
1154:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD val, scl, ctr;
1155:Middlewares/Third_Party/FatFs/src/ff.c **** 
1156:Middlewares/Third_Party/FatFs/src/ff.c **** 
1157:Middlewares/Third_Party/FatFs/src/ff.c **** 	clst -= 2;	/* The first bit in the bitmap corresponds to cluster #2 */
1158:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst >= fs->n_fatent - 2) clst = 0;
1159:Middlewares/Third_Party/FatFs/src/ff.c **** 	scl = val = clst; ctr = 0;
1160:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
1161:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (move_window(fs, fs->database + val / 8 / SS(fs)) != FR_OK) return 0xFFFFFFFF;	/* (assuming bi
1162:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = val / 8 % SS(fs); bm = 1 << (val % 8);
1163:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
1164:Middlewares/Third_Party/FatFs/src/ff.c **** 			do {
1165:Middlewares/Third_Party/FatFs/src/ff.c **** 				bv = fs->win[i] & bm; bm <<= 1;		/* Get bit value */
1166:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (++val >= fs->n_fatent - 2) {	/* Next cluster (with wrap-around) */
1167:Middlewares/Third_Party/FatFs/src/ff.c **** 					val = 0; bm = 0; i = SS(fs);
1168:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
1169:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!bv) {	/* Is it a free cluster? */
1170:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (++ctr == ncl) return scl + 2;	/* Check if run length is sufficient for required */
1171:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
1172:Middlewares/Third_Party/FatFs/src/ff.c **** 					scl = val; ctr = 0;		/* Encountered a cluster in-use, restart to scan */
1173:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
1174:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (val == clst) return 0;	/* All cluster scanned? */
1175:Middlewares/Third_Party/FatFs/src/ff.c **** 			} while (bm);
1176:Middlewares/Third_Party/FatFs/src/ff.c **** 			bm = 1;
1177:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (++i < SS(fs));
1178:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1179:Middlewares/Third_Party/FatFs/src/ff.c **** }
1180:Middlewares/Third_Party/FatFs/src/ff.c **** 
1181:Middlewares/Third_Party/FatFs/src/ff.c **** 
1182:Middlewares/Third_Party/FatFs/src/ff.c **** /*----------------------------------------*/
1183:Middlewares/Third_Party/FatFs/src/ff.c **** /* Set/Clear a block of allocation bitmap */
1184:Middlewares/Third_Party/FatFs/src/ff.c **** /*----------------------------------------*/
1185:Middlewares/Third_Party/FatFs/src/ff.c **** 
1186:Middlewares/Third_Party/FatFs/src/ff.c **** static
1187:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT change_bitmap (
1188:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,	/* File system object */
1189:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst,	/* Cluster number to change from */
1190:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD ncl,	/* Number of clusters to be changed */
1191:Middlewares/Third_Party/FatFs/src/ff.c **** 	int bv		/* bit value to be set (0 or 1) */
1192:Middlewares/Third_Party/FatFs/src/ff.c **** )
1193:Middlewares/Third_Party/FatFs/src/ff.c **** {
1194:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE bm;
1195:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
1196:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD sect;
1197:Middlewares/Third_Party/FatFs/src/ff.c **** 
1198:Middlewares/Third_Party/FatFs/src/ff.c **** 	clst -= 2;	/* The first bit corresponds to cluster #2 */
1199:Middlewares/Third_Party/FatFs/src/ff.c **** 	sect = fs->database + clst / 8 / SS(fs);	/* Sector address (assuming bitmap is located top of the 
1200:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = clst / 8 % SS(fs);						/* Byte offset in the sector */
1201:Middlewares/Third_Party/FatFs/src/ff.c **** 	bm = 1 << (clst % 8);						/* Bit mask in the byte */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 37


1202:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
1203:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (move_window(fs, sect++) != FR_OK) return FR_DISK_ERR;
1204:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
1205:Middlewares/Third_Party/FatFs/src/ff.c **** 			do {
1206:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (bv == (int)((fs->win[i] & bm) != 0)) return FR_INT_ERR;	/* Is the bit expected value? */
1207:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->win[i] ^= bm;	/* Flip the bit */
1208:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->wflag = 1;
1209:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (--ncl == 0) return FR_OK;	/* All bits processed? */
1210:Middlewares/Third_Party/FatFs/src/ff.c **** 			} while (bm <<= 1);		/* Next bit */
1211:Middlewares/Third_Party/FatFs/src/ff.c **** 			bm = 1;
1212:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (++i < SS(fs));		/* Next byte */
1213:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = 0;
1214:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1215:Middlewares/Third_Party/FatFs/src/ff.c **** }
1216:Middlewares/Third_Party/FatFs/src/ff.c **** 
1217:Middlewares/Third_Party/FatFs/src/ff.c **** 
1218:Middlewares/Third_Party/FatFs/src/ff.c **** /*---------------------------------------------*/
1219:Middlewares/Third_Party/FatFs/src/ff.c **** /* Fill the first fragment of the FAT chain    */
1220:Middlewares/Third_Party/FatFs/src/ff.c **** /*---------------------------------------------*/
1221:Middlewares/Third_Party/FatFs/src/ff.c **** 
1222:Middlewares/Third_Party/FatFs/src/ff.c **** static
1223:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT fill_first_frag (
1224:Middlewares/Third_Party/FatFs/src/ff.c **** 	_FDID* obj	/* Pointer to the corresponding object */
1225:Middlewares/Third_Party/FatFs/src/ff.c **** )
1226:Middlewares/Third_Party/FatFs/src/ff.c **** {
1227:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
1228:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD cl, n;
1229:Middlewares/Third_Party/FatFs/src/ff.c **** 
1230:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (obj->stat == 3) {	/* Has the object been changed 'fragmented'? */
1231:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (cl = obj->sclust, n = obj->n_cont; n; cl++, n--) {	/* Create cluster chain on the FAT */
1232:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = put_fat(obj->fs, cl, cl + 1);
1233:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) return res;
1234:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1235:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->stat = 0;	/* Change status 'FAT chain is valid' */
1236:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1237:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
1238:Middlewares/Third_Party/FatFs/src/ff.c **** }
1239:Middlewares/Third_Party/FatFs/src/ff.c **** 
1240:Middlewares/Third_Party/FatFs/src/ff.c **** 
1241:Middlewares/Third_Party/FatFs/src/ff.c **** /*---------------------------------------------*/
1242:Middlewares/Third_Party/FatFs/src/ff.c **** /* Fill the last fragment of the FAT chain     */
1243:Middlewares/Third_Party/FatFs/src/ff.c **** /*---------------------------------------------*/
1244:Middlewares/Third_Party/FatFs/src/ff.c **** 
1245:Middlewares/Third_Party/FatFs/src/ff.c **** static
1246:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT fill_last_frag (
1247:Middlewares/Third_Party/FatFs/src/ff.c **** 	_FDID* obj,	/* Pointer to the corresponding object */
1248:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD lcl,	/* Last cluster of the fragment */
1249:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD term	/* Value to set the last FAT entry */
1250:Middlewares/Third_Party/FatFs/src/ff.c **** )
1251:Middlewares/Third_Party/FatFs/src/ff.c **** {
1252:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
1253:Middlewares/Third_Party/FatFs/src/ff.c **** 
1254:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (obj->n_frag > 0) {	/* Create the last chain on the FAT */
1255:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = put_fat(obj->fs, lcl - obj->n_frag + 1, (obj->n_frag > 1) ? lcl - obj->n_frag + 2 : term);
1256:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) return res;
1257:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->n_frag--;
1258:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 38


1259:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
1260:Middlewares/Third_Party/FatFs/src/ff.c **** }
1261:Middlewares/Third_Party/FatFs/src/ff.c **** 
1262:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _FS_EXFAT && !_FS_READONLY */
1263:Middlewares/Third_Party/FatFs/src/ff.c **** 
1264:Middlewares/Third_Party/FatFs/src/ff.c **** 
1265:Middlewares/Third_Party/FatFs/src/ff.c **** 
1266:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1267:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1268:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT handling - Remove a cluster chain                                 */
1269:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1270:Middlewares/Third_Party/FatFs/src/ff.c **** static
1271:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT remove_chain (	/* FR_OK(0):succeeded, !=0:error */
1272:Middlewares/Third_Party/FatFs/src/ff.c **** 	_FDID* obj,			/* Corresponding object */
1273:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst,			/* Cluster to remove a chain from */
1274:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD pclst			/* Previous cluster of clst (0:an entire chain) */
1275:Middlewares/Third_Party/FatFs/src/ff.c **** )
1276:Middlewares/Third_Party/FatFs/src/ff.c **** {
1277:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res = FR_OK;
1278:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD nxt;
1279:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = obj->fs;
1280:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT || _USE_TRIM
1281:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD scl = clst, ecl = clst;
1282:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1283:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_TRIM
1284:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD rt[2];
1285:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1286:Middlewares/Third_Party/FatFs/src/ff.c **** 
1287:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst < 2 || clst >= fs->n_fatent) return FR_INT_ERR;	/* Check if in valid range */
1288:Middlewares/Third_Party/FatFs/src/ff.c **** 
1289:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Mark the previous cluster 'EOC' on the FAT if it exists */
1290:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (pclst && (!_FS_EXFAT || fs->fs_type != FS_EXFAT || obj->stat != 2)) {
1291:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = put_fat(fs, pclst, 0xFFFFFFFF);
1292:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) return res;
1293:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1294:Middlewares/Third_Party/FatFs/src/ff.c **** 
1295:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Remove the chain */
1296:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
1297:Middlewares/Third_Party/FatFs/src/ff.c **** 		nxt = get_fat(obj, clst);			/* Get cluster status */
1298:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nxt == 0) break;				/* Empty cluster? */
1299:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nxt == 1) return FR_INT_ERR;	/* Internal error? */
1300:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nxt == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error? */
1301:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!_FS_EXFAT || fs->fs_type != FS_EXFAT) {
1302:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = put_fat(fs, clst, 0);		/* Mark the cluster 'free' on the FAT */
1303:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) return res;
1304:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1305:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->free_clst < fs->n_fatent - 2) {	/* Update FSINFO */
1306:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->free_clst++;
1307:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->fsi_flag |= 1;
1308:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1309:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT || _USE_TRIM
1310:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ecl + 1 == nxt) {	/* Is next cluster contiguous? */
1311:Middlewares/Third_Party/FatFs/src/ff.c **** 			ecl = nxt;
1312:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {				/* End of contiguous cluster block */
1313:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
1314:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->fs_type == FS_EXFAT) {
1315:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = change_bitmap(fs, scl, ecl - scl + 1, 0);	/* Mark the cluster block 'free' on the bitmap 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 39


1316:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res != FR_OK) return res;
1317:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1318:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1319:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_TRIM
1320:Middlewares/Third_Party/FatFs/src/ff.c **** 			rt[0] = clust2sect(fs, scl);					/* Start sector */
1321:Middlewares/Third_Party/FatFs/src/ff.c **** 			rt[1] = clust2sect(fs, ecl) + fs->csize - 1;	/* End sector */
1322:Middlewares/Third_Party/FatFs/src/ff.c **** 			disk_ioctl(fs->drv, CTRL_TRIM, rt);				/* Inform device the block can be erased */
1323:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1324:Middlewares/Third_Party/FatFs/src/ff.c **** 			scl = ecl = nxt;
1325:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1326:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1327:Middlewares/Third_Party/FatFs/src/ff.c **** 		clst = nxt;					/* Next cluster */
1328:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (clst < fs->n_fatent);	/* Repeat while not the last link */
1329:Middlewares/Third_Party/FatFs/src/ff.c **** 
1330:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
1331:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_EXFAT) {
1332:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (pclst == 0) {	/* Does the object have no chain? */
1333:Middlewares/Third_Party/FatFs/src/ff.c **** 			obj->stat = 0;		/* Change the object status 'initial' */
1334:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
1335:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (obj->stat == 3 && pclst >= obj->sclust && pclst <= obj->sclust + obj->n_cont) {	/* Did the c
1336:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->stat = 2;	/* Change the object status 'contiguous' */
1337:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1338:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1339:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1340:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1341:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
1342:Middlewares/Third_Party/FatFs/src/ff.c **** }
1343:Middlewares/Third_Party/FatFs/src/ff.c **** 
1344:Middlewares/Third_Party/FatFs/src/ff.c **** 
1345:Middlewares/Third_Party/FatFs/src/ff.c **** 
1346:Middlewares/Third_Party/FatFs/src/ff.c **** 
1347:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1348:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT handling - Stretch a chain or Create a new chain                  */
1349:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1350:Middlewares/Third_Party/FatFs/src/ff.c **** static
1351:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD create_chain (	/* 0:No free cluster, 1:Internal error, 0xFFFFFFFF:Disk error, >=2:New cluster
1352:Middlewares/Third_Party/FatFs/src/ff.c **** 	_FDID* obj,			/* Corresponding object */
1353:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst			/* Cluster# to stretch, 0:Create a new chain */
1354:Middlewares/Third_Party/FatFs/src/ff.c **** )
1355:Middlewares/Third_Party/FatFs/src/ff.c **** {
1356:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD cs, ncl, scl;
1357:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
1358:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = obj->fs;
1359:Middlewares/Third_Party/FatFs/src/ff.c **** 
1360:Middlewares/Third_Party/FatFs/src/ff.c **** 
1361:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst == 0) {	/* Create a new chain */
1362:Middlewares/Third_Party/FatFs/src/ff.c **** 		scl = fs->last_clst;				/* Get suggested cluster to start from */
1363:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (scl == 0 || scl >= fs->n_fatent) scl = 1;
1364:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1365:Middlewares/Third_Party/FatFs/src/ff.c **** 	else {				/* Stretch current chain */
1366:Middlewares/Third_Party/FatFs/src/ff.c **** 		cs = get_fat(obj, clst);			/* Check the cluster status */
1367:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs < 2) return 1;				/* Invalid FAT value */
1368:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs == 0xFFFFFFFF) return cs;	/* A disk error occurred */
1369:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs < fs->n_fatent) return cs;	/* It is already followed by next cluster */
1370:Middlewares/Third_Party/FatFs/src/ff.c **** 		scl = clst;
1371:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1372:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 40


1373:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
1374:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_EXFAT) {	/* On the exFAT volume */
1375:Middlewares/Third_Party/FatFs/src/ff.c **** 		ncl = find_bitmap(fs, scl, 1);				/* Find a free cluster */
1376:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ncl == 0 || ncl == 0xFFFFFFFF) return ncl;	/* No free cluster or hard error? */
1377:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = change_bitmap(fs, ncl, 1, 1);			/* Mark the cluster 'in use' */
1378:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_INT_ERR) return 1;
1379:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_DISK_ERR) return 0xFFFFFFFF;
1380:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (clst == 0) {							/* Is it a new chain? */
1381:Middlewares/Third_Party/FatFs/src/ff.c **** 			obj->stat = 2;							/* Set status 'contiguous' */
1382:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {									/* It is a stretched chain */
1383:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (obj->stat == 2 && ncl != scl + 1) {	/* Is the chain got fragmented? */
1384:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->n_cont = scl - obj->sclust;	/* Set size of the contiguous part */
1385:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->stat = 3;						/* Change status 'just fragmented' */
1386:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1387:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1388:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (obj->stat != 2) {	/* Is the file non-contiguous? */
1389:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ncl == clst + 1) {	/* Is the cluster next to previous one? */
1390:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->n_frag = obj->n_frag ? obj->n_frag + 1 : 2;	/* Increment size of last framgent */
1391:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {				/* New fragment */
1392:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (obj->n_frag == 0) obj->n_frag = 1;
1393:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = fill_last_frag(obj, clst, ncl);	/* Fill last fragment on the FAT and link it to new one *
1394:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) obj->n_frag = 1;
1395:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1396:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1397:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else
1398:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1399:Middlewares/Third_Party/FatFs/src/ff.c **** 	{	/* On the FAT12/16/32 volume */
1400:Middlewares/Third_Party/FatFs/src/ff.c **** 		ncl = scl;	/* Start cluster */
1401:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (;;) {
1402:Middlewares/Third_Party/FatFs/src/ff.c **** 			ncl++;							/* Next cluster */
1403:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ncl >= fs->n_fatent) {		/* Check wrap-around */
1404:Middlewares/Third_Party/FatFs/src/ff.c **** 				ncl = 2;
1405:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (ncl > scl) return 0;	/* No free cluster */
1406:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1407:Middlewares/Third_Party/FatFs/src/ff.c **** 			cs = get_fat(obj, ncl);			/* Get the cluster status */
1408:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cs == 0) break;				/* Found a free cluster */
1409:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cs == 1 || cs == 0xFFFFFFFF) return cs;	/* An error occurred */
1410:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ncl == scl) return 0;		/* No free cluster */
1411:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1412:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = put_fat(fs, ncl, 0xFFFFFFFF);	/* Mark the new cluster 'EOC' */
1413:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK && clst != 0) {
1414:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = put_fat(fs, clst, ncl);	/* Link it from the previous one if needed */
1415:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1416:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1417:Middlewares/Third_Party/FatFs/src/ff.c **** 
1418:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {			/* Update FSINFO if function succeeded. */
1419:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->last_clst = ncl;
1420:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->free_clst <= fs->n_fatent - 2) fs->free_clst--;
1421:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fsi_flag |= 1;
1422:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
1423:Middlewares/Third_Party/FatFs/src/ff.c **** 		ncl = (res == FR_DISK_ERR) ? 0xFFFFFFFF : 1;	/* Failed. Generate error status */
1424:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1425:Middlewares/Third_Party/FatFs/src/ff.c **** 
1426:Middlewares/Third_Party/FatFs/src/ff.c **** 	return ncl;		/* Return new cluster number or error status */
1427:Middlewares/Third_Party/FatFs/src/ff.c **** }
1428:Middlewares/Third_Party/FatFs/src/ff.c **** 
1429:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 41


1430:Middlewares/Third_Party/FatFs/src/ff.c **** 
1431:Middlewares/Third_Party/FatFs/src/ff.c **** 
1432:Middlewares/Third_Party/FatFs/src/ff.c **** 
1433:Middlewares/Third_Party/FatFs/src/ff.c **** 
1434:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FASTSEEK
1435:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1436:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT handling - Convert offset into cluster with link map table        */
1437:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1438:Middlewares/Third_Party/FatFs/src/ff.c **** 
1439:Middlewares/Third_Party/FatFs/src/ff.c **** static
1440:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD clmt_clust (	/* <2:Error, >=2:Cluster number */
1441:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp,		/* Pointer to the file object */
1442:Middlewares/Third_Party/FatFs/src/ff.c **** 	FSIZE_t ofs		/* File offset to be converted to cluster# */
1443:Middlewares/Third_Party/FatFs/src/ff.c **** )
1444:Middlewares/Third_Party/FatFs/src/ff.c **** {
 840              		.loc 1 1444 0
 841              		.cfi_startproc
 842              		@ args = 0, pretend = 0, frame = 0
 843              		@ frame_needed = 0, uses_anonymous_args = 0
 844              		@ link register save eliminated.
 845              	.LVL100:
1445:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD cl, ncl, *tbl;
1446:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = fp->obj.fs;
 846              		.loc 1 1446 0
 847 0000 0268     		ldr	r2, [r0]
 848              	.LVL101:
1447:Middlewares/Third_Party/FatFs/src/ff.c **** 
1448:Middlewares/Third_Party/FatFs/src/ff.c **** 
1449:Middlewares/Third_Party/FatFs/src/ff.c **** 	tbl = fp->cltbl + 1;	/* Top of CLMT */
 849              		.loc 1 1449 0
 850 0002 C36A     		ldr	r3, [r0, #44]
 851 0004 0433     		adds	r3, r3, #4
 852              	.LVL102:
1450:Middlewares/Third_Party/FatFs/src/ff.c **** 	cl = (DWORD)(ofs / SS(fs) / fs->csize);	/* Cluster order from top of the file */
 853              		.loc 1 1450 0
 854 0006 490A     		lsrs	r1, r1, #9
 855              	.LVL103:
 856 0008 5289     		ldrh	r2, [r2, #10]
 857              	.LVL104:
 858 000a B1FBF2F1 		udiv	r1, r1, r2
 859              	.LVL105:
 860              	.L93:
1451:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
1452:Middlewares/Third_Party/FatFs/src/ff.c **** 		ncl = *tbl++;			/* Number of cluters in the fragment */
 861              		.loc 1 1452 0
 862 000e 1868     		ldr	r0, [r3]
 863              	.LVL106:
1453:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ncl == 0) return 0;	/* End of table? (error) */
 864              		.loc 1 1453 0
 865 0010 30B1     		cbz	r0, .L90
1454:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cl < ncl) break;	/* In this fragment? */
 866              		.loc 1 1454 0
 867 0012 8142     		cmp	r1, r0
 868 0014 02D3     		bcc	.L92
1455:Middlewares/Third_Party/FatFs/src/ff.c **** 		cl -= ncl; tbl++;		/* Next fragment */
 869              		.loc 1 1455 0
 870 0016 091A     		subs	r1, r1, r0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 42


 871              	.LVL107:
 872 0018 0833     		adds	r3, r3, #8
 873              	.LVL108:
1452:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ncl == 0) return 0;	/* End of table? (error) */
 874              		.loc 1 1452 0
 875 001a F8E7     		b	.L93
 876              	.LVL109:
 877              	.L92:
1456:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1457:Middlewares/Third_Party/FatFs/src/ff.c **** 	return cl + *tbl;	/* Return the cluster number */
 878              		.loc 1 1457 0
 879 001c 5868     		ldr	r0, [r3, #4]
 880              	.LVL110:
 881 001e 0844     		add	r0, r0, r1
 882              	.L90:
1458:Middlewares/Third_Party/FatFs/src/ff.c **** }
 883              		.loc 1 1458 0
 884 0020 7047     		bx	lr
 885              		.cfi_endproc
 886              	.LFE164:
 888              		.section	.text.ld_clust,"ax",%progbits
 889              		.align	1
 890              		.syntax unified
 891              		.thumb
 892              		.thumb_func
 893              		.fpu fpv5-sp-d16
 895              	ld_clust:
 896              	.LFB168:
1459:Middlewares/Third_Party/FatFs/src/ff.c **** 
1460:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _USE_FASTSEEK */
1461:Middlewares/Third_Party/FatFs/src/ff.c **** 
1462:Middlewares/Third_Party/FatFs/src/ff.c **** 
1463:Middlewares/Third_Party/FatFs/src/ff.c **** 
1464:Middlewares/Third_Party/FatFs/src/ff.c **** 
1465:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1466:Middlewares/Third_Party/FatFs/src/ff.c **** /* Directory handling - Set directory index                              */
1467:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1468:Middlewares/Third_Party/FatFs/src/ff.c **** 
1469:Middlewares/Third_Party/FatFs/src/ff.c **** static
1470:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dir_sdi (	/* FR_OK(0):succeeded, !=0:error */
1471:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,		/* Pointer to directory object */
1472:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD ofs		/* Offset of directory table */
1473:Middlewares/Third_Party/FatFs/src/ff.c **** )
1474:Middlewares/Third_Party/FatFs/src/ff.c **** {
1475:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD csz, clst;
1476:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = dp->obj.fs;
1477:Middlewares/Third_Party/FatFs/src/ff.c **** 
1478:Middlewares/Third_Party/FatFs/src/ff.c **** 
1479:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (ofs >= (DWORD)((_FS_EXFAT && fs->fs_type == FS_EXFAT) ? MAX_DIR_EX : MAX_DIR) || ofs % SZDIRE)
1480:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_INT_ERR;
1481:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1482:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->dptr = ofs;				/* Set current offset */
1483:Middlewares/Third_Party/FatFs/src/ff.c **** 	clst = dp->obj.sclust;		/* Table start cluster (0:root) */
1484:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst == 0 && fs->fs_type >= FS_FAT32) {	/* Replace cluster# 0 with root cluster# */
1485:Middlewares/Third_Party/FatFs/src/ff.c **** 		clst = fs->dirbase;
1486:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_EXFAT) dp->obj.stat = 0;	/* exFAT: Root dir has an FAT chain */
1487:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 43


1488:Middlewares/Third_Party/FatFs/src/ff.c **** 
1489:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst == 0) {	/* Static table (root-directory in FAT12/16) */
1490:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs / SZDIRE >= fs->n_rootdir)	return FR_INT_ERR;	/* Is index out of range? */
1491:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->sect = fs->dirbase;
1492:Middlewares/Third_Party/FatFs/src/ff.c **** 
1493:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {			/* Dynamic table (sub-directory or root-directory in FAT32+) */
1494:Middlewares/Third_Party/FatFs/src/ff.c **** 		csz = (DWORD)fs->csize * SS(fs);	/* Bytes per cluster */
1495:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (ofs >= csz) {				/* Follow cluster chain */
1496:Middlewares/Third_Party/FatFs/src/ff.c **** 			clst = get_fat(&dp->obj, clst);				/* Get next cluster */
1497:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
1498:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (clst < 2 || clst >= fs->n_fatent) return FR_INT_ERR;	/* Reached to end of table or internal 
1499:Middlewares/Third_Party/FatFs/src/ff.c **** 			ofs -= csz;
1500:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1501:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->sect = clust2sect(fs, clst);
1502:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1503:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->clust = clst;					/* Current cluster# */
1504:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!dp->sect) return FR_INT_ERR;
1505:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->sect += ofs / SS(fs);			/* Sector# of the directory entry */
1506:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->dir = fs->win + (ofs % SS(fs));	/* Pointer to the entry in the win[] */
1507:Middlewares/Third_Party/FatFs/src/ff.c **** 
1508:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
1509:Middlewares/Third_Party/FatFs/src/ff.c **** }
1510:Middlewares/Third_Party/FatFs/src/ff.c **** 
1511:Middlewares/Third_Party/FatFs/src/ff.c **** 
1512:Middlewares/Third_Party/FatFs/src/ff.c **** 
1513:Middlewares/Third_Party/FatFs/src/ff.c **** 
1514:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1515:Middlewares/Third_Party/FatFs/src/ff.c **** /* Directory handling - Move directory table index next                  */
1516:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1517:Middlewares/Third_Party/FatFs/src/ff.c **** 
1518:Middlewares/Third_Party/FatFs/src/ff.c **** static
1519:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dir_next (	/* FR_OK(0):succeeded, FR_NO_FILE:End of table, FR_DENIED:Could not stretch */
1520:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,		/* Pointer to the directory object */
1521:Middlewares/Third_Party/FatFs/src/ff.c **** 	int stretch		/* 0: Do not stretch table, 1: Stretch table if needed */
1522:Middlewares/Third_Party/FatFs/src/ff.c **** )
1523:Middlewares/Third_Party/FatFs/src/ff.c **** {
1524:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD ofs, clst;
1525:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = dp->obj.fs;
1526:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1527:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT n;
1528:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1529:Middlewares/Third_Party/FatFs/src/ff.c **** 
1530:Middlewares/Third_Party/FatFs/src/ff.c **** 	ofs = dp->dptr + SZDIRE;	/* Next entry */
1531:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!dp->sect || ofs >= (DWORD)((_FS_EXFAT && fs->fs_type == FS_EXFAT) ? MAX_DIR_EX : MAX_DIR)) re
1532:Middlewares/Third_Party/FatFs/src/ff.c **** 
1533:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (ofs % SS(fs) == 0) {	/* Sector changed? */
1534:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->sect++;				/* Next sector */
1535:Middlewares/Third_Party/FatFs/src/ff.c **** 
1536:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!dp->clust) {		/* Static table */
1537:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ofs / SZDIRE >= fs->n_rootdir) {	/* Report EOT if it reached end of static table */
1538:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->sect = 0; return FR_NO_FILE;
1539:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1540:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1541:Middlewares/Third_Party/FatFs/src/ff.c **** 		else {					/* Dynamic table */
1542:Middlewares/Third_Party/FatFs/src/ff.c **** 			if ((ofs / SS(fs) & (fs->csize - 1)) == 0) {		/* Cluster changed? */
1543:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = get_fat(&dp->obj, dp->clust);			/* Get next cluster */
1544:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst <= 1) return FR_INT_ERR;				/* Internal error */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 44


1545:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) return FR_DISK_ERR;		/* Disk error */
1546:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst >= fs->n_fatent) {						/* Reached end of dynamic table */
1547:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1548:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!stretch) {								/* If no stretch, report EOT */
1549:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->sect = 0; return FR_NO_FILE;
1550:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
1551:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = create_chain(&dp->obj, dp->clust);	/* Allocate a cluster */
1552:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0) return FR_DENIED;			/* No free cluster */
1553:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 1) return FR_INT_ERR;			/* Internal error */
1554:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
1555:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Clean-up the stretched table */
1556:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (_FS_EXFAT) dp->obj.stat |= 4;			/* The directory needs to be updated */
1557:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (sync_window(fs) != FR_OK) return FR_DISK_ERR;	/* Flush disk access window */
1558:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_set(fs->win, 0, SS(fs));				/* Clear window buffer */
1559:Middlewares/Third_Party/FatFs/src/ff.c **** 					for (n = 0, fs->winsect = clust2sect(fs, clst); n < fs->csize; n++, fs->winsect++) {	/* Fill t
1560:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->wflag = 1;
1561:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (sync_window(fs) != FR_OK) return FR_DISK_ERR;
1562:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
1563:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->winsect -= n;							/* Restore window offset */
1564:Middlewares/Third_Party/FatFs/src/ff.c **** #else
1565:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!stretch) dp->sect = 0;					/* (this line is to suppress compiler warning) */
1566:Middlewares/Third_Party/FatFs/src/ff.c **** 					dp->sect = 0; return FR_NO_FILE;			/* Report EOT */
1567:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1568:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
1569:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->clust = clst;		/* Initialize data for new cluster */
1570:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->sect = clust2sect(fs, clst);
1571:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1572:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1573:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1574:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->dptr = ofs;						/* Current entry */
1575:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->dir = fs->win + ofs % SS(fs);	/* Pointer to the entry in the win[] */
1576:Middlewares/Third_Party/FatFs/src/ff.c **** 
1577:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
1578:Middlewares/Third_Party/FatFs/src/ff.c **** }
1579:Middlewares/Third_Party/FatFs/src/ff.c **** 
1580:Middlewares/Third_Party/FatFs/src/ff.c **** 
1581:Middlewares/Third_Party/FatFs/src/ff.c **** 
1582:Middlewares/Third_Party/FatFs/src/ff.c **** 
1583:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1584:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1585:Middlewares/Third_Party/FatFs/src/ff.c **** /* Directory handling - Reserve a block of directory entries             */
1586:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1587:Middlewares/Third_Party/FatFs/src/ff.c **** 
1588:Middlewares/Third_Party/FatFs/src/ff.c **** static
1589:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dir_alloc (	/* FR_OK(0):succeeded, !=0:error */
1590:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,		/* Pointer to the directory object */
1591:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT nent		/* Number of contiguous entries to allocate */
1592:Middlewares/Third_Party/FatFs/src/ff.c **** )
1593:Middlewares/Third_Party/FatFs/src/ff.c **** {
1594:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
1595:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT n;
1596:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = dp->obj.fs;
1597:Middlewares/Third_Party/FatFs/src/ff.c **** 
1598:Middlewares/Third_Party/FatFs/src/ff.c **** 
1599:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_sdi(dp, 0);
1600:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
1601:Middlewares/Third_Party/FatFs/src/ff.c **** 		n = 0;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 45


1602:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
1603:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, dp->sect);
1604:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
1605:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
1606:Middlewares/Third_Party/FatFs/src/ff.c **** 			if ((fs->fs_type == FS_EXFAT) ? (int)((dp->dir[XDIR_Type] & 0x80) == 0) : (int)(dp->dir[DIR_Name
1607:Middlewares/Third_Party/FatFs/src/ff.c **** #else
1608:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dp->dir[DIR_Name] == DDEM || dp->dir[DIR_Name] == 0) {
1609:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1610:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (++n == nent) break;	/* A block of contiguous free entries is found */
1611:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
1612:Middlewares/Third_Party/FatFs/src/ff.c **** 				n = 0;					/* Not a blank entry. Restart to search */
1613:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1614:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_next(dp, 1);
1615:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (res == FR_OK);	/* Next entry with table stretch enabled */
1616:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1617:Middlewares/Third_Party/FatFs/src/ff.c **** 
1618:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_NO_FILE) res = FR_DENIED;	/* No directory entry to allocate */
1619:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
1620:Middlewares/Third_Party/FatFs/src/ff.c **** }
1621:Middlewares/Third_Party/FatFs/src/ff.c **** 
1622:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* !_FS_READONLY */
1623:Middlewares/Third_Party/FatFs/src/ff.c **** 
1624:Middlewares/Third_Party/FatFs/src/ff.c **** 
1625:Middlewares/Third_Party/FatFs/src/ff.c **** 
1626:Middlewares/Third_Party/FatFs/src/ff.c **** 
1627:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1628:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT: Directory handling - Load/Store start cluster number             */
1629:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1630:Middlewares/Third_Party/FatFs/src/ff.c **** 
1631:Middlewares/Third_Party/FatFs/src/ff.c **** static
1632:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD ld_clust (	/* Returns the top cluster value of the SFN entry */
1633:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,		/* Pointer to the fs object */
1634:Middlewares/Third_Party/FatFs/src/ff.c **** 	const BYTE* dir	/* Pointer to the key entry */
1635:Middlewares/Third_Party/FatFs/src/ff.c **** )
1636:Middlewares/Third_Party/FatFs/src/ff.c **** {
 897              		.loc 1 1636 0
 898              		.cfi_startproc
 899              		@ args = 0, pretend = 0, frame = 0
 900              		@ frame_needed = 0, uses_anonymous_args = 0
 901              	.LVL111:
 902 0000 70B5     		push	{r4, r5, r6, lr}
 903              	.LCFI12:
 904              		.cfi_def_cfa_offset 16
 905              		.cfi_offset 4, -16
 906              		.cfi_offset 5, -12
 907              		.cfi_offset 6, -8
 908              		.cfi_offset 14, -4
 909 0002 0646     		mov	r6, r0
 910 0004 0D46     		mov	r5, r1
1637:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD cl;
1638:Middlewares/Third_Party/FatFs/src/ff.c **** 
1639:Middlewares/Third_Party/FatFs/src/ff.c **** 	cl = ld_word(dir + DIR_FstClusLO);
 911              		.loc 1 1639 0
 912 0006 01F11A00 		add	r0, r1, #26
 913              	.LVL112:
 914 000a FFF7FEFF 		bl	ld_word
 915              	.LVL113:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 46


 916 000e 0446     		mov	r4, r0
 917              	.LVL114:
1640:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_FAT32) {
 918              		.loc 1 1640 0
 919 0010 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 920 0012 032B     		cmp	r3, #3
 921 0014 00D0     		beq	.L97
 922              	.L94:
1641:Middlewares/Third_Party/FatFs/src/ff.c **** 		cl |= (DWORD)ld_word(dir + DIR_FstClusHI) << 16;
1642:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1643:Middlewares/Third_Party/FatFs/src/ff.c **** 
1644:Middlewares/Third_Party/FatFs/src/ff.c **** 	return cl;
1645:Middlewares/Third_Party/FatFs/src/ff.c **** }
 923              		.loc 1 1645 0
 924 0016 70BD     		pop	{r4, r5, r6, pc}
 925              	.LVL115:
 926              	.L97:
1641:Middlewares/Third_Party/FatFs/src/ff.c **** 		cl |= (DWORD)ld_word(dir + DIR_FstClusHI) << 16;
 927              		.loc 1 1641 0
 928 0018 05F11400 		add	r0, r5, #20
 929              	.LVL116:
 930 001c FFF7FEFF 		bl	ld_word
 931              	.LVL117:
 932 0020 44EA0040 		orr	r0, r4, r0, lsl #16
 933              	.LVL118:
1644:Middlewares/Third_Party/FatFs/src/ff.c **** }
 934              		.loc 1 1644 0
 935 0024 F7E7     		b	.L94
 936              		.cfi_endproc
 937              	.LFE168:
 939              		.section	.text.st_clust,"ax",%progbits
 940              		.align	1
 941              		.syntax unified
 942              		.thumb
 943              		.thumb_func
 944              		.fpu fpv5-sp-d16
 946              	st_clust:
 947              	.LFB169:
1646:Middlewares/Third_Party/FatFs/src/ff.c **** 
1647:Middlewares/Third_Party/FatFs/src/ff.c **** 
1648:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1649:Middlewares/Third_Party/FatFs/src/ff.c **** static
1650:Middlewares/Third_Party/FatFs/src/ff.c **** void st_clust (
1651:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,	/* Pointer to the fs object */
1652:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dir,	/* Pointer to the key entry */
1653:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD cl	/* Value to be set */
1654:Middlewares/Third_Party/FatFs/src/ff.c **** )
1655:Middlewares/Third_Party/FatFs/src/ff.c **** {
 948              		.loc 1 1655 0
 949              		.cfi_startproc
 950              		@ args = 0, pretend = 0, frame = 0
 951              		@ frame_needed = 0, uses_anonymous_args = 0
 952              	.LVL119:
 953 0000 70B5     		push	{r4, r5, r6, lr}
 954              	.LCFI13:
 955              		.cfi_def_cfa_offset 16
 956              		.cfi_offset 4, -16
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 47


 957              		.cfi_offset 5, -12
 958              		.cfi_offset 6, -8
 959              		.cfi_offset 14, -4
 960 0002 0646     		mov	r6, r0
 961 0004 0C46     		mov	r4, r1
 962 0006 1546     		mov	r5, r2
1656:Middlewares/Third_Party/FatFs/src/ff.c **** 	st_word(dir + DIR_FstClusLO, (WORD)cl);
 963              		.loc 1 1656 0
 964 0008 91B2     		uxth	r1, r2
 965              	.LVL120:
 966 000a 04F11A00 		add	r0, r4, #26
 967              	.LVL121:
 968 000e FFF7FEFF 		bl	st_word
 969              	.LVL122:
1657:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_FAT32) {
 970              		.loc 1 1657 0
 971 0012 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 972 0014 032B     		cmp	r3, #3
 973 0016 00D0     		beq	.L101
 974              	.L98:
 975 0018 70BD     		pop	{r4, r5, r6, pc}
 976              	.LVL123:
 977              	.L101:
1658:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(dir + DIR_FstClusHI, (WORD)(cl >> 16));
 978              		.loc 1 1658 0
 979 001a 290C     		lsrs	r1, r5, #16
 980 001c 04F11400 		add	r0, r4, #20
 981 0020 FFF7FEFF 		bl	st_word
 982              	.LVL124:
1659:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1660:Middlewares/Third_Party/FatFs/src/ff.c **** }
 983              		.loc 1 1660 0
 984 0024 F8E7     		b	.L98
 985              		.cfi_endproc
 986              	.LFE169:
 988              		.section	.text.pick_lfn,"ax",%progbits
 989              		.align	1
 990              		.syntax unified
 991              		.thumb
 992              		.thumb_func
 993              		.fpu fpv5-sp-d16
 995              	pick_lfn:
 996              	.LFB171:
1661:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1662:Middlewares/Third_Party/FatFs/src/ff.c **** 
1663:Middlewares/Third_Party/FatFs/src/ff.c **** 
1664:Middlewares/Third_Party/FatFs/src/ff.c **** 
1665:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0
1666:Middlewares/Third_Party/FatFs/src/ff.c **** /*------------------------------------------------------------------------*/
1667:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT-LFN: LFN handling                                                  */
1668:Middlewares/Third_Party/FatFs/src/ff.c **** /*------------------------------------------------------------------------*/
1669:Middlewares/Third_Party/FatFs/src/ff.c **** static
1670:Middlewares/Third_Party/FatFs/src/ff.c **** const BYTE LfnOfs[] = {1,3,5,7,9,14,16,18,20,22,24,28,30};	/* Offset of LFN characters in the direc
1671:Middlewares/Third_Party/FatFs/src/ff.c **** 
1672:Middlewares/Third_Party/FatFs/src/ff.c **** 
1673:Middlewares/Third_Party/FatFs/src/ff.c **** /*--------------------------------------------------------*/
1674:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT-LFN: Compare a part of file name with an LFN entry */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 48


1675:Middlewares/Third_Party/FatFs/src/ff.c **** /*--------------------------------------------------------*/
1676:Middlewares/Third_Party/FatFs/src/ff.c **** static
1677:Middlewares/Third_Party/FatFs/src/ff.c **** int cmp_lfn (				/* 1:matched, 0:not matched */
1678:Middlewares/Third_Party/FatFs/src/ff.c **** 	const WCHAR* lfnbuf,	/* Pointer to the LFN working buffer to be compared */
1679:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dir				/* Pointer to the directory entry containing the part of LFN */
1680:Middlewares/Third_Party/FatFs/src/ff.c **** )
1681:Middlewares/Third_Party/FatFs/src/ff.c **** {
1682:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, s;
1683:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR wc, uc;
1684:Middlewares/Third_Party/FatFs/src/ff.c **** 
1685:Middlewares/Third_Party/FatFs/src/ff.c **** 
1686:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (ld_word(dir + LDIR_FstClusLO) != 0) return 0;	/* Check LDIR_FstClusLO */
1687:Middlewares/Third_Party/FatFs/src/ff.c **** 
1688:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = ((dir[LDIR_Ord] & 0x3F) - 1) * 13;	/* Offset in the LFN buffer */
1689:Middlewares/Third_Party/FatFs/src/ff.c **** 
1690:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (wc = 1, s = 0; s < 13; s++) {		/* Process all characters in the entry */
1691:Middlewares/Third_Party/FatFs/src/ff.c **** 		uc = ld_word(dir + LfnOfs[s]);		/* Pick an LFN character */
1692:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (wc) {
1693:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i >= _MAX_LFN || ff_wtoupper(uc) != ff_wtoupper(lfnbuf[i++])) {	/* Compare it */
1694:Middlewares/Third_Party/FatFs/src/ff.c **** 				return 0;					/* Not matched */
1695:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1696:Middlewares/Third_Party/FatFs/src/ff.c **** 			wc = uc;
1697:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
1698:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (uc != 0xFFFF) return 0;		/* Check filler */
1699:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1700:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1701:Middlewares/Third_Party/FatFs/src/ff.c **** 
1702:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((dir[LDIR_Ord] & LLEF) && wc && lfnbuf[i]) return 0;	/* Last segment matched but different len
1703:Middlewares/Third_Party/FatFs/src/ff.c **** 
1704:Middlewares/Third_Party/FatFs/src/ff.c **** 	return 1;		/* The part of LFN matched */
1705:Middlewares/Third_Party/FatFs/src/ff.c **** }
1706:Middlewares/Third_Party/FatFs/src/ff.c **** 
1707:Middlewares/Third_Party/FatFs/src/ff.c **** 
1708:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 1 || _FS_RPATH >= 2 || _USE_LABEL || _FS_EXFAT
1709:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------*/
1710:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT-LFN: Pick a part of file name from an LFN entry */
1711:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------*/
1712:Middlewares/Third_Party/FatFs/src/ff.c **** static
1713:Middlewares/Third_Party/FatFs/src/ff.c **** int pick_lfn (			/* 1:succeeded, 0:buffer overflow or invalid LFN entry */
1714:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR* lfnbuf,		/* Pointer to the LFN working buffer */
1715:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dir			/* Pointer to the LFN entry */
1716:Middlewares/Third_Party/FatFs/src/ff.c **** )
1717:Middlewares/Third_Party/FatFs/src/ff.c **** {
 997              		.loc 1 1717 0
 998              		.cfi_startproc
 999              		@ args = 0, pretend = 0, frame = 0
 1000              		@ frame_needed = 0, uses_anonymous_args = 0
 1001              	.LVL125:
 1002 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1003              	.LCFI14:
 1004              		.cfi_def_cfa_offset 24
 1005              		.cfi_offset 4, -24
 1006              		.cfi_offset 5, -20
 1007              		.cfi_offset 6, -16
 1008              		.cfi_offset 7, -12
 1009              		.cfi_offset 8, -8
 1010              		.cfi_offset 14, -4
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 49


 1011 0004 8046     		mov	r8, r0
 1012 0006 0F46     		mov	r7, r1
1718:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, s;
1719:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR wc, uc;
1720:Middlewares/Third_Party/FatFs/src/ff.c **** 
1721:Middlewares/Third_Party/FatFs/src/ff.c **** 
1722:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (ld_word(dir + LDIR_FstClusLO) != 0) return 0;	/* Check LDIR_FstClusLO is 0 */
 1013              		.loc 1 1722 0
 1014 0008 01F11A00 		add	r0, r1, #26
 1015              	.LVL126:
 1016 000c FFF7FEFF 		bl	ld_word
 1017              	.LVL127:
 1018 0010 58BB     		cbnz	r0, .L108
1723:Middlewares/Third_Party/FatFs/src/ff.c **** 
1724:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = ((dir[LDIR_Ord] & ~LLEF) - 1) * 13;	/* Offset in the LFN buffer */
 1019              		.loc 1 1724 0
 1020 0012 3D78     		ldrb	r5, [r7]	@ zero_extendqisi2
 1021 0014 25F04005 		bic	r5, r5, #64
 1022 0018 013D     		subs	r5, r5, #1
 1023 001a 05EB4503 		add	r3, r5, r5, lsl #1
 1024 001e 05EB8305 		add	r5, r5, r3, lsl #2
 1025              	.LVL128:
1725:Middlewares/Third_Party/FatFs/src/ff.c **** 
1726:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (wc = 1, s = 0; s < 13; s++) {		/* Process all characters in the entry */
 1026              		.loc 1 1726 0
 1027 0022 0126     		movs	r6, #1
 1028 0024 0024     		movs	r4, #0
 1029 0026 04E0     		b	.L104
 1030              	.LVL129:
 1031              	.L105:
1727:Middlewares/Third_Party/FatFs/src/ff.c **** 		uc = ld_word(dir + LfnOfs[s]);		/* Pick an LFN character */
1728:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (wc) {
1729:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i >= _MAX_LFN) return 0;	/* Buffer overflow? */
1730:Middlewares/Third_Party/FatFs/src/ff.c **** 			lfnbuf[i++] = wc = uc;			/* Store it */
1731:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
1732:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (uc != 0xFFFF) return 0;		/* Check filler */
 1032              		.loc 1 1732 0
 1033 0028 4FF6FF73 		movw	r3, #65535
 1034 002c 9842     		cmp	r0, r3
 1035 002e 22D1     		bne	.L110
 1036              	.LVL130:
 1037              	.L106:
1726:Middlewares/Third_Party/FatFs/src/ff.c **** 		uc = ld_word(dir + LfnOfs[s]);		/* Pick an LFN character */
 1038              		.loc 1 1726 0 discriminator 2
 1039 0030 0134     		adds	r4, r4, #1
 1040              	.LVL131:
 1041              	.L104:
1726:Middlewares/Third_Party/FatFs/src/ff.c **** 		uc = ld_word(dir + LfnOfs[s]);		/* Pick an LFN character */
 1042              		.loc 1 1726 0 is_stmt 0 discriminator 1
 1043 0032 0C2C     		cmp	r4, #12
 1044 0034 0DD8     		bhi	.L114
1727:Middlewares/Third_Party/FatFs/src/ff.c **** 		uc = ld_word(dir + LfnOfs[s]);		/* Pick an LFN character */
 1045              		.loc 1 1727 0 is_stmt 1
 1046 0036 144B     		ldr	r3, .L115
 1047 0038 185D     		ldrb	r0, [r3, r4]	@ zero_extendqisi2
 1048 003a 3844     		add	r0, r0, r7
 1049 003c FFF7FEFF 		bl	ld_word
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 50


 1050              	.LVL132:
1728:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i >= _MAX_LFN) return 0;	/* Buffer overflow? */
 1051              		.loc 1 1728 0
 1052 0040 002E     		cmp	r6, #0
 1053 0042 F1D0     		beq	.L105
1729:Middlewares/Third_Party/FatFs/src/ff.c **** 			lfnbuf[i++] = wc = uc;			/* Store it */
 1054              		.loc 1 1729 0
 1055 0044 FE2D     		cmp	r5, #254
 1056 0046 13D8     		bhi	.L109
 1057              	.LVL133:
1730:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 1058              		.loc 1 1730 0
 1059 0048 28F81500 		strh	r0, [r8, r5, lsl #1]	@ movhi
 1060 004c 0646     		mov	r6, r0
 1061 004e 0135     		adds	r5, r5, #1
 1062              	.LVL134:
 1063 0050 EEE7     		b	.L106
 1064              	.LVL135:
 1065              	.L114:
1733:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1734:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1735:Middlewares/Third_Party/FatFs/src/ff.c **** 
1736:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (dir[LDIR_Ord] & LLEF) {				/* Put terminator if it is the last LFN part */
 1066              		.loc 1 1736 0
 1067 0052 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 1068 0054 13F0400F 		tst	r3, #64
 1069 0058 10D0     		beq	.L111
1737:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i >= _MAX_LFN) return 0;		/* Buffer overflow? */
 1070              		.loc 1 1737 0
 1071 005a FE2D     		cmp	r5, #254
 1072 005c 11D8     		bhi	.L112
1738:Middlewares/Third_Party/FatFs/src/ff.c **** 		lfnbuf[i] = 0;
 1073              		.loc 1 1738 0
 1074 005e 0023     		movs	r3, #0
 1075 0060 28F81530 		strh	r3, [r8, r5, lsl #1]	@ movhi
1739:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1740:Middlewares/Third_Party/FatFs/src/ff.c **** 
1741:Middlewares/Third_Party/FatFs/src/ff.c **** 	return 1;		/* The part of LFN is valid */
 1076              		.loc 1 1741 0
 1077 0064 0120     		movs	r0, #1
 1078 0066 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1079              	.LVL136:
 1080              	.L108:
1722:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1081              		.loc 1 1722 0
 1082 006a 0020     		movs	r0, #0
 1083 006c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1084              	.LVL137:
 1085              	.L109:
1729:Middlewares/Third_Party/FatFs/src/ff.c **** 			lfnbuf[i++] = wc = uc;			/* Store it */
 1086              		.loc 1 1729 0
 1087 0070 0020     		movs	r0, #0
 1088              	.LVL138:
 1089 0072 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1090              	.LVL139:
 1091              	.L110:
1732:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 51


 1092              		.loc 1 1732 0
 1093 0076 0020     		movs	r0, #0
 1094              	.LVL140:
 1095 0078 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1096              	.LVL141:
 1097              	.L111:
 1098              		.loc 1 1741 0
 1099 007c 0120     		movs	r0, #1
 1100 007e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1101              	.LVL142:
 1102              	.L112:
1737:Middlewares/Third_Party/FatFs/src/ff.c **** 		lfnbuf[i] = 0;
 1103              		.loc 1 1737 0
 1104 0082 0020     		movs	r0, #0
1742:Middlewares/Third_Party/FatFs/src/ff.c **** }
 1105              		.loc 1 1742 0
 1106 0084 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1107              	.LVL143:
 1108              	.L116:
 1109              		.align	2
 1110              	.L115:
 1111 0088 00000000 		.word	.LANCHOR1
 1112              		.cfi_endproc
 1113              	.LFE171:
 1115              		.section	.text.put_lfn,"ax",%progbits
 1116              		.align	1
 1117              		.syntax unified
 1118              		.thumb
 1119              		.thumb_func
 1120              		.fpu fpv5-sp-d16
 1122              	put_lfn:
 1123              	.LFB172:
1743:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1744:Middlewares/Third_Party/FatFs/src/ff.c **** 
1745:Middlewares/Third_Party/FatFs/src/ff.c **** 
1746:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1747:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------*/
1748:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT-LFN: Create an entry of LFN entries */
1749:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------*/
1750:Middlewares/Third_Party/FatFs/src/ff.c **** static
1751:Middlewares/Third_Party/FatFs/src/ff.c **** void put_lfn (
1752:Middlewares/Third_Party/FatFs/src/ff.c **** 	const WCHAR* lfn,	/* Pointer to the LFN */
1753:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dir,			/* Pointer to the LFN entry to be created */
1754:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE ord,			/* LFN order (1-20) */
1755:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE sum			/* Checksum of the corresponding SFN */
1756:Middlewares/Third_Party/FatFs/src/ff.c **** )
1757:Middlewares/Third_Party/FatFs/src/ff.c **** {
 1124              		.loc 1 1757 0
 1125              		.cfi_startproc
 1126              		@ args = 0, pretend = 0, frame = 0
 1127              		@ frame_needed = 0, uses_anonymous_args = 0
 1128              	.LVL144:
 1129 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 1130              	.LCFI15:
 1131              		.cfi_def_cfa_offset 32
 1132              		.cfi_offset 3, -32
 1133              		.cfi_offset 4, -28
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 52


 1134              		.cfi_offset 5, -24
 1135              		.cfi_offset 6, -20
 1136              		.cfi_offset 7, -16
 1137              		.cfi_offset 8, -12
 1138              		.cfi_offset 9, -8
 1139              		.cfi_offset 14, -4
 1140 0004 8046     		mov	r8, r0
 1141 0006 0F46     		mov	r7, r1
 1142 0008 9146     		mov	r9, r2
1758:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, s;
1759:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR wc;
1760:Middlewares/Third_Party/FatFs/src/ff.c **** 
1761:Middlewares/Third_Party/FatFs/src/ff.c **** 
1762:Middlewares/Third_Party/FatFs/src/ff.c **** 	dir[LDIR_Chksum] = sum;			/* Set checksum */
 1143              		.loc 1 1762 0
 1144 000a 4B73     		strb	r3, [r1, #13]
1763:Middlewares/Third_Party/FatFs/src/ff.c **** 	dir[LDIR_Attr] = AM_LFN;		/* Set attribute. LFN entry */
 1145              		.loc 1 1763 0
 1146 000c 0F23     		movs	r3, #15
 1147              	.LVL145:
 1148 000e CB72     		strb	r3, [r1, #11]
1764:Middlewares/Third_Party/FatFs/src/ff.c **** 	dir[LDIR_Type] = 0;
 1149              		.loc 1 1764 0
 1150 0010 0024     		movs	r4, #0
 1151 0012 0C73     		strb	r4, [r1, #12]
1765:Middlewares/Third_Party/FatFs/src/ff.c **** 	st_word(dir + LDIR_FstClusLO, 0);
 1152              		.loc 1 1765 0
 1153 0014 2146     		mov	r1, r4
 1154              	.LVL146:
 1155 0016 07F11A00 		add	r0, r7, #26
 1156              	.LVL147:
 1157 001a FFF7FEFF 		bl	st_word
 1158              	.LVL148:
1766:Middlewares/Third_Party/FatFs/src/ff.c **** 
1767:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = (ord - 1) * 13;				/* Get offset in the LFN working buffer */
 1159              		.loc 1 1767 0
 1160 001e 09F1FF36 		add	r6, r9, #-1
 1161 0022 06EB4603 		add	r3, r6, r6, lsl #1
 1162 0026 06EB8306 		add	r6, r6, r3, lsl #2
 1163              	.LVL149:
1768:Middlewares/Third_Party/FatFs/src/ff.c **** 	s = wc = 0;
 1164              		.loc 1 1768 0
 1165 002a 2546     		mov	r5, r4
 1166 002c 02E0     		b	.L120
 1167              	.LVL150:
 1168              	.L119:
1769:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
1770:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (wc != 0xFFFF) wc = lfn[i++];	/* Get an effective character */
1771:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(dir + LfnOfs[s], wc);		/* Put it */
1772:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (wc == 0) wc = 0xFFFF;		/* Padding characters for left locations */
1773:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (++s < 13);
 1169              		.loc 1 1773 0
 1170 002e 0134     		adds	r4, r4, #1
 1171              	.LVL151:
 1172 0030 0C2C     		cmp	r4, #12
 1173 0032 11D8     		bhi	.L125
 1174              	.LVL152:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 53


 1175              	.L120:
1770:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(dir + LfnOfs[s], wc);		/* Put it */
 1176              		.loc 1 1770 0
 1177 0034 4FF6FF73 		movw	r3, #65535
 1178 0038 9D42     		cmp	r5, r3
 1179 003a 02D0     		beq	.L118
 1180              	.LVL153:
1770:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(dir + LfnOfs[s], wc);		/* Put it */
 1181              		.loc 1 1770 0 is_stmt 0 discriminator 1
 1182 003c 38F81650 		ldrh	r5, [r8, r6, lsl #1]
 1183              	.LVL154:
 1184 0040 0136     		adds	r6, r6, #1
 1185              	.LVL155:
 1186              	.L118:
1771:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (wc == 0) wc = 0xFFFF;		/* Padding characters for left locations */
 1187              		.loc 1 1771 0 is_stmt 1
 1188 0042 0C4B     		ldr	r3, .L126
 1189 0044 185D     		ldrb	r0, [r3, r4]	@ zero_extendqisi2
 1190 0046 2946     		mov	r1, r5
 1191 0048 3844     		add	r0, r0, r7
 1192 004a FFF7FEFF 		bl	st_word
 1193              	.LVL156:
1772:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (++s < 13);
 1194              		.loc 1 1772 0
 1195 004e 002D     		cmp	r5, #0
 1196 0050 EDD1     		bne	.L119
 1197 0052 4FF6FF75 		movw	r5, #65535
 1198              	.LVL157:
 1199 0056 EAE7     		b	.L119
 1200              	.LVL158:
 1201              	.L125:
1774:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (wc == 0xFFFF || !lfn[i]) ord |= LLEF;	/* Last LFN part is the start of LFN sequence */
 1202              		.loc 1 1774 0
 1203 0058 4FF6FF73 		movw	r3, #65535
 1204 005c 9D42     		cmp	r5, r3
 1205 005e 02D0     		beq	.L121
 1206              		.loc 1 1774 0 is_stmt 0 discriminator 2
 1207 0060 38F81630 		ldrh	r3, [r8, r6, lsl #1]
 1208 0064 0BB9     		cbnz	r3, .L122
 1209              	.L121:
 1210              		.loc 1 1774 0 discriminator 3
 1211 0066 49F04009 		orr	r9, r9, #64
 1212              	.LVL159:
 1213              	.L122:
1775:Middlewares/Third_Party/FatFs/src/ff.c **** 	dir[LDIR_Ord] = ord;			/* Set the LFN order */
 1214              		.loc 1 1775 0 is_stmt 1
 1215 006a 87F80090 		strb	r9, [r7]
 1216 006e BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 1217              	.LVL160:
 1218              	.L127:
 1219 0072 00BF     		.align	2
 1220              	.L126:
 1221 0074 00000000 		.word	.LANCHOR1
 1222              		.cfi_endproc
 1223              	.LFE172:
 1225              		.section	.text.gen_numname,"ax",%progbits
 1226              		.align	1
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 54


 1227              		.syntax unified
 1228              		.thumb
 1229              		.thumb_func
 1230              		.fpu fpv5-sp-d16
 1232              	gen_numname:
 1233              	.LFB173:
1776:Middlewares/Third_Party/FatFs/src/ff.c **** }
1777:Middlewares/Third_Party/FatFs/src/ff.c **** 
1778:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* !_FS_READONLY */
1779:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _USE_LFN != 0 */
1780:Middlewares/Third_Party/FatFs/src/ff.c **** 
1781:Middlewares/Third_Party/FatFs/src/ff.c **** 
1782:Middlewares/Third_Party/FatFs/src/ff.c **** 
1783:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0 && !_FS_READONLY
1784:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1785:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT-LFN: Create a Numbered SFN                                        */
1786:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1787:Middlewares/Third_Party/FatFs/src/ff.c **** 
1788:Middlewares/Third_Party/FatFs/src/ff.c **** static
1789:Middlewares/Third_Party/FatFs/src/ff.c **** void gen_numname (
1790:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dst,			/* Pointer to the buffer to store numbered SFN */
1791:Middlewares/Third_Party/FatFs/src/ff.c **** 	const BYTE* src,	/* Pointer to SFN */
1792:Middlewares/Third_Party/FatFs/src/ff.c **** 	const WCHAR* lfn,	/* Pointer to LFN */
1793:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT seq			/* Sequence number */
1794:Middlewares/Third_Party/FatFs/src/ff.c **** )
1795:Middlewares/Third_Party/FatFs/src/ff.c **** {
 1234              		.loc 1 1795 0
 1235              		.cfi_startproc
 1236              		@ args = 0, pretend = 0, frame = 8
 1237              		@ frame_needed = 0, uses_anonymous_args = 0
 1238              	.LVL161:
 1239 0000 70B5     		push	{r4, r5, r6, lr}
 1240              	.LCFI16:
 1241              		.cfi_def_cfa_offset 16
 1242              		.cfi_offset 4, -16
 1243              		.cfi_offset 5, -12
 1244              		.cfi_offset 6, -8
 1245              		.cfi_offset 14, -4
 1246 0002 82B0     		sub	sp, sp, #8
 1247              	.LCFI17:
 1248              		.cfi_def_cfa_offset 24
 1249 0004 0546     		mov	r5, r0
 1250 0006 1646     		mov	r6, r2
 1251 0008 1C46     		mov	r4, r3
1796:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE ns[8], c;
1797:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, j;
1798:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR wc;
1799:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD sr;
1800:Middlewares/Third_Party/FatFs/src/ff.c **** 
1801:Middlewares/Third_Party/FatFs/src/ff.c **** 
1802:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_cpy(dst, src, 11);
 1252              		.loc 1 1802 0
 1253 000a 0B22     		movs	r2, #11
 1254              	.LVL162:
 1255 000c FFF7FEFF 		bl	mem_cpy
 1256              	.LVL163:
1803:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 55


1804:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (seq > 5) {	/* In case of many collisions, generate a hash number instead of sequential number 
 1257              		.loc 1 1804 0
 1258 0010 052C     		cmp	r4, #5
 1259 0012 11D8     		bhi	.L141
 1260              	.LVL164:
 1261              	.L130:
1805:Middlewares/Third_Party/FatFs/src/ff.c **** 		sr = seq;
1806:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (*lfn) {	/* Create a CRC */
1807:Middlewares/Third_Party/FatFs/src/ff.c **** 			wc = *lfn++;
1808:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (i = 0; i < 16; i++) {
1809:Middlewares/Third_Party/FatFs/src/ff.c **** 				sr = (sr << 1) + (wc & 1);
1810:Middlewares/Third_Party/FatFs/src/ff.c **** 				wc >>= 1;
1811:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (sr & 0x10000) sr ^= 0x11021;
1812:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1813:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1814:Middlewares/Third_Party/FatFs/src/ff.c **** 		seq = (UINT)sr;
 1262              		.loc 1 1814 0
 1263 0014 0723     		movs	r3, #7
 1264 0016 1FE0     		b	.L136
 1265              	.LVL165:
 1266              	.L132:
1808:Middlewares/Third_Party/FatFs/src/ff.c **** 				sr = (sr << 1) + (wc & 1);
 1267              		.loc 1 1808 0 discriminator 2
 1268 0018 0131     		adds	r1, r1, #1
 1269              	.LVL166:
 1270              	.L131:
1808:Middlewares/Third_Party/FatFs/src/ff.c **** 				sr = (sr << 1) + (wc & 1);
 1271              		.loc 1 1808 0 is_stmt 0 discriminator 1
 1272 001a 0F29     		cmp	r1, #15
 1273 001c 0DD8     		bhi	.L129
1809:Middlewares/Third_Party/FatFs/src/ff.c **** 				wc >>= 1;
 1274              		.loc 1 1809 0 is_stmt 1
 1275 001e 02F00100 		and	r0, r2, #1
 1276 0022 00EB4303 		add	r3, r0, r3, lsl #1
 1277              	.LVL167:
1810:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (sr & 0x10000) sr ^= 0x11021;
 1278              		.loc 1 1810 0
 1279 0026 5208     		lsrs	r2, r2, #1
 1280              	.LVL168:
1811:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 1281              		.loc 1 1811 0
 1282 0028 13F4803F 		tst	r3, #65536
 1283 002c F4D0     		beq	.L132
1811:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 1284              		.loc 1 1811 0 is_stmt 0 discriminator 1
 1285 002e 83F48833 		eor	r3, r3, #69632
 1286              	.LVL169:
 1287 0032 83F02103 		eor	r3, r3, #33
 1288              	.LVL170:
 1289 0036 EFE7     		b	.L132
 1290              	.LVL171:
 1291              	.L141:
 1292 0038 2346     		mov	r3, r4
 1293              	.L129:
 1294              	.LVL172:
1806:Middlewares/Third_Party/FatFs/src/ff.c **** 			wc = *lfn++;
 1295              		.loc 1 1806 0 is_stmt 1
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 56


 1296 003a 3288     		ldrh	r2, [r6]
 1297 003c 12B1     		cbz	r2, .L145
1807:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (i = 0; i < 16; i++) {
 1298              		.loc 1 1807 0
 1299 003e 0236     		adds	r6, r6, #2
 1300              	.LVL173:
1808:Middlewares/Third_Party/FatFs/src/ff.c **** 				sr = (sr << 1) + (wc & 1);
 1301              		.loc 1 1808 0
 1302 0040 0021     		movs	r1, #0
 1303 0042 EAE7     		b	.L131
 1304              	.LVL174:
 1305              	.L145:
 1306              		.loc 1 1814 0
 1307 0044 1C46     		mov	r4, r3
 1308              	.LVL175:
 1309 0046 E5E7     		b	.L130
 1310              	.LVL176:
 1311              	.L135:
1815:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1816:Middlewares/Third_Party/FatFs/src/ff.c **** 
1817:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* itoa (hexdecimal) */
1818:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = 7;
1819:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
1820:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = (BYTE)((seq % 16) + '0');
1821:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c > '9') c += 7;
1822:Middlewares/Third_Party/FatFs/src/ff.c **** 		ns[i--] = c;
 1312              		.loc 1 1822 0
 1313 0048 5A1E     		subs	r2, r3, #1
 1314              	.LVL177:
 1315 004a 02A8     		add	r0, sp, #8
 1316 004c 0344     		add	r3, r3, r0
 1317 004e 03F8081C 		strb	r1, [r3, #-8]
 1318              	.LVL178:
1823:Middlewares/Third_Party/FatFs/src/ff.c **** 		seq /= 16;
1824:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (seq);
 1319              		.loc 1 1824 0
 1320 0052 2409     		lsrs	r4, r4, #4
 1321              	.LVL179:
 1322 0054 09D0     		beq	.L146
1822:Middlewares/Third_Party/FatFs/src/ff.c **** 		seq /= 16;
 1323              		.loc 1 1822 0
 1324 0056 1346     		mov	r3, r2
 1325              	.LVL180:
 1326              	.L136:
1820:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c > '9') c += 7;
 1327              		.loc 1 1820 0
 1328 0058 04F00F02 		and	r2, r4, #15
 1329 005c 02F13001 		add	r1, r2, #48
 1330              	.LVL181:
1821:Middlewares/Third_Party/FatFs/src/ff.c **** 		ns[i--] = c;
 1331              		.loc 1 1821 0
 1332 0060 3929     		cmp	r1, #57
 1333 0062 F1D9     		bls	.L135
1821:Middlewares/Third_Party/FatFs/src/ff.c **** 		ns[i--] = c;
 1334              		.loc 1 1821 0 is_stmt 0 discriminator 1
 1335 0064 02F13701 		add	r1, r2, #55
 1336              	.LVL182:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 57


 1337 0068 EEE7     		b	.L135
 1338              	.LVL183:
 1339              	.L146:
1825:Middlewares/Third_Party/FatFs/src/ff.c **** 	ns[i] = '~';
 1340              		.loc 1 1825 0 is_stmt 1
 1341 006a 7E21     		movs	r1, #126
 1342              	.LVL184:
 1343 006c 0346     		mov	r3, r0
 1344              	.LVL185:
 1345 006e 1344     		add	r3, r3, r2
 1346 0070 03F8081C 		strb	r1, [r3, #-8]
 1347              	.LVL186:
1826:Middlewares/Third_Party/FatFs/src/ff.c **** 
1827:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Append the number */
1828:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (j = 0; j < i && dst[j] != ' '; j++) {
 1348              		.loc 1 1828 0
 1349 0074 00E0     		b	.L137
 1350              	.LVL187:
 1351              	.L139:
 1352              		.loc 1 1828 0 is_stmt 0 discriminator 2
 1353 0076 0134     		adds	r4, r4, #1
 1354              	.LVL188:
 1355              	.L137:
 1356              		.loc 1 1828 0 discriminator 1
 1357 0078 9442     		cmp	r4, r2
 1358 007a 08D2     		bcs	.L138
 1359              		.loc 1 1828 0 discriminator 3
 1360 007c 2B5D     		ldrb	r3, [r5, r4]	@ zero_extendqisi2
 1361 007e 202B     		cmp	r3, #32
 1362 0080 F9D1     		bne	.L139
 1363 0082 04E0     		b	.L138
 1364              	.LVL189:
 1365              	.L143:
1829:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (IsDBCS1(dst[j])) {
1830:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (j == i - 1) break;
1831:Middlewares/Third_Party/FatFs/src/ff.c **** 			j++;
1832:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1833:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1834:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
1835:Middlewares/Third_Party/FatFs/src/ff.c **** 		dst[j++] = (i < 8) ? ns[i++] : ' ';
 1366              		.loc 1 1835 0 is_stmt 1
 1367 0084 2020     		movs	r0, #32
 1368              	.L140:
 1369              		.loc 1 1835 0 is_stmt 0 discriminator 4
 1370 0086 1870     		strb	r0, [r3]
 1371 0088 0C46     		mov	r4, r1
1836:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (j < 8);
 1372              		.loc 1 1836 0 is_stmt 1 discriminator 4
 1373 008a 0729     		cmp	r1, #7
 1374 008c 09D8     		bhi	.L147
 1375              	.LVL190:
 1376              	.L138:
1835:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (j < 8);
 1377              		.loc 1 1835 0
 1378 008e 611C     		adds	r1, r4, #1
 1379              	.LVL191:
 1380 0090 2B19     		adds	r3, r5, r4
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 58


 1381 0092 072A     		cmp	r2, #7
 1382 0094 F6D8     		bhi	.L143
 1383              	.LVL192:
1835:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (j < 8);
 1384              		.loc 1 1835 0 is_stmt 0 discriminator 1
 1385 0096 02A8     		add	r0, sp, #8
 1386 0098 1044     		add	r0, r0, r2
 1387 009a 10F8080C 		ldrb	r0, [r0, #-8]	@ zero_extendqisi2
 1388 009e 0132     		adds	r2, r2, #1
 1389              	.LVL193:
 1390 00a0 F1E7     		b	.L140
 1391              	.L147:
1837:Middlewares/Third_Party/FatFs/src/ff.c **** }
 1392              		.loc 1 1837 0 is_stmt 1
 1393 00a2 02B0     		add	sp, sp, #8
 1394              	.LCFI18:
 1395              		.cfi_def_cfa_offset 16
 1396              		@ sp needed
 1397 00a4 70BD     		pop	{r4, r5, r6, pc}
 1398              		.cfi_endproc
 1399              	.LFE173:
 1401              		.section	.text.sum_sfn,"ax",%progbits
 1402              		.align	1
 1403              		.syntax unified
 1404              		.thumb
 1405              		.thumb_func
 1406              		.fpu fpv5-sp-d16
 1408              	sum_sfn:
 1409              	.LFB174:
1838:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _USE_LFN != 0 && !_FS_READONLY */
1839:Middlewares/Third_Party/FatFs/src/ff.c **** 
1840:Middlewares/Third_Party/FatFs/src/ff.c **** 
1841:Middlewares/Third_Party/FatFs/src/ff.c **** 
1842:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0
1843:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1844:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT-LFN: Calculate checksum of an SFN entry                           */
1845:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1846:Middlewares/Third_Party/FatFs/src/ff.c **** 
1847:Middlewares/Third_Party/FatFs/src/ff.c **** static
1848:Middlewares/Third_Party/FatFs/src/ff.c **** BYTE sum_sfn (
1849:Middlewares/Third_Party/FatFs/src/ff.c **** 	const BYTE* dir		/* Pointer to the SFN entry */
1850:Middlewares/Third_Party/FatFs/src/ff.c **** )
1851:Middlewares/Third_Party/FatFs/src/ff.c **** {
 1410              		.loc 1 1851 0
 1411              		.cfi_startproc
 1412              		@ args = 0, pretend = 0, frame = 0
 1413              		@ frame_needed = 0, uses_anonymous_args = 0
 1414              		@ link register save eliminated.
 1415              	.LVL194:
 1416 0000 0146     		mov	r1, r0
 1417              	.LVL195:
1852:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE sum = 0;
1853:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT n = 11;
 1418              		.loc 1 1853 0
 1419 0002 0B22     		movs	r2, #11
1852:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE sum = 0;
 1420              		.loc 1 1852 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 59


 1421 0004 0020     		movs	r0, #0
 1422              	.LVL196:
 1423              	.L149:
1854:Middlewares/Third_Party/FatFs/src/ff.c **** 
1855:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
1856:Middlewares/Third_Party/FatFs/src/ff.c **** 		sum = (sum >> 1) + (sum << 7) + *dir++;
 1424              		.loc 1 1856 0 discriminator 1
 1425 0006 C301     		lsls	r3, r0, #7
 1426 0008 43EA5003 		orr	r3, r3, r0, lsr #1
 1427              	.LVL197:
 1428 000c 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 1429              	.LVL198:
 1430 000e 50FA83F3 		uxtab	r3, r0, r3
 1431 0012 D8B2     		uxtb	r0, r3
 1432              	.LVL199:
 1433 0014 0131     		adds	r1, r1, #1
 1434              	.LVL200:
1857:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (--n);
 1435              		.loc 1 1857 0 discriminator 1
 1436 0016 013A     		subs	r2, r2, #1
 1437              	.LVL201:
 1438 0018 F5D1     		bne	.L149
1858:Middlewares/Third_Party/FatFs/src/ff.c **** 	return sum;
1859:Middlewares/Third_Party/FatFs/src/ff.c **** }
 1439              		.loc 1 1859 0
 1440 001a 7047     		bx	lr
 1441              		.cfi_endproc
 1442              	.LFE174:
 1444              		.section	.text.get_achar,"ax",%progbits
 1445              		.align	1
 1446              		.syntax unified
 1447              		.thumb
 1448              		.thumb_func
 1449              		.fpu fpv5-sp-d16
 1451              	get_achar:
 1452              	.LFB180:
1860:Middlewares/Third_Party/FatFs/src/ff.c **** 
1861:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _USE_LFN != 0 */
1862:Middlewares/Third_Party/FatFs/src/ff.c **** 
1863:Middlewares/Third_Party/FatFs/src/ff.c **** 
1864:Middlewares/Third_Party/FatFs/src/ff.c **** 
1865:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
1866:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1867:Middlewares/Third_Party/FatFs/src/ff.c **** /* exFAT: Checksum                                                       */
1868:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1869:Middlewares/Third_Party/FatFs/src/ff.c **** 
1870:Middlewares/Third_Party/FatFs/src/ff.c **** static
1871:Middlewares/Third_Party/FatFs/src/ff.c **** WORD xdir_sum (			/* Get checksum of the directoly block */
1872:Middlewares/Third_Party/FatFs/src/ff.c **** 	const BYTE* dir		/* Directory entry block to be calculated */
1873:Middlewares/Third_Party/FatFs/src/ff.c **** )
1874:Middlewares/Third_Party/FatFs/src/ff.c **** {
1875:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, szblk;
1876:Middlewares/Third_Party/FatFs/src/ff.c **** 	WORD sum;
1877:Middlewares/Third_Party/FatFs/src/ff.c **** 
1878:Middlewares/Third_Party/FatFs/src/ff.c **** 
1879:Middlewares/Third_Party/FatFs/src/ff.c **** 	szblk = (dir[XDIR_NumSec] + 1) * SZDIRE;
1880:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (i = sum = 0; i < szblk; i++) {
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 60


1881:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == XDIR_SetSum) {	/* Skip sum field */
1882:Middlewares/Third_Party/FatFs/src/ff.c **** 			i++;
1883:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
1884:Middlewares/Third_Party/FatFs/src/ff.c **** 			sum = ((sum & 1) ? 0x8000 : 0) + (sum >> 1) + dir[i];
1885:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1886:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1887:Middlewares/Third_Party/FatFs/src/ff.c **** 	return sum;
1888:Middlewares/Third_Party/FatFs/src/ff.c **** }
1889:Middlewares/Third_Party/FatFs/src/ff.c **** 
1890:Middlewares/Third_Party/FatFs/src/ff.c **** 
1891:Middlewares/Third_Party/FatFs/src/ff.c **** 
1892:Middlewares/Third_Party/FatFs/src/ff.c **** static
1893:Middlewares/Third_Party/FatFs/src/ff.c **** WORD xname_sum (		/* Get check sum (to be used as hash) of the name */
1894:Middlewares/Third_Party/FatFs/src/ff.c **** 	const WCHAR* name	/* File name to be calculated */
1895:Middlewares/Third_Party/FatFs/src/ff.c **** )
1896:Middlewares/Third_Party/FatFs/src/ff.c **** {
1897:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR chr;
1898:Middlewares/Third_Party/FatFs/src/ff.c **** 	WORD sum = 0;
1899:Middlewares/Third_Party/FatFs/src/ff.c **** 
1900:Middlewares/Third_Party/FatFs/src/ff.c **** 
1901:Middlewares/Third_Party/FatFs/src/ff.c **** 	while ((chr = *name++) != 0) {
1902:Middlewares/Third_Party/FatFs/src/ff.c **** 		chr = ff_wtoupper(chr);		/* File name needs to be ignored case */
1903:Middlewares/Third_Party/FatFs/src/ff.c **** 		sum = ((sum & 1) ? 0x8000 : 0) + (sum >> 1) + (chr & 0xFF);
1904:Middlewares/Third_Party/FatFs/src/ff.c **** 		sum = ((sum & 1) ? 0x8000 : 0) + (sum >> 1) + (chr >> 8);
1905:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1906:Middlewares/Third_Party/FatFs/src/ff.c **** 	return sum;
1907:Middlewares/Third_Party/FatFs/src/ff.c **** }
1908:Middlewares/Third_Party/FatFs/src/ff.c **** 
1909:Middlewares/Third_Party/FatFs/src/ff.c **** 
1910:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY && _USE_MKFS
1911:Middlewares/Third_Party/FatFs/src/ff.c **** static
1912:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD xsum32 (
1913:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE  dat,	/* Data to be sumed */
1914:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD sum	/* Previous value */
1915:Middlewares/Third_Party/FatFs/src/ff.c **** )
1916:Middlewares/Third_Party/FatFs/src/ff.c **** {
1917:Middlewares/Third_Party/FatFs/src/ff.c **** 	sum = ((sum & 1) ? 0x80000000 : 0) + (sum >> 1) + dat;
1918:Middlewares/Third_Party/FatFs/src/ff.c **** 	return sum;
1919:Middlewares/Third_Party/FatFs/src/ff.c **** }
1920:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1921:Middlewares/Third_Party/FatFs/src/ff.c **** 
1922:Middlewares/Third_Party/FatFs/src/ff.c **** 
1923:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 1 || _FS_RPATH >= 2
1924:Middlewares/Third_Party/FatFs/src/ff.c **** /*------------------------------------------------------*/
1925:Middlewares/Third_Party/FatFs/src/ff.c **** /* exFAT: Get object information from a directory block */
1926:Middlewares/Third_Party/FatFs/src/ff.c **** /*------------------------------------------------------*/
1927:Middlewares/Third_Party/FatFs/src/ff.c **** 
1928:Middlewares/Third_Party/FatFs/src/ff.c **** static
1929:Middlewares/Third_Party/FatFs/src/ff.c **** void get_xdir_info (
1930:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dirb,			/* Pointer to the direcotry entry block 85+C0+C1s */
1931:Middlewares/Third_Party/FatFs/src/ff.c **** 	FILINFO* fno		/* Buffer to store the extracted file information */
1932:Middlewares/Third_Party/FatFs/src/ff.c **** )
1933:Middlewares/Third_Party/FatFs/src/ff.c **** {
1934:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT di, si;
1935:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR w;
1936:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_LFN_UNICODE
1937:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT nc;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 61


1938:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1939:Middlewares/Third_Party/FatFs/src/ff.c **** 
1940:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get file name */
1941:Middlewares/Third_Party/FatFs/src/ff.c **** 	di = 0;
1942:Middlewares/Third_Party/FatFs/src/ff.c **** #if _LFN_UNICODE
1943:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (si = SZDIRE * 2; di < dirb[XDIR_NumName]; si += 2, di++) {
1944:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((si % SZDIRE) == 0) si += 2;		/* Skip entry type field */
1945:Middlewares/Third_Party/FatFs/src/ff.c **** 		w = ld_word(dirb + si);					/* Get a character */
1946:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (di >= _MAX_LFN) { di = 0; break; }	/* Buffer overflow --> inaccessible object name */
1947:Middlewares/Third_Party/FatFs/src/ff.c **** 		fno->fname[di] = w;						/* Store it */
1948:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1949:Middlewares/Third_Party/FatFs/src/ff.c **** #else
1950:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (si = SZDIRE * 2, nc = 0; nc < dirb[XDIR_NumName]; si += 2, nc++) {
1951:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((si % SZDIRE) == 0) si += 2;		/* Skip entry type field */
1952:Middlewares/Third_Party/FatFs/src/ff.c **** 		w = ff_convert(ld_word(dirb + si), 0);	/* Get a character and Unicode -> OEM */
1953:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_DF1S && w >= 0x100) {				/* Is it a double byte char? (always false at SBCS cfg) */
1954:Middlewares/Third_Party/FatFs/src/ff.c **** 			fno->fname[di++] = (char)(w >> 8);	/* Put 1st byte of the DBC */
1955:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1956:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w == 0 || di >= _MAX_LFN) { di = 0; break; }	/* Invalid char or buffer overflow --> inaccessi
1957:Middlewares/Third_Party/FatFs/src/ff.c **** 		fno->fname[di++] = (char)w;
1958:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1959:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1960:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (di == 0) fno->fname[di++] = '?';	/* Inaccessible object name? */
1961:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->fname[di] = 0;						/* Terminate file name */
1962:Middlewares/Third_Party/FatFs/src/ff.c **** 
1963:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->altname[0] = 0;							/* No SFN */
1964:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->fattrib = dirb[XDIR_Attr];					/* Attribute */
1965:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->fsize = (fno->fattrib & AM_DIR) ? 0 : ld_qword(dirb + XDIR_FileSize);	/* Size */
1966:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->ftime = ld_word(dirb + XDIR_ModTime + 0);	/* Time */
1967:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->fdate = ld_word(dirb + XDIR_ModTime + 2);	/* Date */
1968:Middlewares/Third_Party/FatFs/src/ff.c **** }
1969:Middlewares/Third_Party/FatFs/src/ff.c **** 
1970:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _FS_MINIMIZE <= 1 || _FS_RPATH >= 2 */
1971:Middlewares/Third_Party/FatFs/src/ff.c **** 
1972:Middlewares/Third_Party/FatFs/src/ff.c **** 
1973:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------*/
1974:Middlewares/Third_Party/FatFs/src/ff.c **** /* exFAT: Get a directry entry block */
1975:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------*/
1976:Middlewares/Third_Party/FatFs/src/ff.c **** 
1977:Middlewares/Third_Party/FatFs/src/ff.c **** static
1978:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT load_xdir (	/* FR_INT_ERR: invalid entry block */
1979:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp			/* Pointer to the reading direcotry object pointing the 85 entry */
1980:Middlewares/Third_Party/FatFs/src/ff.c **** )
1981:Middlewares/Third_Party/FatFs/src/ff.c **** {
1982:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
1983:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, sz_ent;
1984:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dirb = dp->obj.fs->dirbuf;	/* Pointer to the on-memory direcotry entry block 85+C0+C1s */
1985:Middlewares/Third_Party/FatFs/src/ff.c **** 
1986:Middlewares/Third_Party/FatFs/src/ff.c **** 
1987:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Load 85 entry */
1988:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = move_window(dp->obj.fs, dp->sect);
1989:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) return res;
1990:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (dp->dir[XDIR_Type] != 0x85) return FR_INT_ERR;
1991:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_cpy(dirb + 0, dp->dir, SZDIRE);
1992:Middlewares/Third_Party/FatFs/src/ff.c **** 	sz_ent = (dirb[XDIR_NumSec] + 1) * SZDIRE;
1993:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (sz_ent < 3 * SZDIRE || sz_ent > 19 * SZDIRE) return FR_INT_ERR;
1994:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 62


1995:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Load C0 entry */
1996:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_next(dp, 0);
1997:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) return res;
1998:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = move_window(dp->obj.fs, dp->sect);
1999:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) return res;
2000:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (dp->dir[XDIR_Type] != 0xC0) return FR_INT_ERR;
2001:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_cpy(dirb + SZDIRE, dp->dir, SZDIRE);
2002:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (MAXDIRB(dirb[XDIR_NumName]) > sz_ent) return FR_INT_ERR;
2003:Middlewares/Third_Party/FatFs/src/ff.c **** 
2004:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Load C1 entries */
2005:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = SZDIRE * 2;	/* C1 offset */
2006:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
2007:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_next(dp, 0);
2008:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) return res;
2009:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(dp->obj.fs, dp->sect);
2010:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) return res;
2011:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (dp->dir[XDIR_Type] != 0xC1) return FR_INT_ERR;
2012:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i < MAXDIRB(_MAX_LFN)) mem_cpy(dirb + i, dp->dir, SZDIRE);
2013:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while ((i += SZDIRE) < sz_ent);
2014:Middlewares/Third_Party/FatFs/src/ff.c **** 
2015:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Sanity check (do it when accessible object name) */
2016:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (i <= MAXDIRB(_MAX_LFN)) {
2017:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (xdir_sum(dirb) != ld_word(dirb + XDIR_SetSum)) return FR_INT_ERR;
2018:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2019:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
2020:Middlewares/Third_Party/FatFs/src/ff.c **** }
2021:Middlewares/Third_Party/FatFs/src/ff.c **** 
2022:Middlewares/Third_Party/FatFs/src/ff.c **** 
2023:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY || _FS_RPATH != 0
2024:Middlewares/Third_Party/FatFs/src/ff.c **** /*------------------------------------------------*/
2025:Middlewares/Third_Party/FatFs/src/ff.c **** /* exFAT: Load the object's directory entry block */
2026:Middlewares/Third_Party/FatFs/src/ff.c **** /*------------------------------------------------*/
2027:Middlewares/Third_Party/FatFs/src/ff.c **** static
2028:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT load_obj_dir (
2029:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,			/* Blank directory object to be used to access containing direcotry */
2030:Middlewares/Third_Party/FatFs/src/ff.c **** 	const _FDID* obj	/* Object with its containing directory information */
2031:Middlewares/Third_Party/FatFs/src/ff.c **** )
2032:Middlewares/Third_Party/FatFs/src/ff.c **** {
2033:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
2034:Middlewares/Third_Party/FatFs/src/ff.c **** 
2035:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Open object containing directory */
2036:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->obj.fs = obj->fs;
2037:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->obj.sclust = obj->c_scl;
2038:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->obj.stat = (BYTE)obj->c_size;
2039:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->obj.objsize = obj->c_size & 0xFFFFFF00;
2040:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->blk_ofs = obj->c_ofs;
2041:Middlewares/Third_Party/FatFs/src/ff.c **** 
2042:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_sdi(dp, dp->blk_ofs);	/* Goto object's entry block */
2043:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
2044:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = load_xdir(dp);		/* Load the object's entry block */
2045:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2046:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
2047:Middlewares/Third_Party/FatFs/src/ff.c **** }
2048:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2049:Middlewares/Third_Party/FatFs/src/ff.c **** 
2050:Middlewares/Third_Party/FatFs/src/ff.c **** 
2051:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 63


2052:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------*/
2053:Middlewares/Third_Party/FatFs/src/ff.c **** /* exFAT: Store the directory block to the media */
2054:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------*/
2055:Middlewares/Third_Party/FatFs/src/ff.c **** static
2056:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT store_xdir (
2057:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp				/* Pointer to the direcotry object */
2058:Middlewares/Third_Party/FatFs/src/ff.c **** )
2059:Middlewares/Third_Party/FatFs/src/ff.c **** {
2060:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
2061:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT nent;
2062:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dirb = dp->obj.fs->dirbuf;	/* Pointer to the direcotry entry block 85+C0+C1s */
2063:Middlewares/Third_Party/FatFs/src/ff.c **** 
2064:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create set sum */
2065:Middlewares/Third_Party/FatFs/src/ff.c **** 	st_word(dirb + XDIR_SetSum, xdir_sum(dirb));
2066:Middlewares/Third_Party/FatFs/src/ff.c **** 	nent = dirb[XDIR_NumSec] + 1;
2067:Middlewares/Third_Party/FatFs/src/ff.c **** 
2068:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Store the set of directory to the volume */
2069:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_sdi(dp, dp->blk_ofs);
2070:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (res == FR_OK) {
2071:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(dp->obj.fs, dp->sect);
2072:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) break;
2073:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(dp->dir, dirb, SZDIRE);
2074:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->obj.fs->wflag = 1;
2075:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (--nent == 0) break;
2076:Middlewares/Third_Party/FatFs/src/ff.c **** 		dirb += SZDIRE;
2077:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_next(dp, 0);
2078:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2079:Middlewares/Third_Party/FatFs/src/ff.c **** 	return (res == FR_OK || res == FR_DISK_ERR) ? res : FR_INT_ERR;
2080:Middlewares/Third_Party/FatFs/src/ff.c **** }
2081:Middlewares/Third_Party/FatFs/src/ff.c **** 
2082:Middlewares/Third_Party/FatFs/src/ff.c **** 
2083:Middlewares/Third_Party/FatFs/src/ff.c **** 
2084:Middlewares/Third_Party/FatFs/src/ff.c **** /*-------------------------------------------*/
2085:Middlewares/Third_Party/FatFs/src/ff.c **** /* exFAT: Create a new directory enrty block */
2086:Middlewares/Third_Party/FatFs/src/ff.c **** /*-------------------------------------------*/
2087:Middlewares/Third_Party/FatFs/src/ff.c **** 
2088:Middlewares/Third_Party/FatFs/src/ff.c **** static
2089:Middlewares/Third_Party/FatFs/src/ff.c **** void create_xdir (
2090:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dirb,			/* Pointer to the direcotry entry block buffer */
2091:Middlewares/Third_Party/FatFs/src/ff.c **** 	const WCHAR* lfn	/* Pointer to the nul terminated file name */
2092:Middlewares/Third_Party/FatFs/src/ff.c **** )
2093:Middlewares/Third_Party/FatFs/src/ff.c **** {
2094:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
2095:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE nb, nc;
2096:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR chr;
2097:Middlewares/Third_Party/FatFs/src/ff.c **** 
2098:Middlewares/Third_Party/FatFs/src/ff.c **** 
2099:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create 85+C0 entry */
2100:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_set(dirb, 0, 2 * SZDIRE);
2101:Middlewares/Third_Party/FatFs/src/ff.c **** 	dirb[XDIR_Type] = 0x85;
2102:Middlewares/Third_Party/FatFs/src/ff.c **** 	dirb[XDIR_Type + SZDIRE] = 0xC0;
2103:Middlewares/Third_Party/FatFs/src/ff.c **** 
2104:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create C1 entries */
2105:Middlewares/Third_Party/FatFs/src/ff.c **** 	nc = 0; nb = 1; chr = 1; i = SZDIRE * 2;
2106:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
2107:Middlewares/Third_Party/FatFs/src/ff.c **** 		dirb[i++] = 0xC1; dirb[i++] = 0;	/* Entry type C1 */
2108:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {	/* Fill name field */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 64


2109:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (chr && (chr = lfn[nc]) != 0) nc++;	/* Get a character if exist */
2110:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(dirb + i, chr); 		/* Store it */
2111:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while ((i += 2) % SZDIRE != 0);
2112:Middlewares/Third_Party/FatFs/src/ff.c **** 		nb++;
2113:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (lfn[nc]);	/* Fill next entry if any char follows */
2114:Middlewares/Third_Party/FatFs/src/ff.c **** 
2115:Middlewares/Third_Party/FatFs/src/ff.c **** 	dirb[XDIR_NumName] = nc;	/* Set name length */
2116:Middlewares/Third_Party/FatFs/src/ff.c **** 	dirb[XDIR_NumSec] = nb;		/* Set block length */
2117:Middlewares/Third_Party/FatFs/src/ff.c **** 	st_word(dirb + XDIR_NameHash, xname_sum(lfn));	/* Set name hash */
2118:Middlewares/Third_Party/FatFs/src/ff.c **** }
2119:Middlewares/Third_Party/FatFs/src/ff.c **** 
2120:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* !_FS_READONLY */
2121:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _FS_EXFAT */
2122:Middlewares/Third_Party/FatFs/src/ff.c **** 
2123:Middlewares/Third_Party/FatFs/src/ff.c **** 
2124:Middlewares/Third_Party/FatFs/src/ff.c **** 
2125:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 1 || _FS_RPATH >= 2 || _USE_LABEL || _FS_EXFAT
2126:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2127:Middlewares/Third_Party/FatFs/src/ff.c **** /* Read an object from the directory                                     */
2128:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2129:Middlewares/Third_Party/FatFs/src/ff.c **** 
2130:Middlewares/Third_Party/FatFs/src/ff.c **** static
2131:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dir_read (
2132:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,		/* Pointer to the directory object */
2133:Middlewares/Third_Party/FatFs/src/ff.c **** 	int vol			/* Filtered by 0:file/directory or 1:volume label */
2134:Middlewares/Third_Party/FatFs/src/ff.c **** )
2135:Middlewares/Third_Party/FatFs/src/ff.c **** {
2136:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res = FR_NO_FILE;
2137:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = dp->obj.fs;
2138:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE a, c;
2139:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0
2140:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE ord = 0xFF, sum = 0xFF;
2141:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2142:Middlewares/Third_Party/FatFs/src/ff.c **** 
2143:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (dp->sect) {
2144:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(fs, dp->sect);
2145:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) break;
2146:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = dp->dir[DIR_Name];	/* Test for the entry type */
2147:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 0) {
2148:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_NO_FILE; break; /* Reached to end of the directory */
2149:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2150:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
2151:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->fs_type == FS_EXFAT) {	/* On the exFAT volume */
2152:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (_USE_LABEL && vol) {
2153:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (c == 0x83) break;	/* Volume label entry? */
2154:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
2155:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (c == 0x85) {		/* Start of the file entry block? */
2156:Middlewares/Third_Party/FatFs/src/ff.c **** 					dp->blk_ofs = dp->dptr;	/* Get location of the block */
2157:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = load_xdir(dp);	/* Load the entry block */
2158:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res == FR_OK) {
2159:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->obj.attr = fs->dirbuf[XDIR_Attr] & AM_MASK;	/* Get attribute */
2160:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
2161:Middlewares/Third_Party/FatFs/src/ff.c **** 					break;
2162:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2163:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2164:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else
2165:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 65


2166:Middlewares/Third_Party/FatFs/src/ff.c **** 		{	/* On the FAT12/16/32 volume */
2167:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->obj.attr = a = dp->dir[DIR_Attr] & AM_MASK;	/* Get attribute */
2168:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
2169:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (c == DDEM || c == '.' || (int)((a & ~AM_ARC) == AM_VOL) != vol) {	/* An entry without valid 
2170:Middlewares/Third_Party/FatFs/src/ff.c **** 				ord = 0xFF;
2171:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
2172:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (a == AM_LFN) {			/* An LFN entry is found */
2173:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (c & LLEF) {			/* Is it start of an LFN sequence? */
2174:Middlewares/Third_Party/FatFs/src/ff.c **** 						sum = dp->dir[LDIR_Chksum];
2175:Middlewares/Third_Party/FatFs/src/ff.c **** 						c &= (BYTE)~LLEF; ord = c;
2176:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->blk_ofs = dp->dptr;
2177:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
2178:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Check LFN validity and capture it */
2179:Middlewares/Third_Party/FatFs/src/ff.c **** 					ord = (c == ord && sum == dp->dir[LDIR_Chksum] && pick_lfn(fs->lfnbuf, dp->dir)) ? ord - 1 : 0
2180:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {					/* An SFN entry is found */
2181:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (ord || sum != sum_sfn(dp->dir)) {	/* Is there a valid LFN? */
2182:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->blk_ofs = 0xFFFFFFFF;			/* It has no LFN. */
2183:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
2184:Middlewares/Third_Party/FatFs/src/ff.c **** 					break;
2185:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2186:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2187:Middlewares/Third_Party/FatFs/src/ff.c **** #else		/* Non LFN configuration */
2188:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (c != DDEM && c != '.' && a != AM_LFN && (int)((a & ~AM_ARC) == AM_VOL) == vol) {	/* Is it a 
2189:Middlewares/Third_Party/FatFs/src/ff.c **** 				break;
2190:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2191:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2192:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2193:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_next(dp, 0);		/* Next entry */
2194:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) break;
2195:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2196:Middlewares/Third_Party/FatFs/src/ff.c **** 
2197:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) dp->sect = 0;		/* Terminate the read operation on error or EOT */
2198:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
2199:Middlewares/Third_Party/FatFs/src/ff.c **** }
2200:Middlewares/Third_Party/FatFs/src/ff.c **** 
2201:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _FS_MINIMIZE <= 1 || _USE_LABEL || _FS_RPATH >= 2 */
2202:Middlewares/Third_Party/FatFs/src/ff.c **** 
2203:Middlewares/Third_Party/FatFs/src/ff.c **** 
2204:Middlewares/Third_Party/FatFs/src/ff.c **** 
2205:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2206:Middlewares/Third_Party/FatFs/src/ff.c **** /* Directory handling - Find an object in the directory                  */
2207:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2208:Middlewares/Third_Party/FatFs/src/ff.c **** 
2209:Middlewares/Third_Party/FatFs/src/ff.c **** static
2210:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dir_find (	/* FR_OK(0):succeeded, !=0:error */
2211:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp			/* Pointer to the directory object with the file name */
2212:Middlewares/Third_Party/FatFs/src/ff.c **** )
2213:Middlewares/Third_Party/FatFs/src/ff.c **** {
2214:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
2215:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = dp->obj.fs;
2216:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE c;
2217:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0
2218:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE a, ord, sum;
2219:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2220:Middlewares/Third_Party/FatFs/src/ff.c **** 
2221:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_sdi(dp, 0);			/* Rewind directory object */
2222:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) return res;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 66


2223:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
2224:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_EXFAT) {	/* On the exFAT volume */
2225:Middlewares/Third_Party/FatFs/src/ff.c **** 		BYTE nc;
2226:Middlewares/Third_Party/FatFs/src/ff.c **** 		UINT di, ni;
2227:Middlewares/Third_Party/FatFs/src/ff.c **** 		WORD hash = xname_sum(fs->lfnbuf);		/* Hash value of the name to find */
2228:Middlewares/Third_Party/FatFs/src/ff.c **** 
2229:Middlewares/Third_Party/FatFs/src/ff.c **** 		while ((res = dir_read(dp, 0)) == FR_OK) {	/* Read an item */
2230:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_LFN < 255
2231:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->dirbuf[XDIR_NumName] > _MAX_LFN) continue;			/* Skip comparison if inaccessible object n
2232:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2233:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ld_word(fs->dirbuf + XDIR_NameHash) != hash) continue;	/* Skip comparison if hash mismatched
2234:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (nc = fs->dirbuf[XDIR_NumName], di = SZDIRE * 2, ni = 0; nc; nc--, di += 2, ni++) {	/* Compa
2235:Middlewares/Third_Party/FatFs/src/ff.c **** 				if ((di % SZDIRE) == 0) di += 2;
2236:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (ff_wtoupper(ld_word(fs->dirbuf + di)) != ff_wtoupper(fs->lfnbuf[ni])) break;
2237:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2238:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (nc == 0 && !fs->lfnbuf[ni]) break;	/* Name matched? */
2239:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2240:Middlewares/Third_Party/FatFs/src/ff.c **** 		return res;
2241:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2242:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2243:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* On the FAT12/16/32 volume */
2244:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0
2245:Middlewares/Third_Party/FatFs/src/ff.c **** 	ord = sum = 0xFF; dp->blk_ofs = 0xFFFFFFFF;	/* Reset LFN sequence */
2246:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2247:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
2248:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(fs, dp->sect);
2249:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) break;
2250:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = dp->dir[DIR_Name];
2251:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
2252:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
2253:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->obj.attr = a = dp->dir[DIR_Attr] & AM_MASK;
2254:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == DDEM || ((a & AM_VOL) && a != AM_LFN)) {	/* An entry without valid data */
2255:Middlewares/Third_Party/FatFs/src/ff.c **** 			ord = 0xFF; dp->blk_ofs = 0xFFFFFFFF;	/* Reset LFN sequence */
2256:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
2257:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (a == AM_LFN) {			/* An LFN entry is found */
2258:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!(dp->fn[NSFLAG] & NS_NOLFN)) {
2259:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (c & LLEF) {		/* Is it start of LFN sequence? */
2260:Middlewares/Third_Party/FatFs/src/ff.c **** 						sum = dp->dir[LDIR_Chksum];
2261:Middlewares/Third_Party/FatFs/src/ff.c **** 						c &= (BYTE)~LLEF; ord = c;	/* LFN start order */
2262:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->blk_ofs = dp->dptr;	/* Start offset of LFN */
2263:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
2264:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Check validity of the LFN entry and compare it with given name */
2265:Middlewares/Third_Party/FatFs/src/ff.c **** 					ord = (c == ord && sum == dp->dir[LDIR_Chksum] && cmp_lfn(fs->lfnbuf, dp->dir)) ? ord - 1 : 0x
2266:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2267:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {					/* An SFN entry is found */
2268:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!ord && sum == sum_sfn(dp->dir)) break;	/* LFN matched? */
2269:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!(dp->fn[NSFLAG] & NS_LOSS) && !mem_cmp(dp->dir, dp->fn, 11)) break;	/* SFN matched? */
2270:Middlewares/Third_Party/FatFs/src/ff.c **** 				ord = 0xFF; dp->blk_ofs = 0xFFFFFFFF;	/* Reset LFN sequence */
2271:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2272:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2273:Middlewares/Third_Party/FatFs/src/ff.c **** #else		/* Non LFN configuration */
2274:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->obj.attr = dp->dir[DIR_Attr] & AM_MASK;
2275:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!(dp->dir[DIR_Attr] & AM_VOL) && !mem_cmp(dp->dir, dp->fn, 11)) break;	/* Is it a valid entry
2276:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2277:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_next(dp, 0);	/* Next entry */
2278:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (res == FR_OK);
2279:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 67


2280:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
2281:Middlewares/Third_Party/FatFs/src/ff.c **** }
2282:Middlewares/Third_Party/FatFs/src/ff.c **** 
2283:Middlewares/Third_Party/FatFs/src/ff.c **** 
2284:Middlewares/Third_Party/FatFs/src/ff.c **** 
2285:Middlewares/Third_Party/FatFs/src/ff.c **** 
2286:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
2287:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2288:Middlewares/Third_Party/FatFs/src/ff.c **** /* Register an object to the directory                                   */
2289:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2290:Middlewares/Third_Party/FatFs/src/ff.c **** 
2291:Middlewares/Third_Party/FatFs/src/ff.c **** static
2292:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dir_register (	/* FR_OK:succeeded, FR_DENIED:no free entry or too many SFN collision, FR_DI
2293:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp				/* Target directory with object name to be created */
2294:Middlewares/Third_Party/FatFs/src/ff.c **** )
2295:Middlewares/Third_Party/FatFs/src/ff.c **** {
2296:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
2297:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = dp->obj.fs;
2298:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
2299:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT n, nlen, nent;
2300:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE sn[12], sum;
2301:Middlewares/Third_Party/FatFs/src/ff.c **** 
2302:Middlewares/Third_Party/FatFs/src/ff.c **** 
2303:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (dp->fn[NSFLAG] & (NS_DOT | NS_NONAME)) return FR_INVALID_NAME;	/* Check name validity */
2304:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (nlen = 0; fs->lfnbuf[nlen]; nlen++) ;	/* Get lfn length */
2305:Middlewares/Third_Party/FatFs/src/ff.c **** 
2306:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
2307:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_EXFAT) {	/* On the exFAT volume */
2308:Middlewares/Third_Party/FatFs/src/ff.c **** 		DIR dj;
2309:Middlewares/Third_Party/FatFs/src/ff.c **** 
2310:Middlewares/Third_Party/FatFs/src/ff.c **** 		nent = (nlen + 14) / 15 + 2;	/* Number of entries to allocate (85+C0+C1s) */
2311:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_alloc(dp, nent);		/* Allocate entries */
2312:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) return res;
2313:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->blk_ofs = dp->dptr - SZDIRE * (nent - 1);	/* Set the allocated entry block offset */
2314:Middlewares/Third_Party/FatFs/src/ff.c **** 
2315:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (dp->obj.sclust != 0 && (dp->obj.stat & 4)) {	/* Has the sub-directory been stretched? */
2316:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->obj.objsize += (DWORD)fs->csize * SS(fs);	/* Increase the directory size by cluster size */
2317:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = fill_first_frag(&dp->obj);				/* Fill first fragment on the FAT if needed */
2318:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) return res;
2319:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = fill_last_frag(&dp->obj, dp->clust, 0xFFFFFFFF);	/* Fill last fragment on the FAT if neede
2320:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) return res;
2321:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = load_obj_dir(&dj, &dp->obj);				/* Load the object status */
2322:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) return res;
2323:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_qword(fs->dirbuf + XDIR_FileSize, dp->obj.objsize);		/* Update the allocation status */
2324:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_qword(fs->dirbuf + XDIR_ValidFileSize, dp->obj.objsize);
2325:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->dirbuf[XDIR_GenFlags] = dp->obj.stat | 1;
2326:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = store_xdir(&dj);							/* Store the object status */
2327:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) return res;
2328:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2329:Middlewares/Third_Party/FatFs/src/ff.c **** 
2330:Middlewares/Third_Party/FatFs/src/ff.c **** 		create_xdir(fs->dirbuf, fs->lfnbuf);	/* Create on-memory directory block to be written later */
2331:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_OK;
2332:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2333:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2334:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* On the FAT12/16/32 volume */
2335:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_cpy(sn, dp->fn, 12);
2336:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (sn[NSFLAG] & NS_LOSS) {			/* When LFN is out of 8.3 format, generate a numbered name */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 68


2337:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->fn[NSFLAG] = NS_NOLFN;		/* Find only SFN */
2338:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (n = 1; n < 100; n++) {
2339:Middlewares/Third_Party/FatFs/src/ff.c **** 			gen_numname(dp->fn, sn, fs->lfnbuf, n);	/* Generate a numbered name */
2340:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_find(dp);				/* Check if the name collides with existing SFN */
2341:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
2342:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2343:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (n == 100) return FR_DENIED;		/* Abort if too many collisions */
2344:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_NO_FILE) return res;	/* Abort if the result is other than 'not collided' */
2345:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->fn[NSFLAG] = sn[NSFLAG];
2346:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2347:Middlewares/Third_Party/FatFs/src/ff.c **** 
2348:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create an SFN with/without LFNs. */
2349:Middlewares/Third_Party/FatFs/src/ff.c **** 	nent = (sn[NSFLAG] & NS_LFN) ? (nlen + 12) / 13 + 1 : 1;	/* Number of entries to allocate */
2350:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_alloc(dp, nent);		/* Allocate entries */
2351:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK && --nent) {	/* Set LFN entry if needed */
2352:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_sdi(dp, dp->dptr - nent * SZDIRE);
2353:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
2354:Middlewares/Third_Party/FatFs/src/ff.c **** 			sum = sum_sfn(dp->fn);	/* Checksum value of the SFN tied to the LFN */
2355:Middlewares/Third_Party/FatFs/src/ff.c **** 			do {					/* Store LFN entries in bottom first */
2356:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = move_window(fs, dp->sect);
2357:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res != FR_OK) break;
2358:Middlewares/Third_Party/FatFs/src/ff.c **** 				put_lfn(fs->lfnbuf, dp->dir, (BYTE)nent, sum);
2359:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->wflag = 1;
2360:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_next(dp, 0);	/* Next entry */
2361:Middlewares/Third_Party/FatFs/src/ff.c **** 			} while (res == FR_OK && --nent);
2362:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2363:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2364:Middlewares/Third_Party/FatFs/src/ff.c **** 
2365:Middlewares/Third_Party/FatFs/src/ff.c **** #else	/* Non LFN configuration */
2366:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_alloc(dp, 1);		/* Allocate an entry for SFN */
2367:Middlewares/Third_Party/FatFs/src/ff.c **** 
2368:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2369:Middlewares/Third_Party/FatFs/src/ff.c **** 
2370:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Set SFN entry */
2371:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
2372:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(fs, dp->sect);
2373:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
2374:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(dp->dir, 0, SZDIRE);	/* Clean the entry */
2375:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_cpy(dp->dir + DIR_Name, dp->fn, 11);	/* Put SFN */
2376:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0
2377:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->dir[DIR_NTres] = dp->fn[NSFLAG] & (NS_BODY | NS_EXT);	/* Put NT flag */
2378:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2379:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
2380:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2381:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2382:Middlewares/Third_Party/FatFs/src/ff.c **** 
2383:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
2384:Middlewares/Third_Party/FatFs/src/ff.c **** }
2385:Middlewares/Third_Party/FatFs/src/ff.c **** 
2386:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
2387:Middlewares/Third_Party/FatFs/src/ff.c **** 
2388:Middlewares/Third_Party/FatFs/src/ff.c **** 
2389:Middlewares/Third_Party/FatFs/src/ff.c **** 
2390:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY && _FS_MINIMIZE == 0
2391:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2392:Middlewares/Third_Party/FatFs/src/ff.c **** /* Remove an object from the directory                                   */
2393:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 69


2394:Middlewares/Third_Party/FatFs/src/ff.c **** 
2395:Middlewares/Third_Party/FatFs/src/ff.c **** static
2396:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dir_remove (	/* FR_OK:Succeeded, FR_DISK_ERR:A disk error */
2397:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp				/* Directory object pointing the entry to be removed */
2398:Middlewares/Third_Party/FatFs/src/ff.c **** )
2399:Middlewares/Third_Party/FatFs/src/ff.c **** {
2400:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
2401:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = dp->obj.fs;
2402:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
2403:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD last = dp->dptr;
2404:Middlewares/Third_Party/FatFs/src/ff.c **** 
2405:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = (dp->blk_ofs == 0xFFFFFFFF) ? FR_OK : dir_sdi(dp, dp->blk_ofs);	/* Goto top of the entry blo
2406:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
2407:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
2408:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, dp->sect);
2409:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
2410:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Mark an entry 'deleted' */
2411:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (_FS_EXFAT && fs->fs_type == FS_EXFAT) {	/* On the exFAT volume */
2412:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->dir[XDIR_Type] &= 0x7F;
2413:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {									/* On the FAT12/16/32 volume */
2414:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->dir[DIR_Name] = DDEM;
2415:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2416:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
2417:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dp->dptr >= last) break;	/* If reached last entry then all entries of the object has been de
2418:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_next(dp, 0);	/* Next entry */
2419:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (res == FR_OK);
2420:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_NO_FILE) res = FR_INT_ERR;
2421:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2422:Middlewares/Third_Party/FatFs/src/ff.c **** #else			/* Non LFN configuration */
2423:Middlewares/Third_Party/FatFs/src/ff.c **** 
2424:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = move_window(fs, dp->sect);
2425:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
2426:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->dir[DIR_Name] = DDEM;
2427:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->wflag = 1;
2428:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2429:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2430:Middlewares/Third_Party/FatFs/src/ff.c **** 
2431:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
2432:Middlewares/Third_Party/FatFs/src/ff.c **** }
2433:Middlewares/Third_Party/FatFs/src/ff.c **** 
2434:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY && _FS_MINIMIZE == 0 */
2435:Middlewares/Third_Party/FatFs/src/ff.c **** 
2436:Middlewares/Third_Party/FatFs/src/ff.c **** 
2437:Middlewares/Third_Party/FatFs/src/ff.c **** 
2438:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 1 || _FS_RPATH >= 2
2439:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2440:Middlewares/Third_Party/FatFs/src/ff.c **** /* Get file information from directory entry                             */
2441:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2442:Middlewares/Third_Party/FatFs/src/ff.c **** 
2443:Middlewares/Third_Party/FatFs/src/ff.c **** static
2444:Middlewares/Third_Party/FatFs/src/ff.c **** void get_fileinfo (		/* No return code */
2445:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,			/* Pointer to the directory object */
2446:Middlewares/Third_Party/FatFs/src/ff.c **** 	FILINFO* fno	 	/* Pointer to the file information to be filled */
2447:Middlewares/Third_Party/FatFs/src/ff.c **** )
2448:Middlewares/Third_Party/FatFs/src/ff.c **** {
2449:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, j;
2450:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR c;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 70


2451:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD tm;
2452:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0
2453:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR w, lfv;
2454:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = dp->obj.fs;
2455:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2456:Middlewares/Third_Party/FatFs/src/ff.c **** 
2457:Middlewares/Third_Party/FatFs/src/ff.c **** 
2458:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->fname[0] = 0;		/* Invaidate file info */
2459:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!dp->sect) return;	/* Exit if read pointer has reached end of directory */
2460:Middlewares/Third_Party/FatFs/src/ff.c **** 
2461:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
2462:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
2463:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_EXFAT) {	/* On the exFAT volume */
2464:Middlewares/Third_Party/FatFs/src/ff.c **** 		get_xdir_info(fs->dirbuf, fno);
2465:Middlewares/Third_Party/FatFs/src/ff.c **** 		return;
2466:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else
2467:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2468:Middlewares/Third_Party/FatFs/src/ff.c **** 	{	/* On the FAT12/16/32 volume */
2469:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (dp->blk_ofs != 0xFFFFFFFF) {	/* Get LFN if available */
2470:Middlewares/Third_Party/FatFs/src/ff.c **** 			i = j = 0;
2471:Middlewares/Third_Party/FatFs/src/ff.c **** 			while ((w = fs->lfnbuf[j++]) != 0) {	/* Get an LFN character */
2472:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_LFN_UNICODE
2473:Middlewares/Third_Party/FatFs/src/ff.c **** 				w = ff_convert(w, 0);		/* Unicode -> OEM */
2474:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (w == 0) { i = 0; break; }	/* No LFN if it could not be converted */
2475:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (_DF1S && w >= 0x100) {	/* Put 1st byte if it is a DBC (always false at SBCS cfg) */
2476:Middlewares/Third_Party/FatFs/src/ff.c **** 					fno->fname[i++] = (char)(w >> 8);
2477:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2478:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2479:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (i >= _MAX_LFN) { i = 0; break; }	/* No LFN if buffer overflow */
2480:Middlewares/Third_Party/FatFs/src/ff.c **** 				fno->fname[i++] = (TCHAR)w;
2481:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2482:Middlewares/Third_Party/FatFs/src/ff.c **** 			fno->fname[i] = 0;	/* Terminate the LFN */
2483:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2484:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2485:Middlewares/Third_Party/FatFs/src/ff.c **** 
2486:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = j = 0;
2487:Middlewares/Third_Party/FatFs/src/ff.c **** 	lfv = fno->fname[i];	/* LFN is exist if non-zero */
2488:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (i < 11) {		/* Copy name body and extension */
2489:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = (TCHAR)dp->dir[i++];
2490:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == ' ') continue;				/* Skip padding spaces */
2491:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == RDDEM) c = (TCHAR)DDEM;	/* Restore replaced DDEM character */
2492:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == 9) {						/* Insert a . if extension is exist */
2493:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!lfv) fno->fname[j] = '.';
2494:Middlewares/Third_Party/FatFs/src/ff.c **** 			fno->altname[j++] = '.';
2495:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2496:Middlewares/Third_Party/FatFs/src/ff.c **** #if _LFN_UNICODE
2497:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (IsDBCS1(c) && i != 8 && i != 11 && IsDBCS2(dp->dir[i])) {
2498:Middlewares/Third_Party/FatFs/src/ff.c **** 			c = c << 8 | dp->dir[i++];
2499:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2500:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = ff_convert(c, 1);	/* OEM -> Unicode */
2501:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!c) c = '?';
2502:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2503:Middlewares/Third_Party/FatFs/src/ff.c **** 		fno->altname[j] = c;
2504:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!lfv) {
2505:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (IsUpper(c) && (dp->dir[DIR_NTres] & ((i >= 9) ? NS_EXT : NS_BODY))) {
2506:Middlewares/Third_Party/FatFs/src/ff.c **** 				c += 0x20;			/* To lower */
2507:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 71


2508:Middlewares/Third_Party/FatFs/src/ff.c **** 			fno->fname[j] = c;
2509:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2510:Middlewares/Third_Party/FatFs/src/ff.c **** 		j++;
2511:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2512:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!lfv) {
2513:Middlewares/Third_Party/FatFs/src/ff.c **** 		fno->fname[j] = 0;
2514:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!dp->dir[DIR_NTres]) j = 0;	/* Altname is no longer needed if neither LFN nor case info is ex
2515:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2516:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->altname[j] = 0;	/* Terminate the SFN */
2517:Middlewares/Third_Party/FatFs/src/ff.c **** 
2518:Middlewares/Third_Party/FatFs/src/ff.c **** #else	/* Non-LFN configuration */
2519:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = j = 0;
2520:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (i < 11) {		/* Copy name body and extension */
2521:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = (TCHAR)dp->dir[i++];
2522:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == ' ') continue;				/* Skip padding spaces */
2523:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == RDDEM) c = (TCHAR)DDEM;	/* Restore replaced DDEM character */
2524:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == 9) fno->fname[j++] = '.';	/* Insert a . if extension is exist */
2525:Middlewares/Third_Party/FatFs/src/ff.c **** 		fno->fname[j++] = c;
2526:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2527:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->fname[j] = 0;
2528:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2529:Middlewares/Third_Party/FatFs/src/ff.c **** 
2530:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->fattrib = dp->dir[DIR_Attr];				/* Attribute */
2531:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->fsize = ld_dword(dp->dir + DIR_FileSize);	/* Size */
2532:Middlewares/Third_Party/FatFs/src/ff.c **** 	tm = ld_dword(dp->dir + DIR_ModTime);			/* Timestamp */
2533:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->ftime = (WORD)tm; fno->fdate = (WORD)(tm >> 16);
2534:Middlewares/Third_Party/FatFs/src/ff.c **** }
2535:Middlewares/Third_Party/FatFs/src/ff.c **** 
2536:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _FS_MINIMIZE <= 1 || _FS_RPATH >= 2 */
2537:Middlewares/Third_Party/FatFs/src/ff.c **** 
2538:Middlewares/Third_Party/FatFs/src/ff.c **** 
2539:Middlewares/Third_Party/FatFs/src/ff.c **** 
2540:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FIND && _FS_MINIMIZE <= 1
2541:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2542:Middlewares/Third_Party/FatFs/src/ff.c **** /* Pattern matching                                                      */
2543:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2544:Middlewares/Third_Party/FatFs/src/ff.c **** 
2545:Middlewares/Third_Party/FatFs/src/ff.c **** static
2546:Middlewares/Third_Party/FatFs/src/ff.c **** WCHAR get_achar (		/* Get a character and advances ptr 1 or 2 */
2547:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR** ptr	/* Pointer to pointer to the SBCS/DBCS/Unicode string */
2548:Middlewares/Third_Party/FatFs/src/ff.c **** )
2549:Middlewares/Third_Party/FatFs/src/ff.c **** {
 1453              		.loc 1 2549 0
 1454              		.cfi_startproc
 1455              		@ args = 0, pretend = 0, frame = 0
 1456              		@ frame_needed = 0, uses_anonymous_args = 0
 1457              		@ link register save eliminated.
 1458              	.LVL202:
2550:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_LFN_UNICODE
2551:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR chr;
2552:Middlewares/Third_Party/FatFs/src/ff.c **** 
2553:Middlewares/Third_Party/FatFs/src/ff.c **** 	chr = (BYTE)*(*ptr)++;					/* Get a byte */
 1459              		.loc 1 2553 0
 1460 0000 0368     		ldr	r3, [r0]
 1461 0002 5A1C     		adds	r2, r3, #1
 1462 0004 0260     		str	r2, [r0]
 1463 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 72


 1464              	.LVL203:
2554:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (IsLower(chr)) chr -= 0x20;			/* To upper ASCII char */
 1465              		.loc 1 2554 0
 1466 0008 A0F16103 		sub	r3, r0, #97
 1467 000c 9BB2     		uxth	r3, r3
 1468 000e 192B     		cmp	r3, #25
 1469 0010 01D8     		bhi	.L151
 1470              		.loc 1 2554 0 is_stmt 0 discriminator 1
 1471 0012 2038     		subs	r0, r0, #32
 1472              	.LVL204:
 1473 0014 80B2     		uxth	r0, r0
 1474              	.LVL205:
 1475              	.L151:
2555:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _EXCVT
2556:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (chr >= 0x80) chr = ExCvt[chr - 0x80];	/* To upper SBCS extended char */
 1476              		.loc 1 2556 0 is_stmt 1
 1477 0016 7F28     		cmp	r0, #127
 1478 0018 02D9     		bls	.L152
 1479              		.loc 1 2556 0 is_stmt 0 discriminator 1
 1480 001a 8038     		subs	r0, r0, #128
 1481              	.LVL206:
 1482 001c 014B     		ldr	r3, .L153
 1483 001e 185C     		ldrb	r0, [r3, r0]	@ zero_extendqisi2
 1484              	.LVL207:
 1485              	.L152:
2557:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2558:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (IsDBCS1(chr) && IsDBCS2(**ptr)) {		/* Get DBC 2nd byte if needed */
2559:Middlewares/Third_Party/FatFs/src/ff.c **** 		chr = chr << 8 | (BYTE)*(*ptr)++;
2560:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2561:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2562:Middlewares/Third_Party/FatFs/src/ff.c **** 	return chr;
2563:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2564:Middlewares/Third_Party/FatFs/src/ff.c **** 	return ff_wtoupper(*(*ptr)++);			/* Get a word and to upper */
2565:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2566:Middlewares/Third_Party/FatFs/src/ff.c **** }
 1486              		.loc 1 2566 0 is_stmt 1
 1487 0020 7047     		bx	lr
 1488              	.L154:
 1489 0022 00BF     		.align	2
 1490              	.L153:
 1491 0024 00000000 		.word	.LANCHOR2
 1492              		.cfi_endproc
 1493              	.LFE180:
 1495              		.section	.text.pattern_matching,"ax",%progbits
 1496              		.align	1
 1497              		.syntax unified
 1498              		.thumb
 1499              		.thumb_func
 1500              		.fpu fpv5-sp-d16
 1502              	pattern_matching:
 1503              	.LFB181:
2567:Middlewares/Third_Party/FatFs/src/ff.c **** 
2568:Middlewares/Third_Party/FatFs/src/ff.c **** 
2569:Middlewares/Third_Party/FatFs/src/ff.c **** static
2570:Middlewares/Third_Party/FatFs/src/ff.c **** int pattern_matching (	/* 0:not matched, 1:matched */
2571:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* pat,	/* Matching pattern */
2572:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* nam,	/* String to be tested */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 73


2573:Middlewares/Third_Party/FatFs/src/ff.c **** 	int skip,			/* Number of pre-skip chars (number of ?s) */
2574:Middlewares/Third_Party/FatFs/src/ff.c **** 	int inf				/* Infinite search (* specified) */
2575:Middlewares/Third_Party/FatFs/src/ff.c **** )
2576:Middlewares/Third_Party/FatFs/src/ff.c **** {
 1504              		.loc 1 2576 0
 1505              		.cfi_startproc
 1506              		@ args = 0, pretend = 0, frame = 16
 1507              		@ frame_needed = 0, uses_anonymous_args = 0
 1508              	.LVL208:
 1509 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1510              	.LCFI19:
 1511              		.cfi_def_cfa_offset 24
 1512              		.cfi_offset 4, -24
 1513              		.cfi_offset 5, -20
 1514              		.cfi_offset 6, -16
 1515              		.cfi_offset 7, -12
 1516              		.cfi_offset 8, -8
 1517              		.cfi_offset 14, -4
 1518 0004 84B0     		sub	sp, sp, #16
 1519              	.LCFI20:
 1520              		.cfi_def_cfa_offset 40
 1521 0006 0746     		mov	r7, r0
 1522 0008 0191     		str	r1, [sp, #4]
 1523 000a 1546     		mov	r5, r2
 1524 000c 9846     		mov	r8, r3
 1525              	.LVL209:
 1526              	.L156:
2577:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR *pp, *np;
2578:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR pc, nc;
2579:Middlewares/Third_Party/FatFs/src/ff.c **** 	int nm, nx;
2580:Middlewares/Third_Party/FatFs/src/ff.c **** 
2581:Middlewares/Third_Party/FatFs/src/ff.c **** 
2582:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (skip--) {				/* Pre-skip name chars */
 1527              		.loc 1 2582 0
 1528 000e 6C1E     		subs	r4, r5, #1
 1529              	.LVL210:
 1530 0010 4DB1     		cbz	r5, .L171
2583:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!get_achar(&nam)) return 0;	/* Branch mismatched if less name chars */
 1531              		.loc 1 2583 0
 1532 0012 01A8     		add	r0, sp, #4
 1533 0014 FFF7FEFF 		bl	get_achar
 1534              	.LVL211:
2582:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!get_achar(&nam)) return 0;	/* Branch mismatched if less name chars */
 1535              		.loc 1 2582 0
 1536 0018 2546     		mov	r5, r4
 1537              		.loc 1 2583 0
 1538 001a 0028     		cmp	r0, #0
 1539 001c F7D1     		bne	.L156
 1540 001e 0020     		movs	r0, #0
 1541              	.LVL212:
 1542              	.L155:
2584:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2585:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!*pat && inf) return 1;		/* (short circuit) */
2586:Middlewares/Third_Party/FatFs/src/ff.c **** 
2587:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
2588:Middlewares/Third_Party/FatFs/src/ff.c **** 		pp = pat; np = nam;			/* Top of pattern and name to match */
2589:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (;;) {
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 74


2590:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (*pp == '?' || *pp == '*') {	/* Wildcard? */
2591:Middlewares/Third_Party/FatFs/src/ff.c **** 				nm = nx = 0;
2592:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {				/* Analyze the wildcard chars */
2593:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (*pp++ == '?') nm++; else nx = 1;
2594:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while (*pp == '?' || *pp == '*');
2595:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (pattern_matching(pp, np, nm, nx)) return 1;	/* Test new branch (recurs upto number of wildc
2596:Middlewares/Third_Party/FatFs/src/ff.c **** 				nc = *np; break;	/* Branch mismatched */
2597:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2598:Middlewares/Third_Party/FatFs/src/ff.c **** 			pc = get_achar(&pp);	/* Get a pattern char */
2599:Middlewares/Third_Party/FatFs/src/ff.c **** 			nc = get_achar(&np);	/* Get a name char */
2600:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (pc != nc) break;	/* Branch mismatched? */
2601:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (pc == 0) return 1;	/* Branch matched? (matched at end of both strings) */
2602:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2603:Middlewares/Third_Party/FatFs/src/ff.c **** 		get_achar(&nam);			/* nam++ */
2604:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (inf && nc);			/* Retry until end of name if infinite search is specified */
2605:Middlewares/Third_Party/FatFs/src/ff.c **** 
2606:Middlewares/Third_Party/FatFs/src/ff.c **** 	return 0;
2607:Middlewares/Third_Party/FatFs/src/ff.c **** }
 1543              		.loc 1 2607 0
 1544 0020 04B0     		add	sp, sp, #16
 1545              	.LCFI21:
 1546              		.cfi_remember_state
 1547              		.cfi_def_cfa_offset 24
 1548              		@ sp needed
 1549 0022 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1550              	.LVL213:
 1551              	.L171:
 1552              	.LCFI22:
 1553              		.cfi_restore_state
2585:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1554              		.loc 1 2585 0
 1555 0026 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 1556 0028 1BBB     		cbnz	r3, .L159
2585:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1557              		.loc 1 2585 0 is_stmt 0 discriminator 1
 1558 002a B8F1000F 		cmp	r8, #0
 1559 002e 20D0     		beq	.L159
2585:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1560              		.loc 1 2585 0
 1561 0030 0120     		movs	r0, #1
 1562 0032 F5E7     		b	.L155
 1563              	.LVL214:
 1564              	.L175:
 1565 0034 2B46     		mov	r3, r5
 1566 0036 2A46     		mov	r2, r5
 1567 0038 05E0     		b	.L162
 1568              	.LVL215:
 1569              	.L173:
2593:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while (*pp == '?' || *pp == '*');
 1570              		.loc 1 2593 0 is_stmt 1 discriminator 1
 1571 003a 0132     		adds	r2, r2, #1
 1572              	.LVL216:
 1573              	.L161:
2594:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (pattern_matching(pp, np, nm, nx)) return 1;	/* Test new branch (recurs upto number of wildc
 1574              		.loc 1 2594 0
 1575 003c 4978     		ldrb	r1, [r1, #1]	@ zero_extendqisi2
 1576 003e 2A29     		cmp	r1, #42
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 75


 1577 0040 18BF     		it	ne
 1578 0042 3F29     		cmpne	r1, #63
 1579 0044 07D1     		bne	.L172
 1580              	.LVL217:
 1581              	.L162:
2593:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while (*pp == '?' || *pp == '*');
 1582              		.loc 1 2593 0
 1583 0046 0399     		ldr	r1, [sp, #12]
 1584 0048 481C     		adds	r0, r1, #1
 1585 004a 0390     		str	r0, [sp, #12]
 1586 004c 0C78     		ldrb	r4, [r1]	@ zero_extendqisi2
 1587 004e 3F2C     		cmp	r4, #63
 1588 0050 F3D0     		beq	.L173
 1589 0052 0123     		movs	r3, #1
 1590              	.LVL218:
 1591 0054 F2E7     		b	.L161
 1592              	.LVL219:
 1593              	.L172:
2595:Middlewares/Third_Party/FatFs/src/ff.c **** 				nc = *np; break;	/* Branch mismatched */
 1594              		.loc 1 2595 0
 1595 0056 0299     		ldr	r1, [sp, #8]
 1596 0058 FFF7D2FF 		bl	pattern_matching
 1597              	.LVL220:
 1598 005c 10BB     		cbnz	r0, .L168
2596:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 1599              		.loc 1 2596 0
 1600 005e 029B     		ldr	r3, [sp, #8]
 1601 0060 1E78     		ldrb	r6, [r3]	@ zero_extendqisi2
 1602              	.LVL221:
 1603              	.L163:
2603:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (inf && nc);			/* Retry until end of name if infinite search is specified */
 1604              		.loc 1 2603 0
 1605 0062 01A8     		add	r0, sp, #4
 1606 0064 FFF7FEFF 		bl	get_achar
 1607              	.LVL222:
2604:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1608              		.loc 1 2604 0
 1609 0068 B8F1000F 		cmp	r8, #0
 1610 006c 18BF     		it	ne
 1611 006e 002E     		cmpne	r6, #0
 1612 0070 16D0     		beq	.L174
 1613              	.LVL223:
 1614              	.L159:
2588:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (;;) {
 1615              		.loc 1 2588 0
 1616 0072 0397     		str	r7, [sp, #12]
 1617 0074 019B     		ldr	r3, [sp, #4]
 1618 0076 0293     		str	r3, [sp, #8]
 1619              	.L164:
2590:Middlewares/Third_Party/FatFs/src/ff.c **** 				nm = nx = 0;
 1620              		.loc 1 2590 0
 1621 0078 039B     		ldr	r3, [sp, #12]
 1622 007a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1623 007c 2A2B     		cmp	r3, #42
 1624 007e 18BF     		it	ne
 1625 0080 3F2B     		cmpne	r3, #63
 1626 0082 D7D0     		beq	.L175
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 76


2598:Middlewares/Third_Party/FatFs/src/ff.c **** 			nc = get_achar(&np);	/* Get a name char */
 1627              		.loc 1 2598 0
 1628 0084 03A8     		add	r0, sp, #12
 1629 0086 FFF7FEFF 		bl	get_achar
 1630              	.LVL224:
 1631 008a 0446     		mov	r4, r0
 1632              	.LVL225:
2599:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (pc != nc) break;	/* Branch mismatched? */
 1633              		.loc 1 2599 0
 1634 008c 02A8     		add	r0, sp, #8
 1635 008e FFF7FEFF 		bl	get_achar
 1636              	.LVL226:
 1637 0092 0646     		mov	r6, r0
 1638              	.LVL227:
2600:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (pc == 0) return 1;	/* Branch matched? (matched at end of both strings) */
 1639              		.loc 1 2600 0
 1640 0094 8442     		cmp	r4, r0
 1641 0096 E4D1     		bne	.L163
2601:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 1642              		.loc 1 2601 0
 1643 0098 002C     		cmp	r4, #0
 1644 009a EDD1     		bne	.L164
 1645 009c 0120     		movs	r0, #1
 1646              	.LVL228:
 1647 009e BFE7     		b	.L155
 1648              	.LVL229:
 1649              	.L174:
2606:Middlewares/Third_Party/FatFs/src/ff.c **** }
 1650              		.loc 1 2606 0
 1651 00a0 2846     		mov	r0, r5
 1652 00a2 BDE7     		b	.L155
 1653              	.LVL230:
 1654              	.L168:
2595:Middlewares/Third_Party/FatFs/src/ff.c **** 				nc = *np; break;	/* Branch mismatched */
 1655              		.loc 1 2595 0
 1656 00a4 0120     		movs	r0, #1
 1657 00a6 BBE7     		b	.L155
 1658              		.cfi_endproc
 1659              	.LFE181:
 1661              		.section	.text.get_ldnumber,"ax",%progbits
 1662              		.align	1
 1663              		.syntax unified
 1664              		.thumb
 1665              		.thumb_func
 1666              		.fpu fpv5-sp-d16
 1668              	get_ldnumber:
 1669              	.LFB184:
2608:Middlewares/Third_Party/FatFs/src/ff.c **** 
2609:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _USE_FIND && _FS_MINIMIZE <= 1 */
2610:Middlewares/Third_Party/FatFs/src/ff.c **** 
2611:Middlewares/Third_Party/FatFs/src/ff.c **** 
2612:Middlewares/Third_Party/FatFs/src/ff.c **** 
2613:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2614:Middlewares/Third_Party/FatFs/src/ff.c **** /* Pick a top segment and create the object name in directory form       */
2615:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2616:Middlewares/Third_Party/FatFs/src/ff.c **** 
2617:Middlewares/Third_Party/FatFs/src/ff.c **** static
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 77


2618:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT create_name (	/* FR_OK: successful, FR_INVALID_NAME: could not create */
2619:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,			/* Pointer to the directory object */
2620:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR** path	/* Pointer to pointer to the segment in the path string */
2621:Middlewares/Third_Party/FatFs/src/ff.c **** )
2622:Middlewares/Third_Party/FatFs/src/ff.c **** {
2623:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
2624:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE b, cf;
2625:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR w, *lfn;
2626:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, ni, si, di;
2627:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR *p;
2628:Middlewares/Third_Party/FatFs/src/ff.c **** 
2629:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create LFN in Unicode */
2630:Middlewares/Third_Party/FatFs/src/ff.c **** 	p = *path; lfn = dp->obj.fs->lfnbuf; si = di = 0;
2631:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
2632:Middlewares/Third_Party/FatFs/src/ff.c **** 		w = p[si++];					/* Get a character */
2633:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w < ' ') break;				/* Break if end of the path name */
2634:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w == '/' || w == '\\') {	/* Break if a separator is found */
2635:Middlewares/Third_Party/FatFs/src/ff.c **** 			while (p[si] == '/' || p[si] == '\\') si++;	/* Skip duplicated separator if exist */
2636:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
2637:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2638:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (di >= _MAX_LFN) return FR_INVALID_NAME;	/* Reject too long name */
2639:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_LFN_UNICODE
2640:Middlewares/Third_Party/FatFs/src/ff.c **** 		w &= 0xFF;
2641:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (IsDBCS1(w)) {				/* Check if it is a DBC 1st byte (always false on SBCS cfg) */
2642:Middlewares/Third_Party/FatFs/src/ff.c **** 			b = (BYTE)p[si++];			/* Get 2nd byte */
2643:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = (w << 8) + b;			/* Create a DBC */
2644:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!IsDBCS2(b)) return FR_INVALID_NAME;	/* Reject invalid sequence */
2645:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2646:Middlewares/Third_Party/FatFs/src/ff.c **** 		w = ff_convert(w, 1);			/* Convert ANSI/OEM to Unicode */
2647:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!w) return FR_INVALID_NAME;	/* Reject invalid code */
2648:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2649:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w < 0x80 && chk_chr("\"*:<>\?|\x7F", w)) return FR_INVALID_NAME;	/* Reject illegal characters
2650:Middlewares/Third_Party/FatFs/src/ff.c **** 		lfn[di++] = w;					/* Store the Unicode character */
2651:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2652:Middlewares/Third_Party/FatFs/src/ff.c **** 	*path = &p[si];						/* Return pointer to the next segment */
2653:Middlewares/Third_Party/FatFs/src/ff.c **** 	cf = (w < ' ') ? NS_LAST : 0;		/* Set last segment flag if end of the path */
2654:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH != 0
2655:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((di == 1 && lfn[di - 1] == '.') ||
2656:Middlewares/Third_Party/FatFs/src/ff.c **** 		(di == 2 && lfn[di - 1] == '.' && lfn[di - 2] == '.')) {	/* Is this segment a dot name? */
2657:Middlewares/Third_Party/FatFs/src/ff.c **** 		lfn[di] = 0;
2658:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = 0; i < 11; i++)		/* Create dot name for SFN entry */
2659:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->fn[i] = (i < di) ? '.' : ' ';
2660:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->fn[i] = cf | NS_DOT;		/* This is a dot entry */
2661:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_OK;
2662:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2663:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2664:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (di) {						/* Snip off trailing spaces and dots if exist */
2665:Middlewares/Third_Party/FatFs/src/ff.c **** 		w = lfn[di - 1];
2666:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w != ' ' && w != '.') break;
2667:Middlewares/Third_Party/FatFs/src/ff.c **** 		di--;
2668:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2669:Middlewares/Third_Party/FatFs/src/ff.c **** 	lfn[di] = 0;						/* LFN is created */
2670:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (di == 0) return FR_INVALID_NAME;	/* Reject nul name */
2671:Middlewares/Third_Party/FatFs/src/ff.c **** 
2672:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create SFN in directory form */
2673:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_set(dp->fn, ' ', 11);
2674:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (si = 0; lfn[si] == ' ' || lfn[si] == '.'; si++) ;	/* Strip leading spaces and dots */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 78


2675:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (si) cf |= NS_LOSS | NS_LFN;
2676:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (di && lfn[di - 1] != '.') di--;	/* Find extension (di<=si: no extension) */
2677:Middlewares/Third_Party/FatFs/src/ff.c **** 
2678:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = b = 0; ni = 8;
2679:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
2680:Middlewares/Third_Party/FatFs/src/ff.c **** 		w = lfn[si++];					/* Get an LFN character */
2681:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!w) break;					/* Break on end of the LFN */
2682:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w == ' ' || (w == '.' && si != di)) {	/* Remove spaces and dots */
2683:Middlewares/Third_Party/FatFs/src/ff.c **** 			cf |= NS_LOSS | NS_LFN; continue;
2684:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2685:Middlewares/Third_Party/FatFs/src/ff.c **** 
2686:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i >= ni || si == di) {		/* Extension or end of SFN */
2687:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ni == 11) {				/* Long extension */
2688:Middlewares/Third_Party/FatFs/src/ff.c **** 				cf |= NS_LOSS | NS_LFN; break;
2689:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2690:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (si != di) cf |= NS_LOSS | NS_LFN;	/* Out of 8.3 format */
2691:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (si > di) break;			/* No extension */
2692:Middlewares/Third_Party/FatFs/src/ff.c **** 			si = di; i = 8; ni = 11;	/* Enter extension section */
2693:Middlewares/Third_Party/FatFs/src/ff.c **** 			b <<= 2; continue;
2694:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2695:Middlewares/Third_Party/FatFs/src/ff.c **** 
2696:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w >= 0x80) {				/* Non ASCII character */
2697:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _EXCVT
2698:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = ff_convert(w, 0);		/* Unicode -> OEM code */
2699:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (w) w = ExCvt[w - 0x80];	/* Convert extended character to upper (SBCS) */
2700:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2701:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = ff_convert(ff_wtoupper(w), 0);	/* Upper converted Unicode -> OEM code */
2702:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2703:Middlewares/Third_Party/FatFs/src/ff.c **** 			cf |= NS_LFN;				/* Force create LFN entry */
2704:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2705:Middlewares/Third_Party/FatFs/src/ff.c **** 
2706:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_DF1S && w >= 0x100) {		/* Is this DBC? (always false at SBCS cfg) */
2707:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i >= ni - 1) {
2708:Middlewares/Third_Party/FatFs/src/ff.c **** 				cf |= NS_LOSS | NS_LFN; i = ni; continue;
2709:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2710:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->fn[i++] = (BYTE)(w >> 8);
2711:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {						/* SBC */
2712:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!w || chk_chr("+,;=[]", w)) {	/* Replace illegal characters for SFN */
2713:Middlewares/Third_Party/FatFs/src/ff.c **** 				w = '_'; cf |= NS_LOSS | NS_LFN;/* Lossy conversion */
2714:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
2715:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (IsUpper(w)) {		/* ASCII large capital */
2716:Middlewares/Third_Party/FatFs/src/ff.c **** 					b |= 2;
2717:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
2718:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (IsLower(w)) {	/* ASCII small capital */
2719:Middlewares/Third_Party/FatFs/src/ff.c **** 						b |= 1; w -= 0x20;
2720:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
2721:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2722:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2723:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2724:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->fn[i++] = (BYTE)w;
2725:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2726:Middlewares/Third_Party/FatFs/src/ff.c **** 
2727:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (dp->fn[0] == DDEM) dp->fn[0] = RDDEM;	/* If the first character collides with DDEM, replace it
2728:Middlewares/Third_Party/FatFs/src/ff.c **** 
2729:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (ni == 8) b <<= 2;
2730:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((b & 0x0C) == 0x0C || (b & 0x03) == 0x03) cf |= NS_LFN;	/* Create LFN entry when there are com
2731:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(cf & NS_LFN)) {						/* When LFN is in 8.3 format without extended character, NT flags are c
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 79


2732:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((b & 0x03) == 0x01) cf |= NS_EXT;	/* NT flag (Extension has only small capital) */
2733:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((b & 0x0C) == 0x04) cf |= NS_BODY;	/* NT flag (Filename has only small capital) */
2734:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2735:Middlewares/Third_Party/FatFs/src/ff.c **** 
2736:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->fn[NSFLAG] = cf;	/* SFN is created */
2737:Middlewares/Third_Party/FatFs/src/ff.c **** 
2738:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
2739:Middlewares/Third_Party/FatFs/src/ff.c **** 
2740:Middlewares/Third_Party/FatFs/src/ff.c **** 
2741:Middlewares/Third_Party/FatFs/src/ff.c **** #else	/* _USE_LFN != 0 : Non-LFN configuration */
2742:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE c, d, *sfn;
2743:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT ni, si, i;
2744:Middlewares/Third_Party/FatFs/src/ff.c **** 	const char *p;
2745:Middlewares/Third_Party/FatFs/src/ff.c **** 
2746:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create file name in directory form */
2747:Middlewares/Third_Party/FatFs/src/ff.c **** 	p = *path; sfn = dp->fn;
2748:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_set(sfn, ' ', 11);
2749:Middlewares/Third_Party/FatFs/src/ff.c **** 	si = i = 0; ni = 8;
2750:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH != 0
2751:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (p[si] == '.') { /* Is this a dot entry? */
2752:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (;;) {
2753:Middlewares/Third_Party/FatFs/src/ff.c **** 			c = (BYTE)p[si++];
2754:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (c != '.' || si >= 3) break;
2755:Middlewares/Third_Party/FatFs/src/ff.c **** 			sfn[i++] = c;
2756:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2757:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c != '/' && c != '\\' && c > ' ') return FR_INVALID_NAME;
2758:Middlewares/Third_Party/FatFs/src/ff.c **** 		*path = p + si;								/* Return pointer to the next segment */
2759:Middlewares/Third_Party/FatFs/src/ff.c **** 		sfn[NSFLAG] = (c <= ' ') ? NS_LAST | NS_DOT : NS_DOT;	/* Set last segment flag if end of the path
2760:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_OK;
2761:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2762:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2763:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
2764:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = (BYTE)p[si++];
2765:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c <= ' ') break; 			/* Break if end of the path name */
2766:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == '/' || c == '\\') {	/* Break if a separator is found */
2767:Middlewares/Third_Party/FatFs/src/ff.c **** 			while (p[si] == '/' || p[si] == '\\') si++;	/* Skip duplicated separator if exist */
2768:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
2769:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2770:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == '.' || i >= ni) {		/* End of body or over size? */
2771:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ni == 11 || c != '.') return FR_INVALID_NAME;	/* Over size or invalid dot */
2772:Middlewares/Third_Party/FatFs/src/ff.c **** 			i = 8; ni = 11;				/* Goto extension */
2773:Middlewares/Third_Party/FatFs/src/ff.c **** 			continue;
2774:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2775:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c >= 0x80) {				/* Extended character? */
2776:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _EXCVT
2777:Middlewares/Third_Party/FatFs/src/ff.c **** 			c = ExCvt[c - 0x80];		/* To upper extended characters (SBCS cfg) */
2778:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2779:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_DF1S
2780:Middlewares/Third_Party/FatFs/src/ff.c **** 			return FR_INVALID_NAME;		/* Reject extended characters (ASCII only cfg) */
2781:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2782:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2783:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2784:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (IsDBCS1(c)) {				/* Check if it is a DBC 1st byte (always false at SBCS cfg.) */
2785:Middlewares/Third_Party/FatFs/src/ff.c **** 			d = (BYTE)p[si++];			/* Get 2nd byte */
2786:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!IsDBCS2(d) || i >= ni - 1) return FR_INVALID_NAME;	/* Reject invalid DBC */
2787:Middlewares/Third_Party/FatFs/src/ff.c **** 			sfn[i++] = c;
2788:Middlewares/Third_Party/FatFs/src/ff.c **** 			sfn[i++] = d;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 80


2789:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {						/* SBC */
2790:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (chk_chr("\"*+,:;<=>\?[]|\x7F", c)) return FR_INVALID_NAME;	/* Reject illegal chrs for SFN */
2791:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (IsLower(c)) c -= 0x20;	/* To upper */
2792:Middlewares/Third_Party/FatFs/src/ff.c **** 			sfn[i++] = c;
2793:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2794:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2795:Middlewares/Third_Party/FatFs/src/ff.c **** 	*path = p + si;						/* Return pointer to the next segment */
2796:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (i == 0) return FR_INVALID_NAME;	/* Reject nul string */
2797:Middlewares/Third_Party/FatFs/src/ff.c **** 
2798:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (sfn[0] == DDEM) sfn[0] = RDDEM;	/* If the first character collides with DDEM, replace it with 
2799:Middlewares/Third_Party/FatFs/src/ff.c **** 	sfn[NSFLAG] = (c <= ' ') ? NS_LAST : 0;		/* Set last segment flag if end of the path */
2800:Middlewares/Third_Party/FatFs/src/ff.c **** 
2801:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
2802:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _USE_LFN != 0 */
2803:Middlewares/Third_Party/FatFs/src/ff.c **** }
2804:Middlewares/Third_Party/FatFs/src/ff.c **** 
2805:Middlewares/Third_Party/FatFs/src/ff.c **** 
2806:Middlewares/Third_Party/FatFs/src/ff.c **** 
2807:Middlewares/Third_Party/FatFs/src/ff.c **** 
2808:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2809:Middlewares/Third_Party/FatFs/src/ff.c **** /* Follow a file path                                                    */
2810:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2811:Middlewares/Third_Party/FatFs/src/ff.c **** 
2812:Middlewares/Third_Party/FatFs/src/ff.c **** static
2813:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT follow_path (	/* FR_OK(0): successful, !=0: error code */
2814:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,			/* Directory object to return last directory and found object */
2815:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path	/* Full-path string to find a file or directory */
2816:Middlewares/Third_Party/FatFs/src/ff.c **** )
2817:Middlewares/Third_Party/FatFs/src/ff.c **** {
2818:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
2819:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE ns;
2820:Middlewares/Third_Party/FatFs/src/ff.c **** 	_FDID *obj = &dp->obj;
2821:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = obj->fs;
2822:Middlewares/Third_Party/FatFs/src/ff.c **** 
2823:Middlewares/Third_Party/FatFs/src/ff.c **** 
2824:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH != 0
2825:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (*path != '/' && *path != '\\') {	/* Without heading separator */
2826:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->sclust = fs->cdir;				/* Start from current directory */
2827:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else
2828:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2829:Middlewares/Third_Party/FatFs/src/ff.c **** 	{										/* With heading separator */
2830:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (*path == '/' || *path == '\\') path++;	/* Strip heading separator */
2831:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->sclust = 0;					/* Start from root directory */
2832:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2833:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
2834:Middlewares/Third_Party/FatFs/src/ff.c **** 	obj->n_frag = 0;	/* Invalidate last fragment counter of the object */
2835:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH != 0
2836:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_EXFAT && obj->sclust) {	/* Retrieve the sub-directory status if needed */
2837:Middlewares/Third_Party/FatFs/src/ff.c **** 		DIR dj;
2838:Middlewares/Third_Party/FatFs/src/ff.c **** 
2839:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->c_scl = fs->cdc_scl;
2840:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->c_size = fs->cdc_size;
2841:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->c_ofs = fs->cdc_ofs;
2842:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = load_obj_dir(&dj, obj);
2843:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) return res;
2844:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->objsize = ld_dword(fs->dirbuf + XDIR_FileSize);
2845:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->stat = fs->dirbuf[XDIR_GenFlags] & 2;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 81


2846:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2847:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2848:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2849:Middlewares/Third_Party/FatFs/src/ff.c **** 
2850:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((UINT)*path < ' ') {				/* Null path name is the origin directory itself */
2851:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->fn[NSFLAG] = NS_NONAME;
2852:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_sdi(dp, 0);
2853:Middlewares/Third_Party/FatFs/src/ff.c **** 
2854:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {								/* Follow path */
2855:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (;;) {
2856:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = create_name(dp, &path);	/* Get a segment name of the path */
2857:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
2858:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_find(dp);				/* Find an object with the segment name */
2859:Middlewares/Third_Party/FatFs/src/ff.c **** 			ns = dp->fn[NSFLAG];
2860:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) {				/* Failed to find the object */
2861:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) {	/* Object is not found */
2862:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (_FS_RPATH && (ns & NS_DOT)) {	/* If dot entry is not exist, stay there */
2863:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (!(ns & NS_LAST)) continue;	/* Continue to follow if not last segment */
2864:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->fn[NSFLAG] = NS_NONAME;
2865:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = FR_OK;
2866:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else {							/* Could not find the object */
2867:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (!(ns & NS_LAST)) res = FR_NO_PATH;	/* Adjust error code if not last segment */
2868:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
2869:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2870:Middlewares/Third_Party/FatFs/src/ff.c **** 				break;
2871:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2872:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ns & NS_LAST) break;			/* Last segment matched. Function completed. */
2873:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Get into the sub-directory */
2874:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!(obj->attr & AM_DIR)) {		/* It is not a sub-directory and cannot follow */
2875:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_NO_PATH; break;
2876:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2877:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
2878:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->fs_type == FS_EXFAT) {		/* Save containing directory information for next dir */
2879:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->c_scl = obj->sclust;
2880:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->c_size = ((DWORD)obj->objsize & 0xFFFFFF00) | obj->stat;
2881:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->c_ofs = dp->blk_ofs;
2882:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->sclust = ld_dword(fs->dirbuf + XDIR_FstClus);	/* Open next directory */
2883:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->stat = fs->dirbuf[XDIR_GenFlags] & 2;
2884:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->objsize = ld_qword(fs->dirbuf + XDIR_FileSize);
2885:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else
2886:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2887:Middlewares/Third_Party/FatFs/src/ff.c **** 			{
2888:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->sclust = ld_clust(fs, fs->win + dp->dptr % SS(fs));	/* Open next directory */
2889:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2890:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2891:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2892:Middlewares/Third_Party/FatFs/src/ff.c **** 
2893:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
2894:Middlewares/Third_Party/FatFs/src/ff.c **** }
2895:Middlewares/Third_Party/FatFs/src/ff.c **** 
2896:Middlewares/Third_Party/FatFs/src/ff.c **** 
2897:Middlewares/Third_Party/FatFs/src/ff.c **** 
2898:Middlewares/Third_Party/FatFs/src/ff.c **** 
2899:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2900:Middlewares/Third_Party/FatFs/src/ff.c **** /* Get logical drive number from path name                               */
2901:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2902:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 82


2903:Middlewares/Third_Party/FatFs/src/ff.c **** static
2904:Middlewares/Third_Party/FatFs/src/ff.c **** int get_ldnumber (		/* Returns logical drive number (-1:invalid drive) */
2905:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR** path	/* Pointer to pointer to the path name */
2906:Middlewares/Third_Party/FatFs/src/ff.c **** )
2907:Middlewares/Third_Party/FatFs/src/ff.c **** {
 1670              		.loc 1 2907 0
 1671              		.cfi_startproc
 1672              		@ args = 0, pretend = 0, frame = 0
 1673              		@ frame_needed = 0, uses_anonymous_args = 0
 1674              		@ link register save eliminated.
 1675              	.LVL231:
2908:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR *tp, *tt;
2909:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
2910:Middlewares/Third_Party/FatFs/src/ff.c **** 	int vol = -1;
2911:Middlewares/Third_Party/FatFs/src/ff.c **** #if _STR_VOLUME_ID		/* Find string drive id */
2912:Middlewares/Third_Party/FatFs/src/ff.c **** 	static const char* const volid[] = {_VOLUME_STRS};
2913:Middlewares/Third_Party/FatFs/src/ff.c **** 	const char *sp;
2914:Middlewares/Third_Party/FatFs/src/ff.c **** 	char c;
2915:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR tc;
2916:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2917:Middlewares/Third_Party/FatFs/src/ff.c **** 
2918:Middlewares/Third_Party/FatFs/src/ff.c **** 
2919:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (*path) {	/* If the pointer is not a null */
 1676              		.loc 1 2919 0
 1677 0000 0168     		ldr	r1, [r0]
 1678 0002 09B1     		cbz	r1, .L188
 1679 0004 0A46     		mov	r2, r1
 1680 0006 03E0     		b	.L177
 1681              	.L188:
2910:Middlewares/Third_Party/FatFs/src/ff.c **** #if _STR_VOLUME_ID		/* Find string drive id */
 1682              		.loc 1 2910 0
 1683 0008 4FF0FF33 		mov	r3, #-1
 1684 000c 09E0     		b	.L185
 1685              	.LVL232:
 1686              	.L179:
2920:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (tt = *path; (UINT)*tt >= (_USE_LFN ? ' ' : '!') && *tt != ':'; tt++) ;	/* Find ':' in the pa
 1687              		.loc 1 2920 0 discriminator 3
 1688 000e 0132     		adds	r2, r2, #1
 1689              	.LVL233:
 1690              	.L177:
 1691              		.loc 1 2920 0 is_stmt 0 discriminator 1
 1692 0010 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1693 0012 3A2B     		cmp	r3, #58
 1694 0014 18BF     		it	ne
 1695 0016 1F2B     		cmpne	r3, #31
 1696 0018 F9D8     		bhi	.L179
2921:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (*tt == ':') {	/* If a ':' is exist in the path name */
 1697              		.loc 1 2921 0 is_stmt 1
 1698 001a 3A2B     		cmp	r3, #58
 1699 001c 03D0     		beq	.L189
2922:Middlewares/Third_Party/FatFs/src/ff.c **** 			tp = *path;
2923:Middlewares/Third_Party/FatFs/src/ff.c **** 			i = *tp++ - '0';
2924:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i < 10 && tp == tt) {	/* Is there a numeric drive id? */
2925:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (i < _VOLUMES) {	/* If a drive id is found, get the value and strip it */
2926:Middlewares/Third_Party/FatFs/src/ff.c **** 					vol = (int)i;
2927:Middlewares/Third_Party/FatFs/src/ff.c **** 					*path = ++tt;
2928:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 83


2929:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2930:Middlewares/Third_Party/FatFs/src/ff.c **** #if _STR_VOLUME_ID
2931:Middlewares/Third_Party/FatFs/src/ff.c **** 			 else {	/* No numeric drive number, find string drive id */
2932:Middlewares/Third_Party/FatFs/src/ff.c **** 				i = 0; tt++;
2933:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {
2934:Middlewares/Third_Party/FatFs/src/ff.c **** 					sp = volid[i]; tp = *path;
2935:Middlewares/Third_Party/FatFs/src/ff.c **** 					do {	/* Compare a string drive id with path name */
2936:Middlewares/Third_Party/FatFs/src/ff.c **** 						c = *sp++; tc = *tp++;
2937:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (IsLower(tc)) tc -= 0x20;
2938:Middlewares/Third_Party/FatFs/src/ff.c **** 					} while (c && (TCHAR)c == tc);
2939:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while ((c || tp != tt) && ++i < _VOLUMES);	/* Repeat for each id until pattern match */
2940:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (i < _VOLUMES) {	/* If a drive id is found, get the value and strip it */
2941:Middlewares/Third_Party/FatFs/src/ff.c **** 					vol = (int)i;
2942:Middlewares/Third_Party/FatFs/src/ff.c **** 					*path = tt;
2943:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2944:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2945:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2946:Middlewares/Third_Party/FatFs/src/ff.c **** 			return vol;
2947:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2948:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH != 0 && _VOLUMES >= 2
2949:Middlewares/Third_Party/FatFs/src/ff.c **** 		vol = CurrVol;	/* Current drive */
 1700              		.loc 1 2949 0
 1701 001e 0D4B     		ldr	r3, .L190
 1702 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1703              	.LVL234:
 1704              	.L185:
2950:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2951:Middlewares/Third_Party/FatFs/src/ff.c **** 		vol = 0;		/* Drive 0 */
2952:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2953:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2954:Middlewares/Third_Party/FatFs/src/ff.c **** 	return vol;
2955:Middlewares/Third_Party/FatFs/src/ff.c **** }
 1705              		.loc 1 2955 0
 1706 0022 1846     		mov	r0, r3
 1707              	.LVL235:
 1708 0024 7047     		bx	lr
 1709              	.LVL236:
 1710              	.L189:
2907:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR *tp, *tt;
 1711              		.loc 1 2907 0
 1712 0026 10B4     		push	{r4}
 1713              	.LCFI23:
 1714              		.cfi_def_cfa_offset 4
 1715              		.cfi_offset 4, -4
 1716              	.LVL237:
2923:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i < 10 && tp == tt) {	/* Is there a numeric drive id? */
 1717              		.loc 1 2923 0
 1718 0028 4C1C     		adds	r4, r1, #1
 1719              	.LVL238:
 1720 002a 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 1721 002c 303B     		subs	r3, r3, #48
 1722              	.LVL239:
2924:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (i < _VOLUMES) {	/* If a drive id is found, get the value and strip it */
 1723              		.loc 1 2924 0
 1724 002e 092B     		cmp	r3, #9
 1725 0030 98BF     		it	ls
 1726 0032 A242     		cmpls	r2, r4
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 84


 1727 0034 07D1     		bne	.L182
2925:Middlewares/Third_Party/FatFs/src/ff.c **** 					vol = (int)i;
 1728              		.loc 1 2925 0
 1729 0036 012B     		cmp	r3, #1
 1730 0038 08D8     		bhi	.L183
 1731              	.LVL240:
2927:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 1732              		.loc 1 2927 0
 1733 003a 0132     		adds	r2, r2, #1
 1734              	.LVL241:
 1735 003c 0260     		str	r2, [r0]
 1736              	.LVL242:
 1737              	.L176:
 1738              		.loc 1 2955 0
 1739 003e 1846     		mov	r0, r3
 1740              	.LVL243:
 1741 0040 5DF8044B 		ldr	r4, [sp], #4
 1742              	.LCFI24:
 1743              		.cfi_remember_state
 1744              		.cfi_restore 4
 1745              		.cfi_def_cfa_offset 0
 1746              	.LVL244:
 1747 0044 7047     		bx	lr
 1748              	.LVL245:
 1749              	.L182:
 1750              	.LCFI25:
 1751              		.cfi_restore_state
2910:Middlewares/Third_Party/FatFs/src/ff.c **** #if _STR_VOLUME_ID		/* Find string drive id */
 1752              		.loc 1 2910 0
 1753 0046 4FF0FF33 		mov	r3, #-1
 1754              	.LVL246:
 1755 004a F8E7     		b	.L176
 1756              	.LVL247:
 1757              	.L183:
 1758 004c 4FF0FF33 		mov	r3, #-1
 1759              	.LVL248:
 1760 0050 F5E7     		b	.L176
 1761              	.L191:
 1762 0052 00BF     		.align	2
 1763              	.L190:
 1764 0054 00000000 		.word	.LANCHOR3
 1765              		.cfi_endproc
 1766              	.LFE184:
 1768              		.section	.text.putc_init,"ax",%progbits
 1769              		.align	1
 1770              		.syntax unified
 1771              		.thumb
 1772              		.thumb_func
 1773              		.fpu fpv5-sp-d16
 1775              	putc_init:
 1776              	.LFB213:
2956:Middlewares/Third_Party/FatFs/src/ff.c **** 
2957:Middlewares/Third_Party/FatFs/src/ff.c **** 
2958:Middlewares/Third_Party/FatFs/src/ff.c **** 
2959:Middlewares/Third_Party/FatFs/src/ff.c **** 
2960:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2961:Middlewares/Third_Party/FatFs/src/ff.c **** /* Load a sector and check if it is an FAT boot sector                   */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 85


2962:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2963:Middlewares/Third_Party/FatFs/src/ff.c **** 
2964:Middlewares/Third_Party/FatFs/src/ff.c **** static
2965:Middlewares/Third_Party/FatFs/src/ff.c **** BYTE check_fs (	/* 0:FAT, 1:exFAT, 2:Valid BS but not FAT, 3:Not a BS, 4:Disk error */
2966:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,	/* File system object */
2967:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD sect	/* Sector# (lba) to load and check if it is an FAT-VBR or not */
2968:Middlewares/Third_Party/FatFs/src/ff.c **** )
2969:Middlewares/Third_Party/FatFs/src/ff.c **** {
2970:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->wflag = 0; fs->winsect = 0xFFFFFFFF;		/* Invaidate window */
2971:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (move_window(fs, sect) != FR_OK) return 4;	/* Load boot record */
2972:Middlewares/Third_Party/FatFs/src/ff.c **** 
2973:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (ld_word(fs->win + BS_55AA) != 0xAA55) return 3;	/* Check boot record signature (always placed 
2974:Middlewares/Third_Party/FatFs/src/ff.c **** 
2975:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->win[BS_JmpBoot] == 0xE9 || (fs->win[BS_JmpBoot] == 0xEB && fs->win[BS_JmpBoot + 2] == 0x90
2976:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((ld_dword(fs->win + BS_FilSysType) & 0xFFFFFF) == 0x544146) return 0;	/* Check "FAT" string *
2977:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ld_dword(fs->win + BS_FilSysType32) == 0x33544146) return 0;			/* Check "FAT3" string */
2978:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2979:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
2980:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!mem_cmp(fs->win + BS_JmpBoot, "\xEB\x76\x90" "EXFAT   ", 11)) return 1;
2981:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2982:Middlewares/Third_Party/FatFs/src/ff.c **** 	return 2;
2983:Middlewares/Third_Party/FatFs/src/ff.c **** }
2984:Middlewares/Third_Party/FatFs/src/ff.c **** 
2985:Middlewares/Third_Party/FatFs/src/ff.c **** 
2986:Middlewares/Third_Party/FatFs/src/ff.c **** 
2987:Middlewares/Third_Party/FatFs/src/ff.c **** 
2988:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2989:Middlewares/Third_Party/FatFs/src/ff.c **** /* Find logical drive and check if the volume is mounted                 */
2990:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2991:Middlewares/Third_Party/FatFs/src/ff.c **** 
2992:Middlewares/Third_Party/FatFs/src/ff.c **** static
2993:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT find_volume (	/* FR_OK(0): successful, !=0: any error occurred */
2994:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR** path,	/* Pointer to pointer to the path name (drive number) */
2995:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS** rfs,		/* Pointer to pointer to the found file system object */
2996:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE mode			/* !=0: Check write protection for write access */
2997:Middlewares/Third_Party/FatFs/src/ff.c **** )
2998:Middlewares/Third_Party/FatFs/src/ff.c **** {
2999:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE fmt, *pt;
3000:Middlewares/Third_Party/FatFs/src/ff.c **** 	int vol;
3001:Middlewares/Third_Party/FatFs/src/ff.c **** 	DSTATUS stat;
3002:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD bsect, fasize, tsect, sysect, nclst, szbfat, br[4];
3003:Middlewares/Third_Party/FatFs/src/ff.c **** 	WORD nrsv;
3004:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
3005:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
3006:Middlewares/Third_Party/FatFs/src/ff.c **** 
3007:Middlewares/Third_Party/FatFs/src/ff.c **** 
3008:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive number */
3009:Middlewares/Third_Party/FatFs/src/ff.c **** 	*rfs = 0;
3010:Middlewares/Third_Party/FatFs/src/ff.c **** 	vol = get_ldnumber(path);
3011:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
3012:Middlewares/Third_Party/FatFs/src/ff.c **** 
3013:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Check if the file system object is valid or not */
3014:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs = FatFs[vol];					/* Get pointer to the file system object */
3015:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!fs) return FR_NOT_ENABLED;		/* Is the file system object available? */
3016:Middlewares/Third_Party/FatFs/src/ff.c **** 
3017:Middlewares/Third_Party/FatFs/src/ff.c **** 	ENTER_FF(fs);						/* Lock the volume */
3018:Middlewares/Third_Party/FatFs/src/ff.c **** 	*rfs = fs;							/* Return pointer to the file system object */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 86


3019:Middlewares/Third_Party/FatFs/src/ff.c **** 
3020:Middlewares/Third_Party/FatFs/src/ff.c **** 	mode &= (BYTE)~FA_READ;				/* Desired access mode, write access or not */
3021:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type) {					/* If the volume has been mounted */
3022:Middlewares/Third_Party/FatFs/src/ff.c **** 		stat = disk_status(fs->drv);
3023:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!(stat & STA_NOINIT)) {		/* and the physical drive is kept initialized */
3024:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!_FS_READONLY && mode && (stat & STA_PROTECT)) {	/* Check write protection if needed */
3025:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_WRITE_PROTECTED;
3026:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3027:Middlewares/Third_Party/FatFs/src/ff.c **** 			return FR_OK;				/* The file system object is valid */
3028:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3029:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3030:Middlewares/Third_Party/FatFs/src/ff.c **** 
3031:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* The file system object is not valid. */
3032:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Following code attempts to mount the volume. (analyze BPB and initialize the fs object) */
3033:Middlewares/Third_Party/FatFs/src/ff.c **** 
3034:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->fs_type = 0;					/* Clear the file system object */
3035:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->drv = LD2PD(vol);				/* Bind the logical drive and a physical drive */
3036:Middlewares/Third_Party/FatFs/src/ff.c **** 	stat = disk_initialize(fs->drv);	/* Initialize the physical drive */
3037:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_NOINIT) { 			/* Check if the initialization succeeded */
3038:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_NOT_READY;			/* Failed to initialize due to no medium or hard error */
3039:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3040:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!_FS_READONLY && mode && (stat & STA_PROTECT)) { /* Check disk write protection if needed */
3041:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_WRITE_PROTECTED;
3042:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3043:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS != _MIN_SS					/* Get sector size (multiple sector size cfg only) */
3044:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (disk_ioctl(fs->drv, GET_SECTOR_SIZE, &SS(fs)) != RES_OK) return FR_DISK_ERR;
3045:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (SS(fs) > _MAX_SS || SS(fs) < _MIN_SS || (SS(fs) & (SS(fs) - 1))) return FR_DISK_ERR;
3046:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3047:Middlewares/Third_Party/FatFs/src/ff.c **** 
3048:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Find an FAT partition on the drive. Supports only generic partitioning rules, FDISK and SFD. */
3049:Middlewares/Third_Party/FatFs/src/ff.c **** 	bsect = 0;
3050:Middlewares/Third_Party/FatFs/src/ff.c **** 	fmt = check_fs(fs, bsect);			/* Load sector 0 and check if it is an FAT-VBR as SFD */
3051:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == 2 || (fmt < 2 && LD2PT(vol) != 0)) {	/* Not an FAT-VBR or forced partition number */
3052:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = 0; i < 4; i++) {		/* Get partition offset */
3053:Middlewares/Third_Party/FatFs/src/ff.c **** 			pt = fs->win + (MBR_Table + i * SZ_PTE);
3054:Middlewares/Third_Party/FatFs/src/ff.c **** 			br[i] = pt[PTE_System] ? ld_dword(pt + PTE_StLba) : 0;
3055:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3056:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = LD2PT(vol);					/* Partition number: 0:auto, 1-4:forced */
3057:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i) i--;
3058:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {							/* Find an FAT volume */
3059:Middlewares/Third_Party/FatFs/src/ff.c **** 			bsect = br[i];
3060:Middlewares/Third_Party/FatFs/src/ff.c **** 			fmt = bsect ? check_fs(fs, bsect) : 3;	/* Check the partition */
3061:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (LD2PT(vol) == 0 && fmt >= 2 && ++i < 4);
3062:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3063:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == 4) return FR_DISK_ERR;		/* An error occured in the disk I/O layer */
3064:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt >= 2) return FR_NO_FILESYSTEM;	/* No FAT volume is found */
3065:Middlewares/Third_Party/FatFs/src/ff.c **** 
3066:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* An FAT volume is found (bsect). Following code initializes the file system object */
3067:Middlewares/Third_Party/FatFs/src/ff.c **** 
3068:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
3069:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == 1) {
3070:Middlewares/Third_Party/FatFs/src/ff.c **** 		QWORD maxlba;
3071:Middlewares/Third_Party/FatFs/src/ff.c **** 
3072:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = BPB_ZeroedEx; i < BPB_ZeroedEx + 53 && fs->win[i] == 0; i++) ;	/* Check zero filler */
3073:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i < BPB_ZeroedEx + 53) return FR_NO_FILESYSTEM;
3074:Middlewares/Third_Party/FatFs/src/ff.c **** 
3075:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ld_word(fs->win + BPB_FSVerEx) != 0x100) return FR_NO_FILESYSTEM;	/* Check exFAT revision (Mu
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 87


3076:Middlewares/Third_Party/FatFs/src/ff.c **** 
3077:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (1 << fs->win[BPB_BytsPerSecEx] != SS(fs)) {	/* (BPB_BytsPerSecEx must be equal to the physica
3078:Middlewares/Third_Party/FatFs/src/ff.c **** 			return FR_NO_FILESYSTEM;
3079:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3080:Middlewares/Third_Party/FatFs/src/ff.c **** 
3081:Middlewares/Third_Party/FatFs/src/ff.c **** 		maxlba = ld_qword(fs->win + BPB_TotSecEx) + bsect;	/* Last LBA + 1 of the volume */
3082:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (maxlba >= 0x100000000) return FR_NO_FILESYSTEM;	/* (It cannot be handled in 32-bit LBA) */
3083:Middlewares/Third_Party/FatFs/src/ff.c **** 
3084:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fsize = ld_dword(fs->win + BPB_FatSzEx);	/* Number of sectors per FAT */
3085:Middlewares/Third_Party/FatFs/src/ff.c **** 
3086:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->n_fats = fs->win[BPB_NumFATsEx];			/* Number of FATs */
3087:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->n_fats != 1) return FR_NO_FILESYSTEM;	/* (Supports only 1 FAT) */
3088:Middlewares/Third_Party/FatFs/src/ff.c **** 
3089:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->csize = 1 << fs->win[BPB_SecPerClusEx];		/* Cluster size */
3090:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->csize == 0)	return FR_NO_FILESYSTEM;	/* (Must be 1..32768) */
3091:Middlewares/Third_Party/FatFs/src/ff.c **** 
3092:Middlewares/Third_Party/FatFs/src/ff.c **** 		nclst = ld_dword(fs->win + BPB_NumClusEx);		/* Number of clusters */
3093:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nclst > MAX_EXFAT) return FR_NO_FILESYSTEM;	/* (Too many clusters) */
3094:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->n_fatent = nclst + 2;
3095:Middlewares/Third_Party/FatFs/src/ff.c **** 
3096:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Boundaries and Limits */
3097:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->volbase = bsect;
3098:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->database = bsect + ld_dword(fs->win + BPB_DataOfsEx);
3099:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fatbase = bsect + ld_dword(fs->win + BPB_FatOfsEx);
3100:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (maxlba < (QWORD)fs->database + nclst * fs->csize) return FR_NO_FILESYSTEM;	/* (Volume size mu
3101:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->dirbase = ld_dword(fs->win + BPB_RootClusEx);
3102:Middlewares/Third_Party/FatFs/src/ff.c **** 
3103:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Check if bitmap location is in assumption (at the first cluster) */
3104:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (move_window(fs, clust2sect(fs, fs->dirbase)) != FR_OK) return FR_DISK_ERR;
3105:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = 0; i < SS(fs); i += SZDIRE) {
3106:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->win[i] == 0x81 && ld_dword(fs->win + i + 20) == 2) break;	/* 81 entry with cluster #2? *
3107:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3108:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == SS(fs)) return FR_NO_FILESYSTEM;
3109:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3110:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->last_clst = fs->free_clst = 0xFFFFFFFF;		/* Initialize cluster allocation information */
3111:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3112:Middlewares/Third_Party/FatFs/src/ff.c **** 		fmt = FS_EXFAT;			/* FAT sub-type */
3113:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else
3114:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _FS_EXFAT */
3115:Middlewares/Third_Party/FatFs/src/ff.c **** 	{
3116:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ld_word(fs->win + BPB_BytsPerSec) != SS(fs)) return FR_NO_FILESYSTEM;	/* (BPB_BytsPerSec must
3117:Middlewares/Third_Party/FatFs/src/ff.c **** 
3118:Middlewares/Third_Party/FatFs/src/ff.c **** 		fasize = ld_word(fs->win + BPB_FATSz16);		/* Number of sectors per FAT */
3119:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fasize == 0) fasize = ld_dword(fs->win + BPB_FATSz32);
3120:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fsize = fasize;
3121:Middlewares/Third_Party/FatFs/src/ff.c **** 
3122:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->n_fats = fs->win[BPB_NumFATs];				/* Number of FATs */
3123:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->n_fats != 1 && fs->n_fats != 2) return FR_NO_FILESYSTEM;	/* (Must be 1 or 2) */
3124:Middlewares/Third_Party/FatFs/src/ff.c **** 		fasize *= fs->n_fats;							/* Number of sectors for FAT area */
3125:Middlewares/Third_Party/FatFs/src/ff.c **** 
3126:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->csize = fs->win[BPB_SecPerClus];			/* Cluster size */
3127:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->csize == 0 || (fs->csize & (fs->csize - 1))) return FR_NO_FILESYSTEM;	/* (Must be power o
3128:Middlewares/Third_Party/FatFs/src/ff.c **** 
3129:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->n_rootdir = ld_word(fs->win + BPB_RootEntCnt);	/* Number of root directory entries */
3130:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->n_rootdir % (SS(fs) / SZDIRE)) return FR_NO_FILESYSTEM;	/* (Must be sector aligned) */
3131:Middlewares/Third_Party/FatFs/src/ff.c **** 
3132:Middlewares/Third_Party/FatFs/src/ff.c **** 		tsect = ld_word(fs->win + BPB_TotSec16);		/* Number of sectors on the volume */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 88


3133:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (tsect == 0) tsect = ld_dword(fs->win + BPB_TotSec32);
3134:Middlewares/Third_Party/FatFs/src/ff.c **** 
3135:Middlewares/Third_Party/FatFs/src/ff.c **** 		nrsv = ld_word(fs->win + BPB_RsvdSecCnt);		/* Number of reserved sectors */
3136:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nrsv == 0) return FR_NO_FILESYSTEM;			/* (Must not be 0) */
3137:Middlewares/Third_Party/FatFs/src/ff.c **** 
3138:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Determine the FAT sub type */
3139:Middlewares/Third_Party/FatFs/src/ff.c **** 		sysect = nrsv + fasize + fs->n_rootdir / (SS(fs) / SZDIRE);	/* RSV + FAT + DIR */
3140:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (tsect < sysect) return FR_NO_FILESYSTEM;	/* (Invalid volume size) */
3141:Middlewares/Third_Party/FatFs/src/ff.c **** 		nclst = (tsect - sysect) / fs->csize;			/* Number of clusters */
3142:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nclst == 0) return FR_NO_FILESYSTEM;		/* (Invalid volume size) */
3143:Middlewares/Third_Party/FatFs/src/ff.c **** 		fmt = FS_FAT32;
3144:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nclst <= MAX_FAT16) fmt = FS_FAT16;
3145:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nclst <= MAX_FAT12) fmt = FS_FAT12;
3146:Middlewares/Third_Party/FatFs/src/ff.c **** 
3147:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Boundaries and Limits */
3148:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->n_fatent = nclst + 2;						/* Number of FAT entries */
3149:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->volbase = bsect;							/* Volume start sector */
3150:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fatbase = bsect + nrsv; 					/* FAT start sector */
3151:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->database = bsect + sysect;					/* Data start sector */
3152:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fmt == FS_FAT32) {
3153:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ld_word(fs->win + BPB_FSVer32) != 0) return FR_NO_FILESYSTEM;	/* (Must be FAT32 revision 0.0
3154:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->n_rootdir) return FR_NO_FILESYSTEM;	/* (BPB_RootEntCnt must be 0) */
3155:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->dirbase = ld_dword(fs->win + BPB_RootClus32);	/* Root directory start cluster */
3156:Middlewares/Third_Party/FatFs/src/ff.c **** 			szbfat = fs->n_fatent * 4;					/* (Needed FAT size) */
3157:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
3158:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->n_rootdir == 0)	return FR_NO_FILESYSTEM;/* (BPB_RootEntCnt must not be 0) */
3159:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->dirbase = fs->fatbase + fasize;			/* Root directory start sector */
3160:Middlewares/Third_Party/FatFs/src/ff.c **** 			szbfat = (fmt == FS_FAT16) ?				/* (Needed FAT size) */
3161:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->n_fatent * 2 : fs->n_fatent * 3 / 2 + (fs->n_fatent & 1);
3162:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3163:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->fsize < (szbfat + (SS(fs) - 1)) / SS(fs)) return FR_NO_FILESYSTEM;	/* (BPB_FATSz must not
3164:Middlewares/Third_Party/FatFs/src/ff.c **** 
3165:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3166:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Get FSINFO if available */
3167:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->last_clst = fs->free_clst = 0xFFFFFFFF;		/* Initialize cluster allocation information */
3168:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fsi_flag = 0x80;
3169:Middlewares/Third_Party/FatFs/src/ff.c **** #if (_FS_NOFSINFO & 3) != 3
3170:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fmt == FS_FAT32				/* Enable FSINFO only if FAT32 and BPB_FSInfo32 == 1 */
3171:Middlewares/Third_Party/FatFs/src/ff.c **** 			&& ld_word(fs->win + BPB_FSInfo32) == 1
3172:Middlewares/Third_Party/FatFs/src/ff.c **** 			&& move_window(fs, bsect + 1) == FR_OK)
3173:Middlewares/Third_Party/FatFs/src/ff.c **** 		{
3174:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->fsi_flag = 0;
3175:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ld_word(fs->win + BS_55AA) == 0xAA55	/* Load FSINFO data if available */
3176:Middlewares/Third_Party/FatFs/src/ff.c **** 				&& ld_dword(fs->win + FSI_LeadSig) == 0x41615252
3177:Middlewares/Third_Party/FatFs/src/ff.c **** 				&& ld_dword(fs->win + FSI_StrucSig) == 0x61417272)
3178:Middlewares/Third_Party/FatFs/src/ff.c **** 			{
3179:Middlewares/Third_Party/FatFs/src/ff.c **** #if (_FS_NOFSINFO & 1) == 0
3180:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->free_clst = ld_dword(fs->win + FSI_Free_Count);
3181:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3182:Middlewares/Third_Party/FatFs/src/ff.c **** #if (_FS_NOFSINFO & 2) == 0
3183:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->last_clst = ld_dword(fs->win + FSI_Nxt_Free);
3184:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3185:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3186:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3187:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* (_FS_NOFSINFO & 3) != 3 */
3188:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* !_FS_READONLY */
3189:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 89


3190:Middlewares/Third_Party/FatFs/src/ff.c **** 
3191:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->fs_type = fmt;		/* FAT sub-type */
3192:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->id = ++Fsid;		/* File system mount ID */
3193:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN == 1
3194:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->lfnbuf = LfnBuf;	/* Static LFN working buffer */
3195:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
3196:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->dirbuf = DirBuf;	/* Static directory block scratchpad buuffer */
3197:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3198:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3199:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH != 0
3200:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->cdir = 0;			/* Initialize current directory */
3201:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3202:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0			/* Clear file lock semaphores */
3203:Middlewares/Third_Party/FatFs/src/ff.c **** 	clear_lock(fs);
3204:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3205:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
3206:Middlewares/Third_Party/FatFs/src/ff.c **** }
3207:Middlewares/Third_Party/FatFs/src/ff.c **** 
3208:Middlewares/Third_Party/FatFs/src/ff.c **** 
3209:Middlewares/Third_Party/FatFs/src/ff.c **** 
3210:Middlewares/Third_Party/FatFs/src/ff.c **** 
3211:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3212:Middlewares/Third_Party/FatFs/src/ff.c **** /* Check if the file/directory object is valid or not                    */
3213:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3214:Middlewares/Third_Party/FatFs/src/ff.c **** 
3215:Middlewares/Third_Party/FatFs/src/ff.c **** static
3216:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT validate (	/* Returns FR_OK or FR_INVALID_OBJECT */
3217:Middlewares/Third_Party/FatFs/src/ff.c **** 	_FDID* obj,		/* Pointer to the _OBJ, the 1st member in the FIL/DIR object, to check validity */
3218:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS** fs		/* Pointer to pointer to the owner file system object to return */
3219:Middlewares/Third_Party/FatFs/src/ff.c **** )
3220:Middlewares/Third_Party/FatFs/src/ff.c **** {
3221:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3222:Middlewares/Third_Party/FatFs/src/ff.c **** 
3223:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!obj || !obj->fs || !obj->fs->fs_type || obj->fs->id != obj->id || (disk_status(obj->fs->drv) 
3224:Middlewares/Third_Party/FatFs/src/ff.c **** 		*fs = 0;
3225:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_INVALID_OBJECT;	/* The object is invalid */
3226:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
3227:Middlewares/Third_Party/FatFs/src/ff.c **** 		*fs = obj->fs;			/* Owner file sytem object */
3228:Middlewares/Third_Party/FatFs/src/ff.c **** 		ENTER_FF(obj->fs);		/* Lock file system */
3229:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_OK;			/* Valid object */
3230:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3231:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
3232:Middlewares/Third_Party/FatFs/src/ff.c **** }
3233:Middlewares/Third_Party/FatFs/src/ff.c **** 
3234:Middlewares/Third_Party/FatFs/src/ff.c **** 
3235:Middlewares/Third_Party/FatFs/src/ff.c **** 
3236:Middlewares/Third_Party/FatFs/src/ff.c **** 
3237:Middlewares/Third_Party/FatFs/src/ff.c **** /*---------------------------------------------------------------------------
3238:Middlewares/Third_Party/FatFs/src/ff.c **** 
3239:Middlewares/Third_Party/FatFs/src/ff.c ****    Public Functions (FatFs API)
3240:Middlewares/Third_Party/FatFs/src/ff.c **** 
3241:Middlewares/Third_Party/FatFs/src/ff.c **** ----------------------------------------------------------------------------*/
3242:Middlewares/Third_Party/FatFs/src/ff.c **** 
3243:Middlewares/Third_Party/FatFs/src/ff.c **** 
3244:Middlewares/Third_Party/FatFs/src/ff.c **** 
3245:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3246:Middlewares/Third_Party/FatFs/src/ff.c **** /* Mount/Unmount a Logical Drive                                         */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 90


3247:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3248:Middlewares/Third_Party/FatFs/src/ff.c **** 
3249:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_mount (
3250:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,			/* Pointer to the file system object (NULL:unmount)*/
3251:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Logical drive number to be mounted/unmounted */
3252:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE opt			/* Mode option 0:Do not mount (delayed mount), 1:Mount immediately */
3253:Middlewares/Third_Party/FatFs/src/ff.c **** )
3254:Middlewares/Third_Party/FatFs/src/ff.c **** {
3255:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *cfs;
3256:Middlewares/Third_Party/FatFs/src/ff.c **** 	int vol;
3257:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3258:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR *rp = path;
3259:Middlewares/Third_Party/FatFs/src/ff.c **** 
3260:Middlewares/Third_Party/FatFs/src/ff.c **** 
3261:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive number */
3262:Middlewares/Third_Party/FatFs/src/ff.c **** 	vol = get_ldnumber(&rp);
3263:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
3264:Middlewares/Third_Party/FatFs/src/ff.c **** 	cfs = FatFs[vol];					/* Pointer to fs object */
3265:Middlewares/Third_Party/FatFs/src/ff.c **** 
3266:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (cfs) {
3267:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
3268:Middlewares/Third_Party/FatFs/src/ff.c **** 		clear_lock(cfs);
3269:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3270:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT						/* Discard sync object of the current volume */
3271:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!ff_del_syncobj(cfs->sobj)) return FR_INT_ERR;
3272:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3273:Middlewares/Third_Party/FatFs/src/ff.c **** 		cfs->fs_type = 0;				/* Clear old fs object */
3274:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3275:Middlewares/Third_Party/FatFs/src/ff.c **** 
3276:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs) {
3277:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fs_type = 0;				/* Clear new fs object */
3278:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT						/* Create sync object for the new volume */
3279:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!ff_cre_syncobj((BYTE)vol, &fs->sobj)) return FR_INT_ERR;
3280:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3281:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3282:Middlewares/Third_Party/FatFs/src/ff.c **** 	FatFs[vol] = fs;					/* Register new fs object */
3283:Middlewares/Third_Party/FatFs/src/ff.c **** 
3284:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!fs || opt != 1) return FR_OK;	/* Do not mount now, it will be mounted later */
3285:Middlewares/Third_Party/FatFs/src/ff.c **** 
3286:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, 0);	/* Force mounted the volume */
3287:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
3288:Middlewares/Third_Party/FatFs/src/ff.c **** }
3289:Middlewares/Third_Party/FatFs/src/ff.c **** 
3290:Middlewares/Third_Party/FatFs/src/ff.c **** 
3291:Middlewares/Third_Party/FatFs/src/ff.c **** 
3292:Middlewares/Third_Party/FatFs/src/ff.c **** 
3293:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3294:Middlewares/Third_Party/FatFs/src/ff.c **** /* Open or Create a File                                                 */
3295:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3296:Middlewares/Third_Party/FatFs/src/ff.c **** 
3297:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_open (
3298:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp,			/* Pointer to the blank file object */
3299:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Pointer to the file name */
3300:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE mode			/* Access mode and file open mode flags */
3301:Middlewares/Third_Party/FatFs/src/ff.c **** )
3302:Middlewares/Third_Party/FatFs/src/ff.c **** {
3303:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 91


3304:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
3305:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
3306:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3307:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD dw, cl, bcs, clst, sc;
3308:Middlewares/Third_Party/FatFs/src/ff.c **** 	FSIZE_t ofs;
3309:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3310:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
3311:Middlewares/Third_Party/FatFs/src/ff.c **** 
3312:Middlewares/Third_Party/FatFs/src/ff.c **** 
3313:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!fp) return FR_INVALID_OBJECT;
3314:Middlewares/Third_Party/FatFs/src/ff.c **** 
3315:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive */
3316:Middlewares/Third_Party/FatFs/src/ff.c **** 	mode &= _FS_READONLY ? FA_READ : FA_READ | FA_WRITE | FA_CREATE_ALWAYS | FA_CREATE_NEW | FA_OPEN_A
3317:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, mode);
3318:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
3319:Middlewares/Third_Party/FatFs/src/ff.c **** 		dj.obj.fs = fs;
3320:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
3321:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);	/* Follow the file path */
3322:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY	/* R/W configuration */
3323:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
3324:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {	/* Origin directory itself? */
3325:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;
3326:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3327:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
3328:Middlewares/Third_Party/FatFs/src/ff.c **** 			else {
3329:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = chk_lock(&dj, (mode & ~FA_READ) ? 1 : 0);
3330:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3331:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3332:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3333:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Create or Open a file */
3334:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (mode & (FA_CREATE_ALWAYS | FA_OPEN_ALWAYS | FA_CREATE_NEW)) {
3335:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) {					/* No file, create new */
3336:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) {		/* There is no file to open, create a new entry */
3337:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
3338:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = enq_lock() ? dir_register(&dj) : FR_TOO_MANY_OPEN_FILES;
3339:Middlewares/Third_Party/FatFs/src/ff.c **** #else
3340:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = dir_register(&dj);
3341:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3342:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3343:Middlewares/Third_Party/FatFs/src/ff.c **** 				mode |= FA_CREATE_ALWAYS;		/* File is created */
3344:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3345:Middlewares/Third_Party/FatFs/src/ff.c **** 			else {								/* Any object is already existing */
3346:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dj.obj.attr & (AM_RDO | AM_DIR)) {	/* Cannot overwrite it (R/O or DIR) */
3347:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_DENIED;
3348:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
3349:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (mode & FA_CREATE_NEW) res = FR_EXIST;	/* Cannot create as new file */
3350:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3351:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3352:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK && (mode & FA_CREATE_ALWAYS)) {	/* Truncate it if overwrite mode */
3353:Middlewares/Third_Party/FatFs/src/ff.c **** 				dw = GET_FATTIME();
3354:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
3355:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fs->fs_type == FS_EXFAT) {
3356:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Get current allocation info */
3357:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->obj.fs = fs;
3358:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->obj.sclust = ld_dword(fs->dirbuf + XDIR_FstClus);
3359:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->obj.objsize = ld_qword(fs->dirbuf + XDIR_FileSize);
3360:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->obj.stat = fs->dirbuf[XDIR_GenFlags] & 2;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 92


3361:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->obj.n_frag = 0;
3362:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Initialize directory entry block */
3363:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(fs->dirbuf + XDIR_CrtTime, dw);	/* Set created time */
3364:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->dirbuf[XDIR_CrtTime10] = 0;
3365:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(fs->dirbuf + XDIR_ModTime, dw);	/* Set modified time */
3366:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->dirbuf[XDIR_ModTime10] = 0;
3367:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->dirbuf[XDIR_Attr] = AM_ARC;				/* Reset attribute */
3368:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(fs->dirbuf + XDIR_FstClus, 0);		/* Reset file allocation info */
3369:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_qword(fs->dirbuf + XDIR_FileSize, 0);
3370:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_qword(fs->dirbuf + XDIR_ValidFileSize, 0);
3371:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->dirbuf[XDIR_GenFlags] = 1;
3372:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = store_xdir(&dj);
3373:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res == FR_OK && fp->obj.sclust) {		/* Remove the cluster chain if exist */
3374:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = remove_chain(&fp->obj, fp->obj.sclust, 0);
3375:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->last_clst = fp->obj.sclust - 1;		/* Reuse the cluster hole */
3376:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3377:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else
3378:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3379:Middlewares/Third_Party/FatFs/src/ff.c **** 				{
3380:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Clean directory info */
3381:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dj.dir + DIR_CrtTime, dw);	/* Set created time */
3382:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dj.dir + DIR_ModTime, dw);	/* Set modified time */
3383:Middlewares/Third_Party/FatFs/src/ff.c **** 					dj.dir[DIR_Attr] = AM_ARC;			/* Reset attribute */
3384:Middlewares/Third_Party/FatFs/src/ff.c **** 					cl = ld_clust(fs, dj.dir);			/* Get cluster chain */
3385:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fs, dj.dir, 0);			/* Reset file allocation info */
3386:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dj.dir + DIR_FileSize, 0);
3387:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->wflag = 1;
3388:Middlewares/Third_Party/FatFs/src/ff.c **** 
3389:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (cl) {							/* Remove the cluster chain if exist */
3390:Middlewares/Third_Party/FatFs/src/ff.c **** 						dw = fs->winsect;
3391:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = remove_chain(&dj.obj, cl, 0);
3392:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (res == FR_OK) {
3393:Middlewares/Third_Party/FatFs/src/ff.c **** 							res = move_window(fs, dw);
3394:Middlewares/Third_Party/FatFs/src/ff.c **** 							fs->last_clst = cl - 1;		/* Reuse the cluster hole */
3395:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
3396:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3397:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3398:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3399:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3400:Middlewares/Third_Party/FatFs/src/ff.c **** 		else {	/* Open an existing file */
3401:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {					/* Following succeeded */
3402:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dj.obj.attr & AM_DIR) {		/* It is a directory */
3403:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_NO_FILE;
3404:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
3405:Middlewares/Third_Party/FatFs/src/ff.c **** 					if ((mode & FA_WRITE) && (dj.obj.attr & AM_RDO)) { /* R/O violation */
3406:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = FR_DENIED;
3407:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3408:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3409:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3410:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3411:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
3412:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (mode & FA_CREATE_ALWAYS)		/* Set file change flag if created or overwritten */
3413:Middlewares/Third_Party/FatFs/src/ff.c **** 				mode |= FA_MODIFIED;
3414:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->dir_sect = fs->winsect;			/* Pointer to the directory entry */
3415:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->dir_ptr = dj.dir;
3416:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
3417:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->obj.lockid = inc_lock(&dj, (mode & ~FA_READ) ? 1 : 0);
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 93


3418:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!fp->obj.lockid) res = FR_INT_ERR;
3419:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3420:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3421:Middlewares/Third_Party/FatFs/src/ff.c **** #else		/* R/O configuration */
3422:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
3423:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {	/* Origin directory itself? */
3424:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;
3425:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
3426:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dj.obj.attr & AM_DIR) {		/* It is a directory */
3427:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_NO_FILE;
3428:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3429:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3430:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3431:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3432:Middlewares/Third_Party/FatFs/src/ff.c **** 
3433:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
3434:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
3435:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->fs_type == FS_EXFAT) {
3436:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->obj.c_scl = dj.obj.sclust;							/* Get containing directory info */
3437:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->obj.c_size = ((DWORD)dj.obj.objsize & 0xFFFFFF00) | dj.obj.stat;
3438:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->obj.c_ofs = dj.blk_ofs;
3439:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->obj.sclust = ld_dword(fs->dirbuf + XDIR_FstClus);	/* Get object allocation info */
3440:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->obj.objsize = ld_qword(fs->dirbuf + XDIR_FileSize);
3441:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->obj.stat = fs->dirbuf[XDIR_GenFlags] & 2;
3442:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else
3443:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3444:Middlewares/Third_Party/FatFs/src/ff.c **** 			{
3445:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->obj.sclust = ld_clust(fs, dj.dir);					/* Get object allocation info */
3446:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->obj.objsize = ld_dword(dj.dir + DIR_FileSize);
3447:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3448:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FASTSEEK
3449:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->cltbl = 0;			/* Disable fast seek mode */
3450:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3451:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->obj.fs = fs;	 	/* Validate the file object */
3452:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->obj.id = fs->id;
3453:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->flag = mode;		/* Set file access mode */
3454:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->err = 0;			/* Clear error flag */
3455:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->sect = 0;			/* Invalidate current data sector */
3456:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->fptr = 0;			/* Set file pointer top of the file */
3457:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3458:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
3459:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(fp->buf, 0, _MAX_SS);	/* Clear sector buffer */
3460:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3461:Middlewares/Third_Party/FatFs/src/ff.c **** 			if ((mode & FA_SEEKEND) && fp->obj.objsize > 0) {	/* Seek to end of file if FA_OPEN_APPEND is sp
3462:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr = fp->obj.objsize;			/* Offset to seek */
3463:Middlewares/Third_Party/FatFs/src/ff.c **** 				bcs = (DWORD)fs->csize * SS(fs);	/* Cluster size in byte */
3464:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = fp->obj.sclust;				/* Follow the cluster chain */
3465:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (ofs = fp->obj.objsize; res == FR_OK && ofs > bcs; ofs -= bcs) {
3466:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = get_fat(&fp->obj, clst);
3467:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst <= 1) res = FR_INT_ERR;
3468:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) res = FR_DISK_ERR;
3469:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3470:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;
3471:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK && ofs % SS(fs)) {	/* Fill sector buffer if not on the sector boundary */
3472:Middlewares/Third_Party/FatFs/src/ff.c **** 					if ((sc = clust2sect(fs, clst)) == 0) {
3473:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = FR_INT_ERR;
3474:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else {
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 94


3475:Middlewares/Third_Party/FatFs/src/ff.c **** 						fp->sect = sc + (DWORD)(ofs / SS(fs));
3476:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
3477:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (disk_read(fs->drv, fp->buf, fp->sect, 1) != RES_OK) res = FR_DISK_ERR;
3478:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3479:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3480:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3481:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3482:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3483:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3484:Middlewares/Third_Party/FatFs/src/ff.c **** 
3485:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_NAMBUF();
3486:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3487:Middlewares/Third_Party/FatFs/src/ff.c **** 
3488:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) fp->obj.fs = 0;	/* Invalidate file object on error */
3489:Middlewares/Third_Party/FatFs/src/ff.c **** 
3490:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
3491:Middlewares/Third_Party/FatFs/src/ff.c **** }
3492:Middlewares/Third_Party/FatFs/src/ff.c **** 
3493:Middlewares/Third_Party/FatFs/src/ff.c **** 
3494:Middlewares/Third_Party/FatFs/src/ff.c **** 
3495:Middlewares/Third_Party/FatFs/src/ff.c **** 
3496:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3497:Middlewares/Third_Party/FatFs/src/ff.c **** /* Read File                                                             */
3498:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3499:Middlewares/Third_Party/FatFs/src/ff.c **** 
3500:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_read (
3501:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp, 	/* Pointer to the file object */
3502:Middlewares/Third_Party/FatFs/src/ff.c **** 	void* buff,	/* Pointer to data buffer */
3503:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT btr,	/* Number of bytes to read */
3504:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT* br	/* Pointer to number of bytes read */
3505:Middlewares/Third_Party/FatFs/src/ff.c **** )
3506:Middlewares/Third_Party/FatFs/src/ff.c **** {
3507:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3508:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
3509:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst, sect;
3510:Middlewares/Third_Party/FatFs/src/ff.c **** 	FSIZE_t remain;
3511:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT rcnt, cc, csect;
3512:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *rbuff = (BYTE*)buff;
3513:Middlewares/Third_Party/FatFs/src/ff.c **** 
3514:Middlewares/Third_Party/FatFs/src/ff.c **** 
3515:Middlewares/Third_Party/FatFs/src/ff.c **** 	*br = 0;	/* Clear read byte counter */
3516:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&fp->obj, &fs);				/* Check validity of the file object */
3517:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);	/* Check validity */
3518:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_READ)) LEAVE_FF(fs, FR_DENIED); /* Check access mode */
3519:Middlewares/Third_Party/FatFs/src/ff.c **** 	remain = fp->obj.objsize - fp->fptr;
3520:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (btr > remain) btr = (UINT)remain;		/* Truncate btr by remaining bytes */
3521:Middlewares/Third_Party/FatFs/src/ff.c **** 
3522:Middlewares/Third_Party/FatFs/src/ff.c **** 	for ( ;  btr;								/* Repeat until all data read */
3523:Middlewares/Third_Party/FatFs/src/ff.c **** 		rbuff += rcnt, fp->fptr += rcnt, *br += rcnt, btr -= rcnt) {
3524:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->fptr % SS(fs) == 0) {			/* On the sector boundary? */
3525:Middlewares/Third_Party/FatFs/src/ff.c **** 			csect = (UINT)(fp->fptr / SS(fs) & (fs->csize - 1));	/* Sector offset in the cluster */
3526:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (csect == 0) {					/* On the cluster boundary? */
3527:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->fptr == 0) {			/* On the top of the file? */
3528:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = fp->obj.sclust;		/* Follow cluster chain from the origin */
3529:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {						/* Middle or end of the file */
3530:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FASTSEEK
3531:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (fp->cltbl) {
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 95


3532:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = clmt_clust(fp, fp->fptr);	/* Get cluster# from the CLMT */
3533:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else
3534:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3535:Middlewares/Third_Party/FatFs/src/ff.c **** 					{
3536:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = get_fat(&fp->obj, fp->clust);	/* Follow cluster chain on the FAT */
3537:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3538:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3539:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst < 2) ABORT(fs, FR_INT_ERR);
3540:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
3541:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;				/* Update current cluster */
3542:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3543:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect = clust2sect(fs, fp->clust);	/* Get current sector */
3544:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!sect) ABORT(fs, FR_INT_ERR);
3545:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += csect;
3546:Middlewares/Third_Party/FatFs/src/ff.c **** 			cc = btr / SS(fs);					/* When remaining bytes >= sector size, */
3547:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cc) {							/* Read maximum contiguous sectors directly */
3548:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (csect + cc > fs->csize) {	/* Clip at cluster boundary */
3549:Middlewares/Third_Party/FatFs/src/ff.c **** 					cc = fs->csize - csect;
3550:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3551:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_read(fs->drv, rbuff, sect, cc) != RES_OK) ABORT(fs, FR_DISK_ERR);
3552:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY && _FS_MINIMIZE <= 2			/* Replace one of the read sectors with cached data if it 
3553:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
3554:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fs->wflag && fs->winsect - sect < cc) {
3555:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(rbuff + ((fs->winsect - sect) * SS(fs)), fs->win, SS(fs));
3556:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3557:Middlewares/Third_Party/FatFs/src/ff.c **** #else
3558:Middlewares/Third_Party/FatFs/src/ff.c **** 				if ((fp->flag & FA_DIRTY) && fp->sect - sect < cc) {
3559:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(rbuff + ((fp->sect - sect) * SS(fs)), fp->buf, SS(fs));
3560:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3561:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3562:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3563:Middlewares/Third_Party/FatFs/src/ff.c **** 				rcnt = SS(fs) * cc;				/* Number of bytes transferred */
3564:Middlewares/Third_Party/FatFs/src/ff.c **** 				continue;
3565:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3566:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
3567:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->sect != sect) {			/* Load data sector if not in cache */
3568:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3569:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->flag & FA_DIRTY) {		/* Write-back dirty sector cache */
3570:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
3571:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->flag &= (BYTE)~FA_DIRTY;
3572:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3573:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3574:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_read(fs->drv, fp->buf, sect, 1) != RES_OK)	ABORT(fs, FR_DISK_ERR);	/* Fill sector cach
3575:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3576:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3577:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->sect = sect;
3578:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3579:Middlewares/Third_Party/FatFs/src/ff.c **** 		rcnt = SS(fs) - (UINT)fp->fptr % SS(fs);	/* Number of bytes left in the sector */
3580:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rcnt > btr) rcnt = btr;					/* Clip it by btr if needed */
3581:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
3582:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (move_window(fs, fp->sect) != FR_OK) ABORT(fs, FR_DISK_ERR);	/* Move sector window */
3583:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(rbuff, fs->win + fp->fptr % SS(fs), rcnt);	/* Extract partial sector */
3584:Middlewares/Third_Party/FatFs/src/ff.c **** #else
3585:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(rbuff, fp->buf + fp->fptr % SS(fs), rcnt);	/* Extract partial sector */
3586:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3587:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3588:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 96


3589:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, FR_OK);
3590:Middlewares/Third_Party/FatFs/src/ff.c **** }
3591:Middlewares/Third_Party/FatFs/src/ff.c **** 
3592:Middlewares/Third_Party/FatFs/src/ff.c **** 
3593:Middlewares/Third_Party/FatFs/src/ff.c **** 
3594:Middlewares/Third_Party/FatFs/src/ff.c **** 
3595:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3596:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3597:Middlewares/Third_Party/FatFs/src/ff.c **** /* Write File                                                            */
3598:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3599:Middlewares/Third_Party/FatFs/src/ff.c **** 
3600:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_write (
3601:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp,			/* Pointer to the file object */
3602:Middlewares/Third_Party/FatFs/src/ff.c **** 	const void* buff,	/* Pointer to the data to be written */
3603:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT btw,			/* Number of bytes to write */
3604:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT* bw			/* Pointer to number of bytes written */
3605:Middlewares/Third_Party/FatFs/src/ff.c **** )
3606:Middlewares/Third_Party/FatFs/src/ff.c **** {
3607:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3608:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
3609:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst, sect;
3610:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT wcnt, cc, csect;
3611:Middlewares/Third_Party/FatFs/src/ff.c **** 	const BYTE *wbuff = (const BYTE*)buff;
3612:Middlewares/Third_Party/FatFs/src/ff.c **** 
3613:Middlewares/Third_Party/FatFs/src/ff.c **** 
3614:Middlewares/Third_Party/FatFs/src/ff.c **** 	*bw = 0;	/* Clear write byte counter */
3615:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&fp->obj, &fs);			/* Check validity of the file object */
3616:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);	/* Check validity */
3617:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
3618:Middlewares/Third_Party/FatFs/src/ff.c **** 
3619:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Check fptr wrap-around (file size cannot reach 4GiB on FATxx) */
3620:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((!_FS_EXFAT || fs->fs_type != FS_EXFAT) && (DWORD)(fp->fptr + btw) < (DWORD)fp->fptr) {
3621:Middlewares/Third_Party/FatFs/src/ff.c **** 		btw = (UINT)(0xFFFFFFFF - (DWORD)fp->fptr);
3622:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3623:Middlewares/Third_Party/FatFs/src/ff.c **** 
3624:Middlewares/Third_Party/FatFs/src/ff.c **** 	for ( ;  btw;							/* Repeat until all data written */
3625:Middlewares/Third_Party/FatFs/src/ff.c **** 		wbuff += wcnt, fp->fptr += wcnt, fp->obj.objsize = (fp->fptr > fp->obj.objsize) ? fp->fptr : fp->
3626:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->fptr % SS(fs) == 0) {		/* On the sector boundary? */
3627:Middlewares/Third_Party/FatFs/src/ff.c **** 			csect = (UINT)(fp->fptr / SS(fs)) & (fs->csize - 1);	/* Sector offset in the cluster */
3628:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (csect == 0) {				/* On the cluster boundary? */
3629:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->fptr == 0) {		/* On the top of the file? */
3630:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = fp->obj.sclust;	/* Follow from the origin */
3631:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0) {		/* If no cluster is allocated, */
3632:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = create_chain(&fp->obj, 0);	/* create a new cluster chain */
3633:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3634:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {					/* On the middle or end of the file */
3635:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FASTSEEK
3636:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (fp->cltbl) {
3637:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = clmt_clust(fp, fp->fptr);	/* Get cluster# from the CLMT */
3638:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else
3639:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3640:Middlewares/Third_Party/FatFs/src/ff.c **** 					{
3641:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = create_chain(&fp->obj, fp->clust);	/* Follow or stretch cluster chain on the FAT */
3642:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3643:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3644:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0) break;		/* Could not allocate a new cluster (disk full) */
3645:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 1) ABORT(fs, FR_INT_ERR);
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 97


3646:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
3647:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;			/* Update current cluster */
3648:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->obj.sclust == 0) fp->obj.sclust = clst;	/* Set start cluster if the first write */
3649:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3650:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
3651:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->winsect == fp->sect && sync_window(fs) != FR_OK) ABORT(fs, FR_DISK_ERR);	/* Write-back s
3652:Middlewares/Third_Party/FatFs/src/ff.c **** #else
3653:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->flag & FA_DIRTY) {		/* Write-back sector cache */
3654:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
3655:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
3656:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3657:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3658:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect = clust2sect(fs, fp->clust);	/* Get current sector */
3659:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!sect) ABORT(fs, FR_INT_ERR);
3660:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += csect;
3661:Middlewares/Third_Party/FatFs/src/ff.c **** 			cc = btw / SS(fs);				/* When remaining bytes >= sector size, */
3662:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cc) {						/* Write maximum contiguous sectors directly */
3663:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (csect + cc > fs->csize) {	/* Clip at cluster boundary */
3664:Middlewares/Third_Party/FatFs/src/ff.c **** 					cc = fs->csize - csect;
3665:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3666:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fs->drv, wbuff, sect, cc) != RES_OK) ABORT(fs, FR_DISK_ERR);
3667:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 2
3668:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
3669:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fs->winsect - sect < cc) {	/* Refill sector cache if it gets invalidated by the direct writ
3670:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(fs->win, wbuff + ((fs->winsect - sect) * SS(fs)), SS(fs));
3671:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->wflag = 0;
3672:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3673:Middlewares/Third_Party/FatFs/src/ff.c **** #else
3674:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->sect - sect < cc) { /* Refill sector cache if it gets invalidated by the direct write *
3675:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(fp->buf, wbuff + ((fp->sect - sect) * SS(fs)), SS(fs));
3676:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->flag &= (BYTE)~FA_DIRTY;
3677:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3678:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3679:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3680:Middlewares/Third_Party/FatFs/src/ff.c **** 				wcnt = SS(fs) * cc;		/* Number of bytes transferred */
3681:Middlewares/Third_Party/FatFs/src/ff.c **** 				continue;
3682:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3683:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
3684:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->fptr >= fp->obj.objsize) {	/* Avoid silly cache filling on the growing edge */
3685:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (sync_window(fs) != FR_OK) ABORT(fs, FR_DISK_ERR);
3686:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->winsect = sect;
3687:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3688:Middlewares/Third_Party/FatFs/src/ff.c **** #else
3689:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->sect != sect && 		/* Fill sector cache with file data */
3690:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr < fp->obj.objsize &&
3691:Middlewares/Third_Party/FatFs/src/ff.c **** 				disk_read(fs->drv, fp->buf, sect, 1) != RES_OK) {
3692:Middlewares/Third_Party/FatFs/src/ff.c **** 					ABORT(fs, FR_DISK_ERR);
3693:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3694:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3695:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->sect = sect;
3696:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3697:Middlewares/Third_Party/FatFs/src/ff.c **** 		wcnt = SS(fs) - (UINT)fp->fptr % SS(fs);	/* Number of bytes left in the sector */
3698:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (wcnt > btw) wcnt = btw;					/* Clip it by btw if needed */
3699:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
3700:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (move_window(fs, fp->sect) != FR_OK) ABORT(fs, FR_DISK_ERR);	/* Move sector window */
3701:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(fs->win + fp->fptr % SS(fs), wbuff, wcnt);	/* Fit data to the sector */
3702:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->wflag = 1;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 98


3703:Middlewares/Third_Party/FatFs/src/ff.c **** #else
3704:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(fp->buf + fp->fptr % SS(fs), wbuff, wcnt);	/* Fit data to the sector */
3705:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->flag |= FA_DIRTY;
3706:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3707:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3708:Middlewares/Third_Party/FatFs/src/ff.c **** 
3709:Middlewares/Third_Party/FatFs/src/ff.c **** 	fp->flag |= FA_MODIFIED;				/* Set file change flag */
3710:Middlewares/Third_Party/FatFs/src/ff.c **** 
3711:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, FR_OK);
3712:Middlewares/Third_Party/FatFs/src/ff.c **** }
3713:Middlewares/Third_Party/FatFs/src/ff.c **** 
3714:Middlewares/Third_Party/FatFs/src/ff.c **** 
3715:Middlewares/Third_Party/FatFs/src/ff.c **** 
3716:Middlewares/Third_Party/FatFs/src/ff.c **** 
3717:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3718:Middlewares/Third_Party/FatFs/src/ff.c **** /* Synchronize the File                                                  */
3719:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3720:Middlewares/Third_Party/FatFs/src/ff.c **** 
3721:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_sync (
3722:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp		/* Pointer to the file object */
3723:Middlewares/Third_Party/FatFs/src/ff.c **** )
3724:Middlewares/Third_Party/FatFs/src/ff.c **** {
3725:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3726:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
3727:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD tm;
3728:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *dir;
3729:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
3730:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
3731:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
3732:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3733:Middlewares/Third_Party/FatFs/src/ff.c **** 
3734:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&fp->obj, &fs);	/* Check validity of the file object */
3735:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
3736:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->flag & FA_MODIFIED) {	/* Is there any change to the file? */
3737:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
3738:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->flag & FA_DIRTY) {	/* Write-back cached data if needed */
3739:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) LEAVE_FF(fs, FR_DISK_ERR);
3740:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
3741:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3742:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3743:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Update the directory entry */
3744:Middlewares/Third_Party/FatFs/src/ff.c **** 			tm = GET_FATTIME();				/* Modified time */
3745:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
3746:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->fs_type == FS_EXFAT) {
3747:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = fill_first_frag(&fp->obj);	/* Fill first fragment on the FAT if needed */
3748:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {
3749:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = fill_last_frag(&fp->obj, fp->clust, 0xFFFFFFFF);	/* Fill last fragment on the FAT if nee
3750:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3751:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {
3752:Middlewares/Third_Party/FatFs/src/ff.c **** 					INIT_NAMBUF(fs);
3753:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = load_obj_dir(&dj, &fp->obj);	/* Load directory entry block */
3754:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res == FR_OK) {
3755:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->dirbuf[XDIR_Attr] |= AM_ARC;				/* Set archive bit */
3756:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->dirbuf[XDIR_GenFlags] = fp->obj.stat | 1;	/* Update file allocation info */
3757:Middlewares/Third_Party/FatFs/src/ff.c **** 						st_dword(fs->dirbuf + XDIR_FstClus, fp->obj.sclust);
3758:Middlewares/Third_Party/FatFs/src/ff.c **** 						st_qword(fs->dirbuf + XDIR_FileSize, fp->obj.objsize);
3759:Middlewares/Third_Party/FatFs/src/ff.c **** 						st_qword(fs->dirbuf + XDIR_ValidFileSize, fp->obj.objsize);
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 99


3760:Middlewares/Third_Party/FatFs/src/ff.c **** 						st_dword(fs->dirbuf + XDIR_ModTime, tm);		/* Update modified time */
3761:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->dirbuf[XDIR_ModTime10] = 0;
3762:Middlewares/Third_Party/FatFs/src/ff.c **** 						st_dword(fs->dirbuf + XDIR_AccTime, 0);
3763:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = store_xdir(&dj);	/* Restore it to the directory */
3764:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (res == FR_OK) {
3765:Middlewares/Third_Party/FatFs/src/ff.c **** 							res = sync_fs(fs);
3766:Middlewares/Third_Party/FatFs/src/ff.c **** 							fp->flag &= (BYTE)~FA_MODIFIED;
3767:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
3768:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3769:Middlewares/Third_Party/FatFs/src/ff.c **** 					FREE_NAMBUF();
3770:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3771:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else
3772:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3773:Middlewares/Third_Party/FatFs/src/ff.c **** 			{
3774:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = move_window(fs, fp->dir_sect);
3775:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {
3776:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir = fp->dir_ptr;
3777:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir[DIR_Attr] |= AM_ARC;						/* Set archive bit */
3778:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fp->obj.fs, dir, fp->obj.sclust);		/* Update file allocation info  */
3779:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dir + DIR_FileSize, (DWORD)fp->obj.objsize);	/* Update file size */
3780:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dir + DIR_ModTime, tm);				/* Update modified time */
3781:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_word(dir + DIR_LstAccDate, 0);
3782:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->wflag = 1;
3783:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = sync_fs(fs);					/* Restore it to the directory */
3784:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->flag &= (BYTE)~FA_MODIFIED;
3785:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3786:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3787:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3788:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3789:Middlewares/Third_Party/FatFs/src/ff.c **** 
3790:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
3791:Middlewares/Third_Party/FatFs/src/ff.c **** }
3792:Middlewares/Third_Party/FatFs/src/ff.c **** 
3793:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
3794:Middlewares/Third_Party/FatFs/src/ff.c **** 
3795:Middlewares/Third_Party/FatFs/src/ff.c **** 
3796:Middlewares/Third_Party/FatFs/src/ff.c **** 
3797:Middlewares/Third_Party/FatFs/src/ff.c **** 
3798:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3799:Middlewares/Third_Party/FatFs/src/ff.c **** /* Close File                                                            */
3800:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3801:Middlewares/Third_Party/FatFs/src/ff.c **** 
3802:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_close (
3803:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp		/* Pointer to the file object to be closed */
3804:Middlewares/Third_Party/FatFs/src/ff.c **** )
3805:Middlewares/Third_Party/FatFs/src/ff.c **** {
3806:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3807:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
3808:Middlewares/Third_Party/FatFs/src/ff.c **** 
3809:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3810:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = f_sync(fp);					/* Flush cached data */
3811:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK)
3812:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3813:Middlewares/Third_Party/FatFs/src/ff.c **** 	{
3814:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = validate(&fp->obj, &fs);	/* Lock volume */
3815:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
3816:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 100


3817:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dec_lock(fp->obj.lockid);	/* Decrement file open counter */
3818:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK)
3819:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3820:Middlewares/Third_Party/FatFs/src/ff.c **** 			{
3821:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->obj.fs = 0;			/* Invalidate file object */
3822:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3823:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT
3824:Middlewares/Third_Party/FatFs/src/ff.c **** 			unlock_fs(fs, FR_OK);		/* Unlock volume */
3825:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3826:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3827:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3828:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
3829:Middlewares/Third_Party/FatFs/src/ff.c **** }
3830:Middlewares/Third_Party/FatFs/src/ff.c **** 
3831:Middlewares/Third_Party/FatFs/src/ff.c **** 
3832:Middlewares/Third_Party/FatFs/src/ff.c **** 
3833:Middlewares/Third_Party/FatFs/src/ff.c **** 
3834:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH >= 1
3835:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3836:Middlewares/Third_Party/FatFs/src/ff.c **** /* Change Current Directory or Current Drive, Get Current Directory      */
3837:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3838:Middlewares/Third_Party/FatFs/src/ff.c **** 
3839:Middlewares/Third_Party/FatFs/src/ff.c **** #if _VOLUMES >= 2
3840:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_chdrive (
3841:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path		/* Drive number */
3842:Middlewares/Third_Party/FatFs/src/ff.c **** )
3843:Middlewares/Third_Party/FatFs/src/ff.c **** {
3844:Middlewares/Third_Party/FatFs/src/ff.c **** 	int vol;
3845:Middlewares/Third_Party/FatFs/src/ff.c **** 
3846:Middlewares/Third_Party/FatFs/src/ff.c **** 
3847:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive number */
3848:Middlewares/Third_Party/FatFs/src/ff.c **** 	vol = get_ldnumber(&path);
3849:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
3850:Middlewares/Third_Party/FatFs/src/ff.c **** 
3851:Middlewares/Third_Party/FatFs/src/ff.c **** 	CurrVol = (BYTE)vol;	/* Set it as current volume */
3852:Middlewares/Third_Party/FatFs/src/ff.c **** 
3853:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
3854:Middlewares/Third_Party/FatFs/src/ff.c **** }
3855:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3856:Middlewares/Third_Party/FatFs/src/ff.c **** 
3857:Middlewares/Third_Party/FatFs/src/ff.c **** 
3858:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_chdir (
3859:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path	/* Pointer to the directory path */
3860:Middlewares/Third_Party/FatFs/src/ff.c **** )
3861:Middlewares/Third_Party/FatFs/src/ff.c **** {
3862:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3863:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
3864:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
3865:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
3866:Middlewares/Third_Party/FatFs/src/ff.c **** 
3867:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive */
3868:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, 0);
3869:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
3870:Middlewares/Third_Party/FatFs/src/ff.c **** 		dj.obj.fs = fs;
3871:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
3872:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);		/* Follow the path */
3873:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {					/* Follow completed */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 101


3874:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {
3875:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->cdir = dj.obj.sclust;	/* It is the start directory itself */
3876:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
3877:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fs->fs_type == FS_EXFAT) {
3878:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->cdc_scl = dj.obj.c_scl;
3879:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->cdc_size = dj.obj.c_size;
3880:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->cdc_ofs = dj.obj.c_ofs;
3881:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3882:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3883:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
3884:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dj.obj.attr & AM_DIR) {	/* It is a sub-directory */
3885:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
3886:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (fs->fs_type == FS_EXFAT) {
3887:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->cdir = ld_dword(fs->dirbuf + XDIR_FstClus);		/* Sub-directory cluster */
3888:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->cdc_scl = dj.obj.sclust;						/* Save containing directory information */
3889:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->cdc_size = ((DWORD)dj.obj.objsize & 0xFFFFFF00) | dj.obj.stat;
3890:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->cdc_ofs = dj.blk_ofs;
3891:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else
3892:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3893:Middlewares/Third_Party/FatFs/src/ff.c **** 					{
3894:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->cdir = ld_clust(fs, dj.dir);					/* Sub-directory cluster */
3895:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3896:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
3897:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_NO_PATH;		/* Reached but a file */
3898:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3899:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3900:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3901:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_NAMBUF();
3902:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_NO_FILE) res = FR_NO_PATH;
3903:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3904:Middlewares/Third_Party/FatFs/src/ff.c **** 
3905:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
3906:Middlewares/Third_Party/FatFs/src/ff.c **** }
3907:Middlewares/Third_Party/FatFs/src/ff.c **** 
3908:Middlewares/Third_Party/FatFs/src/ff.c **** 
3909:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH >= 2
3910:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_getcwd (
3911:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR* buff,	/* Pointer to the directory path */
3912:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT len		/* Size of path */
3913:Middlewares/Third_Party/FatFs/src/ff.c **** )
3914:Middlewares/Third_Party/FatFs/src/ff.c **** {
3915:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3916:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
3917:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
3918:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, n;
3919:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD ccl;
3920:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR *tp;
3921:Middlewares/Third_Party/FatFs/src/ff.c **** 	FILINFO fno;
3922:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
3923:Middlewares/Third_Party/FatFs/src/ff.c **** 
3924:Middlewares/Third_Party/FatFs/src/ff.c **** 
3925:Middlewares/Third_Party/FatFs/src/ff.c **** 	*buff = 0;
3926:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive */
3927:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume((const TCHAR**)&buff, &fs, 0);	/* Get current volume */
3928:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
3929:Middlewares/Third_Party/FatFs/src/ff.c **** 		dj.obj.fs = fs;
3930:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 102


3931:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = len;			/* Bottom of buffer (directory stack base) */
3932:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!_FS_EXFAT || fs->fs_type != FS_EXFAT) {	/* (Cannot do getcwd on exFAT and returns root path)
3933:Middlewares/Third_Party/FatFs/src/ff.c **** 			dj.obj.sclust = fs->cdir;				/* Start to follow upper directory from current directory */
3934:Middlewares/Third_Party/FatFs/src/ff.c **** 			while ((ccl = dj.obj.sclust) != 0) {	/* Repeat while current directory is a sub-directory */
3935:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_sdi(&dj, 1 * SZDIRE);	/* Get parent directory */
3936:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res != FR_OK) break;
3937:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = move_window(fs, dj.sect);
3938:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res != FR_OK) break;
3939:Middlewares/Third_Party/FatFs/src/ff.c **** 				dj.obj.sclust = ld_clust(fs, dj.dir);	/* Goto parent directory */
3940:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_sdi(&dj, 0);
3941:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res != FR_OK) break;
3942:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {							/* Find the entry links to the child directory */
3943:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = dir_read(&dj, 0);
3944:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res != FR_OK) break;
3945:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (ccl == ld_clust(fs, dj.dir)) break;	/* Found the entry */
3946:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = dir_next(&dj, 0);
3947:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while (res == FR_OK);
3948:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) res = FR_INT_ERR;/* It cannot be 'not found'. */
3949:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res != FR_OK) break;
3950:Middlewares/Third_Party/FatFs/src/ff.c **** 				get_fileinfo(&dj, &fno);		/* Get the directory name and push it to the buffer */
3951:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (n = 0; fno.fname[n]; n++) ;
3952:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (i < n + 3) {
3953:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_NOT_ENOUGH_CORE; break;
3954:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3955:Middlewares/Third_Party/FatFs/src/ff.c **** 				while (n) buff[--i] = fno.fname[--n];
3956:Middlewares/Third_Party/FatFs/src/ff.c **** 				buff[--i] = '/';
3957:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3958:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3959:Middlewares/Third_Party/FatFs/src/ff.c **** 		tp = buff;
3960:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
3961:Middlewares/Third_Party/FatFs/src/ff.c **** #if _VOLUMES >= 2
3962:Middlewares/Third_Party/FatFs/src/ff.c **** 			*tp++ = '0' + CurrVol;			/* Put drive number */
3963:Middlewares/Third_Party/FatFs/src/ff.c **** 			*tp++ = ':';
3964:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3965:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i == len) {					/* Root-directory */
3966:Middlewares/Third_Party/FatFs/src/ff.c **** 				*tp++ = '/';
3967:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {						/* Sub-directroy */
3968:Middlewares/Third_Party/FatFs/src/ff.c **** 				do		/* Add stacked path str */
3969:Middlewares/Third_Party/FatFs/src/ff.c **** 					*tp++ = buff[i++];
3970:Middlewares/Third_Party/FatFs/src/ff.c **** 				while (i < len);
3971:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3972:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3973:Middlewares/Third_Party/FatFs/src/ff.c **** 		*tp = 0;
3974:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_NAMBUF();
3975:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3976:Middlewares/Third_Party/FatFs/src/ff.c **** 
3977:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
3978:Middlewares/Third_Party/FatFs/src/ff.c **** }
3979:Middlewares/Third_Party/FatFs/src/ff.c **** 
3980:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _FS_RPATH >= 2 */
3981:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _FS_RPATH >= 1 */
3982:Middlewares/Third_Party/FatFs/src/ff.c **** 
3983:Middlewares/Third_Party/FatFs/src/ff.c **** 
3984:Middlewares/Third_Party/FatFs/src/ff.c **** 
3985:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 2
3986:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3987:Middlewares/Third_Party/FatFs/src/ff.c **** /* Seek File R/W Pointer                                                 */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 103


3988:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3989:Middlewares/Third_Party/FatFs/src/ff.c **** 
3990:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_lseek (
3991:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp,		/* Pointer to the file object */
3992:Middlewares/Third_Party/FatFs/src/ff.c **** 	FSIZE_t ofs		/* File pointer from top of file */
3993:Middlewares/Third_Party/FatFs/src/ff.c **** )
3994:Middlewares/Third_Party/FatFs/src/ff.c **** {
3995:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3996:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
3997:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst, bcs, nsect;
3998:Middlewares/Third_Party/FatFs/src/ff.c **** 	FSIZE_t ifptr;
3999:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FASTSEEK
4000:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD cl, pcl, ncl, tcl, dsc, tlen, ulen, *tbl;
4001:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4002:Middlewares/Third_Party/FatFs/src/ff.c **** 
4003:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&fp->obj, &fs);		/* Check validity of the file object */
4004:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) res = (FRESULT)fp->err;
4005:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT && !_FS_READONLY
4006:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK && fs->fs_type == FS_EXFAT) {
4007:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = fill_last_frag(&fp->obj, fp->clust, 0xFFFFFFFF);	/* Fill last fragment on the FAT if needed
4008:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4009:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4010:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) LEAVE_FF(fs, res);
4011:Middlewares/Third_Party/FatFs/src/ff.c **** 
4012:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FASTSEEK
4013:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fp->cltbl) {	/* Fast seek */
4014:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs == CREATE_LINKMAP) {	/* Create CLMT */
4015:Middlewares/Third_Party/FatFs/src/ff.c **** 			tbl = fp->cltbl;
4016:Middlewares/Third_Party/FatFs/src/ff.c **** 			tlen = *tbl++; ulen = 2;	/* Given table size and required table size */
4017:Middlewares/Third_Party/FatFs/src/ff.c **** 			cl = fp->obj.sclust;		/* Origin of the chain */
4018:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cl) {
4019:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {
4020:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Get a fragment */
4021:Middlewares/Third_Party/FatFs/src/ff.c **** 					tcl = cl; ncl = 0; ulen += 2;	/* Top, length and used items */
4022:Middlewares/Third_Party/FatFs/src/ff.c **** 					do {
4023:Middlewares/Third_Party/FatFs/src/ff.c **** 						pcl = cl; ncl++;
4024:Middlewares/Third_Party/FatFs/src/ff.c **** 						cl = get_fat(&fp->obj, cl);
4025:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (cl <= 1) ABORT(fs, FR_INT_ERR);
4026:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (cl == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
4027:Middlewares/Third_Party/FatFs/src/ff.c **** 					} while (cl == pcl + 1);
4028:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (ulen <= tlen) {		/* Store the length and top of the fragment */
4029:Middlewares/Third_Party/FatFs/src/ff.c **** 						*tbl++ = ncl; *tbl++ = tcl;
4030:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
4031:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while (cl < fs->n_fatent);	/* Repeat until end of chain */
4032:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4033:Middlewares/Third_Party/FatFs/src/ff.c **** 			*fp->cltbl = ulen;	/* Number of items used */
4034:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ulen <= tlen) {
4035:Middlewares/Third_Party/FatFs/src/ff.c **** 				*tbl = 0;		/* Terminate table */
4036:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
4037:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_NOT_ENOUGH_CORE;	/* Given table size is smaller than required */
4038:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4039:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {						/* Fast seek */
4040:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ofs > fp->obj.objsize) ofs = fp->obj.objsize;	/* Clip offset at the file size */
4041:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->fptr = ofs;				/* Set file pointer */
4042:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ofs) {
4043:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clmt_clust(fp, ofs - 1);
4044:Middlewares/Third_Party/FatFs/src/ff.c **** 				dsc = clust2sect(fs, fp->clust);
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 104


4045:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!dsc) ABORT(fs, FR_INT_ERR);
4046:Middlewares/Third_Party/FatFs/src/ff.c **** 				dsc += (DWORD)((ofs - 1) / SS(fs)) & (fs->csize - 1);
4047:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->fptr % SS(fs) && dsc != fp->sect) {	/* Refill sector cache if needed */
4048:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
4049:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
4050:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (fp->flag & FA_DIRTY) {		/* Write-back dirty sector cache */
4051:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
4052:Middlewares/Third_Party/FatFs/src/ff.c **** 						fp->flag &= (BYTE)~FA_DIRTY;
4053:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
4054:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4055:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (disk_read(fs->drv, fp->buf, dsc, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);	/* Load current sec
4056:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4057:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->sect = dsc;
4058:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4059:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4060:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4061:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else
4062:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4063:Middlewares/Third_Party/FatFs/src/ff.c **** 
4064:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Normal Seek */
4065:Middlewares/Third_Party/FatFs/src/ff.c **** 	{
4066:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4067:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->fs_type != FS_EXFAT && ofs >= 0x100000000) ofs = 0xFFFFFFFF;	/* Clip at 4GiB-1 if at FATx
4068:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4069:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs > fp->obj.objsize && (_FS_READONLY || !(fp->flag & FA_WRITE))) {	/* In read-only mode, cl
4070:Middlewares/Third_Party/FatFs/src/ff.c **** 			ofs = fp->obj.objsize;
4071:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4072:Middlewares/Third_Party/FatFs/src/ff.c **** 		ifptr = fp->fptr;
4073:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->fptr = nsect = 0;
4074:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs) {
4075:Middlewares/Third_Party/FatFs/src/ff.c **** 			bcs = (DWORD)fs->csize * SS(fs);	/* Cluster size (byte) */
4076:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ifptr > 0 &&
4077:Middlewares/Third_Party/FatFs/src/ff.c **** 				(ofs - 1) / bcs >= (ifptr - 1) / bcs) {	/* When seek to same or following cluster, */
4078:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr = (ifptr - 1) & ~(FSIZE_t)(bcs - 1);	/* start from the current cluster */
4079:Middlewares/Third_Party/FatFs/src/ff.c **** 				ofs -= fp->fptr;
4080:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = fp->clust;
4081:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {									/* When seek to back cluster, */
4082:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = fp->obj.sclust;					/* start from the first cluster */
4083:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
4084:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0) {						/* If no cluster chain, create a new chain */
4085:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = create_chain(&fp->obj, 0);
4086:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 1) ABORT(fs, FR_INT_ERR);
4087:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
4088:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->obj.sclust = clst;
4089:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4090:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4091:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;
4092:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4093:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (clst != 0) {
4094:Middlewares/Third_Party/FatFs/src/ff.c **** 				while (ofs > bcs) {						/* Cluster following loop */
4095:Middlewares/Third_Party/FatFs/src/ff.c **** 					ofs -= bcs; fp->fptr += bcs;
4096:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
4097:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (fp->flag & FA_WRITE) {			/* Check if in write mode or not */
4098:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (_FS_EXFAT && fp->fptr > fp->obj.objsize) {	/* No FAT chain object needs correct objsize t
4099:Middlewares/Third_Party/FatFs/src/ff.c **** 							fp->obj.objsize = fp->fptr;
4100:Middlewares/Third_Party/FatFs/src/ff.c **** 							fp->flag |= FA_MODIFIED;
4101:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 105


4102:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = create_chain(&fp->obj, clst);	/* Follow chain with forceed stretch */
4103:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (clst == 0) {				/* Clip file size in case of disk full */
4104:Middlewares/Third_Party/FatFs/src/ff.c **** 							ofs = 0; break;
4105:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
4106:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else
4107:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4108:Middlewares/Third_Party/FatFs/src/ff.c **** 					{
4109:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = get_fat(&fp->obj, clst);	/* Follow cluster chain if not in write mode */
4110:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
4111:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
4112:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst <= 1 || clst >= fs->n_fatent) ABORT(fs, FR_INT_ERR);
4113:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->clust = clst;
4114:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4115:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr += ofs;
4116:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (ofs % SS(fs)) {
4117:Middlewares/Third_Party/FatFs/src/ff.c **** 					nsect = clust2sect(fs, clst);	/* Current sector */
4118:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!nsect) ABORT(fs, FR_INT_ERR);
4119:Middlewares/Third_Party/FatFs/src/ff.c **** 					nsect += (DWORD)(ofs / SS(fs));
4120:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4121:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4122:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4123:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!_FS_READONLY && fp->fptr > fp->obj.objsize) {		/* Set file change flag if the file size is e
4124:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->obj.objsize = fp->fptr;
4125:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->flag |= FA_MODIFIED;
4126:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4127:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->fptr % SS(fs) && nsect != fp->sect) {	/* Fill sector cache if needed */
4128:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
4129:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
4130:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->flag & FA_DIRTY) {			/* Write-back dirty sector cache */
4131:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
4132:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
4133:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4134:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4135:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_read(fs->drv, fp->buf, nsect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);	/* Fill sector cach
4136:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4137:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->sect = nsect;
4138:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4139:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4140:Middlewares/Third_Party/FatFs/src/ff.c **** 
4141:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4142:Middlewares/Third_Party/FatFs/src/ff.c **** }
4143:Middlewares/Third_Party/FatFs/src/ff.c **** 
4144:Middlewares/Third_Party/FatFs/src/ff.c **** 
4145:Middlewares/Third_Party/FatFs/src/ff.c **** 
4146:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 1
4147:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4148:Middlewares/Third_Party/FatFs/src/ff.c **** /* Create a Directory Object                                             */
4149:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4150:Middlewares/Third_Party/FatFs/src/ff.c **** 
4151:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_opendir (
4152:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,			/* Pointer to directory object to create */
4153:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path	/* Pointer to the directory path */
4154:Middlewares/Third_Party/FatFs/src/ff.c **** )
4155:Middlewares/Third_Party/FatFs/src/ff.c **** {
4156:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4157:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4158:Middlewares/Third_Party/FatFs/src/ff.c **** 	_FDID *obj;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 106


4159:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
4160:Middlewares/Third_Party/FatFs/src/ff.c **** 
4161:Middlewares/Third_Party/FatFs/src/ff.c **** 
4162:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!dp) return FR_INVALID_OBJECT;
4163:Middlewares/Third_Party/FatFs/src/ff.c **** 
4164:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive */
4165:Middlewares/Third_Party/FatFs/src/ff.c **** 	obj = &dp->obj;
4166:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, 0);
4167:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4168:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->fs = fs;
4169:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
4170:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(dp, path);			/* Follow the path to the directory */
4171:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {						/* Follow completed */
4172:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!(dp->fn[NSFLAG] & NS_NONAME)) {	/* It is not the origin directory itself */
4173:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (obj->attr & AM_DIR) {		/* This object is a sub-directory */
4174:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4175:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (fs->fs_type == FS_EXFAT) {
4176:Middlewares/Third_Party/FatFs/src/ff.c **** 						obj->c_scl = obj->sclust;							/* Get containing directory inforamation */
4177:Middlewares/Third_Party/FatFs/src/ff.c **** 						obj->c_size = ((DWORD)obj->objsize & 0xFFFFFF00) | obj->stat;
4178:Middlewares/Third_Party/FatFs/src/ff.c **** 						obj->c_ofs = dp->blk_ofs;
4179:Middlewares/Third_Party/FatFs/src/ff.c **** 						obj->sclust = ld_dword(fs->dirbuf + XDIR_FstClus);	/* Get object allocation info */
4180:Middlewares/Third_Party/FatFs/src/ff.c **** 						obj->objsize = ld_qword(fs->dirbuf + XDIR_FileSize);
4181:Middlewares/Third_Party/FatFs/src/ff.c **** 						obj->stat = fs->dirbuf[XDIR_GenFlags] & 2;
4182:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else
4183:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4184:Middlewares/Third_Party/FatFs/src/ff.c **** 					{
4185:Middlewares/Third_Party/FatFs/src/ff.c **** 						obj->sclust = ld_clust(fs, dp->dir);	/* Get object allocation info */
4186:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
4187:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {						/* This object is a file */
4188:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_NO_PATH;
4189:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4190:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4191:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {
4192:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->id = fs->id;
4193:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_sdi(dp, 0);			/* Rewind directory */
4194:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
4195:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {
4196:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (obj->sclust) {
4197:Middlewares/Third_Party/FatFs/src/ff.c **** 						obj->lockid = inc_lock(dp, 0);	/* Lock the sub directory */
4198:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (!obj->lockid) res = FR_TOO_MANY_OPEN_FILES;
4199:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else {
4200:Middlewares/Third_Party/FatFs/src/ff.c **** 						obj->lockid = 0;	/* Root directory need not to be locked */
4201:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
4202:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4203:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4204:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4205:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4206:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_NAMBUF();
4207:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_NO_FILE) res = FR_NO_PATH;
4208:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4209:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) obj->fs = 0;		/* Invalidate the directory object if function faild */
4210:Middlewares/Third_Party/FatFs/src/ff.c **** 
4211:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4212:Middlewares/Third_Party/FatFs/src/ff.c **** }
4213:Middlewares/Third_Party/FatFs/src/ff.c **** 
4214:Middlewares/Third_Party/FatFs/src/ff.c **** 
4215:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 107


4216:Middlewares/Third_Party/FatFs/src/ff.c **** 
4217:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4218:Middlewares/Third_Party/FatFs/src/ff.c **** /* Close Directory                                                       */
4219:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4220:Middlewares/Third_Party/FatFs/src/ff.c **** 
4221:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_closedir (
4222:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR *dp		/* Pointer to the directory object to be closed */
4223:Middlewares/Third_Party/FatFs/src/ff.c **** )
4224:Middlewares/Third_Party/FatFs/src/ff.c **** {
4225:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4226:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4227:Middlewares/Third_Party/FatFs/src/ff.c **** 
4228:Middlewares/Third_Party/FatFs/src/ff.c **** 
4229:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&dp->obj, &fs);			/* Check validity of the file object */
4230:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4231:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
4232:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (dp->obj.lockid) {				/* Decrement sub-directory open counter */
4233:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dec_lock(dp->obj.lockid);
4234:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4235:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK)
4236:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4237:Middlewares/Third_Party/FatFs/src/ff.c **** 		{
4238:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->obj.fs = 0;			/* Invalidate directory object */
4239:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4240:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT
4241:Middlewares/Third_Party/FatFs/src/ff.c **** 		unlock_fs(fs, FR_OK);		/* Unlock volume */
4242:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4243:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4244:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
4245:Middlewares/Third_Party/FatFs/src/ff.c **** }
4246:Middlewares/Third_Party/FatFs/src/ff.c **** 
4247:Middlewares/Third_Party/FatFs/src/ff.c **** 
4248:Middlewares/Third_Party/FatFs/src/ff.c **** 
4249:Middlewares/Third_Party/FatFs/src/ff.c **** 
4250:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4251:Middlewares/Third_Party/FatFs/src/ff.c **** /* Read Directory Entries in Sequence                                    */
4252:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4253:Middlewares/Third_Party/FatFs/src/ff.c **** 
4254:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_readdir (
4255:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,			/* Pointer to the open directory object */
4256:Middlewares/Third_Party/FatFs/src/ff.c **** 	FILINFO* fno		/* Pointer to file information to return */
4257:Middlewares/Third_Party/FatFs/src/ff.c **** )
4258:Middlewares/Third_Party/FatFs/src/ff.c **** {
4259:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4260:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4261:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
4262:Middlewares/Third_Party/FatFs/src/ff.c **** 
4263:Middlewares/Third_Party/FatFs/src/ff.c **** 
4264:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&dp->obj, &fs);	/* Check validity of the directory object */
4265:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4266:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!fno) {
4267:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_sdi(dp, 0);			/* Rewind the directory object */
4268:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
4269:Middlewares/Third_Party/FatFs/src/ff.c **** 			INIT_NAMBUF(fs);
4270:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_read(dp, 0);			/* Read an item */
4271:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_NO_FILE) res = FR_OK;	/* Ignore end of directory */
4272:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {				/* A valid entry is found */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 108


4273:Middlewares/Third_Party/FatFs/src/ff.c **** 				get_fileinfo(dp, fno);		/* Get the object information */
4274:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_next(dp, 0);		/* Increment index for next */
4275:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) res = FR_OK;	/* Ignore end of directory now */
4276:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4277:Middlewares/Third_Party/FatFs/src/ff.c **** 			FREE_NAMBUF();
4278:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4279:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4280:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4281:Middlewares/Third_Party/FatFs/src/ff.c **** }
4282:Middlewares/Third_Party/FatFs/src/ff.c **** 
4283:Middlewares/Third_Party/FatFs/src/ff.c **** 
4284:Middlewares/Third_Party/FatFs/src/ff.c **** 
4285:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FIND
4286:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4287:Middlewares/Third_Party/FatFs/src/ff.c **** /* Find Next File                                                        */
4288:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4289:Middlewares/Third_Party/FatFs/src/ff.c **** 
4290:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_findnext (
4291:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,		/* Pointer to the open directory object */
4292:Middlewares/Third_Party/FatFs/src/ff.c **** 	FILINFO* fno	/* Pointer to the file information structure */
4293:Middlewares/Third_Party/FatFs/src/ff.c **** )
4294:Middlewares/Third_Party/FatFs/src/ff.c **** {
4295:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4296:Middlewares/Third_Party/FatFs/src/ff.c **** 
4297:Middlewares/Third_Party/FatFs/src/ff.c **** 
4298:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
4299:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = f_readdir(dp, fno);		/* Get a directory item */
4300:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK || !fno || !fno->fname[0]) break;	/* Terminate if any error or end of directory 
4301:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (pattern_matching(dp->pat, fno->fname, 0, 0)) break;		/* Test for the file name */
4302:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0 && _USE_FIND == 2
4303:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (pattern_matching(dp->pat, fno->altname, 0, 0)) break;	/* Test for alternative name if exist *
4304:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4305:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4306:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
4307:Middlewares/Third_Party/FatFs/src/ff.c **** }
4308:Middlewares/Third_Party/FatFs/src/ff.c **** 
4309:Middlewares/Third_Party/FatFs/src/ff.c **** 
4310:Middlewares/Third_Party/FatFs/src/ff.c **** 
4311:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4312:Middlewares/Third_Party/FatFs/src/ff.c **** /* Find First File                                                       */
4313:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4314:Middlewares/Third_Party/FatFs/src/ff.c **** 
4315:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_findfirst (
4316:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,				/* Pointer to the blank directory object */
4317:Middlewares/Third_Party/FatFs/src/ff.c **** 	FILINFO* fno,			/* Pointer to the file information structure */
4318:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,		/* Pointer to the directory to open */
4319:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* pattern	/* Pointer to the matching pattern */
4320:Middlewares/Third_Party/FatFs/src/ff.c **** )
4321:Middlewares/Third_Party/FatFs/src/ff.c **** {
4322:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4323:Middlewares/Third_Party/FatFs/src/ff.c **** 
4324:Middlewares/Third_Party/FatFs/src/ff.c **** 
4325:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->pat = pattern;		/* Save pointer to pattern string */
4326:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = f_opendir(dp, path);		/* Open the target directory */
4327:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4328:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = f_findnext(dp, fno);	/* Find the first item */
4329:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 109


4330:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
4331:Middlewares/Third_Party/FatFs/src/ff.c **** }
4332:Middlewares/Third_Party/FatFs/src/ff.c **** 
4333:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _USE_FIND */
4334:Middlewares/Third_Party/FatFs/src/ff.c **** 
4335:Middlewares/Third_Party/FatFs/src/ff.c **** 
4336:Middlewares/Third_Party/FatFs/src/ff.c **** 
4337:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE == 0
4338:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4339:Middlewares/Third_Party/FatFs/src/ff.c **** /* Get File Status                                                       */
4340:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4341:Middlewares/Third_Party/FatFs/src/ff.c **** 
4342:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_stat (
4343:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Pointer to the file path */
4344:Middlewares/Third_Party/FatFs/src/ff.c **** 	FILINFO* fno		/* Pointer to file information to return */
4345:Middlewares/Third_Party/FatFs/src/ff.c **** )
4346:Middlewares/Third_Party/FatFs/src/ff.c **** {
4347:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4348:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
4349:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
4350:Middlewares/Third_Party/FatFs/src/ff.c **** 
4351:Middlewares/Third_Party/FatFs/src/ff.c **** 
4352:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive */
4353:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &dj.obj.fs, 0);
4354:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4355:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(dj.obj.fs);
4356:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);	/* Follow the file path */
4357:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {				/* Follow completed */
4358:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {	/* It is origin directory */
4359:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;
4360:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {							/* Found an object */
4361:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fno) get_fileinfo(&dj, fno);
4362:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4363:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4364:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_NAMBUF();
4365:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4366:Middlewares/Third_Party/FatFs/src/ff.c **** 
4367:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(dj.obj.fs, res);
4368:Middlewares/Third_Party/FatFs/src/ff.c **** }
4369:Middlewares/Third_Party/FatFs/src/ff.c **** 
4370:Middlewares/Third_Party/FatFs/src/ff.c **** 
4371:Middlewares/Third_Party/FatFs/src/ff.c **** 
4372:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
4373:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4374:Middlewares/Third_Party/FatFs/src/ff.c **** /* Get Number of Free Clusters                                           */
4375:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4376:Middlewares/Third_Party/FatFs/src/ff.c **** 
4377:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_getfree (
4378:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Path name of the logical drive number */
4379:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD* nclst,		/* Pointer to a variable to return number of free clusters */
4380:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS** fatfs		/* Pointer to return pointer to corresponding file system object */
4381:Middlewares/Third_Party/FatFs/src/ff.c **** )
4382:Middlewares/Third_Party/FatFs/src/ff.c **** {
4383:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4384:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4385:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD nfree, clst, sect, stat;
4386:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 110


4387:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *p;
4388:Middlewares/Third_Party/FatFs/src/ff.c **** 	_FDID obj;
4389:Middlewares/Third_Party/FatFs/src/ff.c **** 
4390:Middlewares/Third_Party/FatFs/src/ff.c **** 
4391:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive */
4392:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, 0);
4393:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4394:Middlewares/Third_Party/FatFs/src/ff.c **** 		*fatfs = fs;				/* Return ptr to the fs object */
4395:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* If free_clst is valid, return it without full cluster scan */
4396:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->free_clst <= fs->n_fatent - 2) {
4397:Middlewares/Third_Party/FatFs/src/ff.c **** 			*nclst = fs->free_clst;
4398:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
4399:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Get number of free clusters */
4400:Middlewares/Third_Party/FatFs/src/ff.c **** 			nfree = 0;
4401:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->fs_type == FS_FAT12) {	/* FAT12: Sector unalighed FAT entries */
4402:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = 2; obj.fs = fs;
4403:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {
4404:Middlewares/Third_Party/FatFs/src/ff.c **** 					stat = get_fat(&obj, clst);
4405:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }
4406:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 1) { res = FR_INT_ERR; break; }
4407:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 0) nfree++;
4408:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while (++clst < fs->n_fatent);
4409:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
4410:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4411:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fs->fs_type == FS_EXFAT) {	/* exFAT: Scan bitmap table */
4412:Middlewares/Third_Party/FatFs/src/ff.c **** 					BYTE bm;
4413:Middlewares/Third_Party/FatFs/src/ff.c **** 					UINT b;
4414:Middlewares/Third_Party/FatFs/src/ff.c **** 
4415:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = fs->n_fatent - 2;
4416:Middlewares/Third_Party/FatFs/src/ff.c **** 					sect = fs->database;
4417:Middlewares/Third_Party/FatFs/src/ff.c **** 					i = 0;
4418:Middlewares/Third_Party/FatFs/src/ff.c **** 					do {
4419:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (i == 0 && (res = move_window(fs, sect++)) != FR_OK) break;
4420:Middlewares/Third_Party/FatFs/src/ff.c **** 						for (b = 8, bm = fs->win[i]; b && clst; b--, clst--) {
4421:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (!(bm & 1)) nfree++;
4422:Middlewares/Third_Party/FatFs/src/ff.c **** 							bm >>= 1;
4423:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
4424:Middlewares/Third_Party/FatFs/src/ff.c **** 						i = (i + 1) % SS(fs);
4425:Middlewares/Third_Party/FatFs/src/ff.c **** 					} while (clst);
4426:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else
4427:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4428:Middlewares/Third_Party/FatFs/src/ff.c **** 				{	/* FAT16/32: Sector alighed FAT entries */
4429:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = fs->n_fatent; sect = fs->fatbase;
4430:Middlewares/Third_Party/FatFs/src/ff.c **** 					i = 0; p = 0;
4431:Middlewares/Third_Party/FatFs/src/ff.c **** 					do {
4432:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (i == 0) {
4433:Middlewares/Third_Party/FatFs/src/ff.c **** 							res = move_window(fs, sect++);
4434:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res != FR_OK) break;
4435:Middlewares/Third_Party/FatFs/src/ff.c **** 							p = fs->win;
4436:Middlewares/Third_Party/FatFs/src/ff.c **** 							i = SS(fs);
4437:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
4438:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (fs->fs_type == FS_FAT16) {
4439:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (ld_word(p) == 0) nfree++;
4440:Middlewares/Third_Party/FatFs/src/ff.c **** 							p += 2; i -= 2;
4441:Middlewares/Third_Party/FatFs/src/ff.c **** 						} else {
4442:Middlewares/Third_Party/FatFs/src/ff.c **** 							if ((ld_dword(p) & 0x0FFFFFFF) == 0) nfree++;
4443:Middlewares/Third_Party/FatFs/src/ff.c **** 							p += 4; i -= 4;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 111


4444:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
4445:Middlewares/Third_Party/FatFs/src/ff.c **** 					} while (--clst);
4446:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4447:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4448:Middlewares/Third_Party/FatFs/src/ff.c **** 			*nclst = nfree;			/* Return the free clusters */
4449:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->free_clst = nfree;	/* Now free_clst is valid */
4450:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->fsi_flag |= 1;		/* FSInfo is to be updated */
4451:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4452:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4453:Middlewares/Third_Party/FatFs/src/ff.c **** 
4454:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4455:Middlewares/Third_Party/FatFs/src/ff.c **** }
4456:Middlewares/Third_Party/FatFs/src/ff.c **** 
4457:Middlewares/Third_Party/FatFs/src/ff.c **** 
4458:Middlewares/Third_Party/FatFs/src/ff.c **** 
4459:Middlewares/Third_Party/FatFs/src/ff.c **** 
4460:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4461:Middlewares/Third_Party/FatFs/src/ff.c **** /* Truncate File                                                         */
4462:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4463:Middlewares/Third_Party/FatFs/src/ff.c **** 
4464:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_truncate (
4465:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp		/* Pointer to the file object */
4466:Middlewares/Third_Party/FatFs/src/ff.c **** )
4467:Middlewares/Third_Party/FatFs/src/ff.c **** {
4468:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4469:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4470:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD ncl;
4471:Middlewares/Third_Party/FatFs/src/ff.c **** 
4472:Middlewares/Third_Party/FatFs/src/ff.c **** 
4473:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&fp->obj, &fs);	/* Check validity of the file object */
4474:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);
4475:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
4476:Middlewares/Third_Party/FatFs/src/ff.c **** 
4477:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fp->fptr < fp->obj.objsize) {	/* Process when fptr is not on the eof */
4478:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->fptr == 0) {	/* When set file size to zero, remove entire cluster chain */
4479:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = remove_chain(&fp->obj, fp->obj.sclust, 0);
4480:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->obj.sclust = 0;
4481:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {				/* When truncate a part of the file, remove remaining clusters */
4482:Middlewares/Third_Party/FatFs/src/ff.c **** 			ncl = get_fat(&fp->obj, fp->clust);
4483:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_OK;
4484:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ncl == 0xFFFFFFFF) res = FR_DISK_ERR;
4485:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ncl == 1) res = FR_INT_ERR;
4486:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK && ncl < fs->n_fatent) {
4487:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = remove_chain(&fp->obj, ncl, fp->clust);
4488:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4489:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4490:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->obj.objsize = fp->fptr;	/* Set file size to current R/W point */
4491:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->flag |= FA_MODIFIED;
4492:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
4493:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK && (fp->flag & FA_DIRTY)) {
4494:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) {
4495:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_DISK_ERR;
4496:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
4497:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
4498:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4499:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4500:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 112


4501:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) ABORT(fs, res);
4502:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4503:Middlewares/Third_Party/FatFs/src/ff.c **** 
4504:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4505:Middlewares/Third_Party/FatFs/src/ff.c **** }
4506:Middlewares/Third_Party/FatFs/src/ff.c **** 
4507:Middlewares/Third_Party/FatFs/src/ff.c **** 
4508:Middlewares/Third_Party/FatFs/src/ff.c **** 
4509:Middlewares/Third_Party/FatFs/src/ff.c **** 
4510:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4511:Middlewares/Third_Party/FatFs/src/ff.c **** /* Delete a File/Directory                                               */
4512:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4513:Middlewares/Third_Party/FatFs/src/ff.c **** 
4514:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_unlink (
4515:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path		/* Pointer to the file or directory path */
4516:Middlewares/Third_Party/FatFs/src/ff.c **** )
4517:Middlewares/Third_Party/FatFs/src/ff.c **** {
4518:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4519:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj, sdj;
4520:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD dclst = 0;
4521:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4522:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4523:Middlewares/Third_Party/FatFs/src/ff.c **** 	_FDID obj;
4524:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4525:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
4526:Middlewares/Third_Party/FatFs/src/ff.c **** 
4527:Middlewares/Third_Party/FatFs/src/ff.c **** 
4528:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive */
4529:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, FA_WRITE);
4530:Middlewares/Third_Party/FatFs/src/ff.c **** 	dj.obj.fs = fs;
4531:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4532:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
4533:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);		/* Follow the file path */
4534:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_RPATH && res == FR_OK && (dj.fn[NSFLAG] & NS_DOT)) {
4535:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_INVALID_NAME;			/* Cannot remove dot entry */
4536:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4537:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
4538:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) res = chk_lock(&dj, 2);	/* Check if it is an open object */
4539:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4540:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {					/* The object is accessible */
4541:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {
4542:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;		/* Cannot remove the origin directory */
4543:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
4544:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dj.obj.attr & AM_RDO) {
4545:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_DENIED;		/* Cannot remove R/O object */
4546:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4547:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4548:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {
4549:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4550:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj.fs = fs;
4551:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fs->fs_type == FS_EXFAT) {
4552:Middlewares/Third_Party/FatFs/src/ff.c **** 					obj.sclust = dclst = ld_dword(fs->dirbuf + XDIR_FstClus);
4553:Middlewares/Third_Party/FatFs/src/ff.c **** 					obj.objsize = ld_qword(fs->dirbuf + XDIR_FileSize);
4554:Middlewares/Third_Party/FatFs/src/ff.c **** 					obj.stat = fs->dirbuf[XDIR_GenFlags] & 2;
4555:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else
4556:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4557:Middlewares/Third_Party/FatFs/src/ff.c **** 				{
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 113


4558:Middlewares/Third_Party/FatFs/src/ff.c **** 					dclst = ld_clust(fs, dj.dir);
4559:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4560:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dj.obj.attr & AM_DIR) {			/* Is it a sub-directory? */
4561:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH != 0
4562:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (dclst == fs->cdir) {		 		/* Is it the current directory? */
4563:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = FR_DENIED;
4564:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else
4565:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4566:Middlewares/Third_Party/FatFs/src/ff.c **** 					{
4567:Middlewares/Third_Party/FatFs/src/ff.c **** 						sdj.obj.fs = fs;						/* Open the sub-directory */
4568:Middlewares/Third_Party/FatFs/src/ff.c **** 						sdj.obj.sclust = dclst;
4569:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4570:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (fs->fs_type == FS_EXFAT) {
4571:Middlewares/Third_Party/FatFs/src/ff.c **** 							sdj.obj.objsize = obj.objsize;
4572:Middlewares/Third_Party/FatFs/src/ff.c **** 							sdj.obj.stat = obj.stat;
4573:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
4574:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4575:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = dir_sdi(&sdj, 0);
4576:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (res == FR_OK) {
4577:Middlewares/Third_Party/FatFs/src/ff.c **** 							res = dir_read(&sdj, 0);			/* Read an item */
4578:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res == FR_OK) res = FR_DENIED;	/* Not empty? */
4579:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res == FR_NO_FILE) res = FR_OK;	/* Empty? */
4580:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
4581:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
4582:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4583:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4584:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {
4585:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_remove(&dj);			/* Remove the directory entry */
4586:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK && dclst) {	/* Remove the cluster chain if exist */
4587:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4588:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = remove_chain(&obj, dclst, 0);
4589:Middlewares/Third_Party/FatFs/src/ff.c **** #else
4590:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = remove_chain(&dj.obj, dclst, 0);
4591:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4592:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4593:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) res = sync_fs(fs);
4594:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4595:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4596:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_NAMBUF();
4597:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4598:Middlewares/Third_Party/FatFs/src/ff.c **** 
4599:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4600:Middlewares/Third_Party/FatFs/src/ff.c **** }
4601:Middlewares/Third_Party/FatFs/src/ff.c **** 
4602:Middlewares/Third_Party/FatFs/src/ff.c **** 
4603:Middlewares/Third_Party/FatFs/src/ff.c **** 
4604:Middlewares/Third_Party/FatFs/src/ff.c **** 
4605:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4606:Middlewares/Third_Party/FatFs/src/ff.c **** /* Create a Directory                                                    */
4607:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4608:Middlewares/Third_Party/FatFs/src/ff.c **** 
4609:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_mkdir (
4610:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path		/* Pointer to the directory path */
4611:Middlewares/Third_Party/FatFs/src/ff.c **** )
4612:Middlewares/Third_Party/FatFs/src/ff.c **** {
4613:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4614:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 114


4615:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4616:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *dir;
4617:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT n;
4618:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD dsc, dcl, pcl, tm;
4619:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
4620:Middlewares/Third_Party/FatFs/src/ff.c **** 
4621:Middlewares/Third_Party/FatFs/src/ff.c **** 
4622:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive */
4623:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, FA_WRITE);
4624:Middlewares/Third_Party/FatFs/src/ff.c **** 	dj.obj.fs = fs;
4625:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4626:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
4627:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);			/* Follow the file path */
4628:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) res = FR_EXIST;		/* Any object with same name is already existing */
4629:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_RPATH && res == FR_NO_FILE && (dj.fn[NSFLAG] & NS_DOT)) {
4630:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_INVALID_NAME;
4631:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4632:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_NO_FILE) {				/* Can create a new directory */
4633:Middlewares/Third_Party/FatFs/src/ff.c **** 			dcl = create_chain(&dj.obj, 0);		/* Allocate a cluster for the new directory table */
4634:Middlewares/Third_Party/FatFs/src/ff.c **** 			dj.obj.objsize = (DWORD)fs->csize * SS(fs);
4635:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_OK;
4636:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dcl == 0) res = FR_DENIED;		/* No space to allocate a new cluster */
4637:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dcl == 1) res = FR_INT_ERR;
4638:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dcl == 0xFFFFFFFF) res = FR_DISK_ERR;
4639:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) res = sync_window(fs);	/* Flush FAT */
4640:Middlewares/Third_Party/FatFs/src/ff.c **** 			tm = GET_FATTIME();
4641:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {					/* Initialize the new directory table */
4642:Middlewares/Third_Party/FatFs/src/ff.c **** 				dsc = clust2sect(fs, dcl);
4643:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir = fs->win;
4644:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_set(dir, 0, SS(fs));
4645:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!_FS_EXFAT || fs->fs_type != FS_EXFAT) {
4646:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_set(dir + DIR_Name, ' ', 11);	/* Create "." entry */
4647:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir[DIR_Name] = '.';
4648:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir[DIR_Attr] = AM_DIR;
4649:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dir + DIR_ModTime, tm);
4650:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fs, dir, dcl);
4651:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(dir + SZDIRE, dir, SZDIRE); 	/* Create ".." entry */
4652:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir[SZDIRE + 1] = '.'; pcl = dj.obj.sclust;
4653:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (fs->fs_type == FS_FAT32 && pcl == fs->dirbase) pcl = 0;
4654:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fs, dir + SZDIRE, pcl);
4655:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4656:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (n = fs->csize; n; n--) {	/* Write dot entries and clear following sectors */
4657:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->winsect = dsc++;
4658:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->wflag = 1;
4659:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = sync_window(fs);
4660:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res != FR_OK) break;
4661:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_set(dir, 0, SS(fs));
4662:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4663:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4664:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {
4665:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_register(&dj);	/* Register the object to the directoy */
4666:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4667:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {
4668:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4669:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fs->fs_type == FS_EXFAT) {	/* Initialize directory entry block */
4670:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(fs->dirbuf + XDIR_ModTime, tm);	/* Created time */
4671:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(fs->dirbuf + XDIR_FstClus, dcl);	/* Table start cluster */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 115


4672:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(fs->dirbuf + XDIR_FileSize, (DWORD)dj.obj.objsize);	/* File size needs to be valid */
4673:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(fs->dirbuf + XDIR_ValidFileSize, (DWORD)dj.obj.objsize);
4674:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->dirbuf[XDIR_GenFlags] = 3;				/* Initialize the object flag (contiguous) */
4675:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->dirbuf[XDIR_Attr] = AM_DIR;				/* Attribute */
4676:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = store_xdir(&dj);
4677:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else
4678:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4679:Middlewares/Third_Party/FatFs/src/ff.c **** 				{
4680:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir = dj.dir;
4681:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dir + DIR_ModTime, tm);	/* Created time */
4682:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fs, dir, dcl);				/* Table start cluster */
4683:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir[DIR_Attr] = AM_DIR;				/* Attribute */
4684:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->wflag = 1;
4685:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4686:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {
4687:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = sync_fs(fs);
4688:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4689:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
4690:Middlewares/Third_Party/FatFs/src/ff.c **** 				remove_chain(&dj.obj, dcl, 0);		/* Could not register, remove cluster chain */
4691:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4692:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4693:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_NAMBUF();
4694:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4695:Middlewares/Third_Party/FatFs/src/ff.c **** 
4696:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4697:Middlewares/Third_Party/FatFs/src/ff.c **** }
4698:Middlewares/Third_Party/FatFs/src/ff.c **** 
4699:Middlewares/Third_Party/FatFs/src/ff.c **** 
4700:Middlewares/Third_Party/FatFs/src/ff.c **** 
4701:Middlewares/Third_Party/FatFs/src/ff.c **** 
4702:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4703:Middlewares/Third_Party/FatFs/src/ff.c **** /* Rename a File/Directory                                               */
4704:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4705:Middlewares/Third_Party/FatFs/src/ff.c **** 
4706:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_rename (
4707:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path_old,	/* Pointer to the object name to be renamed */
4708:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path_new	/* Pointer to the new name */
4709:Middlewares/Third_Party/FatFs/src/ff.c **** )
4710:Middlewares/Third_Party/FatFs/src/ff.c **** {
4711:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4712:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR djo, djn;
4713:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4714:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE buf[_FS_EXFAT ? SZDIRE * 2 : 24], *dir;
4715:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD dw;
4716:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
4717:Middlewares/Third_Party/FatFs/src/ff.c **** 
4718:Middlewares/Third_Party/FatFs/src/ff.c **** 
4719:Middlewares/Third_Party/FatFs/src/ff.c **** 	get_ldnumber(&path_new);						/* Snip drive number of new name off */
4720:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path_old, &fs, FA_WRITE);	/* Get logical drive of the old object */
4721:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4722:Middlewares/Third_Party/FatFs/src/ff.c **** 		djo.obj.fs = fs;
4723:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
4724:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&djo, path_old);		/* Check old object */
4725:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK && (djo.fn[NSFLAG] & (NS_DOT | NS_NONAME))) res = FR_INVALID_NAME;	/* Check vali
4726:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
4727:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
4728:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = chk_lock(&djo, 2);
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 116


4729:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4730:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4731:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {						/* Object to be renamed is found */
4732:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4733:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->fs_type == FS_EXFAT) {	/* At exFAT */
4734:Middlewares/Third_Party/FatFs/src/ff.c **** 				BYTE nf, nn;
4735:Middlewares/Third_Party/FatFs/src/ff.c **** 				WORD nh;
4736:Middlewares/Third_Party/FatFs/src/ff.c **** 
4737:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_cpy(buf, fs->dirbuf, SZDIRE * 2);	/* Save 85+C0 entry of old object */
4738:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_cpy(&djn, &djo, sizeof djo);
4739:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = follow_path(&djn, path_new);		/* Make sure if new object name is not in use */
4740:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {						/* Is new name already in use by any other object? */
4741:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = (djn.obj.sclust == djo.obj.sclust && djn.dptr == djo.dptr) ? FR_NO_FILE : FR_EXIST;
4742:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4743:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) { 				/* It is a valid path and no name collision */
4744:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = dir_register(&djn);			/* Register the new entry */
4745:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res == FR_OK) {
4746:Middlewares/Third_Party/FatFs/src/ff.c **** 						nf = fs->dirbuf[XDIR_NumSec]; nn = fs->dirbuf[XDIR_NumName];
4747:Middlewares/Third_Party/FatFs/src/ff.c **** 						nh = ld_word(fs->dirbuf + XDIR_NameHash);
4748:Middlewares/Third_Party/FatFs/src/ff.c **** 						mem_cpy(fs->dirbuf, buf, SZDIRE * 2);
4749:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->dirbuf[XDIR_NumSec] = nf; fs->dirbuf[XDIR_NumName] = nn;
4750:Middlewares/Third_Party/FatFs/src/ff.c **** 						st_word(fs->dirbuf + XDIR_NameHash, nh);
4751:Middlewares/Third_Party/FatFs/src/ff.c **** /* Start of critical section where an interruption can cause a cross-link */
4752:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = store_xdir(&djn);
4753:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
4754:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4755:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else
4756:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4757:Middlewares/Third_Party/FatFs/src/ff.c **** 			{	/* At FAT12/FAT16/FAT32 */
4758:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_cpy(buf, djo.dir + DIR_Attr, 21);	/* Save information about the object except name */
4759:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_cpy(&djn, &djo, sizeof (DIR));		/* Duplicate the directory object */
4760:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = follow_path(&djn, path_new);		/* Make sure if new object name is not in use */
4761:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {						/* Is new name already in use by any other object? */
4762:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = (djn.obj.sclust == djo.obj.sclust && djn.dptr == djo.dptr) ? FR_NO_FILE : FR_EXIST;
4763:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4764:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) { 				/* It is a valid path and no name collision */
4765:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = dir_register(&djn);			/* Register the new entry */
4766:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res == FR_OK) {
4767:Middlewares/Third_Party/FatFs/src/ff.c **** 						dir = djn.dir;					/* Copy information about object except name */
4768:Middlewares/Third_Party/FatFs/src/ff.c **** 						mem_cpy(dir + 13, buf + 2, 19);
4769:Middlewares/Third_Party/FatFs/src/ff.c **** 						dir[DIR_Attr] = buf[0] | AM_ARC;
4770:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->wflag = 1;
4771:Middlewares/Third_Party/FatFs/src/ff.c **** 						if ((dir[DIR_Attr] & AM_DIR) && djo.obj.sclust != djn.obj.sclust) {	/* Update .. entry in the
4772:Middlewares/Third_Party/FatFs/src/ff.c **** 							dw = clust2sect(fs, ld_clust(fs, dir));
4773:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (!dw) {
4774:Middlewares/Third_Party/FatFs/src/ff.c **** 								res = FR_INT_ERR;
4775:Middlewares/Third_Party/FatFs/src/ff.c **** 							} else {
4776:Middlewares/Third_Party/FatFs/src/ff.c **** /* Start of critical section where an interruption can cause a cross-link */
4777:Middlewares/Third_Party/FatFs/src/ff.c **** 								res = move_window(fs, dw);
4778:Middlewares/Third_Party/FatFs/src/ff.c **** 								dir = fs->win + SZDIRE * 1;	/* Ptr to .. entry */
4779:Middlewares/Third_Party/FatFs/src/ff.c **** 								if (res == FR_OK && dir[1] == '.') {
4780:Middlewares/Third_Party/FatFs/src/ff.c **** 									st_clust(fs, dir, djn.obj.sclust);
4781:Middlewares/Third_Party/FatFs/src/ff.c **** 									fs->wflag = 1;
4782:Middlewares/Third_Party/FatFs/src/ff.c **** 								}
4783:Middlewares/Third_Party/FatFs/src/ff.c **** 							}
4784:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
4785:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 117


4786:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4787:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4788:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {
4789:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_remove(&djo);		/* Remove old entry */
4790:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {
4791:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = sync_fs(fs);
4792:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4793:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4794:Middlewares/Third_Party/FatFs/src/ff.c **** /* End of the critical section */
4795:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4796:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_NAMBUF();
4797:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4798:Middlewares/Third_Party/FatFs/src/ff.c **** 
4799:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4800:Middlewares/Third_Party/FatFs/src/ff.c **** }
4801:Middlewares/Third_Party/FatFs/src/ff.c **** 
4802:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
4803:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _FS_MINIMIZE == 0 */
4804:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _FS_MINIMIZE <= 1 */
4805:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _FS_MINIMIZE <= 2 */
4806:Middlewares/Third_Party/FatFs/src/ff.c **** 
4807:Middlewares/Third_Party/FatFs/src/ff.c **** 
4808:Middlewares/Third_Party/FatFs/src/ff.c **** 
4809:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_CHMOD && !_FS_READONLY
4810:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4811:Middlewares/Third_Party/FatFs/src/ff.c **** /* Change Attribute                                                      */
4812:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4813:Middlewares/Third_Party/FatFs/src/ff.c **** 
4814:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_chmod (
4815:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Pointer to the file path */
4816:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE attr,			/* Attribute bits */
4817:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE mask			/* Attribute mask to change */
4818:Middlewares/Third_Party/FatFs/src/ff.c **** )
4819:Middlewares/Third_Party/FatFs/src/ff.c **** {
4820:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4821:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
4822:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4823:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
4824:Middlewares/Third_Party/FatFs/src/ff.c **** 
4825:Middlewares/Third_Party/FatFs/src/ff.c **** 
4826:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, FA_WRITE);	/* Get logical drive */
4827:Middlewares/Third_Party/FatFs/src/ff.c **** 	dj.obj.fs = fs;
4828:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4829:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
4830:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);	/* Follow the file path */
4831:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK && (dj.fn[NSFLAG] & (NS_DOT | NS_NONAME))) res = FR_INVALID_NAME;	/* Check objec
4832:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
4833:Middlewares/Third_Party/FatFs/src/ff.c **** 			mask &= AM_RDO|AM_HID|AM_SYS|AM_ARC;	/* Valid attribute mask */
4834:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4835:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->fs_type == FS_EXFAT) {
4836:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->dirbuf[XDIR_Attr] = (attr & mask) | (fs->dirbuf[XDIR_Attr] & (BYTE)~mask);	/* Apply attribu
4837:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = store_xdir(&dj);
4838:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else
4839:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4840:Middlewares/Third_Party/FatFs/src/ff.c **** 			{
4841:Middlewares/Third_Party/FatFs/src/ff.c **** 				dj.dir[DIR_Attr] = (attr & mask) | (dj.dir[DIR_Attr] & (BYTE)~mask);	/* Apply attribute change 
4842:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->wflag = 1;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 118


4843:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4844:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {
4845:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = sync_fs(fs);
4846:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4847:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4848:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_NAMBUF();
4849:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4850:Middlewares/Third_Party/FatFs/src/ff.c **** 
4851:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4852:Middlewares/Third_Party/FatFs/src/ff.c **** }
4853:Middlewares/Third_Party/FatFs/src/ff.c **** 
4854:Middlewares/Third_Party/FatFs/src/ff.c **** 
4855:Middlewares/Third_Party/FatFs/src/ff.c **** 
4856:Middlewares/Third_Party/FatFs/src/ff.c **** 
4857:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4858:Middlewares/Third_Party/FatFs/src/ff.c **** /* Change Timestamp                                                      */
4859:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4860:Middlewares/Third_Party/FatFs/src/ff.c **** 
4861:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_utime (
4862:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Pointer to the file/directory name */
4863:Middlewares/Third_Party/FatFs/src/ff.c **** 	const FILINFO* fno	/* Pointer to the time stamp to be set */
4864:Middlewares/Third_Party/FatFs/src/ff.c **** )
4865:Middlewares/Third_Party/FatFs/src/ff.c **** {
4866:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4867:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
4868:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4869:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
4870:Middlewares/Third_Party/FatFs/src/ff.c **** 
4871:Middlewares/Third_Party/FatFs/src/ff.c **** 
4872:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, FA_WRITE);	/* Get logical drive */
4873:Middlewares/Third_Party/FatFs/src/ff.c **** 	dj.obj.fs = fs;
4874:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4875:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
4876:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);	/* Follow the file path */
4877:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK && (dj.fn[NSFLAG] & (NS_DOT | NS_NONAME))) res = FR_INVALID_NAME;	/* Check objec
4878:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
4879:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4880:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->fs_type == FS_EXFAT) {
4881:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(fs->dirbuf + XDIR_ModTime, (DWORD)fno->fdate << 16 | fno->ftime);
4882:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = store_xdir(&dj);
4883:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else
4884:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4885:Middlewares/Third_Party/FatFs/src/ff.c **** 			{
4886:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(dj.dir + DIR_ModTime, (DWORD)fno->fdate << 16 | fno->ftime);
4887:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->wflag = 1;
4888:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4889:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {
4890:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = sync_fs(fs);
4891:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4892:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4893:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_NAMBUF();
4894:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4895:Middlewares/Third_Party/FatFs/src/ff.c **** 
4896:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4897:Middlewares/Third_Party/FatFs/src/ff.c **** }
4898:Middlewares/Third_Party/FatFs/src/ff.c **** 
4899:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _USE_CHMOD && !_FS_READONLY */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 119


4900:Middlewares/Third_Party/FatFs/src/ff.c **** 
4901:Middlewares/Third_Party/FatFs/src/ff.c **** 
4902:Middlewares/Third_Party/FatFs/src/ff.c **** 
4903:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LABEL
4904:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4905:Middlewares/Third_Party/FatFs/src/ff.c **** /* Get Volume Label                                                      */
4906:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4907:Middlewares/Third_Party/FatFs/src/ff.c **** 
4908:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_getlabel (
4909:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Path name of the logical drive number */
4910:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR* label,		/* Pointer to a buffer to return the volume label */
4911:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD* vsn			/* Pointer to a variable to return the volume serial number */
4912:Middlewares/Third_Party/FatFs/src/ff.c **** )
4913:Middlewares/Third_Party/FatFs/src/ff.c **** {
4914:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4915:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
4916:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4917:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT si, di;
4918:Middlewares/Third_Party/FatFs/src/ff.c **** #if _LFN_UNICODE || _FS_EXFAT
4919:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR w;
4920:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4921:Middlewares/Third_Party/FatFs/src/ff.c **** 
4922:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive */
4923:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, 0);
4924:Middlewares/Third_Party/FatFs/src/ff.c **** 
4925:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get volume label */
4926:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK && label) {
4927:Middlewares/Third_Party/FatFs/src/ff.c **** 		dj.obj.fs = fs; dj.obj.sclust = 0;	/* Open root directory */
4928:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_sdi(&dj, 0);
4929:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
4930:Middlewares/Third_Party/FatFs/src/ff.c **** 		 	res = dir_read(&dj, 1);			/* Find a volume label entry */
4931:Middlewares/Third_Party/FatFs/src/ff.c **** 		 	if (res == FR_OK) {
4932:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4933:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fs->fs_type == FS_EXFAT) {
4934:Middlewares/Third_Party/FatFs/src/ff.c **** 					for (si = di = 0; si < dj.dir[XDIR_NumLabel]; si++) {	/* Extract volume label from 83 entry */
4935:Middlewares/Third_Party/FatFs/src/ff.c **** 						w = ld_word(dj.dir + XDIR_Label + si * 2);
4936:Middlewares/Third_Party/FatFs/src/ff.c **** #if _LFN_UNICODE
4937:Middlewares/Third_Party/FatFs/src/ff.c **** 						label[di++] = w;
4938:Middlewares/Third_Party/FatFs/src/ff.c **** #else
4939:Middlewares/Third_Party/FatFs/src/ff.c **** 						w = ff_convert(w, 0);	/* Unicode -> OEM */
4940:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (w == 0) w = '?';	/* Replace wrong character */
4941:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (_DF1S && w >= 0x100) label[di++] = (char)(w >> 8);
4942:Middlewares/Third_Party/FatFs/src/ff.c **** 						label[di++] = (char)w;
4943:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4944:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
4945:Middlewares/Third_Party/FatFs/src/ff.c **** 					label[di] = 0;
4946:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else
4947:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4948:Middlewares/Third_Party/FatFs/src/ff.c **** 				{
4949:Middlewares/Third_Party/FatFs/src/ff.c **** 					si = di = 0;		/* Extract volume label from AM_VOL entry with code comversion */
4950:Middlewares/Third_Party/FatFs/src/ff.c **** 					do {
4951:Middlewares/Third_Party/FatFs/src/ff.c **** #if _LFN_UNICODE
4952:Middlewares/Third_Party/FatFs/src/ff.c **** 						w = (si < 11) ? dj.dir[si++] : ' ';
4953:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (IsDBCS1(w) && si < 11 && IsDBCS2(dj.dir[si])) {
4954:Middlewares/Third_Party/FatFs/src/ff.c **** 							w = w << 8 | dj.dir[si++];
4955:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
4956:Middlewares/Third_Party/FatFs/src/ff.c **** 						label[di++] = ff_convert(w, 1);	/* OEM -> Unicode */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 120


4957:Middlewares/Third_Party/FatFs/src/ff.c **** #else
4958:Middlewares/Third_Party/FatFs/src/ff.c **** 						label[di++] = dj.dir[si++];
4959:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4960:Middlewares/Third_Party/FatFs/src/ff.c **** 					} while (di < 11);
4961:Middlewares/Third_Party/FatFs/src/ff.c **** 					do {				/* Truncate trailing spaces */
4962:Middlewares/Third_Party/FatFs/src/ff.c **** 						label[di] = 0;
4963:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (di == 0) break;
4964:Middlewares/Third_Party/FatFs/src/ff.c **** 					} while (label[--di] == ' ');
4965:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4966:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4967:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4968:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_NO_FILE) {	/* No label entry and return nul string */
4969:Middlewares/Third_Party/FatFs/src/ff.c **** 			label[0] = 0;
4970:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_OK;
4971:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4972:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4973:Middlewares/Third_Party/FatFs/src/ff.c **** 
4974:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get volume serial number */
4975:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK && vsn) {
4976:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(fs, fs->volbase);
4977:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
4978:Middlewares/Third_Party/FatFs/src/ff.c **** 			switch (fs->fs_type) {
4979:Middlewares/Third_Party/FatFs/src/ff.c **** 			case FS_EXFAT:
4980:Middlewares/Third_Party/FatFs/src/ff.c **** 				di = BPB_VolIDEx; break;
4981:Middlewares/Third_Party/FatFs/src/ff.c **** 
4982:Middlewares/Third_Party/FatFs/src/ff.c **** 			case FS_FAT32:
4983:Middlewares/Third_Party/FatFs/src/ff.c **** 				di = BS_VolID32; break;
4984:Middlewares/Third_Party/FatFs/src/ff.c **** 
4985:Middlewares/Third_Party/FatFs/src/ff.c **** 			default:
4986:Middlewares/Third_Party/FatFs/src/ff.c **** 				di = BS_VolID;
4987:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4988:Middlewares/Third_Party/FatFs/src/ff.c **** 			*vsn = ld_dword(fs->win + di);
4989:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4990:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4991:Middlewares/Third_Party/FatFs/src/ff.c **** 
4992:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4993:Middlewares/Third_Party/FatFs/src/ff.c **** }
4994:Middlewares/Third_Party/FatFs/src/ff.c **** 
4995:Middlewares/Third_Party/FatFs/src/ff.c **** 
4996:Middlewares/Third_Party/FatFs/src/ff.c **** 
4997:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
4998:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4999:Middlewares/Third_Party/FatFs/src/ff.c **** /* Set Volume Label                                                      */
5000:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5001:Middlewares/Third_Party/FatFs/src/ff.c **** 
5002:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_setlabel (
5003:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* label	/* Pointer to the volume label to set */
5004:Middlewares/Third_Party/FatFs/src/ff.c **** )
5005:Middlewares/Third_Party/FatFs/src/ff.c **** {
5006:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
5007:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
5008:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
5009:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE dirvn[22];
5010:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, j, slen;
5011:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR w;
5012:Middlewares/Third_Party/FatFs/src/ff.c **** 	static const char badchr[] = "\"*+,.:;<=>\?[]|\x7F";
5013:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 121


5014:Middlewares/Third_Party/FatFs/src/ff.c **** 
5015:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive */
5016:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&label, &fs, FA_WRITE);
5017:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) LEAVE_FF(fs, res);
5018:Middlewares/Third_Party/FatFs/src/ff.c **** 	dj.obj.fs = fs;
5019:Middlewares/Third_Party/FatFs/src/ff.c **** 
5020:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get length of given volume label */
5021:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (slen = 0; (UINT)label[slen] >= ' '; slen++) ;	/* Get name length */
5022:Middlewares/Third_Party/FatFs/src/ff.c **** 
5023:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
5024:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_EXFAT) {	/* On the exFAT volume */
5025:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = j = 0; i < slen; ) {	/* Create volume label in directory form */
5026:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = label[i++];
5027:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_LFN_UNICODE
5028:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (IsDBCS1(w)) {
5029:Middlewares/Third_Party/FatFs/src/ff.c **** 				w = (i < slen && IsDBCS2(label[i])) ? w << 8 | (BYTE)label[i++] : 0;
5030:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5031:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = ff_convert(w, 1);
5032:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5033:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (w == 0 || chk_chr(badchr, w) || j == 22) {	/* Check validity check validity of the volume la
5034:Middlewares/Third_Party/FatFs/src/ff.c **** 				LEAVE_FF(fs, FR_INVALID_NAME);
5035:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5036:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(dirvn + j, w); j += 2;
5037:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5038:Middlewares/Third_Party/FatFs/src/ff.c **** 		slen = j;
5039:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else
5040:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5041:Middlewares/Third_Party/FatFs/src/ff.c **** 	{	/* On the FAT12/16/32 volume */
5042:Middlewares/Third_Party/FatFs/src/ff.c **** 		for ( ; slen && label[slen - 1] == ' '; slen--) ;	/* Remove trailing spaces */
5043:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (slen) {		/* Is there a volume label to be set? */
5044:Middlewares/Third_Party/FatFs/src/ff.c **** 			dirvn[0] = 0; i = j = 0;	/* Create volume label in directory form */
5045:Middlewares/Third_Party/FatFs/src/ff.c **** 			do {
5046:Middlewares/Third_Party/FatFs/src/ff.c **** #if _LFN_UNICODE
5047:Middlewares/Third_Party/FatFs/src/ff.c **** 				w = ff_convert(ff_wtoupper(label[i++]), 0);
5048:Middlewares/Third_Party/FatFs/src/ff.c **** #else
5049:Middlewares/Third_Party/FatFs/src/ff.c **** 				w = (BYTE)label[i++];
5050:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (IsDBCS1(w)) {
5051:Middlewares/Third_Party/FatFs/src/ff.c **** 					w = (j < 10 && i < slen && IsDBCS2(label[i])) ? w << 8 | (BYTE)label[i++] : 0;
5052:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5053:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0
5054:Middlewares/Third_Party/FatFs/src/ff.c **** 				w = ff_convert(ff_wtoupper(ff_convert(w, 1)), 0);
5055:Middlewares/Third_Party/FatFs/src/ff.c **** #else
5056:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (IsLower(w)) w -= 0x20;			/* To upper ASCII characters */
5057:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _EXCVT
5058:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (w >= 0x80) w = ExCvt[w - 0x80];	/* To upper extended characters (SBCS cfg) */
5059:Middlewares/Third_Party/FatFs/src/ff.c **** #else
5060:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!_DF1S && w >= 0x80) w = 0;		/* Reject extended characters (ASCII cfg) */
5061:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5062:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5063:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5064:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (w == 0 || chk_chr(badchr, w) || j >= (UINT)((w >= 0x100) ? 10 : 11)) {	/* Reject invalid ch
5065:Middlewares/Third_Party/FatFs/src/ff.c **** 					LEAVE_FF(fs, FR_INVALID_NAME);
5066:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5067:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (w >= 0x100) dirvn[j++] = (BYTE)(w >> 8);
5068:Middlewares/Third_Party/FatFs/src/ff.c **** 				dirvn[j++] = (BYTE)w;
5069:Middlewares/Third_Party/FatFs/src/ff.c **** 			} while (i < slen);
5070:Middlewares/Third_Party/FatFs/src/ff.c **** 			while (j < 11) dirvn[j++] = ' ';	/* Fill remaining name field */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 122


5071:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dirvn[0] == DDEM) LEAVE_FF(fs, FR_INVALID_NAME);	/* Reject illegal name (heading DDEM) */
5072:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5073:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5074:Middlewares/Third_Party/FatFs/src/ff.c **** 
5075:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Set volume label */
5076:Middlewares/Third_Party/FatFs/src/ff.c **** 	dj.obj.sclust = 0;		/* Open root directory */
5077:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_sdi(&dj, 0);
5078:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
5079:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_read(&dj, 1);	/* Get volume label entry */
5080:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
5081:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (_FS_EXFAT && fs->fs_type == FS_EXFAT) {
5082:Middlewares/Third_Party/FatFs/src/ff.c **** 				dj.dir[XDIR_NumLabel] = (BYTE)(slen / 2);	/* Change the volume label */
5083:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_cpy(dj.dir + XDIR_Label, dirvn, slen);
5084:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
5085:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (slen) {
5086:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(dj.dir, dirvn, 11);	/* Change the volume label */
5087:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
5088:Middlewares/Third_Party/FatFs/src/ff.c **** 					dj.dir[DIR_Name] = DDEM;	/* Remove the volume label */
5089:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5090:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5091:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
5092:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = sync_fs(fs);
5093:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {			/* No volume label entry is found or error */
5094:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_NO_FILE) {
5095:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_OK;
5096:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (slen) {	/* Create a volume label entry */
5097:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = dir_alloc(&dj, 1);	/* Allocate an entry */
5098:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res == FR_OK) {
5099:Middlewares/Third_Party/FatFs/src/ff.c **** 						mem_set(dj.dir, 0, SZDIRE);	/* Clear the entry */
5100:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (_FS_EXFAT && fs->fs_type == FS_EXFAT) {
5101:Middlewares/Third_Party/FatFs/src/ff.c **** 							dj.dir[XDIR_Type] = 0x83;		/* Create 83 entry */
5102:Middlewares/Third_Party/FatFs/src/ff.c **** 							dj.dir[XDIR_NumLabel] = (BYTE)(slen / 2);
5103:Middlewares/Third_Party/FatFs/src/ff.c **** 							mem_cpy(dj.dir + XDIR_Label, dirvn, slen);
5104:Middlewares/Third_Party/FatFs/src/ff.c **** 						} else {
5105:Middlewares/Third_Party/FatFs/src/ff.c **** 							dj.dir[DIR_Attr] = AM_VOL;		/* Create volume label entry */
5106:Middlewares/Third_Party/FatFs/src/ff.c **** 							mem_cpy(dj.dir, dirvn, 11);
5107:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
5108:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->wflag = 1;
5109:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = sync_fs(fs);
5110:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
5111:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5112:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5113:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5114:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5115:Middlewares/Third_Party/FatFs/src/ff.c **** 
5116:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
5117:Middlewares/Third_Party/FatFs/src/ff.c **** }
5118:Middlewares/Third_Party/FatFs/src/ff.c **** 
5119:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
5120:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _USE_LABEL */
5121:Middlewares/Third_Party/FatFs/src/ff.c **** 
5122:Middlewares/Third_Party/FatFs/src/ff.c **** 
5123:Middlewares/Third_Party/FatFs/src/ff.c **** 
5124:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_EXPAND && !_FS_READONLY
5125:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5126:Middlewares/Third_Party/FatFs/src/ff.c **** /* Allocate a Contiguous Blocks to the File                              */
5127:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 123


5128:Middlewares/Third_Party/FatFs/src/ff.c **** 
5129:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_expand (
5130:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp,		/* Pointer to the file object */
5131:Middlewares/Third_Party/FatFs/src/ff.c **** 	FSIZE_t fsz,	/* File size to be expanded to */
5132:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE opt		/* Operation mode 0:Find and prepare or 1:Find and allocate */
5133:Middlewares/Third_Party/FatFs/src/ff.c **** )
5134:Middlewares/Third_Party/FatFs/src/ff.c **** {
5135:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
5136:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
5137:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD n, clst, stcl, scl, ncl, tcl, lclst;
5138:Middlewares/Third_Party/FatFs/src/ff.c **** 
5139:Middlewares/Third_Party/FatFs/src/ff.c **** 
5140:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&fp->obj, &fs);		/* Check validity of the file object */
5141:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);
5142:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fsz == 0 || fp->obj.objsize != 0 || !(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);
5143:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
5144:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type != FS_EXFAT && fsz >= 0x100000000) LEAVE_FF(fs, FR_DENIED);	/* Check if in size li
5145:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5146:Middlewares/Third_Party/FatFs/src/ff.c **** 	n = (DWORD)fs->csize * SS(fs);	/* Cluster size */
5147:Middlewares/Third_Party/FatFs/src/ff.c **** 	tcl = (DWORD)(fsz / n) + ((fsz & (n - 1)) ? 1 : 0);	/* Number of clusters required */
5148:Middlewares/Third_Party/FatFs/src/ff.c **** 	stcl = fs->last_clst; lclst = 0;
5149:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stcl < 2 || stcl >= fs->n_fatent) stcl = 2;
5150:Middlewares/Third_Party/FatFs/src/ff.c **** 
5151:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
5152:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_EXFAT) {
5153:Middlewares/Third_Party/FatFs/src/ff.c **** 		scl = find_bitmap(fs, stcl, tcl);			/* Find a contiguous cluster block */
5154:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (scl == 0) res = FR_DENIED;				/* No contiguous cluster block was found */
5155:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (scl == 0xFFFFFFFF) res = FR_DISK_ERR;
5156:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {	/* A contiguous free area is found */
5157:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (opt) {		/* Allocate it now */
5158:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = change_bitmap(fs, scl, tcl, 1);	/* Mark the cluster block 'in use' */
5159:Middlewares/Third_Party/FatFs/src/ff.c **** 				lclst = scl + tcl - 1;
5160:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {		/* Set it as suggested point for next allocation */
5161:Middlewares/Third_Party/FatFs/src/ff.c **** 				lclst = scl - 1;
5162:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5163:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5164:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else
5165:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5166:Middlewares/Third_Party/FatFs/src/ff.c **** 	{
5167:Middlewares/Third_Party/FatFs/src/ff.c **** 		scl = clst = stcl; ncl = 0;
5168:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (;;) {	/* Find a contiguous cluster block */
5169:Middlewares/Third_Party/FatFs/src/ff.c **** 			n = get_fat(&fp->obj, clst);
5170:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (++clst >= fs->n_fatent) clst = 2;
5171:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (n == 1) { res = FR_INT_ERR; break; }
5172:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (n == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }
5173:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (n == 0) {	/* Is it a free cluster? */
5174:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (++ncl == tcl) break;	/* Break if a contiguous cluster block is found */
5175:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
5176:Middlewares/Third_Party/FatFs/src/ff.c **** 				scl = clst; ncl = 0;		/* Not a free cluster */
5177:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5178:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (clst == stcl) { res = FR_DENIED; break; }	/* No contiguous cluster? */
5179:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5180:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {	/* A contiguous free area is found */
5181:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (opt) {		/* Allocate it now */
5182:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (clst = scl, n = tcl; n; clst++, n--) {	/* Create a cluster chain on the FAT */
5183:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = put_fat(fs, clst, (n == 1) ? 0xFFFFFFFF : clst + 1);
5184:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res != FR_OK) break;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 124


5185:Middlewares/Third_Party/FatFs/src/ff.c **** 					lclst = clst;
5186:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5187:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {		/* Set it as suggested point for next allocation */
5188:Middlewares/Third_Party/FatFs/src/ff.c **** 				lclst = scl - 1;
5189:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5190:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5191:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5192:Middlewares/Third_Party/FatFs/src/ff.c **** 
5193:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
5194:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->last_clst = lclst;		/* Set suggested start cluster to start next */
5195:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (opt) {	/* Is it allocated now? */
5196:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->obj.sclust = scl;		/* Update object allocation information */
5197:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->obj.objsize = fsz;
5198:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (_FS_EXFAT) fp->obj.stat = 2;	/* Set status 'contiguous chain' */
5199:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->flag |= FA_MODIFIED;
5200:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->free_clst <= fs->n_fatent - 2) {	/* Update FSINFO */
5201:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->free_clst -= tcl;
5202:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->fsi_flag |= 1;
5203:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5204:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5205:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5206:Middlewares/Third_Party/FatFs/src/ff.c **** 
5207:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
5208:Middlewares/Third_Party/FatFs/src/ff.c **** }
5209:Middlewares/Third_Party/FatFs/src/ff.c **** 
5210:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _USE_EXPAND && !_FS_READONLY */
5211:Middlewares/Third_Party/FatFs/src/ff.c **** 
5212:Middlewares/Third_Party/FatFs/src/ff.c **** 
5213:Middlewares/Third_Party/FatFs/src/ff.c **** 
5214:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FORWARD
5215:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5216:Middlewares/Third_Party/FatFs/src/ff.c **** /* Forward data to the stream directly                                   */
5217:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5218:Middlewares/Third_Party/FatFs/src/ff.c **** 
5219:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_forward (
5220:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp, 						/* Pointer to the file object */
5221:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT (*func)(const BYTE*,UINT),	/* Pointer to the streaming function */
5222:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT btf,						/* Number of bytes to forward */
5223:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT* bf						/* Pointer to number of bytes forwarded */
5224:Middlewares/Third_Party/FatFs/src/ff.c **** )
5225:Middlewares/Third_Party/FatFs/src/ff.c **** {
5226:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
5227:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
5228:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst, sect;
5229:Middlewares/Third_Party/FatFs/src/ff.c **** 	FSIZE_t remain;
5230:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT rcnt, csect;
5231:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *dbuf;
5232:Middlewares/Third_Party/FatFs/src/ff.c **** 
5233:Middlewares/Third_Party/FatFs/src/ff.c **** 
5234:Middlewares/Third_Party/FatFs/src/ff.c **** 	*bf = 0;	/* Clear transfer byte counter */
5235:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&fp->obj, &fs);		/* Check validity of the file object */
5236:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);
5237:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_READ)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
5238:Middlewares/Third_Party/FatFs/src/ff.c **** 
5239:Middlewares/Third_Party/FatFs/src/ff.c **** 	remain = fp->obj.objsize - fp->fptr;
5240:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (btf > remain) btf = (UINT)remain;			/* Truncate btf by remaining bytes */
5241:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 125


5242:Middlewares/Third_Party/FatFs/src/ff.c **** 	for ( ;  btf && (*func)(0, 0);					/* Repeat until all data transferred or stream goes busy */
5243:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->fptr += rcnt, *bf += rcnt, btf -= rcnt) {
5244:Middlewares/Third_Party/FatFs/src/ff.c **** 		csect = (UINT)(fp->fptr / SS(fs) & (fs->csize - 1));	/* Sector offset in the cluster */
5245:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->fptr % SS(fs) == 0) {				/* On the sector boundary? */
5246:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (csect == 0) {						/* On the cluster boundary? */
5247:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = (fp->fptr == 0) ?			/* On the top of the file? */
5248:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->obj.sclust : get_fat(&fp->obj, fp->clust);
5249:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst <= 1) ABORT(fs, FR_INT_ERR);
5250:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
5251:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;					/* Update current cluster */
5252:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5253:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5254:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect = clust2sect(fs, fp->clust);			/* Get current data sector */
5255:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!sect) ABORT(fs, FR_INT_ERR);
5256:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect += csect;
5257:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
5258:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (move_window(fs, sect) != FR_OK) ABORT(fs, FR_DISK_ERR);	/* Move sector window to the file dat
5259:Middlewares/Third_Party/FatFs/src/ff.c **** 		dbuf = fs->win;
5260:Middlewares/Third_Party/FatFs/src/ff.c **** #else
5261:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->sect != sect) {		/* Fill sector cache with file data */
5262:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
5263:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->flag & FA_DIRTY) {		/* Write-back dirty sector cache */
5264:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
5265:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
5266:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5267:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5268:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_read(fs->drv, fp->buf, sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
5269:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5270:Middlewares/Third_Party/FatFs/src/ff.c **** 		dbuf = fp->buf;
5271:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5272:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->sect = sect;
5273:Middlewares/Third_Party/FatFs/src/ff.c **** 		rcnt = SS(fs) - (UINT)fp->fptr % SS(fs);	/* Number of bytes left in the sector */
5274:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rcnt > btf) rcnt = btf;					/* Clip it by btr if needed */
5275:Middlewares/Third_Party/FatFs/src/ff.c **** 		rcnt = (*func)(dbuf + ((UINT)fp->fptr % SS(fs)), rcnt);	/* Forward the file data */
5276:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!rcnt) ABORT(fs, FR_INT_ERR);
5277:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5278:Middlewares/Third_Party/FatFs/src/ff.c **** 
5279:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, FR_OK);
5280:Middlewares/Third_Party/FatFs/src/ff.c **** }
5281:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _USE_FORWARD */
5282:Middlewares/Third_Party/FatFs/src/ff.c **** 
5283:Middlewares/Third_Party/FatFs/src/ff.c **** 
5284:Middlewares/Third_Party/FatFs/src/ff.c **** 
5285:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_MKFS && !_FS_READONLY
5286:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5287:Middlewares/Third_Party/FatFs/src/ff.c **** /* Create an FAT/exFAT volume                                            */
5288:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5289:Middlewares/Third_Party/FatFs/src/ff.c **** 
5290:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_mkfs (
5291:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Logical drive number */
5292:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE opt,			/* Format option */
5293:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD au,			/* Size of allocation unit (cluster) [byte] */
5294:Middlewares/Third_Party/FatFs/src/ff.c **** 	void* work,			/* Pointer to working buffer */
5295:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT len			/* Size of working buffer */
5296:Middlewares/Third_Party/FatFs/src/ff.c **** )
5297:Middlewares/Third_Party/FatFs/src/ff.c **** {
5298:Middlewares/Third_Party/FatFs/src/ff.c **** 	const UINT n_fats = 1;		/* Number of FATs for FAT12/16/32 volume (1 or 2) */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 126


5299:Middlewares/Third_Party/FatFs/src/ff.c **** 	const UINT n_rootdir = 512;	/* Number of root directory entries for FAT12/16 volume */
5300:Middlewares/Third_Party/FatFs/src/ff.c **** 	static const WORD cst[] = {1, 4, 16, 64, 256, 512, 0};	/* Cluster size boundary for FAT12/16 volum
5301:Middlewares/Third_Party/FatFs/src/ff.c **** 	static const WORD cst32[] = {1, 2, 4, 8, 16, 32, 0};	/* Cluster size boundary for FAT32 volume (12
5302:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE fmt, sys, *buf, *pte, pdrv, part;
5303:Middlewares/Third_Party/FatFs/src/ff.c **** 	WORD ss;
5304:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD szb_buf, sz_buf, sz_blk, n_clst, pau, sect, nsect, n;
5305:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD b_vol, b_fat, b_data;				/* Base LBA for volume, fat, data */
5306:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD sz_vol, sz_rsv, sz_fat, sz_dir;	/* Size for volume, fat, dir, data */
5307:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
5308:Middlewares/Third_Party/FatFs/src/ff.c **** 	int vol;
5309:Middlewares/Third_Party/FatFs/src/ff.c **** 	DSTATUS stat;
5310:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_TRIM || _FS_EXFAT
5311:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD tbl[3];
5312:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5313:Middlewares/Third_Party/FatFs/src/ff.c **** 
5314:Middlewares/Third_Party/FatFs/src/ff.c **** 
5315:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Check mounted drive and clear work area */
5316:Middlewares/Third_Party/FatFs/src/ff.c **** 	vol = get_ldnumber(&path);					/* Get target logical drive */
5317:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
5318:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (FatFs[vol]) FatFs[vol]->fs_type = 0;	/* Clear the volume */
5319:Middlewares/Third_Party/FatFs/src/ff.c **** 	pdrv = LD2PD(vol);	/* Physical drive */
5320:Middlewares/Third_Party/FatFs/src/ff.c **** 	part = LD2PT(vol);	/* Partition (0:create as new, 1-4:get from partition table) */
5321:Middlewares/Third_Party/FatFs/src/ff.c **** 
5322:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Check physical drive status */
5323:Middlewares/Third_Party/FatFs/src/ff.c **** 	stat = disk_initialize(pdrv);
5324:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_NOINIT) return FR_NOT_READY;
5325:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_PROTECT) return FR_WRITE_PROTECTED;
5326:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (disk_ioctl(pdrv, GET_BLOCK_SIZE, &sz_blk) != RES_OK || !sz_blk || sz_blk > 32768 || (sz_blk & 
5327:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS != _MIN_SS		/* Get sector size of the medium if variable sector size cfg. */
5328:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (disk_ioctl(pdrv, GET_SECTOR_SIZE, &ss) != RES_OK) return FR_DISK_ERR;
5329:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (ss > _MAX_SS || ss < _MIN_SS || (ss & (ss - 1))) return FR_DISK_ERR;
5330:Middlewares/Third_Party/FatFs/src/ff.c **** #else
5331:Middlewares/Third_Party/FatFs/src/ff.c **** 	ss = _MAX_SS;
5332:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5333:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((au != 0 && au < ss) || au > 0x1000000 || (au & (au - 1))) return FR_INVALID_PARAMETER;	/* Che
5334:Middlewares/Third_Party/FatFs/src/ff.c **** 	au /= ss;	/* Cluster size in unit of sector */
5335:Middlewares/Third_Party/FatFs/src/ff.c **** 
5336:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get working buffer */
5337:Middlewares/Third_Party/FatFs/src/ff.c **** 	buf = (BYTE*)work;		/* Working buffer */
5338:Middlewares/Third_Party/FatFs/src/ff.c **** 	sz_buf = len / ss;		/* Size of working buffer (sector) */
5339:Middlewares/Third_Party/FatFs/src/ff.c **** 	szb_buf = sz_buf * ss;	/* Size of working buffer (byte) */
5340:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!szb_buf) return FR_MKFS_ABORTED;
5341:Middlewares/Third_Party/FatFs/src/ff.c **** 
5342:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Determine where the volume to be located (b_vol, sz_vol) */
5343:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (_MULTI_PARTITION && part != 0) {
5344:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Get partition information from partition table in the MBR */
5345:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_read(pdrv, buf, 0, 1) != RES_OK) return FR_DISK_ERR;	/* Load MBR */
5346:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ld_word(buf + BS_55AA) != 0xAA55) return FR_MKFS_ABORTED;	/* Check if MBR is valid */
5347:Middlewares/Third_Party/FatFs/src/ff.c **** 		pte = buf + (MBR_Table + (part - 1) * SZ_PTE);
5348:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!pte[PTE_System]) return FR_MKFS_ABORTED;	/* No partition? */
5349:Middlewares/Third_Party/FatFs/src/ff.c **** 		b_vol = ld_dword(pte + PTE_StLba);		/* Get volume start sector */
5350:Middlewares/Third_Party/FatFs/src/ff.c **** 		sz_vol = ld_dword(pte + PTE_SizLba);	/* Get volume size */
5351:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
5352:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Create a single-partition in this function */
5353:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_ioctl(pdrv, GET_SECTOR_COUNT, &sz_vol) != RES_OK) return FR_DISK_ERR;
5354:Middlewares/Third_Party/FatFs/src/ff.c **** 		b_vol = (opt & FM_SFD) ? 0 : 63;		/* Volume start sector */
5355:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (sz_vol < b_vol) return FR_MKFS_ABORTED;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 127


5356:Middlewares/Third_Party/FatFs/src/ff.c **** 		sz_vol -= b_vol;						/* Volume size */
5357:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5358:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (sz_vol < 128) return FR_MKFS_ABORTED;	/* Check if volume size is >=128s */
5359:Middlewares/Third_Party/FatFs/src/ff.c **** 
5360:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Pre-determine the FAT type */
5361:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
5362:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_EXFAT && (opt & FM_EXFAT)) {	/* exFAT possible? */
5363:Middlewares/Third_Party/FatFs/src/ff.c **** 			if ((opt & FM_ANY) == FM_EXFAT || sz_vol >= 0x4000000 || au > 128) {	/* exFAT only, vol >= 64Ms 
5364:Middlewares/Third_Party/FatFs/src/ff.c **** 				fmt = FS_EXFAT; break;
5365:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5366:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5367:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (au > 128) return FR_INVALID_PARAMETER;	/* Too large au for FAT/FAT32 */
5368:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (opt & FM_FAT32) {	/* FAT32 possible? */
5369:Middlewares/Third_Party/FatFs/src/ff.c **** 			if ((opt & FM_ANY) == FM_FAT32 || !(opt & FM_FAT)) {	/* FAT32 only or no-FAT? */
5370:Middlewares/Third_Party/FatFs/src/ff.c **** 				fmt = FS_FAT32; break;
5371:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5372:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5373:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!(opt & FM_FAT)) return FR_INVALID_PARAMETER;	/* no-FAT? */
5374:Middlewares/Third_Party/FatFs/src/ff.c **** 		fmt = FS_FAT16;
5375:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (0);
5376:Middlewares/Third_Party/FatFs/src/ff.c **** 
5377:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
5378:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == FS_EXFAT) {	/* Create an exFAT volume */
5379:Middlewares/Third_Party/FatFs/src/ff.c **** 		DWORD szb_bit, szb_case, sum, nb, cl;
5380:Middlewares/Third_Party/FatFs/src/ff.c **** 		WCHAR ch, si;
5381:Middlewares/Third_Party/FatFs/src/ff.c **** 		UINT j, st;
5382:Middlewares/Third_Party/FatFs/src/ff.c **** 		BYTE b;
5383:Middlewares/Third_Party/FatFs/src/ff.c **** 
5384:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (sz_vol < 0x1000) return FR_MKFS_ABORTED;	/* Too small volume? */
5385:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_TRIM
5386:Middlewares/Third_Party/FatFs/src/ff.c **** 		tbl[0] = b_vol; tbl[1] = b_vol + sz_vol - 1;	/* Inform the device the volume area may be erased *
5387:Middlewares/Third_Party/FatFs/src/ff.c **** 		disk_ioctl(pdrv, CTRL_TRIM, tbl);
5388:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5389:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Determine FAT location, data location and number of clusters */
5390:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!au) {	/* au auto-selection */
5391:Middlewares/Third_Party/FatFs/src/ff.c **** 			au = 8;
5392:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (sz_vol >= 0x80000) au = 64;		/* >= 512Ks */
5393:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (sz_vol >= 0x4000000) au = 256;	/* >= 64Ms */
5394:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5395:Middlewares/Third_Party/FatFs/src/ff.c **** 		b_fat = b_vol + 32;										/* FAT start at offset 32 */
5396:Middlewares/Third_Party/FatFs/src/ff.c **** 		sz_fat = ((sz_vol / au + 2) * 4 + ss - 1) / ss;			/* Number of FAT sectors */
5397:Middlewares/Third_Party/FatFs/src/ff.c **** 		b_data = (b_fat + sz_fat + sz_blk - 1) & ~(sz_blk - 1);	/* Align data area to the erase block bou
5398:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (b_data >= sz_vol / 2) return FR_MKFS_ABORTED;		/* Too small volume? */
5399:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_clst = (sz_vol - (b_data - b_vol)) / au;				/* Number of clusters */
5400:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (n_clst <16) return FR_MKFS_ABORTED;					/* Too few clusters? */
5401:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (n_clst > MAX_EXFAT) return FR_MKFS_ABORTED;			/* Too many clusters? */
5402:Middlewares/Third_Party/FatFs/src/ff.c **** 
5403:Middlewares/Third_Party/FatFs/src/ff.c **** 		szb_bit = (n_clst + 7) / 8;						/* Size of allocation bitmap */
5404:Middlewares/Third_Party/FatFs/src/ff.c **** 		tbl[0] = (szb_bit + au * ss - 1) / (au * ss);	/* Number of allocation bitmap clusters */
5405:Middlewares/Third_Party/FatFs/src/ff.c **** 
5406:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Create a compressed up-case table */
5407:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect = b_data + au * tbl[0];	/* Table start sector */
5408:Middlewares/Third_Party/FatFs/src/ff.c **** 		sum = 0;						/* Table checksum to be stored in the 82 entry */
5409:Middlewares/Third_Party/FatFs/src/ff.c **** 		st = si = i = j = szb_case = 0;
5410:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
5411:Middlewares/Third_Party/FatFs/src/ff.c **** 			switch (st) {
5412:Middlewares/Third_Party/FatFs/src/ff.c **** 			case 0:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 128


5413:Middlewares/Third_Party/FatFs/src/ff.c **** 				ch = ff_wtoupper(si);	/* Get an up-case char */
5414:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (ch != si) {
5415:Middlewares/Third_Party/FatFs/src/ff.c **** 					si++; break;		/* Store the up-case char if exist */
5416:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5417:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (j = 1; (WCHAR)(si + j) && (WCHAR)(si + j) == ff_wtoupper((WCHAR)(si + j)); j++) ;	/* Get r
5418:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (j >= 128) {
5419:Middlewares/Third_Party/FatFs/src/ff.c **** 					ch = 0xFFFF; st = 2; break;	/* Compress the no-case block if run is >= 128 */
5420:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5421:Middlewares/Third_Party/FatFs/src/ff.c **** 				st = 1;			/* Do not compress short run */
5422:Middlewares/Third_Party/FatFs/src/ff.c **** 				/* go to next case */
5423:Middlewares/Third_Party/FatFs/src/ff.c **** 			case 1:
5424:Middlewares/Third_Party/FatFs/src/ff.c **** 				ch = si++;		/* Fill the short run */
5425:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (--j == 0) st = 0;
5426:Middlewares/Third_Party/FatFs/src/ff.c **** 				break;
5427:Middlewares/Third_Party/FatFs/src/ff.c **** 
5428:Middlewares/Third_Party/FatFs/src/ff.c **** 			default:
5429:Middlewares/Third_Party/FatFs/src/ff.c **** 				ch = (WCHAR)j; si += j;	/* Number of chars to skip */
5430:Middlewares/Third_Party/FatFs/src/ff.c **** 				st = 0;
5431:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5432:Middlewares/Third_Party/FatFs/src/ff.c **** 			sum = xsum32(buf[i + 0] = (BYTE)ch, sum);		/* Put it into the write buffer */
5433:Middlewares/Third_Party/FatFs/src/ff.c **** 			sum = xsum32(buf[i + 1] = (BYTE)(ch >> 8), sum);
5434:Middlewares/Third_Party/FatFs/src/ff.c **** 			i += 2; szb_case += 2;
5435:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!si || i == szb_buf) {		/* Write buffered data when buffer full or end of process */
5436:Middlewares/Third_Party/FatFs/src/ff.c **** 				n = (i + ss - 1) / ss;
5437:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(pdrv, buf, sect, n) != RES_OK) return FR_DISK_ERR;
5438:Middlewares/Third_Party/FatFs/src/ff.c **** 				sect += n; i = 0;
5439:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5440:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (si);
5441:Middlewares/Third_Party/FatFs/src/ff.c **** 		tbl[1] = (szb_case + au * ss - 1) / (au * ss);	/* Number of up-case table clusters */
5442:Middlewares/Third_Party/FatFs/src/ff.c **** 		tbl[2] = 1;										/* Number of root dir clusters */
5443:Middlewares/Third_Party/FatFs/src/ff.c **** 
5444:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Initialize the allocation bitmap */
5445:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect = b_data; nsect = (szb_bit + ss - 1) / ss;	/* Start of bitmap and number of sectors */
5446:Middlewares/Third_Party/FatFs/src/ff.c **** 		nb = tbl[0] + tbl[1] + tbl[2];					/* Number of clusters in-use by system */
5447:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
5448:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(buf, 0, szb_buf);
5449:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (i = 0; nb >= 8 && i < szb_buf; buf[i++] = 0xFF, nb -= 8) ;
5450:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (b = 1; nb && i < szb_buf; buf[i] |= b, b <<= 1, nb--) ;
5451:Middlewares/Third_Party/FatFs/src/ff.c **** 			n = (nsect > sz_buf) ? sz_buf : nsect;		/* Write the buffered data */
5452:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, buf, sect, n) != RES_OK) return FR_DISK_ERR;
5453:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += n; nsect -= n;
5454:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (nsect);
5455:Middlewares/Third_Party/FatFs/src/ff.c **** 
5456:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Initialize the FAT */
5457:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect = b_fat; nsect = sz_fat;	/* Start of FAT and number of FAT sectors */
5458:Middlewares/Third_Party/FatFs/src/ff.c **** 		j = nb = cl = 0;
5459:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
5460:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(buf, 0, szb_buf); i = 0;	/* Clear work area and reset write index */
5461:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cl == 0) {	/* Set entry 0 and 1 */
5462:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(buf + i, 0xFFFFFFF8); i += 4; cl++;
5463:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(buf + i, 0xFFFFFFFF); i += 4; cl++;
5464:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5465:Middlewares/Third_Party/FatFs/src/ff.c **** 			do {			/* Create chains of bitmap, up-case and root dir */
5466:Middlewares/Third_Party/FatFs/src/ff.c **** 				while (nb && i < szb_buf) {			/* Create a chain */
5467:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(buf + i, (nb > 1) ? cl + 1 : 0xFFFFFFFF);
5468:Middlewares/Third_Party/FatFs/src/ff.c **** 					i += 4; cl++; nb--;
5469:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 129


5470:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!nb && j < 3) nb = tbl[j++];	/* Next chain */
5471:Middlewares/Third_Party/FatFs/src/ff.c **** 			} while (nb && i < szb_buf);
5472:Middlewares/Third_Party/FatFs/src/ff.c **** 			n = (nsect > sz_buf) ? sz_buf : nsect;	/* Write the buffered data */
5473:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, buf, sect, n) != RES_OK) return FR_DISK_ERR;
5474:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += n; nsect -= n;
5475:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (nsect);
5476:Middlewares/Third_Party/FatFs/src/ff.c **** 
5477:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Initialize the root directory */
5478:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_set(buf, 0, szb_buf);
5479:Middlewares/Third_Party/FatFs/src/ff.c **** 		buf[SZDIRE * 0 + 0] = 0x83;		/* 83 entry (volume label) */
5480:Middlewares/Third_Party/FatFs/src/ff.c **** 		buf[SZDIRE * 1 + 0] = 0x81;		/* 81 entry (allocation bitmap) */
5481:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_dword(buf + SZDIRE * 1 + 20, 2);
5482:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_dword(buf + SZDIRE * 1 + 24, szb_bit);
5483:Middlewares/Third_Party/FatFs/src/ff.c **** 		buf[SZDIRE * 2 + 0] = 0x82;		/* 82 entry (up-case table) */
5484:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_dword(buf + SZDIRE * 2 + 4, sum);
5485:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_dword(buf + SZDIRE * 2 + 20, 2 + tbl[0]);
5486:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_dword(buf + SZDIRE * 2 + 24, szb_case);
5487:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect = b_data + au * (tbl[0] + tbl[1]);	nsect = au;	/* Start of the root directory and number of 
5488:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {	/* Fill root directory sectors */
5489:Middlewares/Third_Party/FatFs/src/ff.c **** 			n = (nsect > sz_buf) ? sz_buf : nsect;
5490:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, buf, sect, n) != RES_OK) return FR_DISK_ERR;
5491:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(buf, 0, ss);
5492:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += n; nsect -= n;
5493:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (nsect);
5494:Middlewares/Third_Party/FatFs/src/ff.c **** 
5495:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Create two set of the exFAT VBR blocks */
5496:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect = b_vol;
5497:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (n = 0; n < 2; n++) {
5498:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Main record (+0) */
5499:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(buf, 0, ss);
5500:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_cpy(buf + BS_JmpBoot, "\xEB\x76\x90" "EXFAT   ", 11);	/* Boot jump code (x86), OEM name */
5501:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_VolOfsEx, b_vol);					/* Volume offset in the physical drive [sector] */
5502:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_TotSecEx, sz_vol);					/* Volume size [sector] */
5503:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_FatOfsEx, b_fat - b_vol);			/* FAT offset [sector] */
5504:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_FatSzEx, sz_fat);					/* FAT size [sector] */
5505:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_DataOfsEx, b_data - b_vol);			/* Data offset [sector] */
5506:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_NumClusEx, n_clst);					/* Number of clusters */
5507:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_RootClusEx, 2 + tbl[0] + tbl[1]);	/* Root dir cluster # */
5508:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_VolIDEx, GET_FATTIME());				/* VSN */
5509:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BPB_FSVerEx, 0x100);						/* File system version (1.00) */
5510:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (buf[BPB_BytsPerSecEx] = 0, i = ss; i >>= 1; buf[BPB_BytsPerSecEx]++) ;	/* Log2 of sector si
5511:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (buf[BPB_SecPerClusEx] = 0, i = au; i >>= 1; buf[BPB_SecPerClusEx]++) ;	/* Log2 of cluster s
5512:Middlewares/Third_Party/FatFs/src/ff.c **** 			buf[BPB_NumFATsEx] = 1;					/* Number of FATs */
5513:Middlewares/Third_Party/FatFs/src/ff.c **** 			buf[BPB_DrvNumEx] = 0x80;				/* Drive number (for int13) */
5514:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BS_BootCodeEx, 0xFEEB);	/* Boot code (x86) */
5515:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BS_55AA, 0xAA55);			/* Signature (placed here regardless of sector size) */
5516:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (i = sum = 0; i < ss; i++) {		/* VBR checksum */
5517:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (i != BPB_VolFlagEx && i != BPB_VolFlagEx + 1 && i != BPB_PercInUseEx) sum = xsum32(buf[i], 
5518:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5519:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, buf, sect++, 1) != RES_OK) return FR_DISK_ERR;
5520:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Extended bootstrap record (+1..+8) */
5521:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(buf, 0, ss);
5522:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + ss - 2, 0xAA55);	/* Signature (placed at end of sector) */
5523:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (j = 1; j < 9; j++) {
5524:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (i = 0; i < ss; sum = xsum32(buf[i++], sum)) ;	/* VBR checksum */
5525:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(pdrv, buf, sect++, 1) != RES_OK) return FR_DISK_ERR;
5526:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 130


5527:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* OEM/Reserved record (+9..+10) */
5528:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(buf, 0, ss);
5529:Middlewares/Third_Party/FatFs/src/ff.c **** 			for ( ; j < 11; j++) {
5530:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (i = 0; i < ss; sum = xsum32(buf[i++], sum)) ;	/* VBR checksum */
5531:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(pdrv, buf, sect++, 1) != RES_OK) return FR_DISK_ERR;
5532:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5533:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Sum record (+11) */
5534:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (i = 0; i < ss; i += 4) st_dword(buf + i, sum);		/* Fill with checksum value */
5535:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, buf, sect++, 1) != RES_OK) return FR_DISK_ERR;
5536:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5537:Middlewares/Third_Party/FatFs/src/ff.c **** 
5538:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else
5539:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _FS_EXFAT */
5540:Middlewares/Third_Party/FatFs/src/ff.c **** 	{	/* Create an FAT12/16/32 volume */
5541:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
5542:Middlewares/Third_Party/FatFs/src/ff.c **** 			pau = au;
5543:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Pre-determine number of clusters and FAT sub-type */
5544:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT32) {	/* FAT32 volume */
5545:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!pau) {	/* au auto-selection */
5546:Middlewares/Third_Party/FatFs/src/ff.c **** 					n = sz_vol / 0x20000;	/* Volume size in unit of 128KS */
5547:Middlewares/Third_Party/FatFs/src/ff.c **** 					for (i = 0, pau = 1; cst32[i] && cst32[i] <= n; i++, pau <<= 1) ;	/* Get from table */
5548:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5549:Middlewares/Third_Party/FatFs/src/ff.c **** 				n_clst = sz_vol / pau;	/* Number of clusters */
5550:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_fat = (n_clst * 4 + 8 + ss - 1) / ss;	/* FAT size [sector] */
5551:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_rsv = 32;	/* Number of reserved sectors */
5552:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_dir = 0;		/* No static directory */
5553:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (n_clst <= MAX_FAT16 || n_clst > MAX_FAT32) return FR_MKFS_ABORTED;
5554:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {				/* FAT12/16 volume */
5555:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!pau) {	/* au auto-selection */
5556:Middlewares/Third_Party/FatFs/src/ff.c **** 					n = sz_vol / 0x1000;	/* Volume size in unit of 4KS */
5557:Middlewares/Third_Party/FatFs/src/ff.c **** 					for (i = 0, pau = 1; cst[i] && cst[i] <= n; i++, pau <<= 1) ;	/* Get from table */
5558:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5559:Middlewares/Third_Party/FatFs/src/ff.c **** 				n_clst = sz_vol / pau;
5560:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (n_clst > MAX_FAT12) {
5561:Middlewares/Third_Party/FatFs/src/ff.c **** 					n = n_clst * 2 + 4;		/* FAT size [byte] */
5562:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
5563:Middlewares/Third_Party/FatFs/src/ff.c **** 					fmt = FS_FAT12;
5564:Middlewares/Third_Party/FatFs/src/ff.c **** 					n = (n_clst * 3 + 1) / 2 + 3;	/* FAT size [byte] */
5565:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5566:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_fat = (n + ss - 1) / ss;		/* FAT size [sector] */
5567:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_rsv = 1;						/* Number of reserved sectors */
5568:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_dir = (DWORD)n_rootdir * SZDIRE / ss;	/* Rootdir size [sector] */
5569:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5570:Middlewares/Third_Party/FatFs/src/ff.c **** 			b_fat = b_vol + sz_rsv;						/* FAT base */
5571:Middlewares/Third_Party/FatFs/src/ff.c **** 			b_data = b_fat + sz_fat * n_fats + sz_dir;	/* Data base */
5572:Middlewares/Third_Party/FatFs/src/ff.c **** 
5573:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Align data base to erase block boundary (for flash memory media) */
5574:Middlewares/Third_Party/FatFs/src/ff.c **** 			n = ((b_data + sz_blk - 1) & ~(sz_blk - 1)) - b_data;	/* Next nearest erase block from current d
5575:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT32) {		/* FAT32: Move FAT base */
5576:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_rsv += n; b_fat += n;
5577:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {					/* FAT12/16: Expand FAT size */
5578:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_fat += n / n_fats;
5579:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5580:Middlewares/Third_Party/FatFs/src/ff.c **** 
5581:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Determine number of clusters and final check of validity of the FAT sub-type */
5582:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (sz_vol < b_data + pau * 16 - b_vol) return FR_MKFS_ABORTED;	/* Too small volume */
5583:Middlewares/Third_Party/FatFs/src/ff.c **** 			n_clst = (sz_vol - sz_rsv - sz_fat * n_fats - sz_dir) / pau;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 131


5584:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT32) {
5585:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (n_clst <= MAX_FAT16) {	/* Too few clusters for FAT32 */
5586:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!au && (au = pau / 2) != 0) continue;	/* Adjust cluster size and retry */
5587:Middlewares/Third_Party/FatFs/src/ff.c **** 					return FR_MKFS_ABORTED;
5588:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5589:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5590:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT16) {
5591:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (n_clst > MAX_FAT16) {	/* Too many clusters for FAT16 */
5592:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!au && (pau * 2) <= 64) {
5593:Middlewares/Third_Party/FatFs/src/ff.c **** 						au = pau * 2; continue;		/* Adjust cluster size and retry */
5594:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
5595:Middlewares/Third_Party/FatFs/src/ff.c **** 					if ((opt & FM_FAT32)) {
5596:Middlewares/Third_Party/FatFs/src/ff.c **** 						fmt = FS_FAT32; continue;	/* Switch type to FAT32 and retry */
5597:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
5598:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!au && (au = pau * 2) <= 128) continue;	/* Adjust cluster size and retry */
5599:Middlewares/Third_Party/FatFs/src/ff.c **** 					return FR_MKFS_ABORTED;
5600:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5601:Middlewares/Third_Party/FatFs/src/ff.c **** 				if  (n_clst <= MAX_FAT12) {	/* Too few clusters for FAT16 */
5602:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!au && (au = pau * 2) <= 128) continue;	/* Adjust cluster size and retry */
5603:Middlewares/Third_Party/FatFs/src/ff.c **** 					return FR_MKFS_ABORTED;
5604:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5605:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5606:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT12 && n_clst > MAX_FAT12) return FR_MKFS_ABORTED;	/* Too many clusters for FAT1
5607:Middlewares/Third_Party/FatFs/src/ff.c **** 
5608:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Ok, it is the valid cluster configuration */
5609:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
5610:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (1);
5611:Middlewares/Third_Party/FatFs/src/ff.c **** 
5612:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_TRIM
5613:Middlewares/Third_Party/FatFs/src/ff.c **** 		tbl[0] = b_vol; tbl[1] = b_vol + sz_vol - 1;	/* Inform the device the volume area can be erased *
5614:Middlewares/Third_Party/FatFs/src/ff.c **** 		disk_ioctl(pdrv, CTRL_TRIM, tbl);
5615:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5616:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Create FAT VBR */
5617:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_set(buf, 0, ss);
5618:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(buf + BS_JmpBoot, "\xEB\xFE\x90" "MSDOS5.0", 11);/* Boot jump code (x86), OEM name */
5619:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BPB_BytsPerSec, ss);				/* Sector size [byte] */
5620:Middlewares/Third_Party/FatFs/src/ff.c **** 		buf[BPB_SecPerClus] = (BYTE)pau;				/* Cluster size [sector] */
5621:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BPB_RsvdSecCnt, (WORD)sz_rsv);	/* Size of reserved area */
5622:Middlewares/Third_Party/FatFs/src/ff.c **** 		buf[BPB_NumFATs] = (BYTE)n_fats;				/* Number of FATs */
5623:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BPB_RootEntCnt, (WORD)((fmt == FS_FAT32) ? 0 : n_rootdir));	/* Number of root direc
5624:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (sz_vol < 0x10000) {
5625:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BPB_TotSec16, (WORD)sz_vol);	/* Volume size in 16-bit LBA */
5626:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
5627:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_TotSec32, sz_vol);		/* Volume size in 32-bit LBA */
5628:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5629:Middlewares/Third_Party/FatFs/src/ff.c **** 		buf[BPB_Media] = 0xF8;							/* Media descriptor byte */
5630:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BPB_SecPerTrk, 63);				/* Number of sectors per track (for int13) */
5631:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BPB_NumHeads, 255);				/* Number of heads (for int13) */
5632:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_dword(buf + BPB_HiddSec, b_vol);				/* Volume offset in the physical drive [sector] */
5633:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fmt == FS_FAT32) {
5634:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BS_VolID32, GET_FATTIME());	/* VSN */
5635:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_FATSz32, sz_fat);		/* FAT size [sector] */
5636:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_RootClus32, 2);			/* Root directory cluster # (2) */
5637:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BPB_FSInfo32, 1);				/* Offset of FSINFO sector (VBR + 1) */
5638:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BPB_BkBootSec32, 6);			/* Offset of backup VBR (VBR + 6) */
5639:Middlewares/Third_Party/FatFs/src/ff.c **** 			buf[BS_DrvNum32] = 0x80;					/* Drive number (for int13) */
5640:Middlewares/Third_Party/FatFs/src/ff.c **** 			buf[BS_BootSig32] = 0x29;					/* Extended boot signature */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 132


5641:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_cpy(buf + BS_VolLab32, "NO NAME    " "FAT32   ", 19);	/* Volume label, FAT signature */
5642:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
5643:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BS_VolID, GET_FATTIME());	/* VSN */
5644:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BPB_FATSz16, (WORD)sz_fat);	/* FAT size [sector] */
5645:Middlewares/Third_Party/FatFs/src/ff.c **** 			buf[BS_DrvNum] = 0x80;						/* Drive number (for int13) */
5646:Middlewares/Third_Party/FatFs/src/ff.c **** 			buf[BS_BootSig] = 0x29;						/* Extended boot signature */
5647:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_cpy(buf + BS_VolLab, "NO NAME    " "FAT     ", 19);	/* Volume label, FAT signature */
5648:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5649:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BS_55AA, 0xAA55);					/* Signature (offset is fixed here regardless of sector size)
5650:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_write(pdrv, buf, b_vol, 1) != RES_OK) return FR_DISK_ERR;	/* Write it to the VBR sector 
5651:Middlewares/Third_Party/FatFs/src/ff.c **** 
5652:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Create FSINFO record if needed */
5653:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fmt == FS_FAT32) {
5654:Middlewares/Third_Party/FatFs/src/ff.c **** 			disk_write(pdrv, buf, b_vol + 6, 1);		/* Write backup VBR (VBR + 6) */
5655:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(buf, 0, ss);
5656:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + FSI_LeadSig, 0x41615252);
5657:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + FSI_StrucSig, 0x61417272);
5658:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + FSI_Free_Count, n_clst - 1);	/* Number of free clusters */
5659:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + FSI_Nxt_Free, 2);			/* Last allocated cluster# */
5660:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BS_55AA, 0xAA55);
5661:Middlewares/Third_Party/FatFs/src/ff.c **** 			disk_write(pdrv, buf, b_vol + 7, 1);		/* Write backup FSINFO (VBR + 7) */
5662:Middlewares/Third_Party/FatFs/src/ff.c **** 			disk_write(pdrv, buf, b_vol + 1, 1);		/* Write original FSINFO (VBR + 1) */
5663:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5664:Middlewares/Third_Party/FatFs/src/ff.c **** 
5665:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Initialize FAT area */
5666:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_set(buf, 0, (UINT)szb_buf);
5667:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect = b_fat;		/* FAT start sector */
5668:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = 0; i < n_fats; i++) {			/* Initialize FATs each */
5669:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT32) {
5670:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(buf + 0, 0xFFFFFFF8);	/* Entry 0 */
5671:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(buf + 4, 0xFFFFFFFF);	/* Entry 1 */
5672:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(buf + 8, 0x0FFFFFFF);	/* Entry 2 (root directory) */
5673:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
5674:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(buf + 0, (fmt == FS_FAT12) ? 0xFFFFF8 : 0xFFFFFFF8);	/* Entry 0 and 1 */
5675:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5676:Middlewares/Third_Party/FatFs/src/ff.c **** 			nsect = sz_fat;		/* Number of FAT sectors */
5677:Middlewares/Third_Party/FatFs/src/ff.c **** 			do {	/* Fill FAT sectors */
5678:Middlewares/Third_Party/FatFs/src/ff.c **** 				n = (nsect > sz_buf) ? sz_buf : nsect;
5679:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(pdrv, buf, sect, (UINT)n) != RES_OK) return FR_DISK_ERR;
5680:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_set(buf, 0, ss);
5681:Middlewares/Third_Party/FatFs/src/ff.c **** 				sect += n; nsect -= n;
5682:Middlewares/Third_Party/FatFs/src/ff.c **** 			} while (nsect);
5683:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5684:Middlewares/Third_Party/FatFs/src/ff.c **** 
5685:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Initialize root directory (fill with zero) */
5686:Middlewares/Third_Party/FatFs/src/ff.c **** 		nsect = (fmt == FS_FAT32) ? pau : sz_dir;	/* Number of root directory sectors */
5687:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
5688:Middlewares/Third_Party/FatFs/src/ff.c **** 			n = (nsect > sz_buf) ? sz_buf : nsect;
5689:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, buf, sect, (UINT)n) != RES_OK) return FR_DISK_ERR;
5690:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += n; nsect -= n;
5691:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (nsect);
5692:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5693:Middlewares/Third_Party/FatFs/src/ff.c **** 
5694:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Determine system ID in the partition table */
5695:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (_FS_EXFAT && fmt == FS_EXFAT) {
5696:Middlewares/Third_Party/FatFs/src/ff.c **** 		sys = 0x07;			/* HPFS/NTFS/exFAT */
5697:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 133


5698:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fmt == FS_FAT32) {
5699:Middlewares/Third_Party/FatFs/src/ff.c **** 			sys = 0x0C;		/* FAT32X */
5700:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
5701:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (sz_vol >= 0x10000) {
5702:Middlewares/Third_Party/FatFs/src/ff.c **** 				sys = 0x06;	/* FAT12/16 (>=64KS) */
5703:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
5704:Middlewares/Third_Party/FatFs/src/ff.c **** 				sys = (fmt == FS_FAT16) ? 0x04 : 0x01;	/* FAT16 (<64KS) : FAT12 (<64KS) */
5705:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5706:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5707:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5708:Middlewares/Third_Party/FatFs/src/ff.c **** 
5709:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Update partition information */
5710:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (_MULTI_PARTITION && part != 0) {	/* Created in the existing partition */
5711:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Update system ID in the partition table */
5712:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_read(pdrv, buf, 0, 1) != RES_OK) return FR_DISK_ERR;	/* Read the MBR */
5713:Middlewares/Third_Party/FatFs/src/ff.c **** 		buf[MBR_Table + (part - 1) * SZ_PTE + PTE_System] = sys;		/* Set system ID */
5714:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_write(pdrv, buf, 0, 1) != RES_OK) return FR_DISK_ERR;	/* Write it back to the MBR */
5715:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {								/* Created as a new single partition */
5716:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!(opt & FM_SFD)) {	/* Create partition table if in FDISK format */
5717:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(buf, 0, ss);
5718:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BS_55AA, 0xAA55);		/* MBR signature */
5719:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte = buf + MBR_Table;				/* Create partition table for single partition in the drive */
5720:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_Boot] = 0;					/* Boot indicator */
5721:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_StHead] = 1;				/* Start head */
5722:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_StSec] = 1;					/* Start sector */
5723:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_StCyl] = 0;					/* Start cylinder */
5724:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_System] = sys;				/* System type */
5725:Middlewares/Third_Party/FatFs/src/ff.c **** 			n = (b_vol + sz_vol) / (63 * 255);	/* (End CHS may be invalid) */
5726:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_EdHead] = 254;				/* End head */
5727:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_EdSec] = (BYTE)(n >> 2 | 63);	/* End sector */
5728:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_EdCyl] = (BYTE)n;			/* End cylinder */
5729:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(pte + PTE_StLba, b_vol);	/* Start offset in LBA */
5730:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(pte + PTE_SizLba, sz_vol);	/* Size in sectors */
5731:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, buf, 0, 1) != RES_OK) return FR_DISK_ERR;	/* Write it to the MBR */
5732:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5733:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5734:Middlewares/Third_Party/FatFs/src/ff.c **** 
5735:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (disk_ioctl(pdrv, CTRL_SYNC, 0) != RES_OK) return FR_DISK_ERR;
5736:Middlewares/Third_Party/FatFs/src/ff.c **** 
5737:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
5738:Middlewares/Third_Party/FatFs/src/ff.c **** }
5739:Middlewares/Third_Party/FatFs/src/ff.c **** 
5740:Middlewares/Third_Party/FatFs/src/ff.c **** 
5741:Middlewares/Third_Party/FatFs/src/ff.c **** 
5742:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MULTI_PARTITION
5743:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5744:Middlewares/Third_Party/FatFs/src/ff.c **** /* Create partition table on the physical drive                          */
5745:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5746:Middlewares/Third_Party/FatFs/src/ff.c **** 
5747:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_fdisk (
5748:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE pdrv,			/* Physical drive number */
5749:Middlewares/Third_Party/FatFs/src/ff.c **** 	const DWORD* szt,	/* Pointer to the size table for each partitions */
5750:Middlewares/Third_Party/FatFs/src/ff.c **** 	void* work			/* Pointer to the working buffer */
5751:Middlewares/Third_Party/FatFs/src/ff.c **** )
5752:Middlewares/Third_Party/FatFs/src/ff.c **** {
5753:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, n, sz_cyl, tot_cyl, b_cyl, e_cyl, p_cyl;
5754:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE s_hd, e_hd, *p, *buf = (BYTE*)work;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 134


5755:Middlewares/Third_Party/FatFs/src/ff.c **** 	DSTATUS stat;
5756:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD sz_disk, sz_part, s_part;
5757:Middlewares/Third_Party/FatFs/src/ff.c **** 
5758:Middlewares/Third_Party/FatFs/src/ff.c **** 
5759:Middlewares/Third_Party/FatFs/src/ff.c **** 	stat = disk_initialize(pdrv);
5760:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_NOINIT) return FR_NOT_READY;
5761:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_PROTECT) return FR_WRITE_PROTECTED;
5762:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (disk_ioctl(pdrv, GET_SECTOR_COUNT, &sz_disk)) return FR_DISK_ERR;
5763:Middlewares/Third_Party/FatFs/src/ff.c **** 
5764:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Determine the CHS without any consideration of the drive geometry */
5765:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (n = 16; n < 256 && sz_disk / n / 63 > 1024; n *= 2) ;
5766:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (n == 256) n--;
5767:Middlewares/Third_Party/FatFs/src/ff.c **** 	e_hd = n - 1;
5768:Middlewares/Third_Party/FatFs/src/ff.c **** 	sz_cyl = 63 * n;
5769:Middlewares/Third_Party/FatFs/src/ff.c **** 	tot_cyl = sz_disk / sz_cyl;
5770:Middlewares/Third_Party/FatFs/src/ff.c **** 
5771:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create partition table */
5772:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_set(buf, 0, _MAX_SS);
5773:Middlewares/Third_Party/FatFs/src/ff.c **** 	p = buf + MBR_Table; b_cyl = 0;
5774:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (i = 0; i < 4; i++, p += SZ_PTE) {
5775:Middlewares/Third_Party/FatFs/src/ff.c **** 		p_cyl = (szt[i] <= 100U) ? (DWORD)tot_cyl * szt[i] / 100 : szt[i] / sz_cyl;	/* Number of cylinder
5776:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!p_cyl) continue;
5777:Middlewares/Third_Party/FatFs/src/ff.c **** 		s_part = (DWORD)sz_cyl * b_cyl;
5778:Middlewares/Third_Party/FatFs/src/ff.c **** 		sz_part = (DWORD)sz_cyl * p_cyl;
5779:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == 0) {	/* Exclude first track of cylinder 0 */
5780:Middlewares/Third_Party/FatFs/src/ff.c **** 			s_hd = 1;
5781:Middlewares/Third_Party/FatFs/src/ff.c **** 			s_part += 63; sz_part -= 63;
5782:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
5783:Middlewares/Third_Party/FatFs/src/ff.c **** 			s_hd = 0;
5784:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5785:Middlewares/Third_Party/FatFs/src/ff.c **** 		e_cyl = b_cyl + p_cyl - 1;	/* End cylinder */
5786:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (e_cyl >= tot_cyl) return FR_INVALID_PARAMETER;
5787:Middlewares/Third_Party/FatFs/src/ff.c **** 
5788:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Set partition table */
5789:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[1] = s_hd;						/* Start head */
5790:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[2] = (BYTE)((b_cyl >> 2) + 1);	/* Start sector */
5791:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[3] = (BYTE)b_cyl;					/* Start cylinder */
5792:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[4] = 0x07;						/* System type (temporary setting) */
5793:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[5] = e_hd;						/* End head */
5794:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[6] = (BYTE)((e_cyl >> 2) + 63);	/* End sector */
5795:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[7] = (BYTE)e_cyl;					/* End cylinder */
5796:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_dword(p + 8, s_part);			/* Start sector in LBA */
5797:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_dword(p + 12, sz_part);			/* Number of sectors */
5798:Middlewares/Third_Party/FatFs/src/ff.c **** 
5799:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Next partition */
5800:Middlewares/Third_Party/FatFs/src/ff.c **** 		b_cyl += p_cyl;
5801:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5802:Middlewares/Third_Party/FatFs/src/ff.c **** 	st_word(p, 0xAA55);
5803:Middlewares/Third_Party/FatFs/src/ff.c **** 
5804:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Write it to the MBR */
5805:Middlewares/Third_Party/FatFs/src/ff.c **** 	return (disk_write(pdrv, buf, 0, 1) != RES_OK || disk_ioctl(pdrv, CTRL_SYNC, 0) != RES_OK) ? FR_DI
5806:Middlewares/Third_Party/FatFs/src/ff.c **** }
5807:Middlewares/Third_Party/FatFs/src/ff.c **** 
5808:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _MULTI_PARTITION */
5809:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _USE_MKFS && !_FS_READONLY */
5810:Middlewares/Third_Party/FatFs/src/ff.c **** 
5811:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 135


5812:Middlewares/Third_Party/FatFs/src/ff.c **** 
5813:Middlewares/Third_Party/FatFs/src/ff.c **** 
5814:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_STRFUNC
5815:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5816:Middlewares/Third_Party/FatFs/src/ff.c **** /* Get a string from the file                                            */
5817:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5818:Middlewares/Third_Party/FatFs/src/ff.c **** 
5819:Middlewares/Third_Party/FatFs/src/ff.c **** TCHAR* f_gets (
5820:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR* buff,	/* Pointer to the string buffer to read */
5821:Middlewares/Third_Party/FatFs/src/ff.c **** 	int len,		/* Size of string buffer (characters) */
5822:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp			/* Pointer to the file object */
5823:Middlewares/Third_Party/FatFs/src/ff.c **** )
5824:Middlewares/Third_Party/FatFs/src/ff.c **** {
5825:Middlewares/Third_Party/FatFs/src/ff.c **** 	int n = 0;
5826:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR c, *p = buff;
5827:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE s[2];
5828:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT rc;
5829:Middlewares/Third_Party/FatFs/src/ff.c **** 
5830:Middlewares/Third_Party/FatFs/src/ff.c **** 
5831:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (n < len - 1) {	/* Read characters until buffer gets filled */
5832:Middlewares/Third_Party/FatFs/src/ff.c **** #if _LFN_UNICODE
5833:Middlewares/Third_Party/FatFs/src/ff.c **** #if _STRF_ENCODE == 3		/* Read a character in UTF-8 */
5834:Middlewares/Third_Party/FatFs/src/ff.c **** 		f_read(fp, s, 1, &rc);
5835:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rc != 1) break;
5836:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = s[0];
5837:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c >= 0x80) {
5838:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (c < 0xC0) continue;	/* Skip stray trailer */
5839:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (c < 0xE0) {			/* Two-byte sequence (0x80-0x7FF) */
5840:Middlewares/Third_Party/FatFs/src/ff.c **** 				f_read(fp, s, 1, &rc);
5841:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (rc != 1) break;
5842:Middlewares/Third_Party/FatFs/src/ff.c **** 				c = (c & 0x1F) << 6 | (s[0] & 0x3F);
5843:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (c < 0x80) c = '?';	/* Reject invalid code range */
5844:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
5845:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (c < 0xF0) {		/* Three-byte sequence (0x800-0xFFFF) */
5846:Middlewares/Third_Party/FatFs/src/ff.c **** 					f_read(fp, s, 2, &rc);
5847:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (rc != 2) break;
5848:Middlewares/Third_Party/FatFs/src/ff.c **** 					c = c << 12 | (s[0] & 0x3F) << 6 | (s[1] & 0x3F);
5849:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (c < 0x800) c = '?';	/* Reject invalid code range */
5850:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {			/* Reject four-byte sequence */
5851:Middlewares/Third_Party/FatFs/src/ff.c **** 					c = '?';
5852:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5853:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5854:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5855:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _STRF_ENCODE == 2		/* Read a character in UTF-16BE */
5856:Middlewares/Third_Party/FatFs/src/ff.c **** 		f_read(fp, s, 2, &rc);
5857:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rc != 2) break;
5858:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = s[1] + (s[0] << 8);
5859:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _STRF_ENCODE == 1		/* Read a character in UTF-16LE */
5860:Middlewares/Third_Party/FatFs/src/ff.c **** 		f_read(fp, s, 2, &rc);
5861:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rc != 2) break;
5862:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = s[0] + (s[1] << 8);
5863:Middlewares/Third_Party/FatFs/src/ff.c **** #else						/* Read a character in ANSI/OEM */
5864:Middlewares/Third_Party/FatFs/src/ff.c **** 		f_read(fp, s, 1, &rc);
5865:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rc != 1) break;
5866:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = s[0];
5867:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (IsDBCS1(c)) {
5868:Middlewares/Third_Party/FatFs/src/ff.c **** 			f_read(fp, s, 1, &rc);
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 136


5869:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (rc != 1) break;
5870:Middlewares/Third_Party/FatFs/src/ff.c **** 			c = (c << 8) + s[0];
5871:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5872:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = ff_convert(c, 1);	/* OEM -> Unicode */
5873:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!c) c = '?';
5874:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5875:Middlewares/Third_Party/FatFs/src/ff.c **** #else						/* Read a character without conversion */
5876:Middlewares/Third_Party/FatFs/src/ff.c **** 		f_read(fp, s, 1, &rc);
5877:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rc != 1) break;
5878:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = s[0];
5879:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5880:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_USE_STRFUNC == 2 && c == '\r') continue;	/* Strip '\r' */
5881:Middlewares/Third_Party/FatFs/src/ff.c **** 		*p++ = c;
5882:Middlewares/Third_Party/FatFs/src/ff.c **** 		n++;
5883:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == '\n') break;		/* Break on EOL */
5884:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5885:Middlewares/Third_Party/FatFs/src/ff.c **** 	*p = 0;
5886:Middlewares/Third_Party/FatFs/src/ff.c **** 	return n ? buff : 0;			/* When no data read (eof or error), return with error. */
5887:Middlewares/Third_Party/FatFs/src/ff.c **** }
5888:Middlewares/Third_Party/FatFs/src/ff.c **** 
5889:Middlewares/Third_Party/FatFs/src/ff.c **** 
5890:Middlewares/Third_Party/FatFs/src/ff.c **** 
5891:Middlewares/Third_Party/FatFs/src/ff.c **** 
5892:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
5893:Middlewares/Third_Party/FatFs/src/ff.c **** #include <stdarg.h>
5894:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5895:Middlewares/Third_Party/FatFs/src/ff.c **** /* Put a character to the file                                           */
5896:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5897:Middlewares/Third_Party/FatFs/src/ff.c **** 
5898:Middlewares/Third_Party/FatFs/src/ff.c **** typedef struct {
5899:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL *fp;		/* Ptr to the writing file */
5900:Middlewares/Third_Party/FatFs/src/ff.c **** 	int idx, nchr;	/* Write index of buf[] (-1:error), number of chars written */
5901:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE buf[64];	/* Write buffer */
5902:Middlewares/Third_Party/FatFs/src/ff.c **** } putbuff;
5903:Middlewares/Third_Party/FatFs/src/ff.c **** 
5904:Middlewares/Third_Party/FatFs/src/ff.c **** 
5905:Middlewares/Third_Party/FatFs/src/ff.c **** static
5906:Middlewares/Third_Party/FatFs/src/ff.c **** void putc_bfd (		/* Buffered write with code conversion */
5907:Middlewares/Third_Party/FatFs/src/ff.c **** 	putbuff* pb,
5908:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR c
5909:Middlewares/Third_Party/FatFs/src/ff.c **** )
5910:Middlewares/Third_Party/FatFs/src/ff.c **** {
5911:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT bw;
5912:Middlewares/Third_Party/FatFs/src/ff.c **** 	int i;
5913:Middlewares/Third_Party/FatFs/src/ff.c **** 
5914:Middlewares/Third_Party/FatFs/src/ff.c **** 
5915:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (_USE_STRFUNC == 2 && c == '\n') {	 /* LF -> CRLF conversion */
5916:Middlewares/Third_Party/FatFs/src/ff.c **** 		putc_bfd(pb, '\r');
5917:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5918:Middlewares/Third_Party/FatFs/src/ff.c **** 
5919:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = pb->idx;		/* Write index of pb->buf[] */
5920:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (i < 0) return;
5921:Middlewares/Third_Party/FatFs/src/ff.c **** 
5922:Middlewares/Third_Party/FatFs/src/ff.c **** #if _LFN_UNICODE
5923:Middlewares/Third_Party/FatFs/src/ff.c **** #if _STRF_ENCODE == 3			/* Write a character in UTF-8 */
5924:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (c < 0x80) {				/* 7-bit */
5925:Middlewares/Third_Party/FatFs/src/ff.c **** 		pb->buf[i++] = (BYTE)c;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 137


5926:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
5927:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c < 0x800) {		/* 11-bit */
5928:Middlewares/Third_Party/FatFs/src/ff.c **** 			pb->buf[i++] = (BYTE)(0xC0 | c >> 6);
5929:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {				/* 16-bit */
5930:Middlewares/Third_Party/FatFs/src/ff.c **** 			pb->buf[i++] = (BYTE)(0xE0 | c >> 12);
5931:Middlewares/Third_Party/FatFs/src/ff.c **** 			pb->buf[i++] = (BYTE)(0x80 | (c >> 6 & 0x3F));
5932:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5933:Middlewares/Third_Party/FatFs/src/ff.c **** 		pb->buf[i++] = (BYTE)(0x80 | (c & 0x3F));
5934:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5935:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _STRF_ENCODE == 2			/* Write a character in UTF-16BE */
5936:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->buf[i++] = (BYTE)(c >> 8);
5937:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->buf[i++] = (BYTE)c;
5938:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _STRF_ENCODE == 1			/* Write a character in UTF-16LE */
5939:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->buf[i++] = (BYTE)c;
5940:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->buf[i++] = (BYTE)(c >> 8);
5941:Middlewares/Third_Party/FatFs/src/ff.c **** #else							/* Write a character in ANSI/OEM */
5942:Middlewares/Third_Party/FatFs/src/ff.c **** 	c = ff_convert(c, 0);	/* Unicode -> OEM */
5943:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!c) c = '?';
5944:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (c >= 0x100)
5945:Middlewares/Third_Party/FatFs/src/ff.c **** 		pb->buf[i++] = (BYTE)(c >> 8);
5946:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->buf[i++] = (BYTE)c;
5947:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5948:Middlewares/Third_Party/FatFs/src/ff.c **** #else							/* Write a character without conversion */
5949:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->buf[i++] = (BYTE)c;
5950:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5951:Middlewares/Third_Party/FatFs/src/ff.c **** 
5952:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (i >= (int)(sizeof pb->buf) - 3) {	/* Write buffered characters to the file */
5953:Middlewares/Third_Party/FatFs/src/ff.c **** 		f_write(pb->fp, pb->buf, (UINT)i, &bw);
5954:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = (bw == (UINT)i) ? 0 : -1;
5955:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5956:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->idx = i;
5957:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->nchr++;
5958:Middlewares/Third_Party/FatFs/src/ff.c **** }
5959:Middlewares/Third_Party/FatFs/src/ff.c **** 
5960:Middlewares/Third_Party/FatFs/src/ff.c **** 
5961:Middlewares/Third_Party/FatFs/src/ff.c **** static
5962:Middlewares/Third_Party/FatFs/src/ff.c **** int putc_flush (		/* Flush left characters in the buffer */
5963:Middlewares/Third_Party/FatFs/src/ff.c **** 	putbuff* pb
5964:Middlewares/Third_Party/FatFs/src/ff.c **** )
5965:Middlewares/Third_Party/FatFs/src/ff.c **** {
5966:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT nw;
5967:Middlewares/Third_Party/FatFs/src/ff.c **** 
5968:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (   pb->idx >= 0	/* Flush buffered characters to the file */
5969:Middlewares/Third_Party/FatFs/src/ff.c **** 		&& f_write(pb->fp, pb->buf, (UINT)pb->idx, &nw) == FR_OK
5970:Middlewares/Third_Party/FatFs/src/ff.c **** 		&& (UINT)pb->idx == nw) return pb->nchr;
5971:Middlewares/Third_Party/FatFs/src/ff.c **** 	return EOF;
5972:Middlewares/Third_Party/FatFs/src/ff.c **** }
5973:Middlewares/Third_Party/FatFs/src/ff.c **** 
5974:Middlewares/Third_Party/FatFs/src/ff.c **** 
5975:Middlewares/Third_Party/FatFs/src/ff.c **** static
5976:Middlewares/Third_Party/FatFs/src/ff.c **** void putc_init (		/* Initialize write buffer */
5977:Middlewares/Third_Party/FatFs/src/ff.c **** 	putbuff* pb,
5978:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp
5979:Middlewares/Third_Party/FatFs/src/ff.c **** )
5980:Middlewares/Third_Party/FatFs/src/ff.c **** {
 1777              		.loc 1 5980 0
 1778              		.cfi_startproc
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 138


 1779              		@ args = 0, pretend = 0, frame = 0
 1780              		@ frame_needed = 0, uses_anonymous_args = 0
 1781              		@ link register save eliminated.
 1782              	.LVL249:
5981:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->fp = fp;
 1783              		.loc 1 5981 0
 1784 0000 0160     		str	r1, [r0]
5982:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->nchr = pb->idx = 0;
 1785              		.loc 1 5982 0
 1786 0002 0023     		movs	r3, #0
 1787 0004 4360     		str	r3, [r0, #4]
 1788 0006 8360     		str	r3, [r0, #8]
 1789 0008 7047     		bx	lr
 1790              		.cfi_endproc
 1791              	.LFE213:
 1793              		.section	.text.lock_fs,"ax",%progbits
 1794              		.align	1
 1795              		.syntax unified
 1796              		.thumb
 1797              		.thumb_func
 1798              		.fpu fpv5-sp-d16
 1800              	lock_fs:
 1801              	.LFB149:
 745:Middlewares/Third_Party/FatFs/src/ff.c **** 	return (fs && ff_req_grant(fs->sobj)) ? 1 : 0;
 1802              		.loc 1 745 0
 1803              		.cfi_startproc
 1804              		@ args = 0, pretend = 0, frame = 0
 1805              		@ frame_needed = 0, uses_anonymous_args = 0
 1806              	.LVL250:
 1807 0000 08B5     		push	{r3, lr}
 1808              	.LCFI26:
 1809              		.cfi_def_cfa_offset 8
 1810              		.cfi_offset 3, -8
 1811              		.cfi_offset 14, -4
 746:Middlewares/Third_Party/FatFs/src/ff.c **** }
 1812              		.loc 1 746 0
 1813 0002 40B1     		cbz	r0, .L195
 746:Middlewares/Third_Party/FatFs/src/ff.c **** }
 1814              		.loc 1 746 0 is_stmt 0 discriminator 1
 1815 0004 0069     		ldr	r0, [r0, #16]
 1816              	.LVL251:
 1817 0006 FFF7FEFF 		bl	ff_req_grant
 1818              	.LVL252:
 1819 000a 0346     		mov	r3, r0
 1820 000c 08B9     		cbnz	r0, .L197
 1821              	.L193:
 747:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1822              		.loc 1 747 0 is_stmt 1
 1823 000e 1846     		mov	r0, r3
 1824 0010 08BD     		pop	{r3, pc}
 1825              	.L197:
 746:Middlewares/Third_Party/FatFs/src/ff.c **** }
 1826              		.loc 1 746 0
 1827 0012 0123     		movs	r3, #1
 1828 0014 FBE7     		b	.L193
 1829              	.LVL253:
 1830              	.L195:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 139


 1831 0016 0023     		movs	r3, #0
 1832 0018 F9E7     		b	.L193
 1833              		.cfi_endproc
 1834              	.LFE149:
 1836              		.section	.text.validate,"ax",%progbits
 1837              		.align	1
 1838              		.syntax unified
 1839              		.thumb
 1840              		.thumb_func
 1841              		.fpu fpv5-sp-d16
 1843              	validate:
 1844              	.LFB187:
3220:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 1845              		.loc 1 3220 0
 1846              		.cfi_startproc
 1847              		@ args = 0, pretend = 0, frame = 0
 1848              		@ frame_needed = 0, uses_anonymous_args = 0
 1849              	.LVL254:
 1850 0000 38B5     		push	{r3, r4, r5, lr}
 1851              	.LCFI27:
 1852              		.cfi_def_cfa_offset 16
 1853              		.cfi_offset 3, -16
 1854              		.cfi_offset 4, -12
 1855              		.cfi_offset 5, -8
 1856              		.cfi_offset 14, -4
 1857 0002 0C46     		mov	r4, r1
3223:Middlewares/Third_Party/FatFs/src/ff.c **** 		*fs = 0;
 1858              		.loc 1 3223 0
 1859 0004 20B1     		cbz	r0, .L199
 1860 0006 0546     		mov	r5, r0
3223:Middlewares/Third_Party/FatFs/src/ff.c **** 		*fs = 0;
 1861              		.loc 1 3223 0 is_stmt 0 discriminator 1
 1862 0008 0368     		ldr	r3, [r0]
 1863 000a 0BB1     		cbz	r3, .L199
3223:Middlewares/Third_Party/FatFs/src/ff.c **** 		*fs = 0;
 1864              		.loc 1 3223 0 discriminator 2
 1865 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1866 000e 1AB9     		cbnz	r2, .L204
 1867              	.LVL255:
 1868              	.L199:
3224:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_INVALID_OBJECT;	/* The object is invalid */
 1869              		.loc 1 3224 0 is_stmt 1
 1870 0010 0023     		movs	r3, #0
 1871 0012 2360     		str	r3, [r4]
 1872              	.LVL256:
3225:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
 1873              		.loc 1 3225 0
 1874 0014 0920     		movs	r0, #9
 1875 0016 38BD     		pop	{r3, r4, r5, pc}
 1876              	.LVL257:
 1877              	.L204:
3223:Middlewares/Third_Party/FatFs/src/ff.c **** 		*fs = 0;
 1878              		.loc 1 3223 0 discriminator 3
 1879 0018 D988     		ldrh	r1, [r3, #6]
 1880              	.LVL258:
 1881 001a 8288     		ldrh	r2, [r0, #4]
 1882 001c 9142     		cmp	r1, r2
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 140


 1883 001e F7D1     		bne	.L199
3223:Middlewares/Third_Party/FatFs/src/ff.c **** 		*fs = 0;
 1884              		.loc 1 3223 0 is_stmt 0 discriminator 4
 1885 0020 5878     		ldrb	r0, [r3, #1]	@ zero_extendqisi2
 1886              	.LVL259:
 1887 0022 FFF7FEFF 		bl	disk_status
 1888              	.LVL260:
 1889 0026 10F0010F 		tst	r0, #1
 1890 002a F1D1     		bne	.L199
3227:Middlewares/Third_Party/FatFs/src/ff.c **** 		ENTER_FF(obj->fs);		/* Lock file system */
 1891              		.loc 1 3227 0 is_stmt 1
 1892 002c 2B68     		ldr	r3, [r5]
 1893 002e 2360     		str	r3, [r4]
3228:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_OK;			/* Valid object */
 1894              		.loc 1 3228 0
 1895 0030 2868     		ldr	r0, [r5]
 1896 0032 FFF7FEFF 		bl	lock_fs
 1897              	.LVL261:
 1898 0036 08B9     		cbnz	r0, .L202
 1899 0038 0F20     		movs	r0, #15
 1900 003a 38BD     		pop	{r3, r4, r5, pc}
 1901              	.LVL262:
 1902              	.L202:
3229:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 1903              		.loc 1 3229 0
 1904 003c 0020     		movs	r0, #0
3232:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1905              		.loc 1 3232 0
 1906 003e 38BD     		pop	{r3, r4, r5, pc}
 1907              		.cfi_endproc
 1908              	.LFE187:
 1910              		.section	.text.sync_window,"ax",%progbits
 1911              		.align	1
 1912              		.syntax unified
 1913              		.thumb
 1914              		.thumb_func
 1915              		.fpu fpv5-sp-d16
 1917              	sync_window:
 1918              	.LFB156:
 886:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD wsect;
 1919              		.loc 1 886 0
 1920              		.cfi_startproc
 1921              		@ args = 0, pretend = 0, frame = 0
 1922              		@ frame_needed = 0, uses_anonymous_args = 0
 1923              	.LVL263:
 1924 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1925              	.LCFI28:
 1926              		.cfi_def_cfa_offset 24
 1927              		.cfi_offset 3, -24
 1928              		.cfi_offset 4, -20
 1929              		.cfi_offset 5, -16
 1930              		.cfi_offset 6, -12
 1931              		.cfi_offset 7, -8
 1932              		.cfi_offset 14, -4
 1933              	.LVL264:
 892:Middlewares/Third_Party/FatFs/src/ff.c **** 		wsect = fs->winsect;	/* Current sector number */
 1934              		.loc 1 892 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 141


 1935 0002 C378     		ldrb	r3, [r0, #3]	@ zero_extendqisi2
 1936 0004 0BB9     		cbnz	r3, .L213
 889:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1937              		.loc 1 889 0
 1938 0006 0020     		movs	r0, #0
 1939              	.LVL265:
 1940 0008 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1941              	.LVL266:
 1942              	.L213:
 1943 000a 0446     		mov	r4, r0
 893:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_write(fs->drv, fs->win, wsect, 1) != RES_OK) {
 1944              		.loc 1 893 0
 1945 000c 866B     		ldr	r6, [r0, #56]
 1946              	.LVL267:
 894:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_DISK_ERR;
 1947              		.loc 1 894 0
 1948 000e 00F13C07 		add	r7, r0, #60
 1949 0012 0123     		movs	r3, #1
 1950 0014 3246     		mov	r2, r6
 1951 0016 3946     		mov	r1, r7
 1952 0018 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 1953              	.LVL268:
 1954 001a FFF7FEFF 		bl	disk_write
 1955              	.LVL269:
 1956 001e A8B9     		cbnz	r0, .L210
 897:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (wsect - fs->fatbase < fs->fsize) {		/* Is it in the FAT area? */
 1957              		.loc 1 897 0
 1958 0020 0023     		movs	r3, #0
 1959 0022 E370     		strb	r3, [r4, #3]
 898:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (nf = fs->n_fats; nf >= 2; nf--) {	/* Reflect the change to all FAT copies */
 1960              		.loc 1 898 0
 1961 0024 E36A     		ldr	r3, [r4, #44]
 1962 0026 F31A     		subs	r3, r6, r3
 1963 0028 626A     		ldr	r2, [r4, #36]
 1964 002a 9342     		cmp	r3, r2
 1965 002c 10D2     		bcs	.L211
 899:Middlewares/Third_Party/FatFs/src/ff.c **** 					wsect += fs->fsize;
 1966              		.loc 1 899 0
 1967 002e A578     		ldrb	r5, [r4, #2]	@ zero_extendqisi2
 1968              	.LVL270:
 1969 0030 08E0     		b	.L207
 1970              	.L208:
 900:Middlewares/Third_Party/FatFs/src/ff.c **** 					disk_write(fs->drv, fs->win, wsect, 1);
 1971              		.loc 1 900 0 discriminator 3
 1972 0032 636A     		ldr	r3, [r4, #36]
 1973 0034 1E44     		add	r6, r6, r3
 1974              	.LVL271:
 901:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 1975              		.loc 1 901 0 discriminator 3
 1976 0036 0123     		movs	r3, #1
 1977 0038 3246     		mov	r2, r6
 1978 003a 3946     		mov	r1, r7
 1979 003c 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 1980 003e FFF7FEFF 		bl	disk_write
 1981              	.LVL272:
 899:Middlewares/Third_Party/FatFs/src/ff.c **** 					wsect += fs->fsize;
 1982              		.loc 1 899 0 discriminator 3
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 142


 1983 0042 013D     		subs	r5, r5, #1
 1984              	.LVL273:
 1985              	.L207:
 899:Middlewares/Third_Party/FatFs/src/ff.c **** 					wsect += fs->fsize;
 1986              		.loc 1 899 0 is_stmt 0 discriminator 1
 1987 0044 012D     		cmp	r5, #1
 1988 0046 F4D8     		bhi	.L208
 889:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1989              		.loc 1 889 0 is_stmt 1
 1990 0048 0020     		movs	r0, #0
 1991 004a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1992              	.LVL274:
 1993              	.L210:
 895:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 1994              		.loc 1 895 0
 1995 004c 0120     		movs	r0, #1
 1996 004e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1997              	.LVL275:
 1998              	.L211:
 889:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1999              		.loc 1 889 0
 2000 0050 0020     		movs	r0, #0
 2001              	.LVL276:
 907:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 2002              		.loc 1 907 0
 2003 0052 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2004              		.cfi_endproc
 2005              	.LFE156:
 2007              		.section	.text.move_window,"ax",%progbits
 2008              		.align	1
 2009              		.syntax unified
 2010              		.thumb
 2011              		.thumb_func
 2012              		.fpu fpv5-sp-d16
 2014              	move_window:
 2015              	.LFB157:
 916:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res = FR_OK;
 2016              		.loc 1 916 0
 2017              		.cfi_startproc
 2018              		@ args = 0, pretend = 0, frame = 0
 2019              		@ frame_needed = 0, uses_anonymous_args = 0
 2020              	.LVL277:
 2021 0000 70B5     		push	{r4, r5, r6, lr}
 2022              	.LCFI29:
 2023              		.cfi_def_cfa_offset 16
 2024              		.cfi_offset 4, -16
 2025              		.cfi_offset 5, -12
 2026              		.cfi_offset 6, -8
 2027              		.cfi_offset 14, -4
 2028              	.LVL278:
 920:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 2029              		.loc 1 920 0
 2030 0002 836B     		ldr	r3, [r0, #56]
 2031 0004 8B42     		cmp	r3, r1
 2032 0006 14D0     		beq	.L217
 2033 0008 0446     		mov	r4, r0
 2034 000a 0D46     		mov	r5, r1
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 143


 922:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 2035              		.loc 1 922 0
 2036 000c FFF7FEFF 		bl	sync_window
 2037              	.LVL279:
 924:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_read(fs->drv, fs->win, sector, 1) != RES_OK) {
 2038              		.loc 1 924 0
 2039 0010 0646     		mov	r6, r0
 2040 0012 08B1     		cbz	r0, .L220
 2041              	.LVL280:
 2042              	.L215:
 933:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2043              		.loc 1 933 0
 2044 0014 3046     		mov	r0, r6
 2045 0016 70BD     		pop	{r4, r5, r6, pc}
 2046              	.LVL281:
 2047              	.L220:
 925:Middlewares/Third_Party/FatFs/src/ff.c **** 				sector = 0xFFFFFFFF;	/* Invalidate window if data is not reliable */
 2048              		.loc 1 925 0
 2049 0018 0123     		movs	r3, #1
 2050 001a 2A46     		mov	r2, r5
 2051 001c 04F13C01 		add	r1, r4, #60
 2052 0020 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2053              	.LVL282:
 2054 0022 FFF7FEFF 		bl	disk_read
 2055              	.LVL283:
 2056 0026 10B1     		cbz	r0, .L216
 927:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 2057              		.loc 1 927 0
 2058 0028 0126     		movs	r6, #1
 926:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_DISK_ERR;
 2059              		.loc 1 926 0
 2060 002a 4FF0FF35 		mov	r5, #-1
 2061              	.LVL284:
 2062              	.L216:
 929:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2063              		.loc 1 929 0
 2064 002e A563     		str	r5, [r4, #56]
 2065 0030 F0E7     		b	.L215
 2066              	.LVL285:
 2067              	.L217:
 917:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2068              		.loc 1 917 0
 2069 0032 0026     		movs	r6, #0
 2070 0034 EEE7     		b	.L215
 2071              		.cfi_endproc
 2072              	.LFE157:
 2074              		.section	.text.check_fs,"ax",%progbits
 2075              		.align	1
 2076              		.syntax unified
 2077              		.thumb
 2078              		.thumb_func
 2079              		.fpu fpv5-sp-d16
 2081              	check_fs:
 2082              	.LFB185:
2969:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->wflag = 0; fs->winsect = 0xFFFFFFFF;		/* Invaidate window */
 2083              		.loc 1 2969 0
 2084              		.cfi_startproc
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 144


 2085              		@ args = 0, pretend = 0, frame = 0
 2086              		@ frame_needed = 0, uses_anonymous_args = 0
 2087              	.LVL286:
 2088 0000 10B5     		push	{r4, lr}
 2089              	.LCFI30:
 2090              		.cfi_def_cfa_offset 8
 2091              		.cfi_offset 4, -8
 2092              		.cfi_offset 14, -4
 2093 0002 0446     		mov	r4, r0
2970:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (move_window(fs, sect) != FR_OK) return 4;	/* Load boot record */
 2094              		.loc 1 2970 0
 2095 0004 0023     		movs	r3, #0
 2096 0006 C370     		strb	r3, [r0, #3]
 2097 0008 4FF0FF33 		mov	r3, #-1
 2098 000c 8363     		str	r3, [r0, #56]
2971:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2099              		.loc 1 2971 0
 2100 000e FFF7FEFF 		bl	move_window
 2101              	.LVL287:
 2102 0012 08B1     		cbz	r0, .L230
 2103 0014 0420     		movs	r0, #4
 2104 0016 10BD     		pop	{r4, pc}
 2105              	.LVL288:
 2106              	.L230:
2973:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2107              		.loc 1 2973 0
 2108 0018 04F23A20 		addw	r0, r4, #570
 2109 001c FFF7FEFF 		bl	ld_word
 2110              	.LVL289:
 2111 0020 4AF65523 		movw	r3, #43605
 2112 0024 9842     		cmp	r0, r3
 2113 0026 01D0     		beq	.L231
 2114 0028 0320     		movs	r0, #3
 2115 002a 10BD     		pop	{r4, pc}
 2116              	.LVL290:
 2117              	.L231:
2975:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((ld_dword(fs->win + BS_FilSysType) & 0xFFFFFF) == 0x544146) return 0;	/* Check "FAT" string *
 2118              		.loc 1 2975 0
 2119 002c 94F83C30 		ldrb	r3, [r4, #60]	@ zero_extendqisi2
 2120 0030 E92B     		cmp	r3, #233
 2121 0032 07D0     		beq	.L223
2975:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((ld_dword(fs->win + BS_FilSysType) & 0xFFFFFF) == 0x544146) return 0;	/* Check "FAT" string *
 2122              		.loc 1 2975 0 is_stmt 0 discriminator 1
 2123 0034 E36B     		ldr	r3, [r4, #60]
 2124 0036 03F0FF13 		and	r3, r3, #16711935
 2125 003a 0D4A     		ldr	r2, .L233
 2126 003c 9342     		cmp	r3, r2
 2127 003e 01D0     		beq	.L223
2982:Middlewares/Third_Party/FatFs/src/ff.c **** }
 2128              		.loc 1 2982 0 is_stmt 1
 2129 0040 0220     		movs	r0, #2
 2130 0042 10BD     		pop	{r4, pc}
 2131              	.LVL291:
 2132              	.L223:
2976:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ld_dword(fs->win + BS_FilSysType32) == 0x33544146) return 0;			/* Check "FAT3" string */
 2133              		.loc 1 2976 0
 2134 0044 04F17200 		add	r0, r4, #114
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 145


 2135 0048 FFF7FEFF 		bl	ld_dword
 2136              	.LVL292:
 2137 004c 20F07F40 		bic	r0, r0, #-16777216
 2138 0050 084B     		ldr	r3, .L233+4
 2139 0052 9842     		cmp	r0, r3
 2140 0054 0AD0     		beq	.L227
2977:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2141              		.loc 1 2977 0
 2142 0056 04F18E00 		add	r0, r4, #142
 2143 005a FFF7FEFF 		bl	ld_dword
 2144              	.LVL293:
 2145 005e 064B     		ldr	r3, .L233+8
 2146 0060 9842     		cmp	r0, r3
 2147 0062 01D0     		beq	.L232
2982:Middlewares/Third_Party/FatFs/src/ff.c **** }
 2148              		.loc 1 2982 0
 2149 0064 0220     		movs	r0, #2
2983:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2150              		.loc 1 2983 0
 2151 0066 10BD     		pop	{r4, pc}
 2152              	.LVL294:
 2153              	.L232:
2977:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2154              		.loc 1 2977 0
 2155 0068 0020     		movs	r0, #0
 2156 006a 10BD     		pop	{r4, pc}
 2157              	.LVL295:
 2158              	.L227:
2976:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ld_dword(fs->win + BS_FilSysType32) == 0x33544146) return 0;			/* Check "FAT3" string */
 2159              		.loc 1 2976 0
 2160 006c 0020     		movs	r0, #0
 2161 006e 10BD     		pop	{r4, pc}
 2162              	.LVL296:
 2163              	.L234:
 2164              		.align	2
 2165              	.L233:
 2166 0070 EB009000 		.word	9437419
 2167 0074 46415400 		.word	5521734
 2168 0078 46415433 		.word	861159750
 2169              		.cfi_endproc
 2170              	.LFE185:
 2172              		.section	.text.find_volume,"ax",%progbits
 2173              		.align	1
 2174              		.syntax unified
 2175              		.thumb
 2176              		.thumb_func
 2177              		.fpu fpv5-sp-d16
 2179              	find_volume:
 2180              	.LFB186:
2998:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE fmt, *pt;
 2181              		.loc 1 2998 0
 2182              		.cfi_startproc
 2183              		@ args = 0, pretend = 0, frame = 16
 2184              		@ frame_needed = 0, uses_anonymous_args = 0
 2185              	.LVL297:
 2186 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 2187              	.LCFI31:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 146


 2188              		.cfi_def_cfa_offset 32
 2189              		.cfi_offset 4, -32
 2190              		.cfi_offset 5, -28
 2191              		.cfi_offset 6, -24
 2192              		.cfi_offset 7, -20
 2193              		.cfi_offset 8, -16
 2194              		.cfi_offset 9, -12
 2195              		.cfi_offset 10, -8
 2196              		.cfi_offset 14, -4
 2197 0004 84B0     		sub	sp, sp, #16
 2198              	.LCFI32:
 2199              		.cfi_def_cfa_offset 48
 2200 0006 0C46     		mov	r4, r1
 2201 0008 1746     		mov	r7, r2
3009:Middlewares/Third_Party/FatFs/src/ff.c **** 	vol = get_ldnumber(path);
 2202              		.loc 1 3009 0
 2203 000a 0023     		movs	r3, #0
 2204 000c 0B60     		str	r3, [r1]
3010:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
 2205              		.loc 1 3010 0
 2206 000e FFF7FEFF 		bl	get_ldnumber
 2207              	.LVL298:
3011:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2208              		.loc 1 3011 0
 2209 0012 061E     		subs	r6, r0, #0
 2210 0014 C0F23E81 		blt	.L253
3014:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!fs) return FR_NOT_ENABLED;		/* Is the file system object available? */
 2211              		.loc 1 3014 0
 2212 0018 AD4B     		ldr	r3, .L288
 2213 001a 53F82650 		ldr	r5, [r3, r6, lsl #2]
 2214              	.LVL299:
3015:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2215              		.loc 1 3015 0
 2216 001e 002D     		cmp	r5, #0
 2217 0020 00F03C81 		beq	.L254
3017:Middlewares/Third_Party/FatFs/src/ff.c **** 	*rfs = fs;							/* Return pointer to the file system object */
 2218              		.loc 1 3017 0
 2219 0024 2846     		mov	r0, r5
 2220              	.LVL300:
 2221 0026 FFF7FEFF 		bl	lock_fs
 2222              	.LVL301:
 2223 002a 08B9     		cbnz	r0, .L280
 2224 002c 0F20     		movs	r0, #15
 2225 002e 32E1     		b	.L236
 2226              	.L280:
3018:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2227              		.loc 1 3018 0
 2228 0030 2560     		str	r5, [r4]
3020:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type) {					/* If the volume has been mounted */
 2229              		.loc 1 3020 0
 2230 0032 07F0FE07 		and	r7, r7, #254
 2231              	.LVL302:
3021:Middlewares/Third_Party/FatFs/src/ff.c **** 		stat = disk_status(fs->drv);
 2232              		.loc 1 3021 0
 2233 0036 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 2234 0038 7BB1     		cbz	r3, .L237
3022:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!(stat & STA_NOINIT)) {		/* and the physical drive is kept initialized */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 147


 2235              		.loc 1 3022 0
 2236 003a 6878     		ldrb	r0, [r5, #1]	@ zero_extendqisi2
 2237 003c FFF7FEFF 		bl	disk_status
 2238              	.LVL303:
3023:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!_FS_READONLY && mode && (stat & STA_PROTECT)) {	/* Check write protection if needed */
 2239              		.loc 1 3023 0
 2240 0040 10F0010F 		tst	r0, #1
 2241 0044 09D1     		bne	.L237
3024:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_WRITE_PROTECTED;
 2242              		.loc 1 3024 0
 2243 0046 002F     		cmp	r7, #0
 2244 0048 00F02A81 		beq	.L256
3024:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_WRITE_PROTECTED;
 2245              		.loc 1 3024 0 is_stmt 0 discriminator 1
 2246 004c 10F0040F 		tst	r0, #4
 2247 0050 01D0     		beq	.L281
3025:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 2248              		.loc 1 3025 0 is_stmt 1
 2249 0052 0A20     		movs	r0, #10
 2250              	.LVL304:
 2251 0054 1FE1     		b	.L236
 2252              	.LVL305:
 2253              	.L281:
3027:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2254              		.loc 1 3027 0
 2255 0056 0020     		movs	r0, #0
 2256              	.LVL306:
 2257 0058 1DE1     		b	.L236
 2258              	.L237:
3034:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->drv = LD2PD(vol);				/* Bind the logical drive and a physical drive */
 2259              		.loc 1 3034 0
 2260 005a 0023     		movs	r3, #0
 2261 005c 2B70     		strb	r3, [r5]
3035:Middlewares/Third_Party/FatFs/src/ff.c **** 	stat = disk_initialize(fs->drv);	/* Initialize the physical drive */
 2262              		.loc 1 3035 0
 2263 005e F0B2     		uxtb	r0, r6
 2264 0060 6870     		strb	r0, [r5, #1]
3036:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_NOINIT) { 			/* Check if the initialization succeeded */
 2265              		.loc 1 3036 0
 2266 0062 FFF7FEFF 		bl	disk_initialize
 2267              	.LVL307:
3037:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_NOT_READY;			/* Failed to initialize due to no medium or hard error */
 2268              		.loc 1 3037 0
 2269 0066 10F0010F 		tst	r0, #1
 2270 006a 01D0     		beq	.L282
3038:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2271              		.loc 1 3038 0
 2272 006c 0320     		movs	r0, #3
 2273              	.LVL308:
 2274 006e 12E1     		b	.L236
 2275              	.LVL309:
 2276              	.L282:
3040:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_WRITE_PROTECTED;
 2277              		.loc 1 3040 0
 2278 0070 27B1     		cbz	r7, .L238
3040:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_WRITE_PROTECTED;
 2279              		.loc 1 3040 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 148


 2280 0072 10F0040F 		tst	r0, #4
 2281 0076 01D0     		beq	.L238
3041:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2282              		.loc 1 3041 0 is_stmt 1
 2283 0078 0A20     		movs	r0, #10
 2284              	.LVL310:
 2285 007a 0CE1     		b	.L236
 2286              	.LVL311:
 2287              	.L238:
3050:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == 2 || (fmt < 2 && LD2PT(vol) != 0)) {	/* Not an FAT-VBR or forced partition number */
 2288              		.loc 1 3050 0
 2289 007c 0021     		movs	r1, #0
 2290 007e 2846     		mov	r0, r5
 2291              	.LVL312:
 2292 0080 FFF7FEFF 		bl	check_fs
 2293              	.LVL313:
3051:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = 0; i < 4; i++) {		/* Get partition offset */
 2294              		.loc 1 3051 0
 2295 0084 0228     		cmp	r0, #2
 2296 0086 1DD0     		beq	.L260
3049:Middlewares/Third_Party/FatFs/src/ff.c **** 	fmt = check_fs(fs, bsect);			/* Load sector 0 and check if it is an FAT-VBR as SFD */
 2297              		.loc 1 3049 0
 2298 0088 0026     		movs	r6, #0
 2299              	.LVL314:
 2300              	.L240:
3063:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt >= 2) return FR_NO_FILESYSTEM;	/* No FAT volume is found */
 2301              		.loc 1 3063 0
 2302 008a 0428     		cmp	r0, #4
 2303 008c 00F00A81 		beq	.L263
3064:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2304              		.loc 1 3064 0
 2305 0090 0128     		cmp	r0, #1
 2306 0092 2CD9     		bls	.L283
 2307 0094 0D20     		movs	r0, #13
 2308              	.LVL315:
 2309 0096 FEE0     		b	.L236
 2310              	.LVL316:
 2311              	.L261:
3054:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2312              		.loc 1 3054 0
 2313 0098 0020     		movs	r0, #0
 2314              	.LVL317:
 2315              	.L241:
3054:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2316              		.loc 1 3054 0 is_stmt 0 discriminator 4
 2317 009a 04AB     		add	r3, sp, #16
 2318 009c 03EB8403 		add	r3, r3, r4, lsl #2
 2319 00a0 43F8100C 		str	r0, [r3, #-16]
3052:Middlewares/Third_Party/FatFs/src/ff.c **** 			pt = fs->win + (MBR_Table + i * SZ_PTE);
 2320              		.loc 1 3052 0 is_stmt 1 discriminator 4
 2321 00a4 0134     		adds	r4, r4, #1
 2322              	.LVL318:
 2323              	.L239:
3052:Middlewares/Third_Party/FatFs/src/ff.c **** 			pt = fs->win + (MBR_Table + i * SZ_PTE);
 2324              		.loc 1 3052 0 is_stmt 0 discriminator 2
 2325 00a6 032C     		cmp	r4, #3
 2326 00a8 0ED8     		bhi	.L284
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 149


3053:Middlewares/Third_Party/FatFs/src/ff.c **** 			br[i] = pt[PTE_System] ? ld_dword(pt + PTE_StLba) : 0;
 2327              		.loc 1 3053 0 is_stmt 1
 2328 00aa 05F13C00 		add	r0, r5, #60
 2329 00ae 2301     		lsls	r3, r4, #4
 2330 00b0 03F5DF73 		add	r3, r3, #446
 2331 00b4 1844     		add	r0, r0, r3
 2332              	.LVL319:
3054:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2333              		.loc 1 3054 0
 2334 00b6 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 2335 00b8 002B     		cmp	r3, #0
 2336 00ba EDD0     		beq	.L261
3054:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2337              		.loc 1 3054 0 is_stmt 0 discriminator 1
 2338 00bc 0830     		adds	r0, r0, #8
 2339              	.LVL320:
 2340 00be FFF7FEFF 		bl	ld_dword
 2341              	.LVL321:
 2342 00c2 EAE7     		b	.L241
 2343              	.LVL322:
 2344              	.L260:
 2345 00c4 0024     		movs	r4, #0
 2346              	.LVL323:
 2347 00c6 EEE7     		b	.L239
 2348              	.LVL324:
 2349              	.L284:
 2350 00c8 0024     		movs	r4, #0
 2351              	.LVL325:
 2352              	.L244:
3059:Middlewares/Third_Party/FatFs/src/ff.c **** 			fmt = bsect ? check_fs(fs, bsect) : 3;	/* Check the partition */
 2353              		.loc 1 3059 0 is_stmt 1
 2354 00ca 04AB     		add	r3, sp, #16
 2355 00cc 03EB8403 		add	r3, r3, r4, lsl #2
 2356 00d0 53F8106C 		ldr	r6, [r3, #-16]
 2357              	.LVL326:
3060:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (LD2PT(vol) == 0 && fmt >= 2 && ++i < 4);
 2358              		.loc 1 3060 0
 2359 00d4 36B9     		cbnz	r6, .L285
 2360 00d6 0320     		movs	r0, #3
 2361              	.L243:
 2362              	.LVL327:
3061:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2363              		.loc 1 3061 0 discriminator 4
 2364 00d8 0128     		cmp	r0, #1
 2365 00da D6D9     		bls	.L240
3061:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2366              		.loc 1 3061 0 is_stmt 0 discriminator 1
 2367 00dc 0134     		adds	r4, r4, #1
 2368              	.LVL328:
 2369 00de 032C     		cmp	r4, #3
 2370 00e0 F3D9     		bls	.L244
 2371 00e2 D2E7     		b	.L240
 2372              	.LVL329:
 2373              	.L285:
3060:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (LD2PT(vol) == 0 && fmt >= 2 && ++i < 4);
 2374              		.loc 1 3060 0 is_stmt 1 discriminator 1
 2375 00e4 3146     		mov	r1, r6
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 150


 2376 00e6 2846     		mov	r0, r5
 2377 00e8 FFF7FEFF 		bl	check_fs
 2378              	.LVL330:
 2379 00ec F4E7     		b	.L243
 2380              	.LVL331:
 2381              	.L283:
3116:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2382              		.loc 1 3116 0
 2383 00ee 05F14700 		add	r0, r5, #71
 2384              	.LVL332:
 2385 00f2 FFF7FEFF 		bl	ld_word
 2386              	.LVL333:
 2387 00f6 B0F5007F 		cmp	r0, #512
 2388 00fa 01D0     		beq	.L286
 2389 00fc 0D20     		movs	r0, #13
 2390 00fe CAE0     		b	.L236
 2391              	.L286:
3118:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fasize == 0) fasize = ld_dword(fs->win + BPB_FATSz32);
 2392              		.loc 1 3118 0
 2393 0100 05F15200 		add	r0, r5, #82
 2394 0104 FFF7FEFF 		bl	ld_word
 2395              	.LVL334:
 2396 0108 8046     		mov	r8, r0
 2397              	.LVL335:
3119:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fsize = fasize;
 2398              		.loc 1 3119 0
 2399 010a 20B9     		cbnz	r0, .L245
3119:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fsize = fasize;
 2400              		.loc 1 3119 0 is_stmt 0 discriminator 1
 2401 010c 05F16000 		add	r0, r5, #96
 2402              	.LVL336:
 2403 0110 FFF7FEFF 		bl	ld_dword
 2404              	.LVL337:
 2405 0114 8046     		mov	r8, r0
 2406              	.LVL338:
 2407              	.L245:
3120:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2408              		.loc 1 3120 0 is_stmt 1
 2409 0116 C5F82480 		str	r8, [r5, #36]
3122:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->n_fats != 1 && fs->n_fats != 2) return FR_NO_FILESYSTEM;	/* (Must be 1 or 2) */
 2410              		.loc 1 3122 0
 2411 011a 95F84C90 		ldrb	r9, [r5, #76]	@ zero_extendqisi2
 2412 011e 85F80290 		strb	r9, [r5, #2]
3123:Middlewares/Third_Party/FatFs/src/ff.c **** 		fasize *= fs->n_fats;							/* Number of sectors for FAT area */
 2413              		.loc 1 3123 0
 2414 0122 09F1FF33 		add	r3, r9, #-1
 2415 0126 DBB2     		uxtb	r3, r3
 2416 0128 012B     		cmp	r3, #1
 2417 012a 01D9     		bls	.L287
 2418 012c 0D20     		movs	r0, #13
 2419              	.LVL339:
 2420 012e B2E0     		b	.L236
 2421              	.LVL340:
 2422              	.L287:
3124:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2423              		.loc 1 3124 0
 2424 0130 09FB08F9 		mul	r9, r9, r8
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 151


 2425              	.LVL341:
3126:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->csize == 0 || (fs->csize & (fs->csize - 1))) return FR_NO_FILESYSTEM;	/* (Must be power o
 2426              		.loc 1 3126 0
 2427 0134 95F84970 		ldrb	r7, [r5, #73]	@ zero_extendqisi2
 2428              	.LVL342:
 2429 0138 6F81     		strh	r7, [r5, #10]	@ movhi
3127:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2430              		.loc 1 3127 0
 2431 013a 002F     		cmp	r7, #0
 2432 013c 00F0B480 		beq	.L267
3127:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2433              		.loc 1 3127 0 is_stmt 0 discriminator 2
 2434 0140 7B1E     		subs	r3, r7, #1
 2435 0142 1F42     		tst	r7, r3
 2436 0144 40F0B280 		bne	.L268
3129:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->n_rootdir % (SS(fs) / SZDIRE)) return FR_NO_FILESYSTEM;	/* (Must be sector aligned) */
 2437              		.loc 1 3129 0 is_stmt 1
 2438 0148 05F14D00 		add	r0, r5, #77
 2439 014c FFF7FEFF 		bl	ld_word
 2440              	.LVL343:
 2441 0150 8246     		mov	r10, r0
 2442 0152 2881     		strh	r0, [r5, #8]	@ movhi
3130:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2443              		.loc 1 3130 0
 2444 0154 10F00F0F 		tst	r0, #15
 2445 0158 40F0AA80 		bne	.L269
3132:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (tsect == 0) tsect = ld_dword(fs->win + BPB_TotSec32);
 2446              		.loc 1 3132 0
 2447 015c 05F14F00 		add	r0, r5, #79
 2448 0160 FFF7FEFF 		bl	ld_word
 2449              	.LVL344:
 2450 0164 0446     		mov	r4, r0
 2451              	.LVL345:
3133:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2452              		.loc 1 3133 0
 2453 0166 20B9     		cbnz	r0, .L246
3133:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2454              		.loc 1 3133 0 is_stmt 0 discriminator 1
 2455 0168 05F15C00 		add	r0, r5, #92
 2456              	.LVL346:
 2457 016c FFF7FEFF 		bl	ld_dword
 2458              	.LVL347:
 2459 0170 0446     		mov	r4, r0
 2460              	.LVL348:
 2461              	.L246:
3135:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nrsv == 0) return FR_NO_FILESYSTEM;			/* (Must not be 0) */
 2462              		.loc 1 3135 0 is_stmt 1
 2463 0172 05F14A00 		add	r0, r5, #74
 2464              	.LVL349:
 2465 0176 FFF7FEFF 		bl	ld_word
 2466              	.LVL350:
3136:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2467              		.loc 1 3136 0
 2468 017a 0246     		mov	r2, r0
 2469 017c 0028     		cmp	r0, #0
 2470 017e 00F09980 		beq	.L270
3139:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (tsect < sysect) return FR_NO_FILESYSTEM;	/* (Invalid volume size) */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 152


 2471              		.loc 1 3139 0
 2472 0182 09EB0003 		add	r3, r9, r0
 2473 0186 03EB1A13 		add	r3, r3, r10, lsr #4
 2474              	.LVL351:
3140:Middlewares/Third_Party/FatFs/src/ff.c **** 		nclst = (tsect - sysect) / fs->csize;			/* Number of clusters */
 2475              		.loc 1 3140 0
 2476 018a 9C42     		cmp	r4, r3
 2477 018c C0F09480 		bcc	.L271
3141:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nclst == 0) return FR_NO_FILESYSTEM;		/* (Invalid volume size) */
 2478              		.loc 1 3141 0
 2479 0190 E41A     		subs	r4, r4, r3
 2480              	.LVL352:
 2481 0192 B4FBF7F4 		udiv	r4, r4, r7
 2482              	.LVL353:
3142:Middlewares/Third_Party/FatFs/src/ff.c **** 		fmt = FS_FAT32;
 2483              		.loc 1 3142 0
 2484 0196 002C     		cmp	r4, #0
 2485 0198 00F09080 		beq	.L272
 2486              	.LVL354:
3144:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nclst <= MAX_FAT12) fmt = FS_FAT12;
 2487              		.loc 1 3144 0
 2488 019c 4FF6F571 		movw	r1, #65525
 2489 01a0 8C42     		cmp	r4, r1
 2490 01a2 65D9     		bls	.L273
3143:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nclst <= MAX_FAT16) fmt = FS_FAT16;
 2491              		.loc 1 3143 0
 2492 01a4 0327     		movs	r7, #3
 2493              	.L247:
 2494              	.LVL355:
3145:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2495              		.loc 1 3145 0
 2496 01a6 40F6F571 		movw	r1, #4085
 2497 01aa 8C42     		cmp	r4, r1
 2498 01ac 00D8     		bhi	.L248
 2499 01ae 0127     		movs	r7, #1
 2500              	.LVL356:
 2501              	.L248:
3148:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->volbase = bsect;							/* Volume start sector */
 2502              		.loc 1 3148 0
 2503 01b0 0234     		adds	r4, r4, #2
 2504              	.LVL357:
 2505 01b2 2C62     		str	r4, [r5, #32]
3149:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fatbase = bsect + nrsv; 					/* FAT start sector */
 2506              		.loc 1 3149 0
 2507 01b4 AE62     		str	r6, [r5, #40]
3150:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->database = bsect + sysect;					/* Data start sector */
 2508              		.loc 1 3150 0
 2509 01b6 3244     		add	r2, r2, r6
 2510 01b8 EA62     		str	r2, [r5, #44]
3151:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fmt == FS_FAT32) {
 2511              		.loc 1 3151 0
 2512 01ba 3344     		add	r3, r3, r6
 2513              	.LVL358:
 2514 01bc 6B63     		str	r3, [r5, #52]
3152:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ld_word(fs->win + BPB_FSVer32) != 0) return FR_NO_FILESYSTEM;	/* (Must be FAT32 revision 0.0
 2515              		.loc 1 3152 0
 2516 01be 032F     		cmp	r7, #3
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 153


 2517 01c0 58D1     		bne	.L249
3153:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->n_rootdir) return FR_NO_FILESYSTEM;	/* (BPB_RootEntCnt must be 0) */
 2518              		.loc 1 3153 0
 2519 01c2 05F16600 		add	r0, r5, #102
 2520              	.LVL359:
 2521 01c6 FFF7FEFF 		bl	ld_word
 2522              	.LVL360:
 2523 01ca 0028     		cmp	r0, #0
 2524 01cc 78D1     		bne	.L275
3154:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->dirbase = ld_dword(fs->win + BPB_RootClus32);	/* Root directory start cluster */
 2525              		.loc 1 3154 0
 2526 01ce BAF1000F 		cmp	r10, #0
 2527 01d2 77D1     		bne	.L276
3155:Middlewares/Third_Party/FatFs/src/ff.c **** 			szbfat = fs->n_fatent * 4;					/* (Needed FAT size) */
 2528              		.loc 1 3155 0
 2529 01d4 05F16800 		add	r0, r5, #104
 2530 01d8 FFF7FEFF 		bl	ld_dword
 2531              	.LVL361:
 2532 01dc 2863     		str	r0, [r5, #48]
3156:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 2533              		.loc 1 3156 0
 2534 01de A400     		lsls	r4, r4, #2
 2535              	.LVL362:
 2536              	.L250:
3163:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2537              		.loc 1 3163 0
 2538 01e0 04F2FF14 		addw	r4, r4, #511
 2539              	.LVL363:
 2540 01e4 B8EB542F 		cmp	r8, r4, lsr #9
 2541 01e8 70D3     		bcc	.L278
3167:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fsi_flag = 0x80;
 2542              		.loc 1 3167 0
 2543 01ea 4FF0FF33 		mov	r3, #-1
 2544 01ee AB61     		str	r3, [r5, #24]
 2545 01f0 6B61     		str	r3, [r5, #20]
3168:Middlewares/Third_Party/FatFs/src/ff.c **** #if (_FS_NOFSINFO & 3) != 3
 2546              		.loc 1 3168 0
 2547 01f2 8023     		movs	r3, #128
 2548 01f4 2B71     		strb	r3, [r5, #4]
3170:Middlewares/Third_Party/FatFs/src/ff.c **** 			&& ld_word(fs->win + BPB_FSInfo32) == 1
 2549              		.loc 1 3170 0
 2550 01f6 032F     		cmp	r7, #3
 2551 01f8 2CD1     		bne	.L252
3171:Middlewares/Third_Party/FatFs/src/ff.c **** 			&& move_window(fs, bsect + 1) == FR_OK)
 2552              		.loc 1 3171 0
 2553 01fa 05F16C00 		add	r0, r5, #108
 2554 01fe FFF7FEFF 		bl	ld_word
 2555              	.LVL364:
 2556 0202 0128     		cmp	r0, #1
 2557 0204 26D1     		bne	.L252
3172:Middlewares/Third_Party/FatFs/src/ff.c **** 		{
 2558              		.loc 1 3172 0
 2559 0206 711C     		adds	r1, r6, #1
 2560 0208 2846     		mov	r0, r5
 2561 020a FFF7FEFF 		bl	move_window
 2562              	.LVL365:
 2563 020e 08BB     		cbnz	r0, .L252
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 154


3174:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ld_word(fs->win + BS_55AA) == 0xAA55	/* Load FSINFO data if available */
 2564              		.loc 1 3174 0
 2565 0210 0023     		movs	r3, #0
 2566 0212 2B71     		strb	r3, [r5, #4]
3175:Middlewares/Third_Party/FatFs/src/ff.c **** 				&& ld_dword(fs->win + FSI_LeadSig) == 0x41615252
 2567              		.loc 1 3175 0
 2568 0214 05F23A20 		addw	r0, r5, #570
 2569 0218 FFF7FEFF 		bl	ld_word
 2570              	.LVL366:
 2571 021c 4AF65523 		movw	r3, #43605
 2572 0220 9842     		cmp	r0, r3
 2573 0222 17D1     		bne	.L252
3176:Middlewares/Third_Party/FatFs/src/ff.c **** 				&& ld_dword(fs->win + FSI_StrucSig) == 0x61417272)
 2574              		.loc 1 3176 0
 2575 0224 05F13C00 		add	r0, r5, #60
 2576 0228 FFF7FEFF 		bl	ld_dword
 2577              	.LVL367:
 2578 022c 294B     		ldr	r3, .L288+4
 2579 022e 9842     		cmp	r0, r3
 2580 0230 10D1     		bne	.L252
3177:Middlewares/Third_Party/FatFs/src/ff.c **** 			{
 2581              		.loc 1 3177 0
 2582 0232 05F50870 		add	r0, r5, #544
 2583 0236 FFF7FEFF 		bl	ld_dword
 2584              	.LVL368:
 2585 023a 274B     		ldr	r3, .L288+8
 2586 023c 9842     		cmp	r0, r3
 2587 023e 09D1     		bne	.L252
3180:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 2588              		.loc 1 3180 0
 2589 0240 05F50970 		add	r0, r5, #548
 2590 0244 FFF7FEFF 		bl	ld_dword
 2591              	.LVL369:
 2592 0248 A861     		str	r0, [r5, #24]
3183:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 2593              		.loc 1 3183 0
 2594 024a 05F50A70 		add	r0, r5, #552
 2595 024e FFF7FEFF 		bl	ld_dword
 2596              	.LVL370:
 2597 0252 6861     		str	r0, [r5, #20]
 2598              	.L252:
3191:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->id = ++Fsid;		/* File system mount ID */
 2599              		.loc 1 3191 0
 2600 0254 2F70     		strb	r7, [r5]
3192:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN == 1
 2601              		.loc 1 3192 0
 2602 0256 214A     		ldr	r2, .L288+12
 2603 0258 1388     		ldrh	r3, [r2]
 2604 025a 0133     		adds	r3, r3, #1
 2605 025c 9BB2     		uxth	r3, r3
 2606 025e 1380     		strh	r3, [r2]	@ movhi
 2607 0260 EB80     		strh	r3, [r5, #6]	@ movhi
3200:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 2608              		.loc 1 3200 0
 2609 0262 0024     		movs	r4, #0
 2610              	.LVL371:
 2611 0264 EC61     		str	r4, [r5, #28]
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 155


3203:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 2612              		.loc 1 3203 0
 2613 0266 2846     		mov	r0, r5
 2614 0268 FFF7FEFF 		bl	clear_lock
 2615              	.LVL372:
3205:Middlewares/Third_Party/FatFs/src/ff.c **** }
 2616              		.loc 1 3205 0
 2617 026c 2046     		mov	r0, r4
 2618 026e 12E0     		b	.L236
 2619              	.LVL373:
 2620              	.L273:
3144:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nclst <= MAX_FAT12) fmt = FS_FAT12;
 2621              		.loc 1 3144 0
 2622 0270 0227     		movs	r7, #2
 2623 0272 98E7     		b	.L247
 2624              	.LVL374:
 2625              	.L249:
3158:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->dirbase = fs->fatbase + fasize;			/* Root directory start sector */
 2626              		.loc 1 3158 0
 2627 0274 BAF1000F 		cmp	r10, #0
 2628 0278 26D0     		beq	.L277
3159:Middlewares/Third_Party/FatFs/src/ff.c **** 			szbfat = (fmt == FS_FAT16) ?				/* (Needed FAT size) */
 2629              		.loc 1 3159 0
 2630 027a 4A44     		add	r2, r2, r9
 2631 027c 2A63     		str	r2, [r5, #48]
3161:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2632              		.loc 1 3161 0
 2633 027e 022F     		cmp	r7, #2
 2634 0280 01D1     		bne	.L251
3161:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2635              		.loc 1 3161 0 is_stmt 0 discriminator 1
 2636 0282 6400     		lsls	r4, r4, #1
 2637              	.LVL375:
 2638 0284 ACE7     		b	.L250
 2639              	.LVL376:
 2640              	.L251:
3161:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2641              		.loc 1 3161 0 discriminator 2
 2642 0286 04EB4403 		add	r3, r4, r4, lsl #1
 2643 028a 04F00104 		and	r4, r4, #1
 2644              	.LVL377:
 2645 028e 04EB5304 		add	r4, r4, r3, lsr #1
 2646 0292 A5E7     		b	.L250
 2647              	.LVL378:
 2648              	.L253:
3011:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2649              		.loc 1 3011 0 is_stmt 1
 2650 0294 0B20     		movs	r0, #11
 2651              	.LVL379:
 2652              	.L236:
3206:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2653              		.loc 1 3206 0
 2654 0296 04B0     		add	sp, sp, #16
 2655              	.LCFI33:
 2656              		.cfi_remember_state
 2657              		.cfi_def_cfa_offset 32
 2658              		@ sp needed
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 156


 2659 0298 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 2660              	.LVL380:
 2661              	.L254:
 2662              	.LCFI34:
 2663              		.cfi_restore_state
3015:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2664              		.loc 1 3015 0
 2665 029c 0C20     		movs	r0, #12
 2666              	.LVL381:
 2667 029e FAE7     		b	.L236
 2668              	.LVL382:
 2669              	.L256:
3027:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2670              		.loc 1 3027 0
 2671 02a0 0020     		movs	r0, #0
 2672              	.LVL383:
 2673 02a2 F8E7     		b	.L236
 2674              	.LVL384:
 2675              	.L263:
3063:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt >= 2) return FR_NO_FILESYSTEM;	/* No FAT volume is found */
 2676              		.loc 1 3063 0
 2677 02a4 0120     		movs	r0, #1
 2678              	.LVL385:
 2679 02a6 F6E7     		b	.L236
 2680              	.LVL386:
 2681              	.L267:
3127:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2682              		.loc 1 3127 0
 2683 02a8 0D20     		movs	r0, #13
 2684 02aa F4E7     		b	.L236
 2685              	.L268:
 2686 02ac 0D20     		movs	r0, #13
 2687 02ae F2E7     		b	.L236
 2688              	.L269:
3130:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2689              		.loc 1 3130 0
 2690 02b0 0D20     		movs	r0, #13
 2691 02b2 F0E7     		b	.L236
 2692              	.LVL387:
 2693              	.L270:
3136:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2694              		.loc 1 3136 0
 2695 02b4 0D20     		movs	r0, #13
 2696              	.LVL388:
 2697 02b6 EEE7     		b	.L236
 2698              	.LVL389:
 2699              	.L271:
3140:Middlewares/Third_Party/FatFs/src/ff.c **** 		nclst = (tsect - sysect) / fs->csize;			/* Number of clusters */
 2700              		.loc 1 3140 0
 2701 02b8 0D20     		movs	r0, #13
 2702              	.LVL390:
 2703 02ba ECE7     		b	.L236
 2704              	.LVL391:
 2705              	.L272:
3142:Middlewares/Third_Party/FatFs/src/ff.c **** 		fmt = FS_FAT32;
 2706              		.loc 1 3142 0
 2707 02bc 0D20     		movs	r0, #13
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 157


 2708              	.LVL392:
 2709 02be EAE7     		b	.L236
 2710              	.LVL393:
 2711              	.L275:
3153:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->n_rootdir) return FR_NO_FILESYSTEM;	/* (BPB_RootEntCnt must be 0) */
 2712              		.loc 1 3153 0
 2713 02c0 0D20     		movs	r0, #13
 2714 02c2 E8E7     		b	.L236
 2715              	.L276:
3154:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->dirbase = ld_dword(fs->win + BPB_RootClus32);	/* Root directory start cluster */
 2716              		.loc 1 3154 0
 2717 02c4 0D20     		movs	r0, #13
 2718 02c6 E6E7     		b	.L236
 2719              	.LVL394:
 2720              	.L277:
3158:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->dirbase = fs->fatbase + fasize;			/* Root directory start sector */
 2721              		.loc 1 3158 0
 2722 02c8 0D20     		movs	r0, #13
 2723              	.LVL395:
 2724 02ca E4E7     		b	.L236
 2725              	.LVL396:
 2726              	.L278:
3163:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2727              		.loc 1 3163 0
 2728 02cc 0D20     		movs	r0, #13
 2729 02ce E2E7     		b	.L236
 2730              	.L289:
 2731              		.align	2
 2732              	.L288:
 2733 02d0 00000000 		.word	.LANCHOR4
 2734 02d4 52526141 		.word	1096897106
 2735 02d8 72724161 		.word	1631679090
 2736 02dc 00000000 		.word	.LANCHOR5
 2737              		.cfi_endproc
 2738              	.LFE186:
 2740              		.section	.text.put_fat,"ax",%progbits
 2741              		.align	1
 2742              		.syntax unified
 2743              		.thumb
 2744              		.thumb_func
 2745              		.fpu fpv5-sp-d16
 2747              	put_fat:
 2748              	.LFB161:
1086:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT bc;
 2749              		.loc 1 1086 0
 2750              		.cfi_startproc
 2751              		@ args = 0, pretend = 0, frame = 0
 2752              		@ frame_needed = 0, uses_anonymous_args = 0
 2753              	.LVL397:
 2754 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 2755              	.LCFI35:
 2756              		.cfi_def_cfa_offset 32
 2757              		.cfi_offset 4, -32
 2758              		.cfi_offset 5, -28
 2759              		.cfi_offset 6, -24
 2760              		.cfi_offset 7, -20
 2761              		.cfi_offset 8, -16
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 158


 2762              		.cfi_offset 9, -12
 2763              		.cfi_offset 10, -8
 2764              		.cfi_offset 14, -4
 2765              	.LVL398:
1091:Middlewares/Third_Party/FatFs/src/ff.c **** 		switch (fs->fs_type) {
 2766              		.loc 1 1091 0
 2767 0004 0129     		cmp	r1, #1
 2768 0006 7CD9     		bls	.L299
1091:Middlewares/Third_Party/FatFs/src/ff.c **** 		switch (fs->fs_type) {
 2769              		.loc 1 1091 0 is_stmt 0 discriminator 1
 2770 0008 036A     		ldr	r3, [r0, #32]
 2771 000a 9942     		cmp	r1, r3
 2772 000c 01D3     		bcc	.L304
1089:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2773              		.loc 1 1089 0 is_stmt 1
 2774 000e 0225     		movs	r5, #2
 2775 0010 78E0     		b	.L291
 2776              	.L304:
 2777 0012 1746     		mov	r7, r2
 2778 0014 0C46     		mov	r4, r1
 2779 0016 0646     		mov	r6, r0
1092:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT12 :	/* Bitfield items */
 2780              		.loc 1 1092 0
 2781 0018 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 2782 001a 022B     		cmp	r3, #2
 2783 001c 43D0     		beq	.L292
 2784 001e 032B     		cmp	r3, #3
 2785 0020 54D0     		beq	.L293
 2786 0022 012B     		cmp	r3, #1
 2787 0024 01D0     		beq	.L305
1089:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2788              		.loc 1 1089 0
 2789 0026 0225     		movs	r5, #2
 2790 0028 6CE0     		b	.L291
 2791              	.L305:
 2792              	.LVL399:
1094:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
 2793              		.loc 1 1094 0
 2794 002a 01EB5108 		add	r8, r1, r1, lsr #1
 2795              	.LVL400:
1095:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 2796              		.loc 1 1095 0
 2797 002e C16A     		ldr	r1, [r0, #44]
 2798              	.LVL401:
 2799 0030 01EB5821 		add	r1, r1, r8, lsr #9
 2800 0034 FFF7FEFF 		bl	move_window
 2801              	.LVL402:
1096:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = fs->win + bc++ % SS(fs);
 2802              		.loc 1 1096 0
 2803 0038 0546     		mov	r5, r0
 2804 003a 0028     		cmp	r0, #0
 2805 003c 62D1     		bne	.L291
1097:Middlewares/Third_Party/FatFs/src/ff.c **** 			*p = (clst & 1) ? ((*p & 0x0F) | ((BYTE)val << 4)) : (BYTE)val;
 2806              		.loc 1 1097 0
 2807 003e 06F13C0A 		add	r10, r6, #60
 2808 0042 08F10109 		add	r9, r8, #1
 2809              	.LVL403:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 159


 2810 0046 C8F30808 		ubfx	r8, r8, #0, #9
 2811              	.LVL404:
1098:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2812              		.loc 1 1098 0
 2813 004a 14F00104 		ands	r4, r4, #1
 2814              	.LVL405:
 2815 004e 1FD0     		beq	.L295
1098:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2816              		.loc 1 1098 0 is_stmt 0 discriminator 1
 2817 0050 1AF90830 		ldrsb	r3, [r10, r8]
 2818 0054 03F00F03 		and	r3, r3, #15
 2819 0058 3A01     		lsls	r2, r7, #4
 2820 005a 02F47F62 		and	r2, r2, #4080
 2821 005e 1343     		orrs	r3, r3, r2
 2822 0060 DBB2     		uxtb	r3, r3
 2823              	.L296:
1098:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2824              		.loc 1 1098 0 discriminator 4
 2825 0062 0AF80830 		strb	r3, [r10, r8]
1099:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
 2826              		.loc 1 1099 0 is_stmt 1 discriminator 4
 2827 0066 0123     		movs	r3, #1
 2828 0068 F370     		strb	r3, [r6, #3]
1100:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 2829              		.loc 1 1100 0 discriminator 4
 2830 006a F16A     		ldr	r1, [r6, #44]
 2831 006c 01EB5921 		add	r1, r1, r9, lsr #9
 2832 0070 3046     		mov	r0, r6
 2833              	.LVL406:
 2834 0072 FFF7FEFF 		bl	move_window
 2835              	.LVL407:
1101:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = fs->win + bc % SS(fs);
 2836              		.loc 1 1101 0 discriminator 4
 2837 0076 0546     		mov	r5, r0
 2838 0078 0028     		cmp	r0, #0
 2839 007a 43D1     		bne	.L291
1102:Middlewares/Third_Party/FatFs/src/ff.c **** 			*p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x0F));
 2840              		.loc 1 1102 0
 2841 007c C9F30809 		ubfx	r9, r9, #0, #9
 2842              	.LVL408:
1103:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2843              		.loc 1 1103 0
 2844 0080 44B1     		cbz	r4, .L297
1103:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2845              		.loc 1 1103 0 is_stmt 0 discriminator 1
 2846 0082 C7F30712 		ubfx	r2, r7, #4, #8
 2847              	.LVL409:
 2848              	.L298:
1103:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2849              		.loc 1 1103 0 discriminator 4
 2850 0086 0AF80920 		strb	r2, [r10, r9]
1104:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 2851              		.loc 1 1104 0 is_stmt 1 discriminator 4
 2852 008a 0123     		movs	r3, #1
 2853 008c F370     		strb	r3, [r6, #3]
1105:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2854              		.loc 1 1105 0 discriminator 4
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 160


 2855 008e 39E0     		b	.L291
 2856              	.LVL410:
 2857              	.L295:
1098:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2858              		.loc 1 1098 0 discriminator 2
 2859 0090 FBB2     		uxtb	r3, r7
 2860 0092 E6E7     		b	.L296
 2861              	.LVL411:
 2862              	.L297:
1103:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2863              		.loc 1 1103 0 discriminator 2
 2864 0094 1AF90920 		ldrsb	r2, [r10, r9]
 2865 0098 22F00F02 		bic	r2, r2, #15
 2866 009c C7F30327 		ubfx	r7, r7, #8, #4
 2867              	.LVL412:
 2868 00a0 3A43     		orrs	r2, r2, r7
 2869 00a2 D2B2     		uxtb	r2, r2
 2870 00a4 EFE7     		b	.L298
 2871              	.LVL413:
 2872              	.L292:
1108:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 2873              		.loc 1 1108 0
 2874 00a6 C16A     		ldr	r1, [r0, #44]
 2875              	.LVL414:
 2876 00a8 01EB1421 		add	r1, r1, r4, lsr #8
 2877 00ac FFF7FEFF 		bl	move_window
 2878              	.LVL415:
1109:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(fs->win + clst * 2 % SS(fs), (WORD)val);
 2879              		.loc 1 1109 0
 2880 00b0 0546     		mov	r5, r0
 2881 00b2 38BB     		cbnz	r0, .L291
1110:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2882              		.loc 1 1110 0
 2883 00b4 06F13C00 		add	r0, r6, #60
 2884              	.LVL416:
 2885 00b8 6300     		lsls	r3, r4, #1
 2886 00ba 03F4FF73 		and	r3, r3, #510
 2887 00be B9B2     		uxth	r1, r7
 2888 00c0 1844     		add	r0, r0, r3
 2889 00c2 FFF7FEFF 		bl	st_word
 2890              	.LVL417:
1111:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 2891              		.loc 1 1111 0
 2892 00c6 0123     		movs	r3, #1
 2893 00c8 F370     		strb	r3, [r6, #3]
1112:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2894              		.loc 1 1112 0
 2895 00ca 1BE0     		b	.L291
 2896              	.LVL418:
 2897              	.L293:
1118:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 2898              		.loc 1 1118 0
 2899 00cc C16A     		ldr	r1, [r0, #44]
 2900              	.LVL419:
 2901 00ce 01EBD411 		add	r1, r1, r4, lsr #7
 2902 00d2 FFF7FEFF 		bl	move_window
 2903              	.LVL420:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 161


1119:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!_FS_EXFAT || fs->fs_type != FS_EXFAT) {
 2904              		.loc 1 1119 0
 2905 00d6 0546     		mov	r5, r0
 2906 00d8 A0B9     		cbnz	r0, .L291
1121:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 2907              		.loc 1 1121 0
 2908 00da 27F07047 		bic	r7, r7, #-268435456
 2909              	.LVL421:
 2910 00de 06F13C03 		add	r3, r6, #60
 2911 00e2 A100     		lsls	r1, r4, #2
 2912 00e4 01F4FE71 		and	r1, r1, #508
 2913 00e8 5C18     		adds	r4, r3, r1
 2914              	.LVL422:
 2915 00ea 2046     		mov	r0, r4
 2916              	.LVL423:
 2917 00ec FFF7FEFF 		bl	ld_dword
 2918              	.LVL424:
 2919 00f0 00F07041 		and	r1, r0, #-268435456
 2920              	.LVL425:
1123:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2921              		.loc 1 1123 0
 2922 00f4 3943     		orrs	r1, r1, r7
 2923              	.LVL426:
 2924 00f6 2046     		mov	r0, r4
 2925 00f8 FFF7FEFF 		bl	st_dword
 2926              	.LVL427:
1124:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 2927              		.loc 1 1124 0
 2928 00fc 0123     		movs	r3, #1
 2929 00fe F370     		strb	r3, [r6, #3]
1125:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2930              		.loc 1 1125 0
 2931 0100 00E0     		b	.L291
 2932              	.LVL428:
 2933              	.L299:
1089:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2934              		.loc 1 1089 0
 2935 0102 0225     		movs	r5, #2
 2936              	.LVL429:
 2937              	.L291:
1129:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2938              		.loc 1 1129 0
 2939 0104 2846     		mov	r0, r5
 2940 0106 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 2941              		.cfi_endproc
 2942              	.LFE161:
 2944              		.section	.text.get_fat,"ax",%progbits
 2945              		.align	1
 2946              		.syntax unified
 2947              		.thumb
 2948              		.thumb_func
 2949              		.fpu fpv5-sp-d16
 2951              	get_fat:
 2952              	.LFB160:
1005:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT wc, bc;
 2953              		.loc 1 1005 0
 2954              		.cfi_startproc
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 162


 2955              		@ args = 0, pretend = 0, frame = 0
 2956              		@ frame_needed = 0, uses_anonymous_args = 0
 2957              	.LVL430:
 2958 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2959              	.LCFI36:
 2960              		.cfi_def_cfa_offset 24
 2961              		.cfi_offset 3, -24
 2962              		.cfi_offset 4, -20
 2963              		.cfi_offset 5, -16
 2964              		.cfi_offset 6, -12
 2965              		.cfi_offset 7, -8
 2966              		.cfi_offset 14, -4
1008:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2967              		.loc 1 1008 0
 2968 0002 0668     		ldr	r6, [r0]
 2969              	.LVL431:
1011:Middlewares/Third_Party/FatFs/src/ff.c **** 		val = 1;	/* Internal error */
 2970              		.loc 1 1011 0
 2971 0004 0129     		cmp	r1, #1
 2972 0006 5ED9     		bls	.L312
1011:Middlewares/Third_Party/FatFs/src/ff.c **** 		val = 1;	/* Internal error */
 2973              		.loc 1 1011 0 is_stmt 0 discriminator 1
 2974 0008 336A     		ldr	r3, [r6, #32]
 2975 000a 9942     		cmp	r1, r3
 2976 000c 5DD2     		bcs	.L313
 2977 000e 0C46     		mov	r4, r1
 2978              	.LVL432:
1017:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT12 :
 2979              		.loc 1 1017 0 is_stmt 1
 2980 0010 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 2981 0012 022B     		cmp	r3, #2
 2982 0014 30D0     		beq	.L308
 2983 0016 032B     		cmp	r3, #3
 2984 0018 41D0     		beq	.L309
 2985 001a 012B     		cmp	r3, #1
 2986 001c 01D0     		beq	.L321
1065:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2987              		.loc 1 1065 0
 2988 001e 0120     		movs	r0, #1
 2989              	.LVL433:
 2990 0020 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2991              	.LVL434:
 2992              	.L321:
1019:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
 2993              		.loc 1 1019 0
 2994 0022 01EB5105 		add	r5, r1, r1, lsr #1
 2995              	.LVL435:
1020:Middlewares/Third_Party/FatFs/src/ff.c **** 			wc = fs->win[bc++ % SS(fs)];
 2996              		.loc 1 1020 0
 2997 0026 F16A     		ldr	r1, [r6, #44]
 2998              	.LVL436:
 2999 0028 01EB5521 		add	r1, r1, r5, lsr #9
 3000 002c 3046     		mov	r0, r6
 3001              	.LVL437:
 3002 002e FFF7FEFF 		bl	move_window
 3003              	.LVL438:
 3004 0032 10B1     		cbz	r0, .L322
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 163


1015:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3005              		.loc 1 1015 0
 3006 0034 4FF0FF30 		mov	r0, #-1
 3007 0038 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3008              	.LVL439:
 3009              	.L322:
1021:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
 3010              		.loc 1 1021 0
 3011 003a 6F1C     		adds	r7, r5, #1
 3012              	.LVL440:
 3013 003c C5F30805 		ubfx	r5, r5, #0, #9
 3014 0040 3544     		add	r5, r5, r6
 3015 0042 95F83C50 		ldrb	r5, [r5, #60]	@ zero_extendqisi2
 3016              	.LVL441:
1022:Middlewares/Third_Party/FatFs/src/ff.c **** 			wc |= fs->win[bc % SS(fs)] << 8;
 3017              		.loc 1 1022 0
 3018 0046 F16A     		ldr	r1, [r6, #44]
 3019 0048 01EB5721 		add	r1, r1, r7, lsr #9
 3020 004c 3046     		mov	r0, r6
 3021 004e FFF7FEFF 		bl	move_window
 3022              	.LVL442:
 3023 0052 10B1     		cbz	r0, .L323
1015:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3024              		.loc 1 1015 0
 3025 0054 4FF0FF30 		mov	r0, #-1
 3026 0058 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3027              	.LVL443:
 3028              	.L323:
1023:Middlewares/Third_Party/FatFs/src/ff.c **** 			val = (clst & 1) ? (wc >> 4) : (wc & 0xFFF);
 3029              		.loc 1 1023 0
 3030 005a C7F30803 		ubfx	r3, r7, #0, #9
 3031 005e 3344     		add	r3, r3, r6
 3032 0060 93F83C00 		ldrb	r0, [r3, #60]	@ zero_extendqisi2
 3033 0064 45EA0020 		orr	r0, r5, r0, lsl #8
 3034              	.LVL444:
1024:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 3035              		.loc 1 1024 0
 3036 0068 14F0010F 		tst	r4, #1
 3037 006c 01D0     		beq	.L311
1024:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 3038              		.loc 1 1024 0 is_stmt 0 discriminator 1
 3039 006e 0009     		lsrs	r0, r0, #4
 3040              	.LVL445:
 3041 0070 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3042              	.LVL446:
 3043              	.L311:
1024:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 3044              		.loc 1 1024 0 discriminator 2
 3045 0072 C0F30B00 		ubfx	r0, r0, #0, #12
 3046              	.LVL447:
 3047 0076 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3048              	.LVL448:
 3049              	.L308:
1028:Middlewares/Third_Party/FatFs/src/ff.c **** 			val = ld_word(fs->win + clst * 2 % SS(fs));
 3050              		.loc 1 1028 0 is_stmt 1
 3051 0078 F16A     		ldr	r1, [r6, #44]
 3052              	.LVL449:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 164


 3053 007a 01EB1421 		add	r1, r1, r4, lsr #8
 3054 007e 3046     		mov	r0, r6
 3055              	.LVL450:
 3056 0080 FFF7FEFF 		bl	move_window
 3057              	.LVL451:
 3058 0084 10B1     		cbz	r0, .L324
1015:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3059              		.loc 1 1015 0
 3060 0086 4FF0FF30 		mov	r0, #-1
 3061 008a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3062              	.LVL452:
 3063              	.L324:
1029:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 3064              		.loc 1 1029 0
 3065 008c 06F13C00 		add	r0, r6, #60
 3066 0090 6100     		lsls	r1, r4, #1
 3067 0092 01F4FF71 		and	r1, r1, #510
 3068 0096 0844     		add	r0, r0, r1
 3069 0098 FFF7FEFF 		bl	ld_word
 3070              	.LVL453:
1030:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3071              		.loc 1 1030 0
 3072 009c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3073              	.LVL454:
 3074              	.L309:
1033:Middlewares/Third_Party/FatFs/src/ff.c **** 			val = ld_dword(fs->win + clst * 4 % SS(fs)) & 0x0FFFFFFF;
 3075              		.loc 1 1033 0
 3076 009e F16A     		ldr	r1, [r6, #44]
 3077              	.LVL455:
 3078 00a0 01EBD411 		add	r1, r1, r4, lsr #7
 3079 00a4 3046     		mov	r0, r6
 3080              	.LVL456:
 3081 00a6 FFF7FEFF 		bl	move_window
 3082              	.LVL457:
 3083 00aa 10B1     		cbz	r0, .L325
1015:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3084              		.loc 1 1015 0
 3085 00ac 4FF0FF30 		mov	r0, #-1
1070:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3086              		.loc 1 1070 0
 3087 00b0 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3088              	.LVL458:
 3089              	.L325:
1034:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 3090              		.loc 1 1034 0
 3091 00b2 3C36     		adds	r6, r6, #60
 3092              	.LVL459:
 3093 00b4 A100     		lsls	r1, r4, #2
 3094 00b6 01F4FE70 		and	r0, r1, #508
 3095 00ba 3044     		add	r0, r0, r6
 3096 00bc FFF7FEFF 		bl	ld_dword
 3097              	.LVL460:
 3098 00c0 20F07040 		bic	r0, r0, #-268435456
 3099              	.LVL461:
1035:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 3100              		.loc 1 1035 0
 3101 00c4 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 165


 3102              	.LVL462:
 3103              	.L312:
1012:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3104              		.loc 1 1012 0
 3105 00c6 0120     		movs	r0, #1
 3106              	.LVL463:
 3107 00c8 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3108              	.LVL464:
 3109              	.L313:
 3110 00ca 0120     		movs	r0, #1
 3111              	.LVL465:
 3112 00cc F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3113              		.cfi_endproc
 3114              	.LFE160:
 3116              		.section	.text.dir_sdi,"ax",%progbits
 3117              		.align	1
 3118              		.syntax unified
 3119              		.thumb
 3120              		.thumb_func
 3121              		.fpu fpv5-sp-d16
 3123              	dir_sdi:
 3124              	.LFB165:
1474:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD csz, clst;
 3125              		.loc 1 1474 0
 3126              		.cfi_startproc
 3127              		@ args = 0, pretend = 0, frame = 0
 3128              		@ frame_needed = 0, uses_anonymous_args = 0
 3129              	.LVL466:
 3130 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 3131              	.LCFI37:
 3132              		.cfi_def_cfa_offset 24
 3133              		.cfi_offset 4, -24
 3134              		.cfi_offset 5, -20
 3135              		.cfi_offset 6, -16
 3136              		.cfi_offset 7, -12
 3137              		.cfi_offset 8, -8
 3138              		.cfi_offset 14, -4
1476:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3139              		.loc 1 1476 0
 3140 0004 0768     		ldr	r7, [r0]
 3141              	.LVL467:
1479:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_INT_ERR;
 3142              		.loc 1 1479 0
 3143 0006 B1F5001F 		cmp	r1, #2097152
 3144 000a 02D3     		bcc	.L341
1480:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3145              		.loc 1 1480 0
 3146 000c 0220     		movs	r0, #2
 3147              	.LVL468:
 3148 000e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3149              	.LVL469:
 3150              	.L341:
 3151 0012 0646     		mov	r6, r0
 3152 0014 0C46     		mov	r4, r1
1479:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_INT_ERR;
 3153              		.loc 1 1479 0 discriminator 1
 3154 0016 11F01F0F 		tst	r1, #31
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 166


 3155 001a 02D0     		beq	.L342
1480:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3156              		.loc 1 1480 0
 3157 001c 0220     		movs	r0, #2
 3158              	.LVL470:
 3159 001e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3160              	.LVL471:
 3161              	.L342:
1482:Middlewares/Third_Party/FatFs/src/ff.c **** 	clst = dp->obj.sclust;		/* Table start cluster (0:root) */
 3162              		.loc 1 1482 0
 3163 0022 7161     		str	r1, [r6, #20]
1483:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst == 0 && fs->fs_type >= FS_FAT32) {	/* Replace cluster# 0 with root cluster# */
 3164              		.loc 1 1483 0
 3165 0024 8568     		ldr	r5, [r0, #8]
 3166              	.LVL472:
1484:Middlewares/Third_Party/FatFs/src/ff.c **** 		clst = fs->dirbase;
 3167              		.loc 1 1484 0
 3168 0026 1DB9     		cbnz	r5, .L328
1484:Middlewares/Third_Party/FatFs/src/ff.c **** 		clst = fs->dirbase;
 3169              		.loc 1 1484 0 is_stmt 0 discriminator 1
 3170 0028 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 3171 002a 022B     		cmp	r3, #2
 3172 002c 00D9     		bls	.L328
1485:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_EXFAT) dp->obj.stat = 0;	/* exFAT: Root dir has an FAT chain */
 3173              		.loc 1 1485 0 is_stmt 1
 3174 002e 3D6B     		ldr	r5, [r7, #48]
 3175              	.LVL473:
 3176              	.L328:
1489:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs / SZDIRE >= fs->n_rootdir)	return FR_INT_ERR;	/* Is index out of range? */
 3177              		.loc 1 1489 0
 3178 0030 75B9     		cbnz	r5, .L329
1490:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->sect = fs->dirbase;
 3179              		.loc 1 1490 0
 3180 0032 3B89     		ldrh	r3, [r7, #8]
 3181 0034 B3EB541F 		cmp	r3, r4, lsr #5
 3182 0038 02D8     		bhi	.L343
 3183 003a 0220     		movs	r0, #2
 3184              	.LVL474:
 3185 003c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3186              	.LVL475:
 3187              	.L343:
1491:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3188              		.loc 1 1491 0
 3189 0040 3B6B     		ldr	r3, [r7, #48]
 3190 0042 F361     		str	r3, [r6, #28]
 3191              	.LVL476:
 3192              	.L330:
1503:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!dp->sect) return FR_INT_ERR;
 3193              		.loc 1 1503 0
 3194 0044 B561     		str	r5, [r6, #24]
1504:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->sect += ofs / SS(fs);			/* Sector# of the directory entry */
 3195              		.loc 1 1504 0
 3196 0046 F369     		ldr	r3, [r6, #28]
 3197 0048 0BBB     		cbnz	r3, .L344
 3198 004a 0220     		movs	r0, #2
1509:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3199              		.loc 1 1509 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 167


 3200 004c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3201              	.LVL477:
 3202              	.L329:
1494:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (ofs >= csz) {				/* Follow cluster chain */
 3203              		.loc 1 1494 0
 3204 0050 B7F80A80 		ldrh	r8, [r7, #10]
 3205 0054 4FEA4828 		lsl	r8, r8, #9
 3206              	.LVL478:
1495:Middlewares/Third_Party/FatFs/src/ff.c **** 			clst = get_fat(&dp->obj, clst);				/* Get next cluster */
 3207              		.loc 1 1495 0
 3208 0058 01E0     		b	.L331
 3209              	.LVL479:
 3210              	.L346:
1499:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 3211              		.loc 1 1499 0
 3212 005a A4EB0804 		sub	r4, r4, r8
 3213              	.LVL480:
 3214              	.L331:
1495:Middlewares/Third_Party/FatFs/src/ff.c **** 			clst = get_fat(&dp->obj, clst);				/* Get next cluster */
 3215              		.loc 1 1495 0
 3216 005e 4445     		cmp	r4, r8
 3217 0060 0FD3     		bcc	.L345
1496:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
 3218              		.loc 1 1496 0
 3219 0062 2946     		mov	r1, r5
 3220 0064 3046     		mov	r0, r6
 3221 0066 FFF7FEFF 		bl	get_fat
 3222              	.LVL481:
 3223 006a 0546     		mov	r5, r0
 3224              	.LVL482:
1497:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (clst < 2 || clst >= fs->n_fatent) return FR_INT_ERR;	/* Reached to end of table or internal 
 3225              		.loc 1 1497 0
 3226 006c B0F1FF3F 		cmp	r0, #-1
 3227 0070 18D0     		beq	.L336
1498:Middlewares/Third_Party/FatFs/src/ff.c **** 			ofs -= csz;
 3228              		.loc 1 1498 0
 3229 0072 0128     		cmp	r0, #1
 3230 0074 19D9     		bls	.L337
1498:Middlewares/Third_Party/FatFs/src/ff.c **** 			ofs -= csz;
 3231              		.loc 1 1498 0 is_stmt 0 discriminator 2
 3232 0076 3B6A     		ldr	r3, [r7, #32]
 3233 0078 9842     		cmp	r0, r3
 3234 007a EED3     		bcc	.L346
1498:Middlewares/Third_Party/FatFs/src/ff.c **** 			ofs -= csz;
 3235              		.loc 1 1498 0
 3236 007c 0220     		movs	r0, #2
 3237              	.LVL483:
 3238 007e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3239              	.LVL484:
 3240              	.L345:
1501:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3241              		.loc 1 1501 0 is_stmt 1
 3242 0082 2946     		mov	r1, r5
 3243 0084 3846     		mov	r0, r7
 3244 0086 FFF7FEFF 		bl	clust2sect
 3245              	.LVL485:
 3246 008a F061     		str	r0, [r6, #28]
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 168


 3247 008c DAE7     		b	.L330
 3248              	.LVL486:
 3249              	.L344:
1505:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->dir = fs->win + (ofs % SS(fs));	/* Pointer to the entry in the win[] */
 3250              		.loc 1 1505 0
 3251 008e 03EB5423 		add	r3, r3, r4, lsr #9
 3252 0092 F361     		str	r3, [r6, #28]
1506:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3253              		.loc 1 1506 0
 3254 0094 3C37     		adds	r7, r7, #60
 3255              	.LVL487:
 3256 0096 C4F30804 		ubfx	r4, r4, #0, #9
 3257              	.LVL488:
 3258 009a 3C44     		add	r4, r4, r7
 3259 009c 3462     		str	r4, [r6, #32]
1508:Middlewares/Third_Party/FatFs/src/ff.c **** }
 3260              		.loc 1 1508 0
 3261 009e 0020     		movs	r0, #0
 3262 00a0 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3263              	.LVL489:
 3264              	.L336:
1497:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (clst < 2 || clst >= fs->n_fatent) return FR_INT_ERR;	/* Reached to end of table or internal 
 3265              		.loc 1 1497 0
 3266 00a4 0120     		movs	r0, #1
 3267              	.LVL490:
 3268 00a6 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3269              	.LVL491:
 3270              	.L337:
1498:Middlewares/Third_Party/FatFs/src/ff.c **** 			ofs -= csz;
 3271              		.loc 1 1498 0
 3272 00aa 0220     		movs	r0, #2
 3273              	.LVL492:
 3274 00ac BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3275              		.cfi_endproc
 3276              	.LFE165:
 3278              		.section	.text.create_chain,"ax",%progbits
 3279              		.align	1
 3280              		.syntax unified
 3281              		.thumb
 3282              		.thumb_func
 3283              		.fpu fpv5-sp-d16
 3285              	create_chain:
 3286              	.LFB163:
1355:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD cs, ncl, scl;
 3287              		.loc 1 1355 0
 3288              		.cfi_startproc
 3289              		@ args = 0, pretend = 0, frame = 0
 3290              		@ frame_needed = 0, uses_anonymous_args = 0
 3291              	.LVL493:
 3292 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 3293              	.LCFI38:
 3294              		.cfi_def_cfa_offset 24
 3295              		.cfi_offset 4, -24
 3296              		.cfi_offset 5, -20
 3297              		.cfi_offset 6, -16
 3298              		.cfi_offset 7, -12
 3299              		.cfi_offset 8, -8
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 169


 3300              		.cfi_offset 14, -4
 3301 0004 0746     		mov	r7, r0
1358:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3302              		.loc 1 1358 0
 3303 0006 0668     		ldr	r6, [r0]
 3304              	.LVL494:
1361:Middlewares/Third_Party/FatFs/src/ff.c **** 		scl = fs->last_clst;				/* Get suggested cluster to start from */
 3305              		.loc 1 1361 0
 3306 0008 8846     		mov	r8, r1
 3307 000a 31B9     		cbnz	r1, .L348
1362:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (scl == 0 || scl >= fs->n_fatent) scl = 1;
 3308              		.loc 1 1362 0
 3309 000c 7569     		ldr	r5, [r6, #20]
 3310              	.LVL495:
1363:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3311              		.loc 1 1363 0
 3312 000e 8DB1     		cbz	r5, .L357
1363:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3313              		.loc 1 1363 0 is_stmt 0 discriminator 2
 3314 0010 336A     		ldr	r3, [r6, #32]
 3315 0012 9D42     		cmp	r5, r3
 3316 0014 0FD3     		bcc	.L349
1363:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3317              		.loc 1 1363 0
 3318 0016 0125     		movs	r5, #1
 3319              	.LVL496:
 3320 0018 0DE0     		b	.L349
 3321              	.LVL497:
 3322              	.L348:
1366:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs < 2) return 1;				/* Invalid FAT value */
 3323              		.loc 1 1366 0 is_stmt 1
 3324 001a FFF7FEFF 		bl	get_fat
 3325              	.LVL498:
 3326 001e 0346     		mov	r3, r0
 3327              	.LVL499:
1367:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs == 0xFFFFFFFF) return cs;	/* A disk error occurred */
 3328              		.loc 1 1367 0
 3329 0020 0128     		cmp	r0, #1
 3330 0022 4BD9     		bls	.L359
1368:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs < fs->n_fatent) return cs;	/* It is already followed by next cluster */
 3331              		.loc 1 1368 0
 3332 0024 B0F1FF3F 		cmp	r0, #-1
 3333 0028 4DD0     		beq	.L347
1369:Middlewares/Third_Party/FatFs/src/ff.c **** 		scl = clst;
 3334              		.loc 1 1369 0
 3335 002a 326A     		ldr	r2, [r6, #32]
 3336 002c 9042     		cmp	r0, r2
 3337 002e 4AD3     		bcc	.L347
1370:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3338              		.loc 1 1370 0
 3339 0030 4546     		mov	r5, r8
 3340 0032 00E0     		b	.L349
 3341              	.LVL500:
 3342              	.L357:
1363:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3343              		.loc 1 1363 0
 3344 0034 0125     		movs	r5, #1
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 170


 3345              	.LVL501:
 3346              	.L349:
1400:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (;;) {
 3347              		.loc 1 1400 0
 3348 0036 2C46     		mov	r4, r5
 3349 0038 0CE0     		b	.L353
 3350              	.LVL502:
 3351              	.L351:
1407:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cs == 0) break;				/* Found a free cluster */
 3352              		.loc 1 1407 0
 3353 003a 2146     		mov	r1, r4
 3354 003c 3846     		mov	r0, r7
 3355 003e FFF7FEFF 		bl	get_fat
 3356              	.LVL503:
1408:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cs == 1 || cs == 0xFFFFFFFF) return cs;	/* An error occurred */
 3357              		.loc 1 1408 0
 3358 0042 0346     		mov	r3, r0
 3359 0044 70B1     		cbz	r0, .L352
1409:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ncl == scl) return 0;		/* No free cluster */
 3360              		.loc 1 1409 0
 3361 0046 B0F1FF3F 		cmp	r0, #-1
 3362 004a 18BF     		it	ne
 3363 004c 0128     		cmpne	r0, #1
 3364 004e 3AD0     		beq	.L347
1410:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 3365              		.loc 1 1410 0
 3366 0050 AC42     		cmp	r4, r5
 3367 0052 37D0     		beq	.L364
 3368              	.LVL504:
 3369              	.L353:
1402:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ncl >= fs->n_fatent) {		/* Check wrap-around */
 3370              		.loc 1 1402 0
 3371 0054 0134     		adds	r4, r4, #1
 3372              	.LVL505:
1403:Middlewares/Third_Party/FatFs/src/ff.c **** 				ncl = 2;
 3373              		.loc 1 1403 0
 3374 0056 336A     		ldr	r3, [r6, #32]
 3375 0058 9C42     		cmp	r4, r3
 3376 005a EED3     		bcc	.L351
 3377              	.LVL506:
1405:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 3378              		.loc 1 1405 0
 3379 005c 012D     		cmp	r5, #1
 3380 005e 2FD9     		bls	.L360
1404:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (ncl > scl) return 0;	/* No free cluster */
 3381              		.loc 1 1404 0
 3382 0060 0224     		movs	r4, #2
 3383 0062 EAE7     		b	.L351
 3384              	.LVL507:
 3385              	.L352:
1412:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK && clst != 0) {
 3386              		.loc 1 1412 0
 3387 0064 4FF0FF32 		mov	r2, #-1
 3388 0068 2146     		mov	r1, r4
 3389 006a 3046     		mov	r0, r6
 3390              	.LVL508:
 3391 006c FFF7FEFF 		bl	put_fat
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 171


 3392              	.LVL509:
1413:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = put_fat(fs, clst, ncl);	/* Link it from the previous one if needed */
 3393              		.loc 1 1413 0
 3394 0070 0346     		mov	r3, r0
 3395 0072 B0FA80F0 		clz	r0, r0
 3396              	.LVL510:
 3397 0076 4009     		lsrs	r0, r0, #5
 3398 0078 B8F1000F 		cmp	r8, #0
 3399 007c 08BF     		it	eq
 3400 007e 0020     		moveq	r0, #0
 3401 0080 70B9     		cbnz	r0, .L365
 3402              	.L354:
 3403              	.LVL511:
1418:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->last_clst = ncl;
 3404              		.loc 1 1418 0
 3405 0082 A3B9     		cbnz	r3, .L355
1419:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->free_clst <= fs->n_fatent - 2) fs->free_clst--;
 3406              		.loc 1 1419 0
 3407 0084 7461     		str	r4, [r6, #20]
1420:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fsi_flag |= 1;
 3408              		.loc 1 1420 0
 3409 0086 B269     		ldr	r2, [r6, #24]
 3410 0088 336A     		ldr	r3, [r6, #32]
 3411              	.LVL512:
 3412 008a 023B     		subs	r3, r3, #2
 3413 008c 9A42     		cmp	r2, r3
 3414 008e 01D8     		bhi	.L356
1420:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fsi_flag |= 1;
 3415              		.loc 1 1420 0 is_stmt 0 discriminator 1
 3416 0090 013A     		subs	r2, r2, #1
 3417 0092 B261     		str	r2, [r6, #24]
 3418              	.L356:
1421:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
 3419              		.loc 1 1421 0 is_stmt 1
 3420 0094 3379     		ldrb	r3, [r6, #4]	@ zero_extendqisi2
 3421 0096 43F00103 		orr	r3, r3, #1
 3422 009a 3371     		strb	r3, [r6, #4]
 3423 009c 2346     		mov	r3, r4
 3424 009e 12E0     		b	.L347
 3425              	.L365:
1414:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 3426              		.loc 1 1414 0
 3427 00a0 2246     		mov	r2, r4
 3428 00a2 4146     		mov	r1, r8
 3429 00a4 3046     		mov	r0, r6
 3430 00a6 FFF7FEFF 		bl	put_fat
 3431              	.LVL513:
 3432 00aa 0346     		mov	r3, r0
 3433              	.LVL514:
 3434 00ac E9E7     		b	.L354
 3435              	.L355:
1423:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3436              		.loc 1 1423 0
 3437 00ae 012B     		cmp	r3, #1
 3438 00b0 01D0     		beq	.L366
 3439 00b2 0123     		movs	r3, #1
 3440              	.LVL515:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 172


 3441 00b4 07E0     		b	.L347
 3442              	.LVL516:
 3443              	.L366:
 3444 00b6 4FF0FF33 		mov	r3, #-1
 3445              	.LVL517:
 3446 00ba 04E0     		b	.L347
 3447              	.LVL518:
 3448              	.L359:
1367:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs == 0xFFFFFFFF) return cs;	/* A disk error occurred */
 3449              		.loc 1 1367 0
 3450 00bc 0123     		movs	r3, #1
 3451 00be 02E0     		b	.L347
 3452              	.LVL519:
 3453              	.L360:
1405:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 3454              		.loc 1 1405 0
 3455 00c0 0023     		movs	r3, #0
 3456 00c2 00E0     		b	.L347
 3457              	.LVL520:
 3458              	.L364:
1410:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 3459              		.loc 1 1410 0
 3460 00c4 0023     		movs	r3, #0
 3461              	.LVL521:
 3462              	.L347:
1427:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3463              		.loc 1 1427 0
 3464 00c6 1846     		mov	r0, r3
 3465 00c8 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3466              		.cfi_endproc
 3467              	.LFE163:
 3469              		.section	.text.remove_chain,"ax",%progbits
 3470              		.align	1
 3471              		.syntax unified
 3472              		.thumb
 3473              		.thumb_func
 3474              		.fpu fpv5-sp-d16
 3476              	remove_chain:
 3477              	.LFB162:
1276:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res = FR_OK;
 3478              		.loc 1 1276 0
 3479              		.cfi_startproc
 3480              		@ args = 0, pretend = 0, frame = 0
 3481              		@ frame_needed = 0, uses_anonymous_args = 0
 3482              	.LVL522:
 3483 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3484              	.LCFI39:
 3485              		.cfi_def_cfa_offset 24
 3486              		.cfi_offset 3, -24
 3487              		.cfi_offset 4, -20
 3488              		.cfi_offset 5, -16
 3489              		.cfi_offset 6, -12
 3490              		.cfi_offset 7, -8
 3491              		.cfi_offset 14, -4
 3492 0002 0E46     		mov	r6, r1
 3493              	.LVL523:
1279:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT || _USE_TRIM
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 173


 3494              		.loc 1 1279 0
 3495 0004 0468     		ldr	r4, [r0]
 3496              	.LVL524:
1287:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3497              		.loc 1 1287 0
 3498 0006 0129     		cmp	r1, #1
 3499 0008 30D9     		bls	.L372
 3500 000a 0746     		mov	r7, r0
 3501 000c 1146     		mov	r1, r2
 3502              	.LVL525:
1287:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3503              		.loc 1 1287 0 is_stmt 0 discriminator 2
 3504 000e 236A     		ldr	r3, [r4, #32]
 3505 0010 9E42     		cmp	r6, r3
 3506 0012 01D3     		bcc	.L378
1287:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3507              		.loc 1 1287 0
 3508 0014 0221     		movs	r1, #2
 3509 0016 2AE0     		b	.L368
 3510              	.LVL526:
 3511              	.L378:
1290:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = put_fat(fs, pclst, 0xFFFFFFFF);
 3512              		.loc 1 1290 0 is_stmt 1
 3513 0018 52B1     		cbz	r2, .L371
1291:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) return res;
 3514              		.loc 1 1291 0
 3515 001a 4FF0FF32 		mov	r2, #-1
 3516 001e 2046     		mov	r0, r4
 3517              	.LVL527:
 3518 0020 FFF7FEFF 		bl	put_fat
 3519              	.LVL528:
1292:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3520              		.loc 1 1292 0
 3521 0024 0146     		mov	r1, r0
 3522 0026 18B1     		cbz	r0, .L371
 3523 0028 21E0     		b	.L368
 3524              	.LVL529:
 3525              	.L370:
1327:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (clst < fs->n_fatent);	/* Repeat while not the last link */
 3526              		.loc 1 1327 0
 3527 002a 2E46     		mov	r6, r5
1328:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3528              		.loc 1 1328 0
 3529 002c 9542     		cmp	r5, r2
 3530 002e 1ED2     		bcs	.L368
 3531              	.LVL530:
 3532              	.L371:
1297:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nxt == 0) break;				/* Empty cluster? */
 3533              		.loc 1 1297 0
 3534 0030 3146     		mov	r1, r6
 3535 0032 3846     		mov	r0, r7
 3536 0034 FFF7FEFF 		bl	get_fat
 3537              	.LVL531:
1298:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nxt == 1) return FR_INT_ERR;	/* Internal error? */
 3538              		.loc 1 1298 0
 3539 0038 0546     		mov	r5, r0
 3540 003a D0B1     		cbz	r0, .L374
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 174


1299:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nxt == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error? */
 3541              		.loc 1 1299 0
 3542 003c 0128     		cmp	r0, #1
 3543 003e 1AD0     		beq	.L375
1300:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!_FS_EXFAT || fs->fs_type != FS_EXFAT) {
 3544              		.loc 1 1300 0
 3545 0040 B0F1FF3F 		cmp	r0, #-1
 3546 0044 19D0     		beq	.L376
1302:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) return res;
 3547              		.loc 1 1302 0
 3548 0046 0022     		movs	r2, #0
 3549 0048 3146     		mov	r1, r6
 3550 004a 2046     		mov	r0, r4
 3551              	.LVL532:
 3552 004c FFF7FEFF 		bl	put_fat
 3553              	.LVL533:
1303:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 3554              		.loc 1 1303 0
 3555 0050 0146     		mov	r1, r0
 3556 0052 60B9     		cbnz	r0, .L368
1305:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->free_clst++;
 3557              		.loc 1 1305 0
 3558 0054 A369     		ldr	r3, [r4, #24]
 3559 0056 226A     		ldr	r2, [r4, #32]
 3560 0058 901E     		subs	r0, r2, #2
 3561              	.LVL534:
 3562 005a 8342     		cmp	r3, r0
 3563 005c E5D2     		bcs	.L370
1306:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->fsi_flag |= 1;
 3564              		.loc 1 1306 0
 3565 005e 0133     		adds	r3, r3, #1
 3566 0060 A361     		str	r3, [r4, #24]
1307:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 3567              		.loc 1 1307 0
 3568 0062 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 3569 0064 43F00103 		orr	r3, r3, #1
 3570 0068 2371     		strb	r3, [r4, #4]
 3571 006a DEE7     		b	.L370
 3572              	.LVL535:
 3573              	.L372:
1287:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3574              		.loc 1 1287 0
 3575 006c 0221     		movs	r1, #2
 3576              	.LVL536:
 3577              	.L368:
1342:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3578              		.loc 1 1342 0
 3579 006e 0846     		mov	r0, r1
 3580 0070 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3581              	.LVL537:
 3582              	.L374:
1341:Middlewares/Third_Party/FatFs/src/ff.c **** }
 3583              		.loc 1 1341 0
 3584 0072 0021     		movs	r1, #0
 3585 0074 FBE7     		b	.L368
 3586              	.L375:
1299:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nxt == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error? */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 175


 3587              		.loc 1 1299 0
 3588 0076 0221     		movs	r1, #2
 3589 0078 F9E7     		b	.L368
 3590              	.L376:
1300:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!_FS_EXFAT || fs->fs_type != FS_EXFAT) {
 3591              		.loc 1 1300 0
 3592 007a 0121     		movs	r1, #1
 3593 007c F7E7     		b	.L368
 3594              		.cfi_endproc
 3595              	.LFE162:
 3597              		.section	.text.dir_next,"ax",%progbits
 3598              		.align	1
 3599              		.syntax unified
 3600              		.thumb
 3601              		.thumb_func
 3602              		.fpu fpv5-sp-d16
 3604              	dir_next:
 3605              	.LFB166:
1523:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD ofs, clst;
 3606              		.loc 1 1523 0
 3607              		.cfi_startproc
 3608              		@ args = 0, pretend = 0, frame = 0
 3609              		@ frame_needed = 0, uses_anonymous_args = 0
 3610              	.LVL538:
 3611 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 3612              	.LCFI40:
 3613              		.cfi_def_cfa_offset 32
 3614              		.cfi_offset 3, -32
 3615              		.cfi_offset 4, -28
 3616              		.cfi_offset 5, -24
 3617              		.cfi_offset 6, -20
 3618              		.cfi_offset 7, -16
 3619              		.cfi_offset 8, -12
 3620              		.cfi_offset 9, -8
 3621              		.cfi_offset 14, -4
1525:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 3622              		.loc 1 1525 0
 3623 0004 0668     		ldr	r6, [r0]
 3624              	.LVL539:
1530:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!dp->sect || ofs >= (DWORD)((_FS_EXFAT && fs->fs_type == FS_EXFAT) ? MAX_DIR_EX : MAX_DIR)) re
 3625              		.loc 1 1530 0
 3626 0006 4369     		ldr	r3, [r0, #20]
 3627 0008 03F12005 		add	r5, r3, #32
 3628              	.LVL540:
1531:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3629              		.loc 1 1531 0
 3630 000c C369     		ldr	r3, [r0, #28]
 3631 000e 13B9     		cbnz	r3, .L397
 3632 0010 0420     		movs	r0, #4
 3633              	.LVL541:
 3634 0012 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3635              	.LVL542:
 3636              	.L397:
1531:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3637              		.loc 1 1531 0 is_stmt 0 discriminator 2
 3638 0016 B5F5001F 		cmp	r5, #2097152
 3639 001a 02D3     		bcc	.L398
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 176


1531:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3640              		.loc 1 1531 0
 3641 001c 0420     		movs	r0, #4
 3642              	.LVL543:
 3643 001e BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3644              	.LVL544:
 3645              	.L398:
 3646 0022 8846     		mov	r8, r1
 3647 0024 0446     		mov	r4, r0
1533:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->sect++;				/* Next sector */
 3648              		.loc 1 1533 0 is_stmt 1
 3649 0026 C5F30807 		ubfx	r7, r5, #0, #9
 3650 002a 8FB9     		cbnz	r7, .L381
1534:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3651              		.loc 1 1534 0
 3652 002c 0133     		adds	r3, r3, #1
 3653 002e C361     		str	r3, [r0, #28]
1536:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ofs / SZDIRE >= fs->n_rootdir) {	/* Report EOT if it reached end of static table */
 3654              		.loc 1 1536 0
 3655 0030 8169     		ldr	r1, [r0, #24]
 3656              	.LVL545:
 3657 0032 41B9     		cbnz	r1, .L382
1537:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->sect = 0; return FR_NO_FILE;
 3658              		.loc 1 1537 0
 3659 0034 3389     		ldrh	r3, [r6, #8]
 3660 0036 B3EB551F 		cmp	r3, r5, lsr #5
 3661 003a 09D8     		bhi	.L381
1538:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 3662              		.loc 1 1538 0
 3663 003c 0023     		movs	r3, #0
 3664 003e C361     		str	r3, [r0, #28]
 3665 0040 0420     		movs	r0, #4
 3666              	.LVL546:
 3667 0042 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3668              	.LVL547:
 3669              	.L382:
1542:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = get_fat(&dp->obj, dp->clust);			/* Get next cluster */
 3670              		.loc 1 1542 0
 3671 0046 7389     		ldrh	r3, [r6, #10]
 3672 0048 013B     		subs	r3, r3, #1
 3673 004a 13EA5523 		ands	r3, r3, r5, lsr #9
 3674 004e 06D0     		beq	.L399
 3675              	.LVL548:
 3676              	.L381:
1574:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->dir = fs->win + ofs % SS(fs);	/* Pointer to the entry in the win[] */
 3677              		.loc 1 1574 0
 3678 0050 6561     		str	r5, [r4, #20]
1575:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3679              		.loc 1 1575 0
 3680 0052 3C36     		adds	r6, r6, #60
 3681              	.LVL549:
 3682 0054 3E44     		add	r6, r6, r7
 3683              	.LVL550:
 3684 0056 2662     		str	r6, [r4, #32]
1577:Middlewares/Third_Party/FatFs/src/ff.c **** }
 3685              		.loc 1 1577 0
 3686 0058 0020     		movs	r0, #0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 177


 3687 005a BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3688              	.LVL551:
 3689              	.L399:
1543:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst <= 1) return FR_INT_ERR;				/* Internal error */
 3690              		.loc 1 1543 0
 3691 005e FFF7FEFF 		bl	get_fat
 3692              	.LVL552:
 3693 0062 8146     		mov	r9, r0
 3694              	.LVL553:
1544:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) return FR_DISK_ERR;		/* Disk error */
 3695              		.loc 1 1544 0
 3696 0064 0128     		cmp	r0, #1
 3697 0066 48D9     		bls	.L389
1545:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst >= fs->n_fatent) {						/* Reached end of dynamic table */
 3698              		.loc 1 1545 0
 3699 0068 B0F1FF3F 		cmp	r0, #-1
 3700 006c 48D0     		beq	.L390
1546:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 3701              		.loc 1 1546 0
 3702 006e 336A     		ldr	r3, [r6, #32]
 3703 0070 9842     		cmp	r0, r3
 3704 0072 3AD3     		bcc	.L383
1548:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->sect = 0; return FR_NO_FILE;
 3705              		.loc 1 1548 0
 3706 0074 B8F1000F 		cmp	r8, #0
 3707 0078 04D1     		bne	.L384
1549:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 3708              		.loc 1 1549 0
 3709 007a 0023     		movs	r3, #0
 3710 007c E361     		str	r3, [r4, #28]
 3711 007e 0420     		movs	r0, #4
 3712              	.LVL554:
 3713 0080 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3714              	.LVL555:
 3715              	.L384:
1551:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0) return FR_DENIED;			/* No free cluster */
 3716              		.loc 1 1551 0
 3717 0084 A169     		ldr	r1, [r4, #24]
 3718 0086 2046     		mov	r0, r4
 3719              	.LVL556:
 3720 0088 FFF7FEFF 		bl	create_chain
 3721              	.LVL557:
1552:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 1) return FR_INT_ERR;			/* Internal error */
 3722              		.loc 1 1552 0
 3723 008c 8146     		mov	r9, r0
 3724 008e 10B9     		cbnz	r0, .L400
 3725 0090 0720     		movs	r0, #7
 3726              	.LVL558:
 3727 0092 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3728              	.LVL559:
 3729              	.L400:
1553:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
 3730              		.loc 1 1553 0
 3731 0096 0128     		cmp	r0, #1
 3732 0098 35D0     		beq	.L392
1554:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Clean-up the stretched table */
 3733              		.loc 1 1554 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 178


 3734 009a B0F1FF3F 		cmp	r0, #-1
 3735 009e 35D0     		beq	.L393
1557:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_set(fs->win, 0, SS(fs));				/* Clear window buffer */
 3736              		.loc 1 1557 0
 3737 00a0 3046     		mov	r0, r6
 3738              	.LVL560:
 3739 00a2 FFF7FEFF 		bl	sync_window
 3740              	.LVL561:
 3741 00a6 A0BB     		cbnz	r0, .L394
1558:Middlewares/Third_Party/FatFs/src/ff.c **** 					for (n = 0, fs->winsect = clust2sect(fs, clst); n < fs->csize; n++, fs->winsect++) {	/* Fill t
 3742              		.loc 1 1558 0
 3743 00a8 4FF40072 		mov	r2, #512
 3744 00ac 0021     		movs	r1, #0
 3745 00ae 06F13C00 		add	r0, r6, #60
 3746 00b2 FFF7FEFF 		bl	mem_set
 3747              	.LVL562:
1559:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->wflag = 1;
 3748              		.loc 1 1559 0
 3749 00b6 4946     		mov	r1, r9
 3750 00b8 3046     		mov	r0, r6
 3751 00ba FFF7FEFF 		bl	clust2sect
 3752              	.LVL563:
 3753 00be B063     		str	r0, [r6, #56]
 3754 00c0 4FF00008 		mov	r8, #0
 3755              	.LVL564:
 3756              	.L385:
1559:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->wflag = 1;
 3757              		.loc 1 1559 0 is_stmt 0 discriminator 1
 3758 00c4 7389     		ldrh	r3, [r6, #10]
 3759 00c6 9845     		cmp	r8, r3
 3760 00c8 0BD2     		bcs	.L401
1560:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (sync_window(fs) != FR_OK) return FR_DISK_ERR;
 3761              		.loc 1 1560 0 is_stmt 1
 3762 00ca 0123     		movs	r3, #1
 3763 00cc F370     		strb	r3, [r6, #3]
1561:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 3764              		.loc 1 1561 0
 3765 00ce 3046     		mov	r0, r6
 3766 00d0 FFF7FEFF 		bl	sync_window
 3767              	.LVL565:
 3768 00d4 00BB     		cbnz	r0, .L395
1559:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->wflag = 1;
 3769              		.loc 1 1559 0 discriminator 2
 3770 00d6 08F10108 		add	r8, r8, #1
 3771              	.LVL566:
 3772 00da B36B     		ldr	r3, [r6, #56]
 3773 00dc 0133     		adds	r3, r3, #1
 3774 00de B363     		str	r3, [r6, #56]
 3775 00e0 F0E7     		b	.L385
 3776              	.L401:
1563:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 3777              		.loc 1 1563 0
 3778 00e2 B36B     		ldr	r3, [r6, #56]
 3779 00e4 A3EB0803 		sub	r3, r3, r8
 3780 00e8 B363     		str	r3, [r6, #56]
 3781              	.LVL567:
 3782              	.L383:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 179


1569:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->sect = clust2sect(fs, clst);
 3783              		.loc 1 1569 0
 3784 00ea C4F81890 		str	r9, [r4, #24]
1570:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 3785              		.loc 1 1570 0
 3786 00ee 4946     		mov	r1, r9
 3787 00f0 3046     		mov	r0, r6
 3788 00f2 FFF7FEFF 		bl	clust2sect
 3789              	.LVL568:
 3790 00f6 E061     		str	r0, [r4, #28]
 3791 00f8 AAE7     		b	.L381
 3792              	.LVL569:
 3793              	.L389:
1544:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) return FR_DISK_ERR;		/* Disk error */
 3794              		.loc 1 1544 0
 3795 00fa 0220     		movs	r0, #2
 3796              	.LVL570:
 3797 00fc BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3798              	.LVL571:
 3799              	.L390:
1545:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst >= fs->n_fatent) {						/* Reached end of dynamic table */
 3800              		.loc 1 1545 0
 3801 0100 0120     		movs	r0, #1
 3802              	.LVL572:
 3803 0102 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3804              	.LVL573:
 3805              	.L392:
1553:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
 3806              		.loc 1 1553 0
 3807 0106 0220     		movs	r0, #2
 3808              	.LVL574:
 3809 0108 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3810              	.LVL575:
 3811              	.L393:
1554:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Clean-up the stretched table */
 3812              		.loc 1 1554 0
 3813 010c 0120     		movs	r0, #1
 3814              	.LVL576:
 3815 010e BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3816              	.LVL577:
 3817              	.L394:
1557:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_set(fs->win, 0, SS(fs));				/* Clear window buffer */
 3818              		.loc 1 1557 0
 3819 0112 0120     		movs	r0, #1
 3820 0114 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3821              	.LVL578:
 3822              	.L395:
1561:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 3823              		.loc 1 1561 0
 3824 0118 0120     		movs	r0, #1
1578:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3825              		.loc 1 1578 0
 3826 011a BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3827              		.cfi_endproc
 3828              	.LFE166:
 3830              		.section	.text.dir_alloc,"ax",%progbits
 3831              		.align	1
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 180


 3832              		.syntax unified
 3833              		.thumb
 3834              		.thumb_func
 3835              		.fpu fpv5-sp-d16
 3837              	dir_alloc:
 3838              	.LFB167:
1593:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 3839              		.loc 1 1593 0
 3840              		.cfi_startproc
 3841              		@ args = 0, pretend = 0, frame = 0
 3842              		@ frame_needed = 0, uses_anonymous_args = 0
 3843              	.LVL579:
 3844 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3845              	.LCFI41:
 3846              		.cfi_def_cfa_offset 24
 3847              		.cfi_offset 3, -24
 3848              		.cfi_offset 4, -20
 3849              		.cfi_offset 5, -16
 3850              		.cfi_offset 6, -12
 3851              		.cfi_offset 7, -8
 3852              		.cfi_offset 14, -4
 3853 0002 0446     		mov	r4, r0
 3854 0004 0F46     		mov	r7, r1
1596:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3855              		.loc 1 1596 0
 3856 0006 0668     		ldr	r6, [r0]
 3857              	.LVL580:
1599:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 3858              		.loc 1 1599 0
 3859 0008 0021     		movs	r1, #0
 3860              	.LVL581:
 3861 000a FFF7FEFF 		bl	dir_sdi
 3862              	.LVL582:
1600:Middlewares/Third_Party/FatFs/src/ff.c **** 		n = 0;
 3863              		.loc 1 1600 0
 3864 000e 0246     		mov	r2, r0
 3865 0010 B8B9     		cbnz	r0, .L403
 3866 0012 0025     		movs	r5, #0
 3867 0014 06E0     		b	.L405
 3868              	.LVL583:
 3869              	.L407:
1612:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 3870              		.loc 1 1612 0
 3871 0016 0025     		movs	r5, #0
 3872              	.LVL584:
 3873              	.L404:
1614:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (res == FR_OK);	/* Next entry with table stretch enabled */
 3874              		.loc 1 1614 0
 3875 0018 0121     		movs	r1, #1
 3876 001a 2046     		mov	r0, r4
 3877              	.LVL585:
 3878 001c FFF7FEFF 		bl	dir_next
 3879              	.LVL586:
1615:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3880              		.loc 1 1615 0
 3881 0020 0246     		mov	r2, r0
 3882 0022 70B9     		cbnz	r0, .L403
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 181


 3883              	.LVL587:
 3884              	.L405:
1603:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 3885              		.loc 1 1603 0
 3886 0024 E169     		ldr	r1, [r4, #28]
 3887 0026 3046     		mov	r0, r6
 3888              	.LVL588:
 3889 0028 FFF7FEFF 		bl	move_window
 3890              	.LVL589:
1604:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 3891              		.loc 1 1604 0
 3892 002c 0246     		mov	r2, r0
 3893 002e 40B9     		cbnz	r0, .L403
1608:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 3894              		.loc 1 1608 0
 3895 0030 236A     		ldr	r3, [r4, #32]
 3896 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3897 0034 002B     		cmp	r3, #0
 3898 0036 18BF     		it	ne
 3899 0038 E52B     		cmpne	r3, #229
 3900 003a ECD1     		bne	.L407
1610:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
 3901              		.loc 1 1610 0
 3902 003c 0135     		adds	r5, r5, #1
 3903              	.LVL590:
 3904 003e BD42     		cmp	r5, r7
 3905 0040 EAD1     		bne	.L404
 3906              	.LVL591:
 3907              	.L403:
1618:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 3908              		.loc 1 1618 0
 3909 0042 042A     		cmp	r2, #4
 3910 0044 01D0     		beq	.L410
 3911              	.LVL592:
 3912              	.L406:
1620:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3913              		.loc 1 1620 0
 3914 0046 1046     		mov	r0, r2
 3915 0048 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3916              	.LVL593:
 3917              	.L410:
1618:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 3918              		.loc 1 1618 0
 3919 004a 0722     		movs	r2, #7
 3920              	.LVL594:
 3921 004c FBE7     		b	.L406
 3922              		.cfi_endproc
 3923              	.LFE167:
 3925              		.section	.text.dir_read,"ax",%progbits
 3926              		.align	1
 3927              		.syntax unified
 3928              		.thumb
 3929              		.thumb_func
 3930              		.fpu fpv5-sp-d16
 3932              	dir_read:
 3933              	.LFB175:
2135:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res = FR_NO_FILE;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 182


 3934              		.loc 1 2135 0
 3935              		.cfi_startproc
 3936              		@ args = 0, pretend = 0, frame = 0
 3937              		@ frame_needed = 0, uses_anonymous_args = 0
 3938              	.LVL595:
 3939 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 3940              	.LCFI42:
 3941              		.cfi_def_cfa_offset 32
 3942              		.cfi_offset 3, -32
 3943              		.cfi_offset 4, -28
 3944              		.cfi_offset 5, -24
 3945              		.cfi_offset 6, -20
 3946              		.cfi_offset 7, -16
 3947              		.cfi_offset 8, -12
 3948              		.cfi_offset 9, -8
 3949              		.cfi_offset 14, -4
 3950 0004 0446     		mov	r4, r0
 3951 0006 8846     		mov	r8, r1
 3952              	.LVL596:
2137:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE a, c;
 3953              		.loc 1 2137 0
 3954 0008 0768     		ldr	r7, [r0]
 3955              	.LVL597:
2140:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 3956              		.loc 1 2140 0
 3957 000a 4FF0FF09 		mov	r9, #255
 3958 000e 4E46     		mov	r6, r9
2136:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = dp->obj.fs;
 3959              		.loc 1 2136 0
 3960 0010 0425     		movs	r5, #4
2143:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(fs, dp->sect);
 3961              		.loc 1 2143 0
 3962 0012 2CE0     		b	.L412
 3963              	.LVL598:
 3964              	.L429:
2172:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (c & LLEF) {			/* Is it start of an LFN sequence? */
 3965              		.loc 1 2172 0
 3966 0014 0F2B     		cmp	r3, #15
 3967 0016 19D1     		bne	.L415
2173:Middlewares/Third_Party/FatFs/src/ff.c **** 						sum = dp->dir[LDIR_Chksum];
 3968              		.loc 1 2173 0
 3969 0018 12F0400F 		tst	r2, #64
 3970 001c 06D0     		beq	.L416
2174:Middlewares/Third_Party/FatFs/src/ff.c **** 						c &= (BYTE)~LLEF; ord = c;
 3971              		.loc 1 2174 0
 3972 001e 91F80D90 		ldrb	r9, [r1, #13]	@ zero_extendqisi2
 3973              	.LVL599:
2175:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->blk_ofs = dp->dptr;
 3974              		.loc 1 2175 0
 3975 0022 02F0BF02 		and	r2, r2, #191
 3976              	.LVL600:
2176:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 3977              		.loc 1 2176 0
 3978 0026 6369     		ldr	r3, [r4, #20]
 3979              	.LVL601:
 3980 0028 2363     		str	r3, [r4, #48]
2175:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->blk_ofs = dp->dptr;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 183


 3981              		.loc 1 2175 0
 3982 002a 1646     		mov	r6, r2
 3983              	.LVL602:
 3984              	.L416:
2179:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {					/* An SFN entry is found */
 3985              		.loc 1 2179 0
 3986 002c B242     		cmp	r2, r6
 3987 002e 01D0     		beq	.L427
 3988 0030 FF26     		movs	r6, #255
 3989              	.LVL603:
 3990 0032 16E0     		b	.L414
 3991              	.LVL604:
 3992              	.L427:
2179:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {					/* An SFN entry is found */
 3993              		.loc 1 2179 0 is_stmt 0 discriminator 1
 3994 0034 4B7B     		ldrb	r3, [r1, #13]	@ zero_extendqisi2
 3995 0036 9945     		cmp	r9, r3
 3996 0038 01D0     		beq	.L428
2179:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {					/* An SFN entry is found */
 3997              		.loc 1 2179 0
 3998 003a FF26     		movs	r6, #255
 3999              	.LVL605:
 4000 003c 11E0     		b	.L414
 4001              	.LVL606:
 4002              	.L428:
2179:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {					/* An SFN entry is found */
 4003              		.loc 1 2179 0 discriminator 3
 4004 003e F868     		ldr	r0, [r7, #12]
 4005 0040 FFF7FEFF 		bl	pick_lfn
 4006              	.LVL607:
 4007 0044 78B3     		cbz	r0, .L425
2179:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {					/* An SFN entry is found */
 4008              		.loc 1 2179 0 discriminator 5
 4009 0046 013E     		subs	r6, r6, #1
 4010              	.LVL608:
 4011 0048 F6B2     		uxtb	r6, r6
 4012 004a 0AE0     		b	.L414
 4013              	.LVL609:
 4014              	.L415:
2181:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->blk_ofs = 0xFFFFFFFF;			/* It has no LFN. */
 4015              		.loc 1 2181 0 is_stmt 1
 4016 004c 26B9     		cbnz	r6, .L417
2181:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->blk_ofs = 0xFFFFFFFF;			/* It has no LFN. */
 4017              		.loc 1 2181 0 is_stmt 0 discriminator 1
 4018 004e 0846     		mov	r0, r1
 4019 0050 FFF7FEFF 		bl	sum_sfn
 4020              	.LVL610:
 4021 0054 8145     		cmp	r9, r0
 4022 0056 29D0     		beq	.L413
 4023              	.L417:
2182:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 4024              		.loc 1 2182 0 is_stmt 1
 4025 0058 4FF0FF33 		mov	r3, #-1
 4026 005c 2363     		str	r3, [r4, #48]
 4027 005e 25E0     		b	.L413
 4028              	.LVL611:
 4029              	.L421:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 184


2170:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
 4030              		.loc 1 2170 0
 4031 0060 FF26     		movs	r6, #255
 4032              	.LVL612:
 4033              	.L414:
2193:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) break;
 4034              		.loc 1 2193 0
 4035 0062 0021     		movs	r1, #0
 4036 0064 2046     		mov	r0, r4
 4037 0066 FFF7FEFF 		bl	dir_next
 4038              	.LVL613:
2194:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 4039              		.loc 1 2194 0
 4040 006a 0546     		mov	r5, r0
 4041 006c F0B9     		cbnz	r0, .L413
 4042              	.LVL614:
 4043              	.L412:
2143:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(fs, dp->sect);
 4044              		.loc 1 2143 0
 4045 006e E169     		ldr	r1, [r4, #28]
 4046 0070 E1B1     		cbz	r1, .L413
2144:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) break;
 4047              		.loc 1 2144 0
 4048 0072 3846     		mov	r0, r7
 4049 0074 FFF7FEFF 		bl	move_window
 4050              	.LVL615:
2145:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = dp->dir[DIR_Name];	/* Test for the entry type */
 4051              		.loc 1 2145 0
 4052 0078 0546     		mov	r5, r0
 4053 007a B8B9     		cbnz	r0, .L413
2146:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 0) {
 4054              		.loc 1 2146 0
 4055 007c 216A     		ldr	r1, [r4, #32]
 4056 007e 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 4057              	.LVL616:
2147:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_NO_FILE; break; /* Reached to end of the directory */
 4058              		.loc 1 2147 0
 4059 0080 9AB1     		cbz	r2, .L420
2167:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
 4060              		.loc 1 2167 0
 4061 0082 CB7A     		ldrb	r3, [r1, #11]	@ zero_extendqisi2
 4062 0084 03F03F03 		and	r3, r3, #63
 4063              	.LVL617:
 4064 0088 A371     		strb	r3, [r4, #6]
2169:Middlewares/Third_Party/FatFs/src/ff.c **** 				ord = 0xFF;
 4065              		.loc 1 2169 0
 4066 008a 2E2A     		cmp	r2, #46
 4067 008c 18BF     		it	ne
 4068 008e E52A     		cmpne	r2, #229
 4069 0090 E6D0     		beq	.L421
2169:Middlewares/Third_Party/FatFs/src/ff.c **** 				ord = 0xFF;
 4070              		.loc 1 2169 0 is_stmt 0 discriminator 1
 4071 0092 23F02000 		bic	r0, r3, #32
 4072              	.LVL618:
 4073 0096 0828     		cmp	r0, #8
 4074 0098 14BF     		ite	ne
 4075 009a 0020     		movne	r0, #0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 185


 4076 009c 0120     		moveq	r0, #1
 4077 009e 4045     		cmp	r0, r8
 4078 00a0 B8D0     		beq	.L429
2170:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
 4079              		.loc 1 2170 0 is_stmt 1
 4080 00a2 FF26     		movs	r6, #255
 4081              	.LVL619:
 4082 00a4 DDE7     		b	.L414
 4083              	.LVL620:
 4084              	.L425:
2179:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {					/* An SFN entry is found */
 4085              		.loc 1 2179 0
 4086 00a6 FF26     		movs	r6, #255
 4087              	.LVL621:
 4088 00a8 DBE7     		b	.L414
 4089              	.LVL622:
 4090              	.L420:
2148:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 4091              		.loc 1 2148 0
 4092 00aa 0425     		movs	r5, #4
 4093              	.LVL623:
 4094              	.L413:
2197:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 4095              		.loc 1 2197 0
 4096 00ac 0DB1     		cbz	r5, .L419
2197:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 4097              		.loc 1 2197 0 is_stmt 0 discriminator 1
 4098 00ae 0023     		movs	r3, #0
 4099 00b0 E361     		str	r3, [r4, #28]
 4100              	.L419:
2199:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4101              		.loc 1 2199 0 is_stmt 1
 4102 00b2 2846     		mov	r0, r5
 4103 00b4 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 4104              		.cfi_endproc
 4105              	.LFE175:
 4107              		.section	.text.dir_remove,"ax",%progbits
 4108              		.align	1
 4109              		.syntax unified
 4110              		.thumb
 4111              		.thumb_func
 4112              		.fpu fpv5-sp-d16
 4114              	dir_remove:
 4115              	.LFB178:
2399:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 4116              		.loc 1 2399 0
 4117              		.cfi_startproc
 4118              		@ args = 0, pretend = 0, frame = 0
 4119              		@ frame_needed = 0, uses_anonymous_args = 0
 4120              	.LVL624:
 4121 0000 70B5     		push	{r4, r5, r6, lr}
 4122              	.LCFI43:
 4123              		.cfi_def_cfa_offset 16
 4124              		.cfi_offset 4, -16
 4125              		.cfi_offset 5, -12
 4126              		.cfi_offset 6, -8
 4127              		.cfi_offset 14, -4
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 186


 4128 0002 0446     		mov	r4, r0
2401:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
 4129              		.loc 1 2401 0
 4130 0004 0568     		ldr	r5, [r0]
 4131              	.LVL625:
2403:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4132              		.loc 1 2403 0
 4133 0006 4669     		ldr	r6, [r0, #20]
 4134              	.LVL626:
2405:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 4135              		.loc 1 2405 0
 4136 0008 016B     		ldr	r1, [r0, #48]
 4137 000a B1F1FF3F 		cmp	r1, #-1
 4138 000e 1CD0     		beq	.L435
2405:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 4139              		.loc 1 2405 0 is_stmt 0 discriminator 1
 4140 0010 FFF7FEFF 		bl	dir_sdi
 4141              	.LVL627:
 4142 0014 0346     		mov	r3, r0
 4143              	.L431:
 4144              	.LVL628:
2406:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
 4145              		.loc 1 2406 0 is_stmt 1 discriminator 4
 4146 0016 B3B9     		cbnz	r3, .L432
 4147              	.LVL629:
 4148              	.L434:
2408:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 4149              		.loc 1 2408 0
 4150 0018 E169     		ldr	r1, [r4, #28]
 4151 001a 2846     		mov	r0, r5
 4152 001c FFF7FEFF 		bl	move_window
 4153              	.LVL630:
2409:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Mark an entry 'deleted' */
 4154              		.loc 1 2409 0
 4155 0020 0346     		mov	r3, r0
 4156 0022 70B9     		cbnz	r0, .L433
2414:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 4157              		.loc 1 2414 0
 4158 0024 226A     		ldr	r2, [r4, #32]
 4159 0026 E521     		movs	r1, #229
 4160 0028 1170     		strb	r1, [r2]
2416:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dp->dptr >= last) break;	/* If reached last entry then all entries of the object has been de
 4161              		.loc 1 2416 0
 4162 002a 0122     		movs	r2, #1
 4163 002c EA70     		strb	r2, [r5, #3]
2417:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_next(dp, 0);	/* Next entry */
 4164              		.loc 1 2417 0
 4165 002e 6269     		ldr	r2, [r4, #20]
 4166 0030 9642     		cmp	r6, r2
 4167 0032 06D9     		bls	.L433
2418:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (res == FR_OK);
 4168              		.loc 1 2418 0
 4169 0034 0021     		movs	r1, #0
 4170 0036 2046     		mov	r0, r4
 4171              	.LVL631:
 4172 0038 FFF7FEFF 		bl	dir_next
 4173              	.LVL632:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 187


2419:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_NO_FILE) res = FR_INT_ERR;
 4174              		.loc 1 2419 0
 4175 003c 0346     		mov	r3, r0
 4176 003e 0028     		cmp	r0, #0
 4177 0040 EAD0     		beq	.L434
 4178              	.L433:
 4179              	.LVL633:
2420:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 4180              		.loc 1 2420 0
 4181 0042 042B     		cmp	r3, #4
 4182 0044 03D0     		beq	.L438
 4183              	.LVL634:
 4184              	.L432:
2432:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4185              		.loc 1 2432 0
 4186 0046 1846     		mov	r0, r3
 4187 0048 70BD     		pop	{r4, r5, r6, pc}
 4188              	.LVL635:
 4189              	.L435:
2405:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 4190              		.loc 1 2405 0
 4191 004a 0023     		movs	r3, #0
 4192 004c E3E7     		b	.L431
 4193              	.LVL636:
 4194              	.L438:
2420:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 4195              		.loc 1 2420 0
 4196 004e 0223     		movs	r3, #2
 4197              	.LVL637:
 4198 0050 F9E7     		b	.L432
 4199              		.cfi_endproc
 4200              	.LFE178:
 4202              		.section	.text.unlock_fs,"ax",%progbits
 4203              		.align	1
 4204              		.syntax unified
 4205              		.thumb
 4206              		.thumb_func
 4207              		.fpu fpv5-sp-d16
 4209              	unlock_fs:
 4210              	.LFB150:
 755:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs && res != FR_NOT_ENABLED && res != FR_INVALID_DRIVE && res != FR_TIMEOUT) {
 4211              		.loc 1 755 0
 4212              		.cfi_startproc
 4213              		@ args = 0, pretend = 0, frame = 0
 4214              		@ frame_needed = 0, uses_anonymous_args = 0
 4215              	.LVL638:
 756:Middlewares/Third_Party/FatFs/src/ff.c **** 		ff_rel_grant(fs->sobj);
 4216              		.loc 1 756 0
 4217 0000 0028     		cmp	r0, #0
 4218 0002 18BF     		it	ne
 4219 0004 0C29     		cmpne	r1, #12
 4220 0006 0BD0     		beq	.L442
 755:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs && res != FR_NOT_ENABLED && res != FR_INVALID_DRIVE && res != FR_TIMEOUT) {
 4221              		.loc 1 755 0 discriminator 1
 4222 0008 08B5     		push	{r3, lr}
 4223              	.LCFI44:
 4224              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 188


 4225              		.cfi_offset 3, -8
 4226              		.cfi_offset 14, -4
 756:Middlewares/Third_Party/FatFs/src/ff.c **** 		ff_rel_grant(fs->sobj);
 4227              		.loc 1 756 0 discriminator 1
 4228 000a B1F10F02 		subs	r2, r1, #15
 4229 000e 18BF     		it	ne
 4230 0010 0122     		movne	r2, #1
 4231 0012 0B29     		cmp	r1, #11
 4232 0014 03D0     		beq	.L439
 4233 0016 12B1     		cbz	r2, .L439
 757:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 4234              		.loc 1 757 0
 4235 0018 0069     		ldr	r0, [r0, #16]
 4236              	.LVL639:
 4237 001a FFF7FEFF 		bl	ff_rel_grant
 4238              	.LVL640:
 4239              	.L439:
 4240 001e 08BD     		pop	{r3, pc}
 4241              	.LVL641:
 4242              	.L442:
 4243              	.LCFI45:
 4244              		.cfi_def_cfa_offset 0
 4245              		.cfi_restore 3
 4246              		.cfi_restore 14
 4247 0020 7047     		bx	lr
 4248              		.cfi_endproc
 4249              	.LFE150:
 4251              		.section	.text.create_name,"ax",%progbits
 4252              		.align	1
 4253              		.syntax unified
 4254              		.thumb
 4255              		.thumb_func
 4256              		.fpu fpv5-sp-d16
 4258              	create_name:
 4259              	.LFB182:
2622:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
 4260              		.loc 1 2622 0
 4261              		.cfi_startproc
 4262              		@ args = 0, pretend = 0, frame = 8
 4263              		@ frame_needed = 0, uses_anonymous_args = 0
 4264              	.LVL642:
 4265 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 4266              	.LCFI46:
 4267              		.cfi_def_cfa_offset 36
 4268              		.cfi_offset 4, -36
 4269              		.cfi_offset 5, -32
 4270              		.cfi_offset 6, -28
 4271              		.cfi_offset 7, -24
 4272              		.cfi_offset 8, -20
 4273              		.cfi_offset 9, -16
 4274              		.cfi_offset 10, -12
 4275              		.cfi_offset 11, -8
 4276              		.cfi_offset 14, -4
 4277 0004 83B0     		sub	sp, sp, #12
 4278              	.LCFI47:
 4279              		.cfi_def_cfa_offset 48
 4280 0006 0746     		mov	r7, r0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 189


 4281 0008 8A46     		mov	r10, r1
2630:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
 4282              		.loc 1 2630 0
 4283 000a D1F80090 		ldr	r9, [r1]
 4284              	.LVL643:
 4285 000e 0368     		ldr	r3, [r0]
 4286 0010 DD68     		ldr	r5, [r3, #12]
 4287              	.LVL644:
 4288 0012 0024     		movs	r4, #0
 4289 0014 23E0     		b	.L452
 4290              	.LVL645:
 4291              	.L449:
2635:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 4292              		.loc 1 2635 0 discriminator 2
 4293 0016 08F10108 		add	r8, r8, #1
 4294              	.LVL646:
 4295              	.L447:
2635:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 4296              		.loc 1 2635 0 is_stmt 0 discriminator 1
 4297 001a 19F80830 		ldrb	r3, [r9, r8]	@ zero_extendqisi2
 4298 001e 5C2B     		cmp	r3, #92
 4299 0020 18BF     		it	ne
 4300 0022 2F2B     		cmpne	r3, #47
 4301 0024 F7D0     		beq	.L449
 4302              	.L446:
2652:Middlewares/Third_Party/FatFs/src/ff.c **** 	cf = (w < ' ') ? NS_LAST : 0;		/* Set last segment flag if end of the path */
 4303              		.loc 1 2652 0 is_stmt 1
 4304 0026 09EB0803 		add	r3, r9, r8
 4305 002a CAF80030 		str	r3, [r10]
2653:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH != 0
 4306              		.loc 1 2653 0
 4307 002e 1F28     		cmp	r0, #31
 4308 0030 33D8     		bhi	.L490
 4309 0032 4FF00408 		mov	r8, #4
 4310              	.LVL647:
 4311              	.L453:
2655:Middlewares/Third_Party/FatFs/src/ff.c **** 		(di == 2 && lfn[di - 1] == '.' && lfn[di - 2] == '.')) {	/* Is this segment a dot name? */
 4312              		.loc 1 2655 0 discriminator 4
 4313 0036 012C     		cmp	r4, #1
 4314 0038 32D0     		beq	.L496
 4315              	.L454:
2655:Middlewares/Third_Party/FatFs/src/ff.c **** 		(di == 2 && lfn[di - 1] == '.' && lfn[di - 2] == '.')) {	/* Is this segment a dot name? */
 4316              		.loc 1 2655 0 is_stmt 0 discriminator 3
 4317 003a 022C     		cmp	r4, #2
 4318 003c 3BD0     		beq	.L497
 4319              	.LVL648:
 4320              	.L456:
2664:Middlewares/Third_Party/FatFs/src/ff.c **** 		w = lfn[di - 1];
 4321              		.loc 1 2664 0 is_stmt 1
 4322 003e 002C     		cmp	r4, #0
 4323 0040 59D0     		beq	.L460
2665:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w != ' ' && w != '.') break;
 4324              		.loc 1 2665 0
 4325 0042 6FF00043 		mvn	r3, #-2147483648
 4326 0046 2344     		add	r3, r3, r4
 4327 0048 35F81330 		ldrh	r3, [r5, r3, lsl #1]
 4328              	.LVL649:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 190


2666:Middlewares/Third_Party/FatFs/src/ff.c **** 		di--;
 4329              		.loc 1 2666 0
 4330 004c 202B     		cmp	r3, #32
 4331 004e 18BF     		it	ne
 4332 0050 2E2B     		cmpne	r3, #46
 4333 0052 50D1     		bne	.L460
2667:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 4334              		.loc 1 2667 0
 4335 0054 013C     		subs	r4, r4, #1
 4336              	.LVL650:
 4337 0056 F2E7     		b	.L456
 4338              	.LVL651:
 4339              	.L451:
2650:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 4340              		.loc 1 2650 0
 4341 0058 25F81460 		strh	r6, [r5, r4, lsl #1]	@ movhi
2632:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w < ' ') break;				/* Break if end of the path name */
 4342              		.loc 1 2632 0
 4343 005c 4446     		mov	r4, r8
 4344              	.LVL652:
 4345              	.L452:
 4346 005e 04F10108 		add	r8, r4, #1
 4347              	.LVL653:
 4348 0062 19F80400 		ldrb	r0, [r9, r4]	@ zero_extendqisi2
 4349              	.LVL654:
2633:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w == '/' || w == '\\') {	/* Break if a separator is found */
 4350              		.loc 1 2633 0
 4351 0066 1F28     		cmp	r0, #31
 4352 0068 DDD9     		bls	.L446
2634:Middlewares/Third_Party/FatFs/src/ff.c **** 			while (p[si] == '/' || p[si] == '\\') si++;	/* Skip duplicated separator if exist */
 4353              		.loc 1 2634 0
 4354 006a 5C28     		cmp	r0, #92
 4355 006c 18BF     		it	ne
 4356 006e 2F28     		cmpne	r0, #47
 4357 0070 D3D0     		beq	.L447
2638:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_LFN_UNICODE
 4358              		.loc 1 2638 0
 4359 0072 FE2C     		cmp	r4, #254
 4360 0074 00F20381 		bhi	.L487
2646:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!w) return FR_INVALID_NAME;	/* Reject invalid code */
 4361              		.loc 1 2646 0
 4362 0078 0121     		movs	r1, #1
 4363 007a FFF7FEFF 		bl	ff_convert
 4364              	.LVL655:
2647:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 4365              		.loc 1 2647 0
 4366 007e 0646     		mov	r6, r0
 4367 0080 0028     		cmp	r0, #0
 4368 0082 00F0FE80 		beq	.L488
2649:Middlewares/Third_Party/FatFs/src/ff.c **** 		lfn[di++] = w;					/* Store the Unicode character */
 4369              		.loc 1 2649 0
 4370 0086 7F28     		cmp	r0, #127
 4371 0088 E6D8     		bhi	.L451
2649:Middlewares/Third_Party/FatFs/src/ff.c **** 		lfn[di++] = w;					/* Store the Unicode character */
 4372              		.loc 1 2649 0 is_stmt 0 discriminator 1
 4373 008a 0146     		mov	r1, r0
 4374 008c 7E48     		ldr	r0, .L507
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 191


 4375              	.LVL656:
 4376 008e FFF7FEFF 		bl	chk_chr
 4377              	.LVL657:
 4378 0092 0028     		cmp	r0, #0
 4379 0094 E0D0     		beq	.L451
2649:Middlewares/Third_Party/FatFs/src/ff.c **** 		lfn[di++] = w;					/* Store the Unicode character */
 4380              		.loc 1 2649 0
 4381 0096 0620     		movs	r0, #6
 4382 0098 32E0     		b	.L450
 4383              	.LVL658:
 4384              	.L490:
2653:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH != 0
 4385              		.loc 1 2653 0 is_stmt 1
 4386 009a 4FF00008 		mov	r8, #0
 4387              	.LVL659:
 4388 009e CAE7     		b	.L453
 4389              	.LVL660:
 4390              	.L496:
2655:Middlewares/Third_Party/FatFs/src/ff.c **** 		(di == 2 && lfn[di - 1] == '.' && lfn[di - 2] == '.')) {	/* Is this segment a dot name? */
 4391              		.loc 1 2655 0 discriminator 1
 4392 00a0 6FF00043 		mvn	r3, #-2147483648
 4393 00a4 2344     		add	r3, r3, r4
 4394 00a6 35F81330 		ldrh	r3, [r5, r3, lsl #1]
 4395 00aa 2E2B     		cmp	r3, #46
 4396 00ac C5D1     		bne	.L454
 4397              	.L455:
2657:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = 0; i < 11; i++)		/* Create dot name for SFN entry */
 4398              		.loc 1 2657 0
 4399 00ae 0023     		movs	r3, #0
 4400 00b0 25F81430 		strh	r3, [r5, r4, lsl #1]	@ movhi
 4401              	.LVL661:
2658:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->fn[i] = (i < di) ? '.' : ' ';
 4402              		.loc 1 2658 0
 4403 00b4 12E0     		b	.L457
 4404              	.LVL662:
 4405              	.L497:
2656:Middlewares/Third_Party/FatFs/src/ff.c **** 		lfn[di] = 0;
 4406              		.loc 1 2656 0
 4407 00b6 6FF00043 		mvn	r3, #-2147483648
 4408 00ba 2344     		add	r3, r3, r4
 4409 00bc 35F81330 		ldrh	r3, [r5, r3, lsl #1]
 4410 00c0 2E2B     		cmp	r3, #46
 4411 00c2 BCD1     		bne	.L456
2656:Middlewares/Third_Party/FatFs/src/ff.c **** 		lfn[di] = 0;
 4412              		.loc 1 2656 0 is_stmt 0 discriminator 1
 4413 00c4 714B     		ldr	r3, .L507+4
 4414 00c6 2344     		add	r3, r3, r4
 4415 00c8 35F81330 		ldrh	r3, [r5, r3, lsl #1]
 4416 00cc 2E2B     		cmp	r3, #46
 4417 00ce B6D1     		bne	.L456
 4418 00d0 EDE7     		b	.L455
 4419              	.LVL663:
 4420              	.L491:
2659:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->fn[i] = cf | NS_DOT;		/* This is a dot entry */
 4421              		.loc 1 2659 0 is_stmt 1
 4422 00d2 2021     		movs	r1, #32
 4423              	.L458:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 192


2659:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->fn[i] = cf | NS_DOT;		/* This is a dot entry */
 4424              		.loc 1 2659 0 is_stmt 0 discriminator 4
 4425 00d4 FA18     		adds	r2, r7, r3
 4426 00d6 82F82410 		strb	r1, [r2, #36]
2658:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->fn[i] = (i < di) ? '.' : ' ';
 4427              		.loc 1 2658 0 is_stmt 1 discriminator 4
 4428 00da 0133     		adds	r3, r3, #1
 4429              	.LVL664:
 4430              	.L457:
2658:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->fn[i] = (i < di) ? '.' : ' ';
 4431              		.loc 1 2658 0 is_stmt 0 discriminator 2
 4432 00dc 0A2B     		cmp	r3, #10
 4433 00de 03D8     		bhi	.L498
2659:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->fn[i] = cf | NS_DOT;		/* This is a dot entry */
 4434              		.loc 1 2659 0 is_stmt 1
 4435 00e0 A342     		cmp	r3, r4
 4436 00e2 F6D2     		bcs	.L491
 4437 00e4 2E21     		movs	r1, #46
 4438 00e6 F5E7     		b	.L458
 4439              	.L498:
2660:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_OK;
 4440              		.loc 1 2660 0
 4441 00e8 3B44     		add	r3, r3, r7
 4442              	.LVL665:
 4443 00ea 48F02008 		orr	r8, r8, #32
 4444              	.LVL666:
 4445 00ee 83F82480 		strb	r8, [r3, #36]
2661:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 4446              		.loc 1 2661 0
 4447 00f2 0020     		movs	r0, #0
 4448              	.LVL667:
 4449 00f4 04E0     		b	.L450
 4450              	.LVL668:
 4451              	.L460:
2669:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (di == 0) return FR_INVALID_NAME;	/* Reject nul name */
 4452              		.loc 1 2669 0
 4453 00f6 0023     		movs	r3, #0
 4454 00f8 25F81430 		strh	r3, [r5, r4, lsl #1]	@ movhi
2670:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4455              		.loc 1 2670 0
 4456 00fc 1CB9     		cbnz	r4, .L499
 4457 00fe 0620     		movs	r0, #6
 4458              	.LVL669:
 4459              	.L450:
2803:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4460              		.loc 1 2803 0
 4461 0100 03B0     		add	sp, sp, #12
 4462              	.LCFI48:
 4463              		.cfi_remember_state
 4464              		.cfi_def_cfa_offset 36
 4465              		@ sp needed
 4466 0102 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4467              	.LVL670:
 4468              	.L499:
 4469              	.LCFI49:
 4470              		.cfi_restore_state
2673:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (si = 0; lfn[si] == ' ' || lfn[si] == '.'; si++) ;	/* Strip leading spaces and dots */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 193


 4471              		.loc 1 2673 0
 4472 0106 0B22     		movs	r2, #11
 4473 0108 2021     		movs	r1, #32
 4474 010a 07F12400 		add	r0, r7, #36
 4475 010e FFF7FEFF 		bl	mem_set
 4476              	.LVL671:
2674:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (si) cf |= NS_LOSS | NS_LFN;
 4477              		.loc 1 2674 0
 4478 0112 0023     		movs	r3, #0
 4479 0114 00E0     		b	.L462
 4480              	.LVL672:
 4481              	.L463:
2674:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (si) cf |= NS_LOSS | NS_LFN;
 4482              		.loc 1 2674 0 is_stmt 0 discriminator 3
 4483 0116 0133     		adds	r3, r3, #1
 4484              	.LVL673:
 4485              	.L462:
2674:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (si) cf |= NS_LOSS | NS_LFN;
 4486              		.loc 1 2674 0 discriminator 1
 4487 0118 35F81320 		ldrh	r2, [r5, r3, lsl #1]
 4488 011c 2E2A     		cmp	r2, #46
 4489 011e 18BF     		it	ne
 4490 0120 202A     		cmpne	r2, #32
 4491 0122 F8D0     		beq	.L463
2675:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (di && lfn[di - 1] != '.') di--;	/* Find extension (di<=si: no extension) */
 4492              		.loc 1 2675 0 is_stmt 1
 4493 0124 1BB1     		cbz	r3, .L465
2675:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (di && lfn[di - 1] != '.') di--;	/* Find extension (di<=si: no extension) */
 4494              		.loc 1 2675 0 is_stmt 0 discriminator 1
 4495 0126 48F00308 		orr	r8, r8, #3
 4496              	.LVL674:
 4497 012a 00E0     		b	.L465
 4498              	.L467:
2676:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4499              		.loc 1 2676 0 is_stmt 1 discriminator 3
 4500 012c 013C     		subs	r4, r4, #1
 4501              	.LVL675:
 4502              	.L465:
2676:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4503              		.loc 1 2676 0 is_stmt 0 discriminator 1
 4504 012e 6CB1     		cbz	r4, .L493
2676:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4505              		.loc 1 2676 0 discriminator 2
 4506 0130 6FF00042 		mvn	r2, #-2147483648
 4507 0134 2244     		add	r2, r2, r4
 4508 0136 35F81220 		ldrh	r2, [r5, r2, lsl #1]
 4509 013a 2E2A     		cmp	r2, #46
 4510 013c F6D1     		bne	.L467
 4511 013e 4FF0080B 		mov	fp, #8
 4512 0142 4FF0000A 		mov	r10, #0
 4513              	.LVL676:
 4514 0146 CDF804A0 		str	r10, [sp, #4]
 4515 014a 08E0     		b	.L466
 4516              	.LVL677:
 4517              	.L493:
 4518 014c A246     		mov	r10, r4
 4519              	.LVL678:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 194


 4520 014e 4FF0080B 		mov	fp, #8
 4521 0152 0022     		movs	r2, #0
 4522 0154 0192     		str	r2, [sp, #4]
 4523 0156 02E0     		b	.L466
 4524              	.LVL679:
 4525              	.L469:
2683:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 4526              		.loc 1 2683 0 is_stmt 1
 4527 0158 48F00308 		orr	r8, r8, #3
 4528              	.LVL680:
2680:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!w) break;					/* Break on end of the LFN */
 4529              		.loc 1 2680 0
 4530 015c 4B46     		mov	r3, r9
 4531              	.LVL681:
 4532              	.L466:
 4533 015e 03F10109 		add	r9, r3, #1
 4534              	.LVL682:
 4535 0162 35F81360 		ldrh	r6, [r5, r3, lsl #1]
 4536              	.LVL683:
2681:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w == ' ' || (w == '.' && si != di)) {	/* Remove spaces and dots */
 4537              		.loc 1 2681 0
 4538 0166 1EB3     		cbz	r6, .L468
2682:Middlewares/Third_Party/FatFs/src/ff.c **** 			cf |= NS_LOSS | NS_LFN; continue;
 4539              		.loc 1 2682 0
 4540 0168 202E     		cmp	r6, #32
 4541 016a F5D0     		beq	.L469
2682:Middlewares/Third_Party/FatFs/src/ff.c **** 			cf |= NS_LOSS | NS_LFN; continue;
 4542              		.loc 1 2682 0 is_stmt 0 discriminator 1
 4543 016c 2E2E     		cmp	r6, #46
 4544 016e 14BF     		ite	ne
 4545 0170 0023     		movne	r3, #0
 4546 0172 0123     		moveq	r3, #1
 4547 0174 4C45     		cmp	r4, r9
 4548 0176 08BF     		it	eq
 4549 0178 0023     		moveq	r3, #0
 4550 017a 002B     		cmp	r3, #0
 4551 017c ECD1     		bne	.L469
2686:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ni == 11) {				/* Long extension */
 4552              		.loc 1 2686 0 is_stmt 1
 4553 017e 4C45     		cmp	r4, r9
 4554 0180 18BF     		it	ne
 4555 0182 DA45     		cmpne	r10, fp
 4556 0184 32D3     		bcc	.L472
2687:Middlewares/Third_Party/FatFs/src/ff.c **** 				cf |= NS_LOSS | NS_LFN; break;
 4557              		.loc 1 2687 0
 4558 0186 BBF10B0F 		cmp	fp, #11
 4559 018a 0FD0     		beq	.L500
2690:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (si > di) break;			/* No extension */
 4560              		.loc 1 2690 0
 4561 018c 4C45     		cmp	r4, r9
 4562 018e 01D0     		beq	.L474
2690:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (si > di) break;			/* No extension */
 4563              		.loc 1 2690 0 is_stmt 0 discriminator 1
 4564 0190 48F00308 		orr	r8, r8, #3
 4565              	.LVL684:
 4566              	.L474:
2691:Middlewares/Third_Party/FatFs/src/ff.c **** 			si = di; i = 8; ni = 11;	/* Enter extension section */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 195


 4567              		.loc 1 2691 0 is_stmt 1
 4568 0194 4C45     		cmp	r4, r9
 4569 0196 0BD3     		bcc	.L468
 4570              	.LVL685:
2693:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 4571              		.loc 1 2693 0
 4572 0198 019B     		ldr	r3, [sp, #4]
 4573 019a 9B00     		lsls	r3, r3, #2
 4574 019c DBB2     		uxtb	r3, r3
 4575 019e 0193     		str	r3, [sp, #4]
 4576              	.LVL686:
2692:Middlewares/Third_Party/FatFs/src/ff.c **** 			b <<= 2; continue;
 4577              		.loc 1 2692 0
 4578 01a0 2346     		mov	r3, r4
 4579 01a2 4FF00B0B 		mov	fp, #11
 4580 01a6 4FF0080A 		mov	r10, #8
2693:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 4581              		.loc 1 2693 0
 4582 01aa D8E7     		b	.L466
 4583              	.LVL687:
 4584              	.L500:
2688:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 4585              		.loc 1 2688 0
 4586 01ac 48F00308 		orr	r8, r8, #3
 4587              	.LVL688:
 4588              	.L468:
2727:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4589              		.loc 1 2727 0
 4590 01b0 97F82430 		ldrb	r3, [r7, #36]	@ zero_extendqisi2
 4591 01b4 E52B     		cmp	r3, #229
 4592 01b6 50D0     		beq	.L501
 4593              	.L481:
2729:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((b & 0x0C) == 0x0C || (b & 0x03) == 0x03) cf |= NS_LFN;	/* Create LFN entry when there are com
 4594              		.loc 1 2729 0
 4595 01b8 BBF1080F 		cmp	fp, #8
 4596 01bc 51D0     		beq	.L502
 4597              	.L482:
 4598 01be 0199     		ldr	r1, [sp, #4]
 4599 01c0 01F00C02 		and	r2, r1, #12
2730:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(cf & NS_LFN)) {						/* When LFN is in 8.3 format without extended character, NT flags are c
 4600              		.loc 1 2730 0
 4601 01c4 0C2A     		cmp	r2, #12
 4602 01c6 51D0     		beq	.L483
2730:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(cf & NS_LFN)) {						/* When LFN is in 8.3 format without extended character, NT flags are c
 4603              		.loc 1 2730 0 is_stmt 0 discriminator 2
 4604 01c8 01F00303 		and	r3, r1, #3
 4605 01cc 032B     		cmp	r3, #3
 4606 01ce 4DD0     		beq	.L483
 4607              	.L484:
2731:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((b & 0x03) == 0x01) cf |= NS_EXT;	/* NT flag (Extension has only small capital) */
 4608              		.loc 1 2731 0 is_stmt 1
 4609 01d0 18F0020F 		tst	r8, #2
 4610 01d4 06D1     		bne	.L485
2732:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((b & 0x0C) == 0x04) cf |= NS_BODY;	/* NT flag (Filename has only small capital) */
 4611              		.loc 1 2732 0
 4612 01d6 019B     		ldr	r3, [sp, #4]
 4613 01d8 03F00303 		and	r3, r3, #3
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 196


 4614 01dc 012B     		cmp	r3, #1
 4615 01de 48D0     		beq	.L503
 4616              	.L486:
2733:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 4617              		.loc 1 2733 0
 4618 01e0 042A     		cmp	r2, #4
 4619 01e2 49D0     		beq	.L504
 4620              	.L485:
2736:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4621              		.loc 1 2736 0
 4622 01e4 87F82F80 		strb	r8, [r7, #47]
2738:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4623              		.loc 1 2738 0
 4624 01e8 0020     		movs	r0, #0
 4625 01ea 89E7     		b	.L450
 4626              	.L472:
2696:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _EXCVT
 4627              		.loc 1 2696 0
 4628 01ec 7F2E     		cmp	r6, #127
 4629 01ee 0BD8     		bhi	.L505
 4630              	.L475:
2712:Middlewares/Third_Party/FatFs/src/ff.c **** 				w = '_'; cf |= NS_LOSS | NS_LFN;/* Lossy conversion */
 4631              		.loc 1 2712 0
 4632 01f0 BEB9     		cbnz	r6, .L506
 4633              	.L477:
 4634              	.LVL689:
2713:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
 4635              		.loc 1 2713 0
 4636 01f2 48F00308 		orr	r8, r8, #3
 4637              	.LVL690:
 4638 01f6 5F26     		movs	r6, #95
 4639              	.LVL691:
 4640              	.L479:
2724:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 4641              		.loc 1 2724 0
 4642 01f8 07EB0A03 		add	r3, r7, r10
 4643 01fc 83F82460 		strb	r6, [r3, #36]
2680:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!w) break;					/* Break on end of the LFN */
 4644              		.loc 1 2680 0
 4645 0200 4B46     		mov	r3, r9
2724:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 4646              		.loc 1 2724 0
 4647 0202 0AF1010A 		add	r10, r10, #1
 4648              	.LVL692:
 4649 0206 AAE7     		b	.L466
 4650              	.L505:
2698:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (w) w = ExCvt[w - 0x80];	/* Convert extended character to upper (SBCS) */
 4651              		.loc 1 2698 0
 4652 0208 0021     		movs	r1, #0
 4653 020a 3046     		mov	r0, r6
 4654 020c FFF7FEFF 		bl	ff_convert
 4655              	.LVL693:
2699:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 4656              		.loc 1 2699 0
 4657 0210 0646     		mov	r6, r0
 4658 0212 18B1     		cbz	r0, .L476
2699:Middlewares/Third_Party/FatFs/src/ff.c **** #else
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 197


 4659              		.loc 1 2699 0 is_stmt 0 discriminator 1
 4660 0214 A0F18006 		sub	r6, r0, #128
 4661 0218 1D4B     		ldr	r3, .L507+8
 4662 021a 9E5D     		ldrb	r6, [r3, r6]	@ zero_extendqisi2
 4663              	.LVL694:
 4664              	.L476:
2703:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 4665              		.loc 1 2703 0 is_stmt 1
 4666 021c 48F00208 		orr	r8, r8, #2
 4667              	.LVL695:
 4668 0220 E6E7     		b	.L475
 4669              	.L506:
2712:Middlewares/Third_Party/FatFs/src/ff.c **** 				w = '_'; cf |= NS_LOSS | NS_LFN;/* Lossy conversion */
 4670              		.loc 1 2712 0 discriminator 1
 4671 0222 3146     		mov	r1, r6
 4672 0224 1B48     		ldr	r0, .L507+12
 4673 0226 FFF7FEFF 		bl	chk_chr
 4674              	.LVL696:
 4675 022a 0028     		cmp	r0, #0
 4676 022c E1D1     		bne	.L477
2715:Middlewares/Third_Party/FatFs/src/ff.c **** 					b |= 2;
 4677              		.loc 1 2715 0
 4678 022e A6F14103 		sub	r3, r6, #65
 4679 0232 9BB2     		uxth	r3, r3
 4680 0234 192B     		cmp	r3, #25
 4681 0236 04D8     		bhi	.L480
2716:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
 4682              		.loc 1 2716 0
 4683 0238 019B     		ldr	r3, [sp, #4]
 4684 023a 43F00203 		orr	r3, r3, #2
 4685 023e 0193     		str	r3, [sp, #4]
 4686              	.LVL697:
 4687 0240 DAE7     		b	.L479
 4688              	.L480:
2718:Middlewares/Third_Party/FatFs/src/ff.c **** 						b |= 1; w -= 0x20;
 4689              		.loc 1 2718 0
 4690 0242 A6F16103 		sub	r3, r6, #97
 4691 0246 9BB2     		uxth	r3, r3
 4692 0248 192B     		cmp	r3, #25
 4693 024a D5D8     		bhi	.L479
2719:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 4694              		.loc 1 2719 0
 4695 024c 019B     		ldr	r3, [sp, #4]
 4696 024e 43F00103 		orr	r3, r3, #1
 4697 0252 0193     		str	r3, [sp, #4]
 4698              	.LVL698:
 4699 0254 203E     		subs	r6, r6, #32
 4700              	.LVL699:
 4701 0256 B6B2     		uxth	r6, r6
 4702              	.LVL700:
 4703 0258 CEE7     		b	.L479
 4704              	.L501:
2727:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4705              		.loc 1 2727 0 discriminator 1
 4706 025a 0523     		movs	r3, #5
 4707 025c 87F82430 		strb	r3, [r7, #36]
 4708 0260 AAE7     		b	.L481
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 198


 4709              	.L502:
2729:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((b & 0x0C) == 0x0C || (b & 0x03) == 0x03) cf |= NS_LFN;	/* Create LFN entry when there are com
 4710              		.loc 1 2729 0 discriminator 1
 4711 0262 019B     		ldr	r3, [sp, #4]
 4712 0264 9B00     		lsls	r3, r3, #2
 4713 0266 DBB2     		uxtb	r3, r3
 4714 0268 0193     		str	r3, [sp, #4]
 4715              	.LVL701:
 4716 026a A8E7     		b	.L482
 4717              	.L483:
2730:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(cf & NS_LFN)) {						/* When LFN is in 8.3 format without extended character, NT flags are c
 4718              		.loc 1 2730 0 discriminator 3
 4719 026c 48F00208 		orr	r8, r8, #2
 4720              	.LVL702:
 4721 0270 AEE7     		b	.L484
 4722              	.L503:
2732:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((b & 0x0C) == 0x04) cf |= NS_BODY;	/* NT flag (Filename has only small capital) */
 4723              		.loc 1 2732 0 discriminator 1
 4724 0272 48F01008 		orr	r8, r8, #16
 4725              	.LVL703:
 4726 0276 B3E7     		b	.L486
 4727              	.L504:
2733:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 4728              		.loc 1 2733 0 discriminator 1
 4729 0278 48F00808 		orr	r8, r8, #8
 4730              	.LVL704:
 4731 027c B2E7     		b	.L485
 4732              	.LVL705:
 4733              	.L487:
2638:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_LFN_UNICODE
 4734              		.loc 1 2638 0
 4735 027e 0620     		movs	r0, #6
 4736              	.LVL706:
 4737 0280 3EE7     		b	.L450
 4738              	.LVL707:
 4739              	.L488:
2647:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 4740              		.loc 1 2647 0
 4741 0282 0620     		movs	r0, #6
 4742              	.LVL708:
 4743 0284 3CE7     		b	.L450
 4744              	.L508:
 4745 0286 00BF     		.align	2
 4746              	.L507:
 4747 0288 00000000 		.word	.LC0
 4748 028c FEFFFF7F 		.word	2147483646
 4749 0290 00000000 		.word	.LANCHOR2
 4750 0294 0C000000 		.word	.LC1
 4751              		.cfi_endproc
 4752              	.LFE182:
 4754              		.section	.text.get_fileinfo,"ax",%progbits
 4755              		.align	1
 4756              		.syntax unified
 4757              		.thumb
 4758              		.thumb_func
 4759              		.fpu fpv5-sp-d16
 4761              	get_fileinfo:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 199


 4762              	.LFB179:
2448:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, j;
 4763              		.loc 1 2448 0
 4764              		.cfi_startproc
 4765              		@ args = 0, pretend = 0, frame = 0
 4766              		@ frame_needed = 0, uses_anonymous_args = 0
 4767              	.LVL709:
 4768 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 4769              	.LCFI50:
 4770              		.cfi_def_cfa_offset 24
 4771              		.cfi_offset 4, -24
 4772              		.cfi_offset 5, -20
 4773              		.cfi_offset 6, -16
 4774              		.cfi_offset 7, -12
 4775              		.cfi_offset 8, -8
 4776              		.cfi_offset 14, -4
2454:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 4777              		.loc 1 2454 0
 4778 0004 D0F80080 		ldr	r8, [r0]
 4779              	.LVL710:
2458:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!dp->sect) return;	/* Exit if read pointer has reached end of directory */
 4780              		.loc 1 2458 0
 4781 0008 0023     		movs	r3, #0
 4782 000a 8B75     		strb	r3, [r1, #22]
2459:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4783              		.loc 1 2459 0
 4784 000c C369     		ldr	r3, [r0, #28]
 4785 000e 002B     		cmp	r3, #0
 4786 0010 69D0     		beq	.L509
 4787 0012 0D46     		mov	r5, r1
 4788 0014 0646     		mov	r6, r0
2469:Middlewares/Third_Party/FatFs/src/ff.c **** 			i = j = 0;
 4789              		.loc 1 2469 0
 4790 0016 036B     		ldr	r3, [r0, #48]
 4791 0018 B3F1FF3F 		cmp	r3, #-1
 4792 001c 14D0     		beq	.L512
 4793 001e 0024     		movs	r4, #0
 4794              	.LVL711:
 4795              	.L511:
2471:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_LFN_UNICODE
 4796              		.loc 1 2471 0
 4797 0020 D8F80C30 		ldr	r3, [r8, #12]
 4798 0024 671C     		adds	r7, r4, #1
 4799              	.LVL712:
 4800 0026 33F81400 		ldrh	r0, [r3, r4, lsl #1]
 4801              	.LVL713:
 4802 002a 50B1     		cbz	r0, .L513
2473:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (w == 0) { i = 0; break; }	/* No LFN if it could not be converted */
 4803              		.loc 1 2473 0
 4804 002c 0021     		movs	r1, #0
 4805 002e FFF7FEFF 		bl	ff_convert
 4806              	.LVL714:
2474:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (_DF1S && w >= 0x100) {	/* Put 1st byte if it is a DBC (always false at SBCS cfg) */
 4807              		.loc 1 2474 0
 4808 0032 28B1     		cbz	r0, .L526
2479:Middlewares/Third_Party/FatFs/src/ff.c **** 				fno->fname[i++] = (TCHAR)w;
 4809              		.loc 1 2479 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 200


 4810 0034 FE2C     		cmp	r4, #254
 4811 0036 0BD8     		bhi	.L527
 4812              	.LVL715:
2480:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 4813              		.loc 1 2480 0
 4814 0038 2C44     		add	r4, r4, r5
 4815 003a A075     		strb	r0, [r4, #22]
 4816 003c 3C46     		mov	r4, r7
 4817 003e EFE7     		b	.L511
 4818              	.LVL716:
 4819              	.L526:
2474:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (_DF1S && w >= 0x100) {	/* Put 1st byte if it is a DBC (always false at SBCS cfg) */
 4820              		.loc 1 2474 0
 4821 0040 0024     		movs	r4, #0
 4822              	.LVL717:
 4823              	.L513:
2482:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 4824              		.loc 1 2482 0
 4825 0042 2C44     		add	r4, r4, r5
 4826              	.LVL718:
 4827 0044 0023     		movs	r3, #0
 4828 0046 A375     		strb	r3, [r4, #22]
 4829              	.LVL719:
 4830              	.L512:
2487:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (i < 11) {		/* Copy name body and extension */
 4831              		.loc 1 2487 0
 4832 0048 AC7D     		ldrb	r4, [r5, #22]	@ zero_extendqisi2
 4833              	.LVL720:
2486:Middlewares/Third_Party/FatFs/src/ff.c **** 	lfv = fno->fname[i];	/* LFN is exist if non-zero */
 4834              		.loc 1 2486 0
 4835 004a 0022     		movs	r2, #0
 4836 004c 1346     		mov	r3, r2
2488:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = (TCHAR)dp->dir[i++];
 4837              		.loc 1 2488 0
 4838 004e 12E0     		b	.L515
 4839              	.LVL721:
 4840              	.L527:
2479:Middlewares/Third_Party/FatFs/src/ff.c **** 				fno->fname[i++] = (TCHAR)w;
 4841              		.loc 1 2479 0
 4842 0050 0024     		movs	r4, #0
 4843              	.LVL722:
 4844 0052 F6E7     		b	.L513
 4845              	.LVL723:
 4846              	.L533:
2491:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == 9) {						/* Insert a . if extension is exist */
 4847              		.loc 1 2491 0
 4848 0054 E523     		movs	r3, #229
 4849              	.LVL724:
 4850 0056 17E0     		b	.L517
 4851              	.LVL725:
 4852              	.L534:
2493:Middlewares/Third_Party/FatFs/src/ff.c **** 			fno->altname[j++] = '.';
 4853              		.loc 1 2493 0
 4854 0058 14B9     		cbnz	r4, .L519
2493:Middlewares/Third_Party/FatFs/src/ff.c **** 			fno->altname[j++] = '.';
 4855              		.loc 1 2493 0 is_stmt 0 discriminator 1
 4856 005a A818     		adds	r0, r5, r2
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 201


 4857 005c 2E27     		movs	r7, #46
 4858 005e 8775     		strb	r7, [r0, #22]
 4859              	.L519:
 4860              	.LVL726:
2494:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 4861              		.loc 1 2494 0 is_stmt 1
 4862 0060 A818     		adds	r0, r5, r2
 4863 0062 2E27     		movs	r7, #46
 4864 0064 4772     		strb	r7, [r0, #9]
 4865 0066 0132     		adds	r2, r2, #1
 4866              	.LVL727:
 4867 0068 10E0     		b	.L518
 4868              	.L535:
2505:Middlewares/Third_Party/FatFs/src/ff.c **** 				c += 0x20;			/* To lower */
 4869              		.loc 1 2505 0
 4870 006a 1027     		movs	r7, #16
 4871 006c 1CE0     		b	.L522
 4872              	.L521:
2508:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 4873              		.loc 1 2508 0
 4874 006e A818     		adds	r0, r5, r2
 4875 0070 8375     		strb	r3, [r0, #22]
 4876              	.L520:
2510:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 4877              		.loc 1 2510 0
 4878 0072 0132     		adds	r2, r2, #1
 4879              	.LVL728:
 4880              	.L516:
2505:Middlewares/Third_Party/FatFs/src/ff.c **** 				c += 0x20;			/* To lower */
 4881              		.loc 1 2505 0
 4882 0074 0B46     		mov	r3, r1
 4883              	.LVL729:
 4884              	.L515:
2488:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = (TCHAR)dp->dir[i++];
 4885              		.loc 1 2488 0
 4886 0076 0A2B     		cmp	r3, #10
 4887 0078 1BD8     		bhi	.L532
2489:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == ' ') continue;				/* Skip padding spaces */
 4888              		.loc 1 2489 0
 4889 007a 306A     		ldr	r0, [r6, #32]
 4890 007c 591C     		adds	r1, r3, #1
 4891              	.LVL730:
 4892 007e C35C     		ldrb	r3, [r0, r3]	@ zero_extendqisi2
 4893              	.LVL731:
2490:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == RDDEM) c = (TCHAR)DDEM;	/* Restore replaced DDEM character */
 4894              		.loc 1 2490 0
 4895 0080 202B     		cmp	r3, #32
 4896 0082 F7D0     		beq	.L516
2491:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == 9) {						/* Insert a . if extension is exist */
 4897              		.loc 1 2491 0
 4898 0084 052B     		cmp	r3, #5
 4899 0086 E5D0     		beq	.L533
 4900              	.LVL732:
 4901              	.L517:
2492:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!lfv) fno->fname[j] = '.';
 4902              		.loc 1 2492 0
 4903 0088 0929     		cmp	r1, #9
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 202


 4904 008a E5D0     		beq	.L534
 4905              	.L518:
2503:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!lfv) {
 4906              		.loc 1 2503 0
 4907 008c A818     		adds	r0, r5, r2
 4908 008e 4372     		strb	r3, [r0, #9]
2504:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (IsUpper(c) && (dp->dir[DIR_NTres] & ((i >= 9) ? NS_EXT : NS_BODY))) {
 4909              		.loc 1 2504 0
 4910 0090 002C     		cmp	r4, #0
 4911 0092 EED1     		bne	.L520
2505:Middlewares/Third_Party/FatFs/src/ff.c **** 				c += 0x20;			/* To lower */
 4912              		.loc 1 2505 0
 4913 0094 A3F14100 		sub	r0, r3, #65
 4914 0098 C0B2     		uxtb	r0, r0
 4915 009a 1928     		cmp	r0, #25
 4916 009c E7D8     		bhi	.L521
2505:Middlewares/Third_Party/FatFs/src/ff.c **** 				c += 0x20;			/* To lower */
 4917              		.loc 1 2505 0 is_stmt 0 discriminator 1
 4918 009e 306A     		ldr	r0, [r6, #32]
 4919 00a0 007B     		ldrb	r0, [r0, #12]	@ zero_extendqisi2
 4920 00a2 0829     		cmp	r1, #8
 4921 00a4 E1D8     		bhi	.L535
2505:Middlewares/Third_Party/FatFs/src/ff.c **** 				c += 0x20;			/* To lower */
 4922              		.loc 1 2505 0
 4923 00a6 0827     		movs	r7, #8
 4924              	.L522:
2505:Middlewares/Third_Party/FatFs/src/ff.c **** 				c += 0x20;			/* To lower */
 4925              		.loc 1 2505 0 discriminator 5
 4926 00a8 0742     		tst	r7, r0
 4927 00aa E0D0     		beq	.L521
2506:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 4928              		.loc 1 2506 0 is_stmt 1
 4929 00ac 2033     		adds	r3, r3, #32
 4930              	.LVL733:
 4931 00ae DBB2     		uxtb	r3, r3
 4932              	.LVL734:
 4933 00b0 DDE7     		b	.L521
 4934              	.LVL735:
 4935              	.L532:
2512:Middlewares/Third_Party/FatFs/src/ff.c **** 		fno->fname[j] = 0;
 4936              		.loc 1 2512 0
 4937 00b2 34B9     		cbnz	r4, .L524
2513:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!dp->dir[DIR_NTres]) j = 0;	/* Altname is no longer needed if neither LFN nor case info is ex
 4938              		.loc 1 2513 0
 4939 00b4 AB18     		adds	r3, r5, r2
 4940              	.LVL736:
 4941 00b6 0021     		movs	r1, #0
 4942 00b8 9975     		strb	r1, [r3, #22]
2514:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 4943              		.loc 1 2514 0
 4944 00ba 336A     		ldr	r3, [r6, #32]
 4945 00bc 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 4946 00be 03B9     		cbnz	r3, .L524
 4947 00c0 0A46     		mov	r2, r1
 4948              	.LVL737:
 4949              	.L524:
2516:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 203


 4950              		.loc 1 2516 0
 4951 00c2 2A44     		add	r2, r2, r5
 4952              	.LVL738:
 4953 00c4 0023     		movs	r3, #0
 4954 00c6 5372     		strb	r3, [r2, #9]
2530:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->fsize = ld_dword(dp->dir + DIR_FileSize);	/* Size */
 4955              		.loc 1 2530 0
 4956 00c8 336A     		ldr	r3, [r6, #32]
 4957 00ca DB7A     		ldrb	r3, [r3, #11]	@ zero_extendqisi2
 4958 00cc 2B72     		strb	r3, [r5, #8]
2531:Middlewares/Third_Party/FatFs/src/ff.c **** 	tm = ld_dword(dp->dir + DIR_ModTime);			/* Timestamp */
 4959              		.loc 1 2531 0
 4960 00ce 306A     		ldr	r0, [r6, #32]
 4961 00d0 1C30     		adds	r0, r0, #28
 4962 00d2 FFF7FEFF 		bl	ld_dword
 4963              	.LVL739:
 4964 00d6 2860     		str	r0, [r5]
2532:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->ftime = (WORD)tm; fno->fdate = (WORD)(tm >> 16);
 4965              		.loc 1 2532 0
 4966 00d8 306A     		ldr	r0, [r6, #32]
 4967 00da 1630     		adds	r0, r0, #22
 4968 00dc FFF7FEFF 		bl	ld_dword
 4969              	.LVL740:
2533:Middlewares/Third_Party/FatFs/src/ff.c **** }
 4970              		.loc 1 2533 0
 4971 00e0 E880     		strh	r0, [r5, #6]	@ movhi
 4972 00e2 000C     		lsrs	r0, r0, #16
 4973              	.LVL741:
 4974 00e4 A880     		strh	r0, [r5, #4]	@ movhi
 4975              	.LVL742:
 4976              	.L509:
 4977 00e6 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4978              		.cfi_endproc
 4979              	.LFE179:
 4981              		.section	.text.cmp_lfn,"ax",%progbits
 4982              		.align	1
 4983              		.syntax unified
 4984              		.thumb
 4985              		.thumb_func
 4986              		.fpu fpv5-sp-d16
 4988              	cmp_lfn:
 4989              	.LFB170:
1681:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, s;
 4990              		.loc 1 1681 0
 4991              		.cfi_startproc
 4992              		@ args = 0, pretend = 0, frame = 0
 4993              		@ frame_needed = 0, uses_anonymous_args = 0
 4994              	.LVL743:
 4995 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 4996              	.LCFI51:
 4997              		.cfi_def_cfa_offset 32
 4998              		.cfi_offset 4, -32
 4999              		.cfi_offset 5, -28
 5000              		.cfi_offset 6, -24
 5001              		.cfi_offset 7, -20
 5002              		.cfi_offset 8, -16
 5003              		.cfi_offset 9, -12
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 204


 5004              		.cfi_offset 10, -8
 5005              		.cfi_offset 14, -4
 5006 0004 8146     		mov	r9, r0
 5007 0006 8846     		mov	r8, r1
1686:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5008              		.loc 1 1686 0
 5009 0008 01F11A00 		add	r0, r1, #26
 5010              	.LVL744:
 5011 000c FFF7FEFF 		bl	ld_word
 5012              	.LVL745:
 5013 0010 B0BB     		cbnz	r0, .L542
1688:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5014              		.loc 1 1688 0
 5015 0012 98F80050 		ldrb	r5, [r8]	@ zero_extendqisi2
 5016 0016 05F03F05 		and	r5, r5, #63
 5017 001a 013D     		subs	r5, r5, #1
 5018 001c 05EB4503 		add	r3, r5, r5, lsl #1
 5019 0020 05EB8305 		add	r5, r5, r3, lsl #2
 5020              	.LVL746:
1690:Middlewares/Third_Party/FatFs/src/ff.c **** 		uc = ld_word(dir + LfnOfs[s]);		/* Pick an LFN character */
 5021              		.loc 1 1690 0
 5022 0024 0127     		movs	r7, #1
 5023 0026 0024     		movs	r4, #0
 5024 0028 04E0     		b	.L538
 5025              	.LVL747:
 5026              	.L539:
1698:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 5027              		.loc 1 1698 0
 5028 002a 4FF6FF73 		movw	r3, #65535
 5029 002e 9842     		cmp	r0, r3
 5030 0030 2FD1     		bne	.L545
 5031              	.LVL748:
 5032              	.L540:
1690:Middlewares/Third_Party/FatFs/src/ff.c **** 		uc = ld_word(dir + LfnOfs[s]);		/* Pick an LFN character */
 5033              		.loc 1 1690 0 discriminator 2
 5034 0032 0134     		adds	r4, r4, #1
 5035              	.LVL749:
 5036              	.L538:
1690:Middlewares/Third_Party/FatFs/src/ff.c **** 		uc = ld_word(dir + LfnOfs[s]);		/* Pick an LFN character */
 5037              		.loc 1 1690 0 is_stmt 0 discriminator 1
 5038 0034 0C2C     		cmp	r4, #12
 5039 0036 17D8     		bhi	.L550
1691:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (wc) {
 5040              		.loc 1 1691 0 is_stmt 1
 5041 0038 1C4B     		ldr	r3, .L551
 5042 003a 185D     		ldrb	r0, [r3, r4]	@ zero_extendqisi2
 5043 003c 4044     		add	r0, r0, r8
 5044 003e FFF7FEFF 		bl	ld_word
 5045              	.LVL750:
 5046 0042 0646     		mov	r6, r0
 5047              	.LVL751:
1692:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i >= _MAX_LFN || ff_wtoupper(uc) != ff_wtoupper(lfnbuf[i++])) {	/* Compare it */
 5048              		.loc 1 1692 0
 5049 0044 002F     		cmp	r7, #0
 5050 0046 F0D0     		beq	.L539
1693:Middlewares/Third_Party/FatFs/src/ff.c **** 				return 0;					/* Not matched */
 5051              		.loc 1 1693 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 205


 5052 0048 FE2D     		cmp	r5, #254
 5053 004a 1CD8     		bhi	.L543
1693:Middlewares/Third_Party/FatFs/src/ff.c **** 				return 0;					/* Not matched */
 5054              		.loc 1 1693 0 is_stmt 0 discriminator 1
 5055 004c FFF7FEFF 		bl	ff_wtoupper
 5056              	.LVL752:
 5057 0050 0746     		mov	r7, r0
 5058              	.LVL753:
 5059 0052 05F1010A 		add	r10, r5, #1
 5060              	.LVL754:
 5061 0056 39F81500 		ldrh	r0, [r9, r5, lsl #1]
 5062 005a FFF7FEFF 		bl	ff_wtoupper
 5063              	.LVL755:
 5064 005e 8742     		cmp	r7, r0
 5065 0060 14D1     		bne	.L544
1696:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 5066              		.loc 1 1696 0 is_stmt 1
 5067 0062 3746     		mov	r7, r6
1693:Middlewares/Third_Party/FatFs/src/ff.c **** 				return 0;					/* Not matched */
 5068              		.loc 1 1693 0
 5069 0064 5546     		mov	r5, r10
 5070 0066 E4E7     		b	.L540
 5071              	.LVL756:
 5072              	.L550:
1702:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5073              		.loc 1 1702 0
 5074 0068 98F80030 		ldrb	r3, [r8]	@ zero_extendqisi2
 5075 006c 13F0400F 		tst	r3, #64
 5076 0070 12D0     		beq	.L546
1702:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5077              		.loc 1 1702 0 is_stmt 0 discriminator 1
 5078 0072 A7B1     		cbz	r7, .L547
1702:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5079              		.loc 1 1702 0 discriminator 2
 5080 0074 39F81530 		ldrh	r3, [r9, r5, lsl #1]
 5081 0078 A3B9     		cbnz	r3, .L548
1704:Middlewares/Third_Party/FatFs/src/ff.c **** }
 5082              		.loc 1 1704 0 is_stmt 1
 5083 007a 0120     		movs	r0, #1
 5084 007c BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 5085              	.LVL757:
 5086              	.L542:
1686:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5087              		.loc 1 1686 0
 5088 0080 0020     		movs	r0, #0
 5089 0082 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 5090              	.LVL758:
 5091              	.L543:
1694:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5092              		.loc 1 1694 0
 5093 0086 0020     		movs	r0, #0
 5094              	.LVL759:
 5095 0088 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 5096              	.LVL760:
 5097              	.L544:
 5098 008c 0020     		movs	r0, #0
 5099 008e BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 206


 5100              	.LVL761:
 5101              	.L545:
1698:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 5102              		.loc 1 1698 0
 5103 0092 0020     		movs	r0, #0
 5104              	.LVL762:
 5105 0094 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 5106              	.LVL763:
 5107              	.L546:
1704:Middlewares/Third_Party/FatFs/src/ff.c **** }
 5108              		.loc 1 1704 0
 5109 0098 0120     		movs	r0, #1
 5110 009a BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 5111              	.LVL764:
 5112              	.L547:
 5113 009e 0120     		movs	r0, #1
 5114 00a0 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 5115              	.LVL765:
 5116              	.L548:
1702:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5117              		.loc 1 1702 0
 5118 00a4 0020     		movs	r0, #0
1705:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5119              		.loc 1 1705 0
 5120 00a6 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 5121              	.LVL766:
 5122              	.L552:
 5123 00aa 00BF     		.align	2
 5124              	.L551:
 5125 00ac 00000000 		.word	.LANCHOR1
 5126              		.cfi_endproc
 5127              	.LFE170:
 5129              		.section	.text.dir_find,"ax",%progbits
 5130              		.align	1
 5131              		.syntax unified
 5132              		.thumb
 5133              		.thumb_func
 5134              		.fpu fpv5-sp-d16
 5136              	dir_find:
 5137              	.LFB176:
2213:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 5138              		.loc 1 2213 0
 5139              		.cfi_startproc
 5140              		@ args = 0, pretend = 0, frame = 0
 5141              		@ frame_needed = 0, uses_anonymous_args = 0
 5142              	.LVL767:
 5143 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 5144              	.LCFI52:
 5145              		.cfi_def_cfa_offset 32
 5146              		.cfi_offset 3, -32
 5147              		.cfi_offset 4, -28
 5148              		.cfi_offset 5, -24
 5149              		.cfi_offset 6, -20
 5150              		.cfi_offset 7, -16
 5151              		.cfi_offset 8, -12
 5152              		.cfi_offset 9, -8
 5153              		.cfi_offset 14, -4
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 207


 5154 0004 0446     		mov	r4, r0
2215:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE c;
 5155              		.loc 1 2215 0
 5156 0006 D0F80080 		ldr	r8, [r0]
 5157              	.LVL768:
2221:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) return res;
 5158              		.loc 1 2221 0
 5159 000a 0021     		movs	r1, #0
 5160 000c FFF7FEFF 		bl	dir_sdi
 5161              	.LVL769:
2222:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 5162              		.loc 1 2222 0
 5163 0010 0646     		mov	r6, r0
 5164 0012 0028     		cmp	r0, #0
 5165 0014 64D1     		bne	.L554
 5166              	.LVL770:
2245:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 5167              		.loc 1 2245 0
 5168 0016 4FF0FF33 		mov	r3, #-1
 5169 001a 2363     		str	r3, [r4, #48]
 5170 001c 4FF0FF09 		mov	r9, #255
 5171 0020 4F46     		mov	r7, r9
 5172 0022 0AE0     		b	.L562
 5173              	.LVL771:
 5174              	.L555:
2255:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 5175              		.loc 1 2255 0
 5176 0024 4FF0FF33 		mov	r3, #-1
 5177              	.LVL772:
 5178 0028 2363     		str	r3, [r4, #48]
 5179 002a FF27     		movs	r7, #255
 5180              	.LVL773:
 5181              	.L557:
2277:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (res == FR_OK);
 5182              		.loc 1 2277 0
 5183 002c 0021     		movs	r1, #0
 5184 002e 2046     		mov	r0, r4
 5185 0030 FFF7FEFF 		bl	dir_next
 5186              	.LVL774:
2278:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5187              		.loc 1 2278 0
 5188 0034 0646     		mov	r6, r0
 5189 0036 0028     		cmp	r0, #0
 5190 0038 52D1     		bne	.L554
 5191              	.LVL775:
 5192              	.L562:
2248:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) break;
 5193              		.loc 1 2248 0
 5194 003a E169     		ldr	r1, [r4, #28]
 5195 003c 4046     		mov	r0, r8
 5196              	.LVL776:
 5197 003e FFF7FEFF 		bl	move_window
 5198              	.LVL777:
2249:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = dp->dir[DIR_Name];
 5199              		.loc 1 2249 0
 5200 0042 0646     		mov	r6, r0
 5201 0044 0028     		cmp	r0, #0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 208


 5202 0046 4BD1     		bne	.L554
2250:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
 5203              		.loc 1 2250 0
 5204 0048 256A     		ldr	r5, [r4, #32]
 5205 004a 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 5206              	.LVL778:
2251:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
 5207              		.loc 1 2251 0
 5208 004c 002B     		cmp	r3, #0
 5209 004e 46D0     		beq	.L563
2253:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == DDEM || ((a & AM_VOL) && a != AM_LFN)) {	/* An entry without valid data */
 5210              		.loc 1 2253 0
 5211 0050 E97A     		ldrb	r1, [r5, #11]	@ zero_extendqisi2
 5212 0052 01F03F02 		and	r2, r1, #63
 5213              	.LVL779:
 5214 0056 A271     		strb	r2, [r4, #6]
2254:Middlewares/Third_Party/FatFs/src/ff.c **** 			ord = 0xFF; dp->blk_ofs = 0xFFFFFFFF;	/* Reset LFN sequence */
 5215              		.loc 1 2254 0
 5216 0058 E52B     		cmp	r3, #229
 5217 005a E3D0     		beq	.L555
2254:Middlewares/Third_Party/FatFs/src/ff.c **** 			ord = 0xFF; dp->blk_ofs = 0xFFFFFFFF;	/* Reset LFN sequence */
 5218              		.loc 1 2254 0 is_stmt 0 discriminator 1
 5219 005c 11F0080F 		tst	r1, #8
 5220 0060 01D0     		beq	.L556
2254:Middlewares/Third_Party/FatFs/src/ff.c **** 			ord = 0xFF; dp->blk_ofs = 0xFFFFFFFF;	/* Reset LFN sequence */
 5221              		.loc 1 2254 0 discriminator 2
 5222 0062 0F2A     		cmp	r2, #15
 5223 0064 DED1     		bne	.L555
 5224              	.L556:
2257:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!(dp->fn[NSFLAG] & NS_NOLFN)) {
 5225              		.loc 1 2257 0 is_stmt 1
 5226 0066 0F2A     		cmp	r2, #15
 5227 0068 16D0     		beq	.L568
2268:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!(dp->fn[NSFLAG] & NS_LOSS) && !mem_cmp(dp->dir, dp->fn, 11)) break;	/* SFN matched? */
 5228              		.loc 1 2268 0
 5229 006a 27B9     		cbnz	r7, .L560
2268:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!(dp->fn[NSFLAG] & NS_LOSS) && !mem_cmp(dp->dir, dp->fn, 11)) break;	/* SFN matched? */
 5230              		.loc 1 2268 0 is_stmt 0 discriminator 1
 5231 006c 2846     		mov	r0, r5
 5232              	.LVL780:
 5233 006e FFF7FEFF 		bl	sum_sfn
 5234              	.LVL781:
 5235 0072 8145     		cmp	r9, r0
 5236 0074 34D0     		beq	.L554
 5237              	.L560:
2269:Middlewares/Third_Party/FatFs/src/ff.c **** 				ord = 0xFF; dp->blk_ofs = 0xFFFFFFFF;	/* Reset LFN sequence */
 5238              		.loc 1 2269 0 is_stmt 1
 5239 0076 94F82F30 		ldrb	r3, [r4, #47]	@ zero_extendqisi2
 5240 007a 13F0010F 		tst	r3, #1
 5241 007e 06D1     		bne	.L561
2269:Middlewares/Third_Party/FatFs/src/ff.c **** 				ord = 0xFF; dp->blk_ofs = 0xFFFFFFFF;	/* Reset LFN sequence */
 5242              		.loc 1 2269 0 is_stmt 0 discriminator 1
 5243 0080 0B22     		movs	r2, #11
 5244 0082 04F12401 		add	r1, r4, #36
 5245 0086 2846     		mov	r0, r5
 5246 0088 FFF7FEFF 		bl	mem_cmp
 5247              	.LVL782:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 209


 5248 008c 40B3     		cbz	r0, .L554
 5249              	.L561:
 5250              	.LVL783:
2270:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5251              		.loc 1 2270 0 is_stmt 1
 5252 008e 4FF0FF33 		mov	r3, #-1
 5253 0092 2363     		str	r3, [r4, #48]
 5254 0094 FF27     		movs	r7, #255
 5255 0096 C9E7     		b	.L557
 5256              	.LVL784:
 5257              	.L568:
2258:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (c & LLEF) {		/* Is it start of LFN sequence? */
 5258              		.loc 1 2258 0
 5259 0098 94F82F20 		ldrb	r2, [r4, #47]	@ zero_extendqisi2
 5260              	.LVL785:
 5261 009c 12F0400F 		tst	r2, #64
 5262 00a0 C4D1     		bne	.L557
2259:Middlewares/Third_Party/FatFs/src/ff.c **** 						sum = dp->dir[LDIR_Chksum];
 5263              		.loc 1 2259 0
 5264 00a2 13F0400F 		tst	r3, #64
 5265 00a6 06D0     		beq	.L559
2260:Middlewares/Third_Party/FatFs/src/ff.c **** 						c &= (BYTE)~LLEF; ord = c;	/* LFN start order */
 5266              		.loc 1 2260 0
 5267 00a8 95F80D90 		ldrb	r9, [r5, #13]	@ zero_extendqisi2
 5268              	.LVL786:
2261:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->blk_ofs = dp->dptr;	/* Start offset of LFN */
 5269              		.loc 1 2261 0
 5270 00ac 03F0BF03 		and	r3, r3, #191
 5271              	.LVL787:
2262:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 5272              		.loc 1 2262 0
 5273 00b0 6269     		ldr	r2, [r4, #20]
 5274 00b2 2263     		str	r2, [r4, #48]
2261:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->blk_ofs = dp->dptr;	/* Start offset of LFN */
 5275              		.loc 1 2261 0
 5276 00b4 1F46     		mov	r7, r3
 5277              	.LVL788:
 5278              	.L559:
2265:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 5279              		.loc 1 2265 0
 5280 00b6 BB42     		cmp	r3, r7
 5281 00b8 01D0     		beq	.L569
 5282 00ba FF27     		movs	r7, #255
 5283              	.LVL789:
 5284 00bc B6E7     		b	.L557
 5285              	.LVL790:
 5286              	.L569:
2265:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 5287              		.loc 1 2265 0 is_stmt 0 discriminator 1
 5288 00be 6B7B     		ldrb	r3, [r5, #13]	@ zero_extendqisi2
 5289              	.LVL791:
 5290 00c0 9945     		cmp	r9, r3
 5291 00c2 01D0     		beq	.L570
2265:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 5292              		.loc 1 2265 0
 5293 00c4 FF27     		movs	r7, #255
 5294              	.LVL792:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 210


 5295 00c6 B1E7     		b	.L557
 5296              	.LVL793:
 5297              	.L570:
2265:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 5298              		.loc 1 2265 0 discriminator 3
 5299 00c8 2946     		mov	r1, r5
 5300 00ca D8F80C00 		ldr	r0, [r8, #12]
 5301              	.LVL794:
 5302 00ce FFF7FEFF 		bl	cmp_lfn
 5303              	.LVL795:
 5304 00d2 10B1     		cbz	r0, .L566
2265:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 5305              		.loc 1 2265 0 discriminator 5
 5306 00d4 013F     		subs	r7, r7, #1
 5307              	.LVL796:
 5308 00d6 FFB2     		uxtb	r7, r7
 5309 00d8 A8E7     		b	.L557
 5310              	.LVL797:
 5311              	.L566:
2265:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 5312              		.loc 1 2265 0
 5313 00da FF27     		movs	r7, #255
 5314              	.LVL798:
 5315 00dc A6E7     		b	.L557
 5316              	.LVL799:
 5317              	.L563:
2251:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
 5318              		.loc 1 2251 0 is_stmt 1
 5319 00de 0426     		movs	r6, #4
 5320              	.LVL800:
 5321              	.L554:
2281:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5322              		.loc 1 2281 0
 5323 00e0 3046     		mov	r0, r6
 5324 00e2 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 5325              		.cfi_endproc
 5326              	.LFE176:
 5328              		.section	.text.follow_path,"ax",%progbits
 5329              		.align	1
 5330              		.syntax unified
 5331              		.thumb
 5332              		.thumb_func
 5333              		.fpu fpv5-sp-d16
 5335              	follow_path:
 5336              	.LFB183:
2817:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 5337              		.loc 1 2817 0
 5338              		.cfi_startproc
 5339              		@ args = 0, pretend = 0, frame = 8
 5340              		@ frame_needed = 0, uses_anonymous_args = 0
 5341              	.LVL801:
 5342 0000 70B5     		push	{r4, r5, r6, lr}
 5343              	.LCFI53:
 5344              		.cfi_def_cfa_offset 16
 5345              		.cfi_offset 4, -16
 5346              		.cfi_offset 5, -12
 5347              		.cfi_offset 6, -8
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 211


 5348              		.cfi_offset 14, -4
 5349 0002 82B0     		sub	sp, sp, #8
 5350              	.LCFI54:
 5351              		.cfi_def_cfa_offset 24
 5352 0004 0446     		mov	r4, r0
 5353 0006 0191     		str	r1, [sp, #4]
 5354              	.LVL802:
2821:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5355              		.loc 1 2821 0
 5356 0008 0568     		ldr	r5, [r0]
 5357              	.LVL803:
2825:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->sclust = fs->cdir;				/* Start from current directory */
 5358              		.loc 1 2825 0
 5359 000a 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 5360 000c 2F2B     		cmp	r3, #47
 5361 000e 18BF     		it	ne
 5362 0010 5C2B     		cmpne	r3, #92
 5363 0012 10D0     		beq	.L572
2826:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else
 5364              		.loc 1 2826 0
 5365 0014 EB69     		ldr	r3, [r5, #28]
 5366 0016 8360     		str	r3, [r0, #8]
 5367              	.L573:
2850:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->fn[NSFLAG] = NS_NONAME;
 5368              		.loc 1 2850 0
 5369 0018 019B     		ldr	r3, [sp, #4]
 5370 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5371 001c 1F2B     		cmp	r3, #31
 5372 001e 2BD8     		bhi	.L575
2851:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_sdi(dp, 0);
 5373              		.loc 1 2851 0
 5374 0020 8023     		movs	r3, #128
 5375 0022 84F82F30 		strb	r3, [r4, #47]
2852:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5376              		.loc 1 2852 0
 5377 0026 0021     		movs	r1, #0
 5378              	.LVL804:
 5379 0028 2046     		mov	r0, r4
 5380              	.LVL805:
 5381 002a FFF7FEFF 		bl	dir_sdi
 5382              	.LVL806:
 5383 002e 0646     		mov	r6, r0
 5384              	.LVL807:
 5385 0030 3AE0     		b	.L576
 5386              	.LVL808:
 5387              	.L574:
2830:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->sclust = 0;					/* Start from root directory */
 5388              		.loc 1 2830 0 discriminator 2
 5389 0032 0133     		adds	r3, r3, #1
 5390 0034 0193     		str	r3, [sp, #4]
 5391              	.L572:
2830:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->sclust = 0;					/* Start from root directory */
 5392              		.loc 1 2830 0 is_stmt 0 discriminator 1
 5393 0036 019B     		ldr	r3, [sp, #4]
 5394 0038 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5395 003a 5C2A     		cmp	r2, #92
 5396 003c 18BF     		it	ne
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 212


 5397 003e 2F2A     		cmpne	r2, #47
 5398 0040 F7D0     		beq	.L574
2831:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 5399              		.loc 1 2831 0 is_stmt 1
 5400 0042 0023     		movs	r3, #0
 5401 0044 A360     		str	r3, [r4, #8]
 5402 0046 E7E7     		b	.L573
 5403              	.LVL809:
 5404              	.L578:
2867:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 5405              		.loc 1 2867 0
 5406 0048 13F0040F 		tst	r3, #4
 5407 004c 01D1     		bne	.L585
 5408 004e 0526     		movs	r6, #5
 5409 0050 2AE0     		b	.L576
 5410              	.L585:
2858:Middlewares/Third_Party/FatFs/src/ff.c **** 			ns = dp->fn[NSFLAG];
 5411              		.loc 1 2858 0
 5412 0052 0646     		mov	r6, r0
 5413 0054 28E0     		b	.L576
 5414              	.L577:
2872:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Get into the sub-directory */
 5415              		.loc 1 2872 0
 5416 0056 13F0040F 		tst	r3, #4
 5417 005a 2AD1     		bne	.L582
2874:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_NO_PATH; break;
 5418              		.loc 1 2874 0
 5419 005c A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 5420              	.LVL810:
 5421 005e 13F0100F 		tst	r3, #16
 5422 0062 28D0     		beq	.L583
2888:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5423              		.loc 1 2888 0
 5424 0064 05F13C01 		add	r1, r5, #60
 5425 0068 6369     		ldr	r3, [r4, #20]
 5426 006a C3F30803 		ubfx	r3, r3, #0, #9
 5427 006e 1944     		add	r1, r1, r3
 5428 0070 2846     		mov	r0, r5
 5429              	.LVL811:
 5430 0072 FFF7FEFF 		bl	ld_clust
 5431              	.LVL812:
 5432 0076 A060     		str	r0, [r4, #8]
 5433              	.L575:
2856:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 5434              		.loc 1 2856 0
 5435 0078 01A9     		add	r1, sp, #4
 5436 007a 2046     		mov	r0, r4
 5437 007c FFF7FEFF 		bl	create_name
 5438              	.LVL813:
2857:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_find(dp);				/* Find an object with the segment name */
 5439              		.loc 1 2857 0
 5440 0080 0646     		mov	r6, r0
 5441 0082 88B9     		cbnz	r0, .L576
2858:Middlewares/Third_Party/FatFs/src/ff.c **** 			ns = dp->fn[NSFLAG];
 5442              		.loc 1 2858 0
 5443 0084 2046     		mov	r0, r4
 5444              	.LVL814:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 213


 5445 0086 FFF7FEFF 		bl	dir_find
 5446              	.LVL815:
2859:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) {				/* Failed to find the object */
 5447              		.loc 1 2859 0
 5448 008a 94F82F30 		ldrb	r3, [r4, #47]	@ zero_extendqisi2
 5449              	.LVL816:
2860:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) {	/* Object is not found */
 5450              		.loc 1 2860 0
 5451 008e 0028     		cmp	r0, #0
 5452 0090 E1D0     		beq	.L577
2861:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (_FS_RPATH && (ns & NS_DOT)) {	/* If dot entry is not exist, stay there */
 5453              		.loc 1 2861 0
 5454 0092 0428     		cmp	r0, #4
 5455 0094 0BD1     		bne	.L580
2862:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (!(ns & NS_LAST)) continue;	/* Continue to follow if not last segment */
 5456              		.loc 1 2862 0
 5457 0096 13F0200F 		tst	r3, #32
 5458 009a D5D0     		beq	.L578
2863:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->fn[NSFLAG] = NS_NONAME;
 5459              		.loc 1 2863 0
 5460 009c 13F0040F 		tst	r3, #4
 5461 00a0 EAD0     		beq	.L575
2864:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = FR_OK;
 5462              		.loc 1 2864 0
 5463 00a2 8023     		movs	r3, #128
 5464              	.LVL817:
 5465 00a4 84F82F30 		strb	r3, [r4, #47]
 5466              	.LVL818:
 5467              	.L576:
2894:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5468              		.loc 1 2894 0
 5469 00a8 3046     		mov	r0, r6
 5470 00aa 02B0     		add	sp, sp, #8
 5471              	.LCFI55:
 5472              		.cfi_remember_state
 5473              		.cfi_def_cfa_offset 16
 5474              		@ sp needed
 5475 00ac 70BD     		pop	{r4, r5, r6, pc}
 5476              	.LVL819:
 5477              	.L580:
 5478              	.LCFI56:
 5479              		.cfi_restore_state
2858:Middlewares/Third_Party/FatFs/src/ff.c **** 			ns = dp->fn[NSFLAG];
 5480              		.loc 1 2858 0
 5481 00ae 0646     		mov	r6, r0
 5482 00b0 FAE7     		b	.L576
 5483              	.L582:
 5484 00b2 0646     		mov	r6, r0
 5485 00b4 F8E7     		b	.L576
 5486              	.LVL820:
 5487              	.L583:
2875:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5488              		.loc 1 2875 0
 5489 00b6 0526     		movs	r6, #5
 5490 00b8 F6E7     		b	.L576
 5491              		.cfi_endproc
 5492              	.LFE183:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 214


 5494              		.section	.text.dir_register,"ax",%progbits
 5495              		.align	1
 5496              		.syntax unified
 5497              		.thumb
 5498              		.thumb_func
 5499              		.fpu fpv5-sp-d16
 5501              	dir_register:
 5502              	.LFB177:
2295:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 5503              		.loc 1 2295 0
 5504              		.cfi_startproc
 5505              		@ args = 0, pretend = 0, frame = 16
 5506              		@ frame_needed = 0, uses_anonymous_args = 0
 5507              	.LVL821:
 5508 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 5509              	.LCFI57:
 5510              		.cfi_def_cfa_offset 28
 5511              		.cfi_offset 4, -28
 5512              		.cfi_offset 5, -24
 5513              		.cfi_offset 6, -20
 5514              		.cfi_offset 7, -16
 5515              		.cfi_offset 8, -12
 5516              		.cfi_offset 9, -8
 5517              		.cfi_offset 14, -4
 5518 0004 85B0     		sub	sp, sp, #20
 5519              	.LCFI58:
 5520              		.cfi_def_cfa_offset 48
2297:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
 5521              		.loc 1 2297 0
 5522 0006 0568     		ldr	r5, [r0]
 5523              	.LVL822:
2303:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (nlen = 0; fs->lfnbuf[nlen]; nlen++) ;	/* Get lfn length */
 5524              		.loc 1 2303 0
 5525 0008 90F82F30 		ldrb	r3, [r0, #47]	@ zero_extendqisi2
 5526 000c 13F0A00F 		tst	r3, #160
 5527 0010 05D0     		beq	.L601
 5528 0012 4FF00609 		mov	r9, #6
 5529              	.LVL823:
 5530              	.L587:
2384:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5531              		.loc 1 2384 0
 5532 0016 4846     		mov	r0, r9
 5533 0018 05B0     		add	sp, sp, #20
 5534              	.LCFI59:
 5535              		.cfi_remember_state
 5536              		.cfi_def_cfa_offset 28
 5537              		@ sp needed
 5538 001a BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 5539              	.LVL824:
 5540              	.L601:
 5541              	.LCFI60:
 5542              		.cfi_restore_state
 5543 001e 0024     		movs	r4, #0
 5544 0020 00E0     		b	.L588
 5545              	.LVL825:
 5546              	.L589:
2304:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 215


 5547              		.loc 1 2304 0 discriminator 3
 5548 0022 0134     		adds	r4, r4, #1
 5549              	.LVL826:
 5550              	.L588:
2304:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5551              		.loc 1 2304 0 is_stmt 0 discriminator 1
 5552 0024 EB68     		ldr	r3, [r5, #12]
 5553 0026 33F81430 		ldrh	r3, [r3, r4, lsl #1]
 5554 002a 002B     		cmp	r3, #0
 5555 002c F9D1     		bne	.L589
 5556 002e 0646     		mov	r6, r0
2335:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (sn[NSFLAG] & NS_LOSS) {			/* When LFN is out of 8.3 format, generate a numbered name */
 5557              		.loc 1 2335 0 is_stmt 1
 5558 0030 00F12407 		add	r7, r0, #36
 5559 0034 0C22     		movs	r2, #12
 5560 0036 3946     		mov	r1, r7
 5561 0038 01A8     		add	r0, sp, #4
 5562              	.LVL827:
 5563 003a FFF7FEFF 		bl	mem_cpy
 5564              	.LVL828:
2336:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->fn[NSFLAG] = NS_NOLFN;		/* Find only SFN */
 5565              		.loc 1 2336 0
 5566 003e 9DF80F30 		ldrb	r3, [sp, #15]	@ zero_extendqisi2
 5567 0042 13F0010F 		tst	r3, #1
 5568 0046 1FD0     		beq	.L590
2337:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (n = 1; n < 100; n++) {
 5569              		.loc 1 2337 0
 5570 0048 4023     		movs	r3, #64
 5571 004a 86F82F30 		strb	r3, [r6, #47]
 5572              	.LVL829:
2338:Middlewares/Third_Party/FatFs/src/ff.c **** 			gen_numname(dp->fn, sn, fs->lfnbuf, n);	/* Generate a numbered name */
 5573              		.loc 1 2338 0
 5574 004e 4FF00108 		mov	r8, #1
 5575              	.LVL830:
 5576              	.L591:
2338:Middlewares/Third_Party/FatFs/src/ff.c **** 			gen_numname(dp->fn, sn, fs->lfnbuf, n);	/* Generate a numbered name */
 5577              		.loc 1 2338 0 is_stmt 0 discriminator 1
 5578 0052 B8F1630F 		cmp	r8, #99
 5579 0056 0DD8     		bhi	.L592
2339:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_find(dp);				/* Check if the name collides with existing SFN */
 5580              		.loc 1 2339 0 is_stmt 1
 5581 0058 4346     		mov	r3, r8
 5582 005a EA68     		ldr	r2, [r5, #12]
 5583 005c 01A9     		add	r1, sp, #4
 5584 005e 3846     		mov	r0, r7
 5585 0060 FFF7FEFF 		bl	gen_numname
 5586              	.LVL831:
2340:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 5587              		.loc 1 2340 0
 5588 0064 3046     		mov	r0, r6
 5589 0066 FFF7FEFF 		bl	dir_find
 5590              	.LVL832:
2341:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 5591              		.loc 1 2341 0
 5592 006a 8146     		mov	r9, r0
 5593 006c 10B9     		cbnz	r0, .L592
2338:Middlewares/Third_Party/FatFs/src/ff.c **** 			gen_numname(dp->fn, sn, fs->lfnbuf, n);	/* Generate a numbered name */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 216


 5594              		.loc 1 2338 0 discriminator 2
 5595 006e 08F10108 		add	r8, r8, #1
 5596              	.LVL833:
 5597 0072 EEE7     		b	.L591
 5598              	.LVL834:
 5599              	.L592:
2343:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_NO_FILE) return res;	/* Abort if the result is other than 'not collided' */
 5600              		.loc 1 2343 0
 5601 0074 B8F1640F 		cmp	r8, #100
 5602 0078 5ED0     		beq	.L598
2344:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->fn[NSFLAG] = sn[NSFLAG];
 5603              		.loc 1 2344 0
 5604 007a B9F1040F 		cmp	r9, #4
 5605 007e CAD1     		bne	.L587
2345:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 5606              		.loc 1 2345 0
 5607 0080 9DF80F30 		ldrb	r3, [sp, #15]	@ zero_extendqisi2
 5608 0084 86F82F30 		strb	r3, [r6, #47]
 5609              	.LVL835:
 5610              	.L590:
2349:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_alloc(dp, nent);		/* Allocate entries */
 5611              		.loc 1 2349 0
 5612 0088 9DF80F30 		ldrb	r3, [sp, #15]	@ zero_extendqisi2
 5613 008c 13F0020F 		tst	r3, #2
 5614 0090 2AD0     		beq	.L599
2349:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_alloc(dp, nent);		/* Allocate entries */
 5615              		.loc 1 2349 0 is_stmt 0 discriminator 1
 5616 0092 0C34     		adds	r4, r4, #12
 5617              	.LVL836:
 5618 0094 2A4B     		ldr	r3, .L603
 5619 0096 A3FB0434 		umull	r3, r4, r3, r4
 5620              	.LVL837:
 5621 009a A408     		lsrs	r4, r4, #2
 5622 009c 0134     		adds	r4, r4, #1
 5623              	.L594:
 5624              	.LVL838:
2350:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK && --nent) {	/* Set LFN entry if needed */
 5625              		.loc 1 2350 0 is_stmt 1 discriminator 4
 5626 009e 2146     		mov	r1, r4
 5627 00a0 3046     		mov	r0, r6
 5628 00a2 FFF7FEFF 		bl	dir_alloc
 5629              	.LVL839:
2351:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_sdi(dp, dp->dptr - nent * SZDIRE);
 5630              		.loc 1 2351 0 discriminator 4
 5631 00a6 8146     		mov	r9, r0
 5632 00a8 08B9     		cbnz	r0, .L595
 5633              	.LVL840:
2351:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_sdi(dp, dp->dptr - nent * SZDIRE);
 5634              		.loc 1 2351 0 is_stmt 0 discriminator 1
 5635 00aa 013C     		subs	r4, r4, #1
 5636              	.LVL841:
 5637 00ac 1ED1     		bne	.L602
 5638              	.L595:
 5639              	.LVL842:
2371:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(fs, dp->sect);
 5640              		.loc 1 2371 0 is_stmt 1
 5641 00ae B9F1000F 		cmp	r9, #0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 217


 5642 00b2 B0D1     		bne	.L587
2372:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
 5643              		.loc 1 2372 0
 5644 00b4 F169     		ldr	r1, [r6, #28]
 5645 00b6 2846     		mov	r0, r5
 5646 00b8 FFF7FEFF 		bl	move_window
 5647              	.LVL843:
2373:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(dp->dir, 0, SZDIRE);	/* Clean the entry */
 5648              		.loc 1 2373 0
 5649 00bc 8146     		mov	r9, r0
 5650 00be 0028     		cmp	r0, #0
 5651 00c0 A9D1     		bne	.L587
2374:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_cpy(dp->dir + DIR_Name, dp->fn, 11);	/* Put SFN */
 5652              		.loc 1 2374 0
 5653 00c2 2022     		movs	r2, #32
 5654 00c4 0021     		movs	r1, #0
 5655 00c6 306A     		ldr	r0, [r6, #32]
 5656              	.LVL844:
 5657 00c8 FFF7FEFF 		bl	mem_set
 5658              	.LVL845:
2375:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0
 5659              		.loc 1 2375 0
 5660 00cc 0B22     		movs	r2, #11
 5661 00ce 3946     		mov	r1, r7
 5662 00d0 306A     		ldr	r0, [r6, #32]
 5663 00d2 FFF7FEFF 		bl	mem_cpy
 5664              	.LVL846:
2377:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 5665              		.loc 1 2377 0
 5666 00d6 326A     		ldr	r2, [r6, #32]
 5667 00d8 96F82F30 		ldrb	r3, [r6, #47]	@ zero_extendqisi2
 5668 00dc 03F01803 		and	r3, r3, #24
 5669 00e0 1373     		strb	r3, [r2, #12]
2379:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 5670              		.loc 1 2379 0
 5671 00e2 0123     		movs	r3, #1
 5672 00e4 EB70     		strb	r3, [r5, #3]
 5673 00e6 96E7     		b	.L587
 5674              	.LVL847:
 5675              	.L599:
2349:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_alloc(dp, nent);		/* Allocate entries */
 5676              		.loc 1 2349 0
 5677 00e8 0124     		movs	r4, #1
 5678              	.LVL848:
 5679 00ea D8E7     		b	.L594
 5680              	.LVL849:
 5681              	.L602:
2352:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
 5682              		.loc 1 2352 0
 5683 00ec 7169     		ldr	r1, [r6, #20]
 5684 00ee A1EB4411 		sub	r1, r1, r4, lsl #5
 5685 00f2 3046     		mov	r0, r6
 5686              	.LVL850:
 5687 00f4 FFF7FEFF 		bl	dir_sdi
 5688              	.LVL851:
2353:Middlewares/Third_Party/FatFs/src/ff.c **** 			sum = sum_sfn(dp->fn);	/* Checksum value of the SFN tied to the LFN */
 5689              		.loc 1 2353 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 218


 5690 00f8 8146     		mov	r9, r0
 5691 00fa 0028     		cmp	r0, #0
 5692 00fc D7D1     		bne	.L595
2354:Middlewares/Third_Party/FatFs/src/ff.c **** 			do {					/* Store LFN entries in bottom first */
 5693              		.loc 1 2354 0
 5694 00fe 3846     		mov	r0, r7
 5695              	.LVL852:
 5696 0100 FFF7FEFF 		bl	sum_sfn
 5697              	.LVL853:
 5698 0104 8046     		mov	r8, r0
 5699              	.LVL854:
 5700              	.L596:
2356:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res != FR_OK) break;
 5701              		.loc 1 2356 0
 5702 0106 F169     		ldr	r1, [r6, #28]
 5703 0108 2846     		mov	r0, r5
 5704 010a FFF7FEFF 		bl	move_window
 5705              	.LVL855:
2357:Middlewares/Third_Party/FatFs/src/ff.c **** 				put_lfn(fs->lfnbuf, dp->dir, (BYTE)nent, sum);
 5706              		.loc 1 2357 0
 5707 010e 8146     		mov	r9, r0
 5708 0110 0028     		cmp	r0, #0
 5709 0112 CCD1     		bne	.L595
2358:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->wflag = 1;
 5710              		.loc 1 2358 0
 5711 0114 4346     		mov	r3, r8
 5712 0116 E2B2     		uxtb	r2, r4
 5713 0118 316A     		ldr	r1, [r6, #32]
 5714 011a E868     		ldr	r0, [r5, #12]
 5715              	.LVL856:
 5716 011c FFF7FEFF 		bl	put_lfn
 5717              	.LVL857:
2359:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_next(dp, 0);	/* Next entry */
 5718              		.loc 1 2359 0
 5719 0120 0123     		movs	r3, #1
 5720 0122 EB70     		strb	r3, [r5, #3]
2360:Middlewares/Third_Party/FatFs/src/ff.c **** 			} while (res == FR_OK && --nent);
 5721              		.loc 1 2360 0
 5722 0124 0021     		movs	r1, #0
 5723 0126 3046     		mov	r0, r6
 5724 0128 FFF7FEFF 		bl	dir_next
 5725              	.LVL858:
2361:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 5726              		.loc 1 2361 0
 5727 012c 8146     		mov	r9, r0
 5728 012e 0028     		cmp	r0, #0
 5729 0130 BDD1     		bne	.L595
 5730              	.LVL859:
2361:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 5731              		.loc 1 2361 0 is_stmt 0 discriminator 1
 5732 0132 013C     		subs	r4, r4, #1
 5733              	.LVL860:
 5734 0134 E7D1     		bne	.L596
 5735 0136 BAE7     		b	.L595
 5736              	.LVL861:
 5737              	.L598:
2343:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_NO_FILE) return res;	/* Abort if the result is other than 'not collided' */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 219


 5738              		.loc 1 2343 0 is_stmt 1
 5739 0138 4FF00709 		mov	r9, #7
 5740              	.LVL862:
 5741 013c 6BE7     		b	.L587
 5742              	.L604:
 5743 013e 00BF     		.align	2
 5744              	.L603:
 5745 0140 4FECC44E 		.word	1321528399
 5746              		.cfi_endproc
 5747              	.LFE177:
 5749              		.section	.text.sync_fs,"ax",%progbits
 5750              		.align	1
 5751              		.syntax unified
 5752              		.thumb
 5753              		.thumb_func
 5754              		.fpu fpv5-sp-d16
 5756              	sync_fs:
 5757              	.LFB158:
 947:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 5758              		.loc 1 947 0
 5759              		.cfi_startproc
 5760              		@ args = 0, pretend = 0, frame = 0
 5761              		@ frame_needed = 0, uses_anonymous_args = 0
 5762              	.LVL863:
 5763 0000 70B5     		push	{r4, r5, r6, lr}
 5764              	.LCFI61:
 5765              		.cfi_def_cfa_offset 16
 5766              		.cfi_offset 4, -16
 5767              		.cfi_offset 5, -12
 5768              		.cfi_offset 6, -8
 5769              		.cfi_offset 14, -4
 5770 0002 0446     		mov	r4, r0
 951:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 5771              		.loc 1 951 0
 5772 0004 FFF7FEFF 		bl	sync_window
 5773              	.LVL864:
 952:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Update FSInfo sector if needed */
 5774              		.loc 1 952 0
 5775 0008 0546     		mov	r5, r0
 5776 000a 48B9     		cbnz	r0, .L606
 954:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Create FSInfo structure */
 5777              		.loc 1 954 0
 5778 000c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 5779 000e 032B     		cmp	r3, #3
 5780 0010 08D0     		beq	.L610
 5781              	.LVL865:
 5782              	.L607:
 968:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 5783              		.loc 1 968 0
 5784 0012 0022     		movs	r2, #0
 5785 0014 1146     		mov	r1, r2
 5786 0016 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 5787 0018 FFF7FEFF 		bl	disk_ioctl
 5788              	.LVL866:
 5789 001c 00B1     		cbz	r0, .L606
 5790 001e 0125     		movs	r5, #1
 5791              	.L606:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 220


 5792              	.LVL867:
 972:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5793              		.loc 1 972 0
 5794 0020 2846     		mov	r0, r5
 5795 0022 70BD     		pop	{r4, r5, r6, pc}
 5796              	.LVL868:
 5797              	.L610:
 954:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Create FSInfo structure */
 5798              		.loc 1 954 0 discriminator 1
 5799 0024 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 5800 0026 012B     		cmp	r3, #1
 5801 0028 F3D1     		bne	.L607
 956:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(fs->win + BS_55AA, 0xAA55);
 5802              		.loc 1 956 0
 5803 002a 04F13C06 		add	r6, r4, #60
 5804 002e 4FF40072 		mov	r2, #512
 5805 0032 0021     		movs	r1, #0
 5806 0034 3046     		mov	r0, r6
 5807              	.LVL869:
 5808 0036 FFF7FEFF 		bl	mem_set
 5809              	.LVL870:
 957:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(fs->win + FSI_LeadSig, 0x41615252);
 5810              		.loc 1 957 0
 5811 003a 4AF65521 		movw	r1, #43605
 5812 003e 04F23A20 		addw	r0, r4, #570
 5813 0042 FFF7FEFF 		bl	st_word
 5814              	.LVL871:
 958:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(fs->win + FSI_StrucSig, 0x61417272);
 5815              		.loc 1 958 0
 5816 0046 0F49     		ldr	r1, .L611
 5817 0048 3046     		mov	r0, r6
 5818 004a FFF7FEFF 		bl	st_dword
 5819              	.LVL872:
 959:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(fs->win + FSI_Free_Count, fs->free_clst);
 5820              		.loc 1 959 0
 5821 004e 0E49     		ldr	r1, .L611+4
 5822 0050 04F50870 		add	r0, r4, #544
 5823 0054 FFF7FEFF 		bl	st_dword
 5824              	.LVL873:
 960:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(fs->win + FSI_Nxt_Free, fs->last_clst);
 5825              		.loc 1 960 0
 5826 0058 A169     		ldr	r1, [r4, #24]
 5827 005a 04F50970 		add	r0, r4, #548
 5828 005e FFF7FEFF 		bl	st_dword
 5829              	.LVL874:
 961:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Write it into the FSInfo sector */
 5830              		.loc 1 961 0
 5831 0062 6169     		ldr	r1, [r4, #20]
 5832 0064 04F50A70 		add	r0, r4, #552
 5833 0068 FFF7FEFF 		bl	st_dword
 5834              	.LVL875:
 963:Middlewares/Third_Party/FatFs/src/ff.c **** 			disk_write(fs->drv, fs->win, fs->winsect, 1);
 5835              		.loc 1 963 0
 5836 006c A26A     		ldr	r2, [r4, #40]
 5837 006e 0132     		adds	r2, r2, #1
 5838 0070 A263     		str	r2, [r4, #56]
 964:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->fsi_flag = 0;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 221


 5839              		.loc 1 964 0
 5840 0072 0123     		movs	r3, #1
 5841 0074 3146     		mov	r1, r6
 5842 0076 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 5843 0078 FFF7FEFF 		bl	disk_write
 5844              	.LVL876:
 965:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 5845              		.loc 1 965 0
 5846 007c 0023     		movs	r3, #0
 5847 007e 2371     		strb	r3, [r4, #4]
 5848 0080 C7E7     		b	.L607
 5849              	.L612:
 5850 0082 00BF     		.align	2
 5851              	.L611:
 5852 0084 52526141 		.word	1096897106
 5853 0088 72724161 		.word	1631679090
 5854              		.cfi_endproc
 5855              	.LFE158:
 5857              		.section	.text.f_mount,"ax",%progbits
 5858              		.align	1
 5859              		.global	f_mount
 5860              		.syntax unified
 5861              		.thumb
 5862              		.thumb_func
 5863              		.fpu fpv5-sp-d16
 5865              	f_mount:
 5866              	.LFB188:
3254:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *cfs;
 5867              		.loc 1 3254 0
 5868              		.cfi_startproc
 5869              		@ args = 0, pretend = 0, frame = 16
 5870              		@ frame_needed = 0, uses_anonymous_args = 0
 5871              	.LVL877:
 5872 0000 70B5     		push	{r4, r5, r6, lr}
 5873              	.LCFI62:
 5874              		.cfi_def_cfa_offset 16
 5875              		.cfi_offset 4, -16
 5876              		.cfi_offset 5, -12
 5877              		.cfi_offset 6, -8
 5878              		.cfi_offset 14, -4
 5879 0002 84B0     		sub	sp, sp, #16
 5880              	.LCFI63:
 5881              		.cfi_def_cfa_offset 32
 5882 0004 0190     		str	r0, [sp, #4]
 5883 0006 0091     		str	r1, [sp]
 5884 0008 1646     		mov	r6, r2
3258:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5885              		.loc 1 3258 0
 5886 000a 04A8     		add	r0, sp, #16
 5887              	.LVL878:
 5888 000c 40F8041D 		str	r1, [r0, #-4]!
3262:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
 5889              		.loc 1 3262 0
 5890 0010 FFF7FEFF 		bl	get_ldnumber
 5891              	.LVL879:
3263:Middlewares/Third_Party/FatFs/src/ff.c **** 	cfs = FatFs[vol];					/* Pointer to fs object */
 5892              		.loc 1 3263 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 222


 5893 0014 051E     		subs	r5, r0, #0
 5894 0016 34DB     		blt	.L617
3264:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5895              		.loc 1 3264 0
 5896 0018 1C4B     		ldr	r3, .L624
 5897 001a 53F82540 		ldr	r4, [r3, r5, lsl #2]
 5898              	.LVL880:
3266:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 5899              		.loc 1 3266 0
 5900 001e 54B1     		cbz	r4, .L615
3268:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 5901              		.loc 1 3268 0
 5902 0020 2046     		mov	r0, r4
 5903              	.LVL881:
 5904 0022 FFF7FEFF 		bl	clear_lock
 5905              	.LVL882:
3271:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 5906              		.loc 1 3271 0
 5907 0026 2069     		ldr	r0, [r4, #16]
 5908 0028 FFF7FEFF 		bl	ff_del_syncobj
 5909              	.LVL883:
 5910 002c 08B9     		cbnz	r0, .L622
 5911 002e 0224     		movs	r4, #2
 5912              	.LVL884:
 5913 0030 28E0     		b	.L614
 5914              	.LVL885:
 5915              	.L622:
3273:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 5916              		.loc 1 3273 0
 5917 0032 0023     		movs	r3, #0
 5918 0034 2370     		strb	r3, [r4]
 5919              	.L615:
3276:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fs_type = 0;				/* Clear new fs object */
 5920              		.loc 1 3276 0
 5921 0036 019B     		ldr	r3, [sp, #4]
 5922 0038 4BB1     		cbz	r3, .L616
3277:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT						/* Create sync object for the new volume */
 5923              		.loc 1 3277 0
 5924 003a 0022     		movs	r2, #0
 5925 003c 1A70     		strb	r2, [r3]
3279:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 5926              		.loc 1 3279 0
 5927 003e 0199     		ldr	r1, [sp, #4]
 5928 0040 1031     		adds	r1, r1, #16
 5929 0042 E8B2     		uxtb	r0, r5
 5930 0044 FFF7FEFF 		bl	ff_cre_syncobj
 5931              	.LVL886:
 5932 0048 08B9     		cbnz	r0, .L616
 5933 004a 0224     		movs	r4, #2
 5934              	.LVL887:
 5935 004c 1AE0     		b	.L614
 5936              	.LVL888:
 5937              	.L616:
3282:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5938              		.loc 1 3282 0
 5939 004e 019B     		ldr	r3, [sp, #4]
 5940 0050 0E4A     		ldr	r2, .L624
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 223


 5941 0052 42F82530 		str	r3, [r2, r5, lsl #2]
3284:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5942              		.loc 1 3284 0
 5943 0056 16F1FF36 		adds	r6, r6, #-1
 5944 005a 18BF     		it	ne
 5945 005c 0126     		movne	r6, #1
 5946 005e 002B     		cmp	r3, #0
 5947 0060 08BF     		it	eq
 5948 0062 46F00106 		orreq	r6, r6, #1
 5949 0066 0EB1     		cbz	r6, .L623
 5950 0068 0024     		movs	r4, #0
 5951              	.LVL889:
 5952 006a 0BE0     		b	.L614
 5953              	.LVL890:
 5954              	.L623:
3286:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
 5955              		.loc 1 3286 0
 5956 006c 0022     		movs	r2, #0
 5957 006e 01A9     		add	r1, sp, #4
 5958 0070 6846     		mov	r0, sp
 5959 0072 FFF7FEFF 		bl	find_volume
 5960              	.LVL891:
 5961 0076 0446     		mov	r4, r0
 5962              	.LVL892:
3287:Middlewares/Third_Party/FatFs/src/ff.c **** }
 5963              		.loc 1 3287 0
 5964 0078 0146     		mov	r1, r0
 5965 007a 0198     		ldr	r0, [sp, #4]
 5966              	.LVL893:
 5967 007c FFF7FEFF 		bl	unlock_fs
 5968              	.LVL894:
 5969 0080 00E0     		b	.L614
 5970              	.LVL895:
 5971              	.L617:
3263:Middlewares/Third_Party/FatFs/src/ff.c **** 	cfs = FatFs[vol];					/* Pointer to fs object */
 5972              		.loc 1 3263 0
 5973 0082 0B24     		movs	r4, #11
 5974              	.LVL896:
 5975              	.L614:
3288:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5976              		.loc 1 3288 0
 5977 0084 2046     		mov	r0, r4
 5978 0086 04B0     		add	sp, sp, #16
 5979              	.LCFI64:
 5980              		.cfi_def_cfa_offset 16
 5981              		@ sp needed
 5982 0088 70BD     		pop	{r4, r5, r6, pc}
 5983              	.LVL897:
 5984              	.L625:
 5985 008a 00BF     		.align	2
 5986              	.L624:
 5987 008c 00000000 		.word	.LANCHOR4
 5988              		.cfi_endproc
 5989              	.LFE188:
 5991              		.section	.text.f_open,"ax",%progbits
 5992              		.align	1
 5993              		.global	f_open
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 224


 5994              		.syntax unified
 5995              		.thumb
 5996              		.thumb_func
 5997              		.fpu fpv5-sp-d16
 5999              	f_open:
 6000              	.LFB189:
3302:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 6001              		.loc 1 3302 0
 6002              		.cfi_startproc
 6003              		@ args = 0, pretend = 0, frame = 72
 6004              		@ frame_needed = 0, uses_anonymous_args = 0
 6005              	.LVL898:
 6006 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 6007              	.LCFI65:
 6008              		.cfi_def_cfa_offset 32
 6009              		.cfi_offset 4, -32
 6010              		.cfi_offset 5, -28
 6011              		.cfi_offset 6, -24
 6012              		.cfi_offset 7, -20
 6013              		.cfi_offset 8, -16
 6014              		.cfi_offset 9, -12
 6015              		.cfi_offset 10, -8
 6016              		.cfi_offset 14, -4
 6017 0004 92B0     		sub	sp, sp, #72
 6018              	.LCFI66:
 6019              		.cfi_def_cfa_offset 104
 6020 0006 0191     		str	r1, [sp, #4]
3313:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6021              		.loc 1 3313 0
 6022 0008 0028     		cmp	r0, #0
 6023 000a 00F02781 		beq	.L644
 6024 000e 0646     		mov	r6, r0
 6025 0010 1546     		mov	r5, r2
3316:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, mode);
 6026              		.loc 1 3316 0
 6027 0012 02F03F07 		and	r7, r2, #63
 6028              	.LVL899:
3317:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 6029              		.loc 1 3317 0
 6030 0016 3A46     		mov	r2, r7
 6031 0018 03A9     		add	r1, sp, #12
 6032              	.LVL900:
 6033 001a 01A8     		add	r0, sp, #4
 6034              	.LVL901:
 6035 001c FFF7FEFF 		bl	find_volume
 6036              	.LVL902:
3318:Middlewares/Third_Party/FatFs/src/ff.c **** 		dj.obj.fs = fs;
 6037              		.loc 1 3318 0
 6038 0020 0446     		mov	r4, r0
 6039 0022 50B1     		cbz	r0, .L657
 6040              	.LVL903:
 6041              	.L628:
3488:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6042              		.loc 1 3488 0
 6043 0024 0CB1     		cbz	r4, .L643
3488:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6044              		.loc 1 3488 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 225


 6045 0026 0023     		movs	r3, #0
 6046 0028 3360     		str	r3, [r6]
 6047              	.L643:
3490:Middlewares/Third_Party/FatFs/src/ff.c **** }
 6048              		.loc 1 3490 0 is_stmt 1
 6049 002a 2146     		mov	r1, r4
 6050 002c 0398     		ldr	r0, [sp, #12]
 6051 002e FFF7FEFF 		bl	unlock_fs
 6052              	.LVL904:
 6053              	.L627:
3491:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6054              		.loc 1 3491 0
 6055 0032 2046     		mov	r0, r4
 6056 0034 12B0     		add	sp, sp, #72
 6057              	.LCFI67:
 6058              		.cfi_remember_state
 6059              		.cfi_def_cfa_offset 32
 6060              		@ sp needed
 6061 0036 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 6062              	.LVL905:
 6063              	.L657:
 6064              	.LCFI68:
 6065              		.cfi_restore_state
3319:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
 6066              		.loc 1 3319 0
 6067 003a 039B     		ldr	r3, [sp, #12]
 6068 003c 0493     		str	r3, [sp, #16]
3320:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);	/* Follow the file path */
 6069              		.loc 1 3320 0
 6070 003e 4FF40070 		mov	r0, #512
 6071              	.LVL906:
 6072 0042 FFF7FEFF 		bl	ff_memalloc
 6073              	.LVL907:
 6074 0046 8046     		mov	r8, r0
 6075 0048 0028     		cmp	r0, #0
 6076 004a 3DD0     		beq	.L658
3320:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);	/* Follow the file path */
 6077              		.loc 1 3320 0 is_stmt 0 discriminator 2
 6078 004c 039B     		ldr	r3, [sp, #12]
 6079 004e D860     		str	r0, [r3, #12]
3321:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY	/* R/W configuration */
 6080              		.loc 1 3321 0 is_stmt 1 discriminator 2
 6081 0050 0199     		ldr	r1, [sp, #4]
 6082 0052 04A8     		add	r0, sp, #16
 6083              	.LVL908:
 6084 0054 FFF7FEFF 		bl	follow_path
 6085              	.LVL909:
3323:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {	/* Origin directory itself? */
 6086              		.loc 1 3323 0 discriminator 2
 6087 0058 0446     		mov	r4, r0
 6088 005a 60B9     		cbnz	r0, .L630
3324:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;
 6089              		.loc 1 3324 0
 6090 005c 9DF93F30 		ldrsb	r3, [sp, #63]
 6091 0060 002B     		cmp	r3, #0
 6092 0062 37DB     		blt	.L645
3329:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 226


 6093              		.loc 1 3329 0
 6094 0064 37F00103 		bics	r3, r7, #1
 6095 0068 14BF     		ite	ne
 6096 006a 0121     		movne	r1, #1
 6097 006c 0021     		moveq	r1, #0
 6098 006e 04A8     		add	r0, sp, #16
 6099              	.LVL910:
 6100 0070 FFF7FEFF 		bl	chk_lock
 6101              	.LVL911:
 6102 0074 0446     		mov	r4, r0
 6103              	.LVL912:
 6104              	.L630:
3334:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) {					/* No file, create new */
 6105              		.loc 1 3334 0
 6106 0076 15F01C0F 		tst	r5, #28
 6107 007a 7FD0     		beq	.L631
3335:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) {		/* There is no file to open, create a new entry */
 6108              		.loc 1 3335 0
 6109 007c 002C     		cmp	r4, #0
 6110 007e 35D0     		beq	.L632
3336:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 6111              		.loc 1 3336 0
 6112 0080 042C     		cmp	r4, #4
 6113 0082 29D0     		beq	.L659
 6114              	.LVL913:
 6115              	.L633:
3343:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 6116              		.loc 1 3343 0
 6117 0084 47F00807 		orr	r7, r7, #8
 6118              	.LVL914:
 6119              	.L634:
3352:Middlewares/Third_Party/FatFs/src/ff.c **** 				dw = GET_FATTIME();
 6120              		.loc 1 3352 0
 6121 0088 14B9     		cbnz	r4, .L635
3352:Middlewares/Third_Party/FatFs/src/ff.c **** 				dw = GET_FATTIME();
 6122              		.loc 1 3352 0 is_stmt 0 discriminator 1
 6123 008a 17F0080F 		tst	r7, #8
 6124 008e 39D1     		bne	.L660
 6125              	.LVL915:
 6126              	.L635:
3411:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (mode & FA_CREATE_ALWAYS)		/* Set file change flag if created or overwritten */
 6127              		.loc 1 3411 0 is_stmt 1
 6128 0090 A4B9     		cbnz	r4, .L636
3412:Middlewares/Third_Party/FatFs/src/ff.c **** 				mode |= FA_MODIFIED;
 6129              		.loc 1 3412 0
 6130 0092 17F0080F 		tst	r7, #8
 6131 0096 01D0     		beq	.L637
3413:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->dir_sect = fs->winsect;			/* Pointer to the directory entry */
 6132              		.loc 1 3413 0
 6133 0098 47F04007 		orr	r7, r7, #64
 6134              	.LVL916:
 6135              	.L637:
3414:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->dir_ptr = dj.dir;
 6136              		.loc 1 3414 0
 6137 009c 039B     		ldr	r3, [sp, #12]
 6138 009e 9B6B     		ldr	r3, [r3, #56]
 6139 00a0 7362     		str	r3, [r6, #36]
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 227


3415:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 6140              		.loc 1 3415 0
 6141 00a2 0C9B     		ldr	r3, [sp, #48]
 6142 00a4 B362     		str	r3, [r6, #40]
3417:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!fp->obj.lockid) res = FR_INT_ERR;
 6143              		.loc 1 3417 0
 6144 00a6 37F00103 		bics	r3, r7, #1
 6145 00aa 14BF     		ite	ne
 6146 00ac 0121     		movne	r1, #1
 6147 00ae 0021     		moveq	r1, #0
 6148 00b0 04A8     		add	r0, sp, #16
 6149 00b2 FFF7FEFF 		bl	inc_lock
 6150              	.LVL917:
 6151 00b6 3061     		str	r0, [r6, #16]
3418:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 6152              		.loc 1 3418 0
 6153 00b8 00B9     		cbnz	r0, .L636
 6154 00ba 0224     		movs	r4, #2
 6155              	.LVL918:
 6156              	.L636:
3433:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 6157              		.loc 1 3433 0
 6158 00bc 002C     		cmp	r4, #0
 6159 00be 70D0     		beq	.L661
 6160              	.LVL919:
 6161              	.L638:
3485:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 6162              		.loc 1 3485 0
 6163 00c0 4046     		mov	r0, r8
 6164 00c2 FFF7FEFF 		bl	ff_memfree
 6165              	.LVL920:
 6166 00c6 ADE7     		b	.L628
 6167              	.LVL921:
 6168              	.L658:
3320:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);	/* Follow the file path */
 6169              		.loc 1 3320 0 discriminator 1
 6170 00c8 1121     		movs	r1, #17
 6171 00ca 0398     		ldr	r0, [sp, #12]
 6172              	.LVL922:
 6173 00cc FFF7FEFF 		bl	unlock_fs
 6174              	.LVL923:
 6175 00d0 1124     		movs	r4, #17
 6176 00d2 AEE7     		b	.L627
 6177              	.LVL924:
 6178              	.L645:
3325:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 6179              		.loc 1 3325 0
 6180 00d4 0624     		movs	r4, #6
 6181 00d6 CEE7     		b	.L630
 6182              	.LVL925:
 6183              	.L659:
3338:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 6184              		.loc 1 3338 0
 6185 00d8 FFF7FEFF 		bl	enq_lock
 6186              	.LVL926:
 6187 00dc 08B9     		cbnz	r0, .L662
 6188 00de 1224     		movs	r4, #18
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 228


 6189              	.LVL927:
 6190 00e0 D0E7     		b	.L633
 6191              	.LVL928:
 6192              	.L662:
3338:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 6193              		.loc 1 3338 0 is_stmt 0 discriminator 1
 6194 00e2 04A8     		add	r0, sp, #16
 6195 00e4 FFF7FEFF 		bl	dir_register
 6196              	.LVL929:
 6197 00e8 0446     		mov	r4, r0
 6198              	.LVL930:
 6199 00ea CBE7     		b	.L633
 6200              	.LVL931:
 6201              	.L632:
3346:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_DENIED;
 6202              		.loc 1 3346 0 is_stmt 1
 6203 00ec 9DF81630 		ldrb	r3, [sp, #22]	@ zero_extendqisi2
 6204 00f0 13F0110F 		tst	r3, #17
 6205 00f4 04D1     		bne	.L647
3349:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 6206              		.loc 1 3349 0
 6207 00f6 15F0040F 		tst	r5, #4
 6208 00fa C5D0     		beq	.L634
 6209 00fc 0824     		movs	r4, #8
 6210              	.LVL932:
 6211 00fe C3E7     		b	.L634
 6212              	.LVL933:
 6213              	.L647:
3347:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
 6214              		.loc 1 3347 0
 6215 0100 0724     		movs	r4, #7
 6216              	.LVL934:
 6217 0102 C1E7     		b	.L634
 6218              	.LVL935:
 6219              	.L660:
3353:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 6220              		.loc 1 3353 0
 6221 0104 FFF7FEFF 		bl	get_fattime
 6222              	.LVL936:
 6223 0108 0546     		mov	r5, r0
 6224              	.LVL937:
3381:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dj.dir + DIR_ModTime, dw);	/* Set modified time */
 6225              		.loc 1 3381 0
 6226 010a 0146     		mov	r1, r0
 6227 010c 0C98     		ldr	r0, [sp, #48]
 6228              	.LVL938:
 6229 010e 0E30     		adds	r0, r0, #14
 6230 0110 FFF7FEFF 		bl	st_dword
 6231              	.LVL939:
3382:Middlewares/Third_Party/FatFs/src/ff.c **** 					dj.dir[DIR_Attr] = AM_ARC;			/* Reset attribute */
 6232              		.loc 1 3382 0
 6233 0114 2946     		mov	r1, r5
 6234 0116 0C98     		ldr	r0, [sp, #48]
 6235 0118 1630     		adds	r0, r0, #22
 6236 011a FFF7FEFF 		bl	st_dword
 6237              	.LVL940:
3383:Middlewares/Third_Party/FatFs/src/ff.c **** 					cl = ld_clust(fs, dj.dir);			/* Get cluster chain */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 229


 6238              		.loc 1 3383 0
 6239 011e 2022     		movs	r2, #32
 6240 0120 0C9B     		ldr	r3, [sp, #48]
 6241 0122 DA72     		strb	r2, [r3, #11]
3384:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fs, dj.dir, 0);			/* Reset file allocation info */
 6242              		.loc 1 3384 0
 6243 0124 039D     		ldr	r5, [sp, #12]
 6244              	.LVL941:
 6245 0126 DDF83090 		ldr	r9, [sp, #48]
 6246 012a 4946     		mov	r1, r9
 6247 012c 2846     		mov	r0, r5
 6248 012e FFF7FEFF 		bl	ld_clust
 6249              	.LVL942:
 6250 0132 8246     		mov	r10, r0
 6251              	.LVL943:
3385:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dj.dir + DIR_FileSize, 0);
 6252              		.loc 1 3385 0
 6253 0134 0022     		movs	r2, #0
 6254 0136 4946     		mov	r1, r9
 6255 0138 2846     		mov	r0, r5
 6256              	.LVL944:
 6257 013a FFF7FEFF 		bl	st_clust
 6258              	.LVL945:
3386:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->wflag = 1;
 6259              		.loc 1 3386 0
 6260 013e 0021     		movs	r1, #0
 6261 0140 0C98     		ldr	r0, [sp, #48]
 6262 0142 1C30     		adds	r0, r0, #28
 6263 0144 FFF7FEFF 		bl	st_dword
 6264              	.LVL946:
3387:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6265              		.loc 1 3387 0
 6266 0148 0122     		movs	r2, #1
 6267 014a 039B     		ldr	r3, [sp, #12]
 6268 014c DA70     		strb	r2, [r3, #3]
3389:Middlewares/Third_Party/FatFs/src/ff.c **** 						dw = fs->winsect;
 6269              		.loc 1 3389 0
 6270 014e BAF1000F 		cmp	r10, #0
 6271 0152 9DD0     		beq	.L635
3390:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = remove_chain(&dj.obj, cl, 0);
 6272              		.loc 1 3390 0
 6273 0154 039B     		ldr	r3, [sp, #12]
 6274 0156 9D6B     		ldr	r5, [r3, #56]
 6275              	.LVL947:
3391:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (res == FR_OK) {
 6276              		.loc 1 3391 0
 6277 0158 0022     		movs	r2, #0
 6278 015a 5146     		mov	r1, r10
 6279 015c 04A8     		add	r0, sp, #16
 6280 015e FFF7FEFF 		bl	remove_chain
 6281              	.LVL948:
3392:Middlewares/Third_Party/FatFs/src/ff.c **** 							res = move_window(fs, dw);
 6282              		.loc 1 3392 0
 6283 0162 0446     		mov	r4, r0
 6284 0164 0028     		cmp	r0, #0
 6285 0166 93D1     		bne	.L635
3393:Middlewares/Third_Party/FatFs/src/ff.c **** 							fs->last_clst = cl - 1;		/* Reuse the cluster hole */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 230


 6286              		.loc 1 3393 0
 6287 0168 2946     		mov	r1, r5
 6288 016a 0398     		ldr	r0, [sp, #12]
 6289              	.LVL949:
 6290 016c FFF7FEFF 		bl	move_window
 6291              	.LVL950:
 6292 0170 0446     		mov	r4, r0
 6293              	.LVL951:
3394:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
 6294              		.loc 1 3394 0
 6295 0172 0AF1FF33 		add	r3, r10, #-1
 6296 0176 039A     		ldr	r2, [sp, #12]
 6297 0178 5361     		str	r3, [r2, #20]
 6298 017a 89E7     		b	.L635
 6299              	.LVL952:
 6300              	.L631:
3401:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dj.obj.attr & AM_DIR) {		/* It is a directory */
 6301              		.loc 1 3401 0
 6302 017c 002C     		cmp	r4, #0
 6303 017e 87D1     		bne	.L635
3402:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_NO_FILE;
 6304              		.loc 1 3402 0
 6305 0180 9DF81630 		ldrb	r3, [sp, #22]	@ zero_extendqisi2
 6306 0184 13F0100F 		tst	r3, #16
 6307 0188 09D1     		bne	.L649
3405:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = FR_DENIED;
 6308              		.loc 1 3405 0
 6309 018a 15F0020F 		tst	r5, #2
 6310 018e 3FF47FAF 		beq	.L635
3405:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = FR_DENIED;
 6311              		.loc 1 3405 0 is_stmt 0 discriminator 1
 6312 0192 13F0010F 		tst	r3, #1
 6313 0196 3FF47BAF 		beq	.L635
3406:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 6314              		.loc 1 3406 0 is_stmt 1
 6315 019a 0724     		movs	r4, #7
 6316              	.LVL953:
 6317 019c 78E7     		b	.L635
 6318              	.LVL954:
 6319              	.L649:
3403:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
 6320              		.loc 1 3403 0
 6321 019e 0424     		movs	r4, #4
 6322              	.LVL955:
 6323 01a0 76E7     		b	.L635
 6324              	.LVL956:
 6325              	.L661:
3445:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->obj.objsize = ld_dword(dj.dir + DIR_FileSize);
 6326              		.loc 1 3445 0
 6327 01a2 039D     		ldr	r5, [sp, #12]
 6328 01a4 DDF83090 		ldr	r9, [sp, #48]
 6329 01a8 4946     		mov	r1, r9
 6330 01aa 2846     		mov	r0, r5
 6331 01ac FFF7FEFF 		bl	ld_clust
 6332              	.LVL957:
 6333 01b0 B060     		str	r0, [r6, #8]
3446:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 231


 6334              		.loc 1 3446 0
 6335 01b2 09F11C00 		add	r0, r9, #28
 6336 01b6 FFF7FEFF 		bl	ld_dword
 6337              	.LVL958:
 6338 01ba F060     		str	r0, [r6, #12]
3449:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 6339              		.loc 1 3449 0
 6340 01bc 0021     		movs	r1, #0
 6341 01be F162     		str	r1, [r6, #44]
3451:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->obj.id = fs->id;
 6342              		.loc 1 3451 0
 6343 01c0 3560     		str	r5, [r6]
3452:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->flag = mode;		/* Set file access mode */
 6344              		.loc 1 3452 0
 6345 01c2 EB88     		ldrh	r3, [r5, #6]
 6346 01c4 B380     		strh	r3, [r6, #4]	@ movhi
3453:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->err = 0;			/* Clear error flag */
 6347              		.loc 1 3453 0
 6348 01c6 3775     		strb	r7, [r6, #20]
3454:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->sect = 0;			/* Invalidate current data sector */
 6349              		.loc 1 3454 0
 6350 01c8 7175     		strb	r1, [r6, #21]
3455:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->fptr = 0;			/* Set file pointer top of the file */
 6351              		.loc 1 3455 0
 6352 01ca 3162     		str	r1, [r6, #32]
3456:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 6353              		.loc 1 3456 0
 6354 01cc B161     		str	r1, [r6, #24]
3459:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 6355              		.loc 1 3459 0
 6356 01ce 06F13009 		add	r9, r6, #48
 6357 01d2 4FF40072 		mov	r2, #512
 6358 01d6 4846     		mov	r0, r9
 6359 01d8 FFF7FEFF 		bl	mem_set
 6360              	.LVL959:
3461:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr = fp->obj.objsize;			/* Offset to seek */
 6361              		.loc 1 3461 0
 6362 01dc 17F0200F 		tst	r7, #32
 6363 01e0 3FF46EAF 		beq	.L638
3461:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr = fp->obj.objsize;			/* Offset to seek */
 6364              		.loc 1 3461 0 is_stmt 0 discriminator 1
 6365 01e4 F568     		ldr	r5, [r6, #12]
 6366 01e6 002D     		cmp	r5, #0
 6367 01e8 3FF46AAF 		beq	.L638
3462:Middlewares/Third_Party/FatFs/src/ff.c **** 				bcs = (DWORD)fs->csize * SS(fs);	/* Cluster size in byte */
 6368              		.loc 1 3462 0 is_stmt 1
 6369 01ec B561     		str	r5, [r6, #24]
3463:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = fp->obj.sclust;				/* Follow the cluster chain */
 6370              		.loc 1 3463 0
 6371 01ee 039B     		ldr	r3, [sp, #12]
 6372 01f0 5F89     		ldrh	r7, [r3, #10]
 6373              	.LVL960:
 6374 01f2 7F02     		lsls	r7, r7, #9
 6375              	.LVL961:
3464:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (ofs = fp->obj.objsize; res == FR_OK && ofs > bcs; ofs -= bcs) {
 6376              		.loc 1 3464 0
 6377 01f4 B168     		ldr	r1, [r6, #8]
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 232


 6378              	.LVL962:
3465:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = get_fat(&fp->obj, clst);
 6379              		.loc 1 3465 0
 6380 01f6 02E0     		b	.L639
 6381              	.LVL963:
 6382              	.L664:
3467:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) res = FR_DISK_ERR;
 6383              		.loc 1 3467 0
 6384 01f8 0224     		movs	r4, #2
 6385              	.LVL964:
 6386 01fa 0DE0     		b	.L640
 6387              	.L641:
 6388              	.LVL965:
3465:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = get_fat(&fp->obj, clst);
 6389              		.loc 1 3465 0 discriminator 2
 6390 01fc ED1B     		subs	r5, r5, r7
 6391              	.LVL966:
 6392              	.L639:
3465:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = get_fat(&fp->obj, clst);
 6393              		.loc 1 3465 0 is_stmt 0 discriminator 1
 6394 01fe B4FA84F3 		clz	r3, r4
 6395 0202 5B09     		lsrs	r3, r3, #5
 6396 0204 BD42     		cmp	r5, r7
 6397 0206 98BF     		it	ls
 6398 0208 0023     		movls	r3, #0
 6399 020a 53B1     		cbz	r3, .L663
3466:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst <= 1) res = FR_INT_ERR;
 6400              		.loc 1 3466 0 is_stmt 1
 6401 020c 3046     		mov	r0, r6
 6402 020e FFF7FEFF 		bl	get_fat
 6403              	.LVL967:
 6404 0212 0146     		mov	r1, r0
 6405              	.LVL968:
3467:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) res = FR_DISK_ERR;
 6406              		.loc 1 3467 0
 6407 0214 0128     		cmp	r0, #1
 6408 0216 EFD9     		bls	.L664
 6409              	.LVL969:
 6410              	.L640:
3468:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 6411              		.loc 1 3468 0
 6412 0218 B1F1FF3F 		cmp	r1, #-1
 6413 021c EED1     		bne	.L641
 6414 021e 0124     		movs	r4, #1
 6415              	.LVL970:
 6416 0220 ECE7     		b	.L641
 6417              	.LVL971:
 6418              	.L663:
3470:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK && ofs % SS(fs)) {	/* Fill sector buffer if not on the sector boundary */
 6419              		.loc 1 3470 0
 6420 0222 F161     		str	r1, [r6, #28]
3471:Middlewares/Third_Party/FatFs/src/ff.c **** 					if ((sc = clust2sect(fs, clst)) == 0) {
 6421              		.loc 1 3471 0
 6422 0224 002C     		cmp	r4, #0
 6423 0226 7FF44BAF 		bne	.L638
3471:Middlewares/Third_Party/FatFs/src/ff.c **** 					if ((sc = clust2sect(fs, clst)) == 0) {
 6424              		.loc 1 3471 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 233


 6425 022a C5F30803 		ubfx	r3, r5, #0, #9
 6426 022e 002B     		cmp	r3, #0
 6427 0230 3FF446AF 		beq	.L638
3472:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = FR_INT_ERR;
 6428              		.loc 1 3472 0 is_stmt 1
 6429 0234 039F     		ldr	r7, [sp, #12]
 6430              	.LVL972:
 6431 0236 3846     		mov	r0, r7
 6432 0238 FFF7FEFF 		bl	clust2sect
 6433              	.LVL973:
 6434 023c 08B9     		cbnz	r0, .L665
3473:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else {
 6435              		.loc 1 3473 0
 6436 023e 0224     		movs	r4, #2
 6437              	.LVL974:
 6438 0240 3EE7     		b	.L638
 6439              	.LVL975:
 6440              	.L665:
3475:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
 6441              		.loc 1 3475 0
 6442 0242 00EB5522 		add	r2, r0, r5, lsr #9
 6443 0246 3262     		str	r2, [r6, #32]
3477:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 6444              		.loc 1 3477 0
 6445 0248 0123     		movs	r3, #1
 6446 024a 4946     		mov	r1, r9
 6447 024c 7878     		ldrb	r0, [r7, #1]	@ zero_extendqisi2
 6448              	.LVL976:
 6449 024e FFF7FEFF 		bl	disk_read
 6450              	.LVL977:
 6451 0252 0028     		cmp	r0, #0
 6452 0254 3FF434AF 		beq	.L638
 6453 0258 0124     		movs	r4, #1
 6454              	.LVL978:
 6455 025a 31E7     		b	.L638
 6456              	.LVL979:
 6457              	.L644:
3313:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6458              		.loc 1 3313 0
 6459 025c 0924     		movs	r4, #9
 6460 025e E8E6     		b	.L627
 6461              		.cfi_endproc
 6462              	.LFE189:
 6464              		.section	.text.f_read,"ax",%progbits
 6465              		.align	1
 6466              		.global	f_read
 6467              		.syntax unified
 6468              		.thumb
 6469              		.thumb_func
 6470              		.fpu fpv5-sp-d16
 6472              	f_read:
 6473              	.LFB190:
3506:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 6474              		.loc 1 3506 0
 6475              		.cfi_startproc
 6476              		@ args = 0, pretend = 0, frame = 16
 6477              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 234


 6478              	.LVL980:
 6479 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 6480              	.LCFI69:
 6481              		.cfi_def_cfa_offset 36
 6482              		.cfi_offset 4, -36
 6483              		.cfi_offset 5, -32
 6484              		.cfi_offset 6, -28
 6485              		.cfi_offset 7, -24
 6486              		.cfi_offset 8, -20
 6487              		.cfi_offset 9, -16
 6488              		.cfi_offset 10, -12
 6489              		.cfi_offset 11, -8
 6490              		.cfi_offset 14, -4
 6491 0004 85B0     		sub	sp, sp, #20
 6492              	.LCFI70:
 6493              		.cfi_def_cfa_offset 56
 6494 0006 0446     		mov	r4, r0
 6495 0008 8846     		mov	r8, r1
 6496 000a 1646     		mov	r6, r2
 6497 000c 9946     		mov	r9, r3
 6498              	.LVL981:
3515:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&fp->obj, &fs);				/* Check validity of the file object */
 6499              		.loc 1 3515 0
 6500 000e 0023     		movs	r3, #0
 6501              	.LVL982:
 6502 0010 C9F80030 		str	r3, [r9]
3516:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);	/* Check validity */
 6503              		.loc 1 3516 0
 6504 0014 0190     		str	r0, [sp, #4]
 6505 0016 03A9     		add	r1, sp, #12
 6506              	.LVL983:
 6507 0018 FFF7FEFF 		bl	validate
 6508              	.LVL984:
3517:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_READ)) LEAVE_FF(fs, FR_DENIED); /* Check access mode */
 6509              		.loc 1 3517 0
 6510 001c 0090     		str	r0, [sp]
 6511 001e 68B9     		cbnz	r0, .L667
3517:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_READ)) LEAVE_FF(fs, FR_DENIED); /* Check access mode */
 6512              		.loc 1 3517 0 is_stmt 0 discriminator 2
 6513 0020 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 6514 0022 0093     		str	r3, [sp]
 6515              	.LVL985:
 6516 0024 53B9     		cbnz	r3, .L667
3518:Middlewares/Third_Party/FatFs/src/ff.c **** 	remain = fp->obj.objsize - fp->fptr;
 6517              		.loc 1 3518 0 is_stmt 1
 6518 0026 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 6519              	.LVL986:
 6520 0028 13F0010F 		tst	r3, #1
 6521 002c 0ED0     		beq	.L694
3519:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (btr > remain) btr = (UINT)remain;		/* Truncate btr by remaining bytes */
 6522              		.loc 1 3519 0
 6523 002e E368     		ldr	r3, [r4, #12]
 6524 0030 A269     		ldr	r2, [r4, #24]
 6525 0032 9B1A     		subs	r3, r3, r2
 6526              	.LVL987:
3520:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6527              		.loc 1 3520 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 235


 6528 0034 B342     		cmp	r3, r6
 6529 0036 75D2     		bcs	.L672
 6530 0038 1E46     		mov	r6, r3
 6531              	.LVL988:
 6532 003a 73E0     		b	.L672
 6533              	.LVL989:
 6534              	.L667:
3517:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_READ)) LEAVE_FF(fs, FR_DENIED); /* Check access mode */
 6535              		.loc 1 3517 0 discriminator 3
 6536 003c 0099     		ldr	r1, [sp]
 6537 003e 0398     		ldr	r0, [sp, #12]
 6538 0040 FFF7FEFF 		bl	unlock_fs
 6539              	.LVL990:
 6540              	.L669:
3590:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6541              		.loc 1 3590 0
 6542 0044 0098     		ldr	r0, [sp]
 6543 0046 05B0     		add	sp, sp, #20
 6544              	.LCFI71:
 6545              		.cfi_remember_state
 6546              		.cfi_def_cfa_offset 36
 6547              		@ sp needed
 6548 0048 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 6549              	.LVL991:
 6550              	.L694:
 6551              	.LCFI72:
 6552              		.cfi_restore_state
3518:Middlewares/Third_Party/FatFs/src/ff.c **** 	remain = fp->obj.objsize - fp->fptr;
 6553              		.loc 1 3518 0 discriminator 1
 6554 004c 0721     		movs	r1, #7
 6555 004e 0398     		ldr	r0, [sp, #12]
 6556 0050 FFF7FEFF 		bl	unlock_fs
 6557              	.LVL992:
 6558 0054 0723     		movs	r3, #7
 6559 0056 0093     		str	r3, [sp]
 6560              	.LVL993:
 6561 0058 F4E7     		b	.L669
 6562              	.LVL994:
 6563              	.L675:
3531:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = clmt_clust(fp, fp->fptr);	/* Get cluster# from the CLMT */
 6564              		.loc 1 3531 0
 6565 005a E36A     		ldr	r3, [r4, #44]
 6566 005c 1BB1     		cbz	r3, .L677
3532:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else
 6567              		.loc 1 3532 0
 6568 005e 2046     		mov	r0, r4
 6569 0060 FFF7FEFF 		bl	clmt_clust
 6570              	.LVL995:
 6571 0064 6EE0     		b	.L676
 6572              	.LVL996:
 6573              	.L677:
3536:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 6574              		.loc 1 3536 0
 6575 0066 E169     		ldr	r1, [r4, #28]
 6576 0068 0198     		ldr	r0, [sp, #4]
 6577 006a FFF7FEFF 		bl	get_fat
 6578              	.LVL997:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 236


 6579 006e 69E0     		b	.L676
 6580              	.L698:
3539:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 6581              		.loc 1 3539 0 discriminator 1
 6582 0070 0225     		movs	r5, #2
 6583 0072 6575     		strb	r5, [r4, #21]
 6584 0074 2946     		mov	r1, r5
 6585 0076 0398     		ldr	r0, [sp, #12]
 6586              	.LVL998:
 6587 0078 FFF7FEFF 		bl	unlock_fs
 6588              	.LVL999:
 6589 007c 0095     		str	r5, [sp]
 6590              	.LVL1000:
 6591 007e E1E7     		b	.L669
 6592              	.LVL1001:
 6593              	.L699:
3540:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;				/* Update current cluster */
 6594              		.loc 1 3540 0 discriminator 1
 6595 0080 0125     		movs	r5, #1
 6596 0082 6575     		strb	r5, [r4, #21]
 6597 0084 2946     		mov	r1, r5
 6598 0086 0398     		ldr	r0, [sp, #12]
 6599              	.LVL1002:
 6600 0088 FFF7FEFF 		bl	unlock_fs
 6601              	.LVL1003:
 6602 008c 0095     		str	r5, [sp]
 6603              	.LVL1004:
 6604 008e D9E7     		b	.L669
 6605              	.LVL1005:
 6606              	.L700:
3544:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += csect;
 6607              		.loc 1 3544 0 discriminator 1
 6608 0090 0225     		movs	r5, #2
 6609 0092 6575     		strb	r5, [r4, #21]
 6610 0094 2946     		mov	r1, r5
 6611 0096 5846     		mov	r0, fp
 6612              	.LVL1006:
 6613 0098 FFF7FEFF 		bl	unlock_fs
 6614              	.LVL1007:
 6615 009c 0095     		str	r5, [sp]
 6616              	.LVL1008:
 6617 009e D1E7     		b	.L669
 6618              	.LVL1009:
 6619              	.L701:
3551:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY && _FS_MINIMIZE <= 2			/* Replace one of the read sectors with cached data if it 
 6620              		.loc 1 3551 0 discriminator 1
 6621 00a0 0125     		movs	r5, #1
 6622              	.LVL1010:
 6623 00a2 6575     		strb	r5, [r4, #21]
 6624 00a4 2946     		mov	r1, r5
 6625 00a6 0398     		ldr	r0, [sp, #12]
 6626 00a8 FFF7FEFF 		bl	unlock_fs
 6627              	.LVL1011:
 6628 00ac 0095     		str	r5, [sp]
 6629              	.LVL1012:
 6630 00ae C9E7     		b	.L669
 6631              	.LVL1013:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 237


 6632              	.L702:
3558:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(rbuff + ((fp->sect - sect) * SS(fs)), fp->buf, SS(fs));
 6633              		.loc 1 3558 0 discriminator 1
 6634 00b0 206A     		ldr	r0, [r4, #32]
 6635 00b2 A0EB0A00 		sub	r0, r0, r10
 6636 00b6 8542     		cmp	r5, r0
 6637 00b8 69D9     		bls	.L684
3559:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 6638              		.loc 1 3559 0
 6639 00ba 4FF40072 		mov	r2, #512
 6640 00be 04F13001 		add	r1, r4, #48
 6641 00c2 08EB4020 		add	r0, r8, r0, lsl #9
 6642 00c6 FFF7FEFF 		bl	mem_cpy
 6643              	.LVL1014:
 6644 00ca 60E0     		b	.L684
 6645              	.L681:
3567:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 6646              		.loc 1 3567 0
 6647 00cc 226A     		ldr	r2, [r4, #32]
 6648 00ce 9245     		cmp	r10, r2
 6649 00d0 0DD0     		beq	.L686
3569:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
 6650              		.loc 1 3569 0
 6651 00d2 94F91430 		ldrsb	r3, [r4, #20]
 6652 00d6 002B     		cmp	r3, #0
 6653 00d8 5BDB     		blt	.L695
 6654              	.L687:
3574:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 6655              		.loc 1 3574 0
 6656 00da 0123     		movs	r3, #1
 6657 00dc 5246     		mov	r2, r10
 6658 00de 04F13001 		add	r1, r4, #48
 6659 00e2 0398     		ldr	r0, [sp, #12]
 6660 00e4 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 6661 00e6 FFF7FEFF 		bl	disk_read
 6662              	.LVL1015:
 6663 00ea 0028     		cmp	r0, #0
 6664 00ec 66D1     		bne	.L696
 6665              	.L686:
3577:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 6666              		.loc 1 3577 0
 6667 00ee C4F820A0 		str	r10, [r4, #32]
 6668              	.LVL1016:
 6669              	.L673:
3579:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rcnt > btr) rcnt = btr;					/* Clip it by btr if needed */
 6670              		.loc 1 3579 0
 6671 00f2 A369     		ldr	r3, [r4, #24]
 6672 00f4 C3F30803 		ubfx	r3, r3, #0, #9
 6673 00f8 C3F50075 		rsb	r5, r3, #512
 6674              	.LVL1017:
3580:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
 6675              		.loc 1 3580 0
 6676 00fc AE42     		cmp	r6, r5
 6677 00fe 00D2     		bcs	.L689
 6678 0100 3546     		mov	r5, r6
 6679              	.LVL1018:
 6680              	.L689:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 238


3585:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 6681              		.loc 1 3585 0
 6682 0102 04F13001 		add	r1, r4, #48
 6683 0106 2A46     		mov	r2, r5
 6684 0108 1944     		add	r1, r1, r3
 6685 010a 4046     		mov	r0, r8
 6686 010c FFF7FEFF 		bl	mem_cpy
 6687              	.LVL1019:
 6688              	.L685:
3523:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->fptr % SS(fs) == 0) {			/* On the sector boundary? */
 6689              		.loc 1 3523 0
 6690 0110 A844     		add	r8, r8, r5
 6691              	.LVL1020:
 6692 0112 A369     		ldr	r3, [r4, #24]
 6693 0114 2B44     		add	r3, r3, r5
 6694 0116 A361     		str	r3, [r4, #24]
 6695 0118 D9F80030 		ldr	r3, [r9]
 6696 011c 2B44     		add	r3, r3, r5
 6697 011e C9F80030 		str	r3, [r9]
 6698 0122 761B     		subs	r6, r6, r5
 6699              	.LVL1021:
 6700              	.L672:
3522:Middlewares/Third_Party/FatFs/src/ff.c **** 		rbuff += rcnt, fp->fptr += rcnt, *br += rcnt, btr -= rcnt) {
 6701              		.loc 1 3522 0
 6702 0124 002E     		cmp	r6, #0
 6703 0126 51D0     		beq	.L697
3524:Middlewares/Third_Party/FatFs/src/ff.c **** 			csect = (UINT)(fp->fptr / SS(fs) & (fs->csize - 1));	/* Sector offset in the cluster */
 6704              		.loc 1 3524 0
 6705 0128 A169     		ldr	r1, [r4, #24]
 6706 012a C1F30803 		ubfx	r3, r1, #0, #9
 6707 012e 002B     		cmp	r3, #0
 6708 0130 DFD1     		bne	.L673
3525:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (csect == 0) {					/* On the cluster boundary? */
 6709              		.loc 1 3525 0
 6710 0132 039B     		ldr	r3, [sp, #12]
 6711 0134 5F89     		ldrh	r7, [r3, #10]
 6712 0136 013F     		subs	r7, r7, #1
 6713              	.LVL1022:
3526:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->fptr == 0) {			/* On the top of the file? */
 6714              		.loc 1 3526 0
 6715 0138 17EA5127 		ands	r7, r7, r1, lsr #9
 6716              	.LVL1023:
 6717 013c 08D1     		bne	.L674
3527:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = fp->obj.sclust;		/* Follow cluster chain from the origin */
 6718              		.loc 1 3527 0
 6719 013e 0029     		cmp	r1, #0
 6720 0140 8BD1     		bne	.L675
3528:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {						/* Middle or end of the file */
 6721              		.loc 1 3528 0
 6722 0142 A068     		ldr	r0, [r4, #8]
 6723              	.LVL1024:
 6724              	.L676:
3539:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 6725              		.loc 1 3539 0
 6726 0144 0128     		cmp	r0, #1
 6727 0146 93D9     		bls	.L698
3540:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;				/* Update current cluster */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 239


 6728              		.loc 1 3540 0
 6729 0148 B0F1FF3F 		cmp	r0, #-1
 6730 014c 98D0     		beq	.L699
3541:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 6731              		.loc 1 3541 0
 6732 014e E061     		str	r0, [r4, #28]
 6733              	.LVL1025:
 6734              	.L674:
3543:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!sect) ABORT(fs, FR_INT_ERR);
 6735              		.loc 1 3543 0
 6736 0150 DDF80CB0 		ldr	fp, [sp, #12]
 6737 0154 E169     		ldr	r1, [r4, #28]
 6738 0156 5846     		mov	r0, fp
 6739 0158 FFF7FEFF 		bl	clust2sect
 6740              	.LVL1026:
3544:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += csect;
 6741              		.loc 1 3544 0
 6742 015c 8246     		mov	r10, r0
 6743 015e 0028     		cmp	r0, #0
 6744 0160 96D0     		beq	.L700
3545:Middlewares/Third_Party/FatFs/src/ff.c **** 			cc = btr / SS(fs);					/* When remaining bytes >= sector size, */
 6745              		.loc 1 3545 0
 6746 0162 BA44     		add	r10, r10, r7
 6747              	.LVL1027:
3547:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (csect + cc > fs->csize) {	/* Clip at cluster boundary */
 6748              		.loc 1 3547 0
 6749 0164 750A     		lsrs	r5, r6, #9
 6750              	.LVL1028:
 6751 0166 B1D0     		beq	.L681
3548:Middlewares/Third_Party/FatFs/src/ff.c **** 					cc = fs->csize - csect;
 6752              		.loc 1 3548 0
 6753 0168 7B19     		adds	r3, r7, r5
 6754 016a BBF80A20 		ldrh	r2, [fp, #10]
 6755 016e 9342     		cmp	r3, r2
 6756 0170 00D9     		bls	.L682
3549:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 6757              		.loc 1 3549 0
 6758 0172 D51B     		subs	r5, r2, r7
 6759              	.LVL1029:
 6760              	.L682:
3551:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY && _FS_MINIMIZE <= 2			/* Replace one of the read sectors with cached data if it 
 6761              		.loc 1 3551 0
 6762 0174 2B46     		mov	r3, r5
 6763 0176 5246     		mov	r2, r10
 6764 0178 4146     		mov	r1, r8
 6765 017a 9BF80100 		ldrb	r0, [fp, #1]	@ zero_extendqisi2
 6766 017e FFF7FEFF 		bl	disk_read
 6767              	.LVL1030:
 6768 0182 0028     		cmp	r0, #0
 6769 0184 8CD1     		bne	.L701
3558:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(rbuff + ((fp->sect - sect) * SS(fs)), fp->buf, SS(fs));
 6770              		.loc 1 3558 0
 6771 0186 94F91430 		ldrsb	r3, [r4, #20]
 6772 018a 002B     		cmp	r3, #0
 6773 018c 90DB     		blt	.L702
 6774              	.L684:
3563:Middlewares/Third_Party/FatFs/src/ff.c **** 				continue;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 240


 6775              		.loc 1 3563 0
 6776 018e 6D02     		lsls	r5, r5, #9
 6777              	.LVL1031:
3564:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 6778              		.loc 1 3564 0
 6779 0190 BEE7     		b	.L685
 6780              	.LVL1032:
 6781              	.L695:
3570:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->flag &= (BYTE)~FA_DIRTY;
 6782              		.loc 1 3570 0
 6783 0192 0123     		movs	r3, #1
 6784 0194 04F13001 		add	r1, r4, #48
 6785 0198 9BF80100 		ldrb	r0, [fp, #1]	@ zero_extendqisi2
 6786 019c FFF7FEFF 		bl	disk_write
 6787              	.LVL1033:
 6788 01a0 20B9     		cbnz	r0, .L703
3571:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 6789              		.loc 1 3571 0
 6790 01a2 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 6791 01a4 03F07F03 		and	r3, r3, #127
 6792 01a8 2375     		strb	r3, [r4, #20]
 6793 01aa 96E7     		b	.L687
 6794              	.L703:
3570:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->flag &= (BYTE)~FA_DIRTY;
 6795              		.loc 1 3570 0 discriminator 1
 6796 01ac 0125     		movs	r5, #1
 6797              	.LVL1034:
 6798 01ae 6575     		strb	r5, [r4, #21]
 6799 01b0 2946     		mov	r1, r5
 6800 01b2 0398     		ldr	r0, [sp, #12]
 6801 01b4 FFF7FEFF 		bl	unlock_fs
 6802              	.LVL1035:
 6803 01b8 0095     		str	r5, [sp]
 6804              	.LVL1036:
 6805 01ba 43E7     		b	.L669
 6806              	.LVL1037:
 6807              	.L696:
3574:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 6808              		.loc 1 3574 0 discriminator 1
 6809 01bc 0125     		movs	r5, #1
 6810              	.LVL1038:
 6811 01be 6575     		strb	r5, [r4, #21]
 6812 01c0 2946     		mov	r1, r5
 6813 01c2 0398     		ldr	r0, [sp, #12]
 6814 01c4 FFF7FEFF 		bl	unlock_fs
 6815              	.LVL1039:
 6816 01c8 0095     		str	r5, [sp]
 6817              	.LVL1040:
 6818 01ca 3BE7     		b	.L669
 6819              	.LVL1041:
 6820              	.L697:
3589:Middlewares/Third_Party/FatFs/src/ff.c **** }
 6821              		.loc 1 3589 0
 6822 01cc 0021     		movs	r1, #0
 6823 01ce 0398     		ldr	r0, [sp, #12]
 6824 01d0 FFF7FEFF 		bl	unlock_fs
 6825              	.LVL1042:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 241


 6826 01d4 36E7     		b	.L669
 6827              		.cfi_endproc
 6828              	.LFE190:
 6830              		.section	.text.f_write,"ax",%progbits
 6831              		.align	1
 6832              		.global	f_write
 6833              		.syntax unified
 6834              		.thumb
 6835              		.thumb_func
 6836              		.fpu fpv5-sp-d16
 6838              	f_write:
 6839              	.LFB191:
3606:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 6840              		.loc 1 3606 0
 6841              		.cfi_startproc
 6842              		@ args = 0, pretend = 0, frame = 16
 6843              		@ frame_needed = 0, uses_anonymous_args = 0
 6844              	.LVL1043:
 6845 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 6846              	.LCFI73:
 6847              		.cfi_def_cfa_offset 36
 6848              		.cfi_offset 4, -36
 6849              		.cfi_offset 5, -32
 6850              		.cfi_offset 6, -28
 6851              		.cfi_offset 7, -24
 6852              		.cfi_offset 8, -20
 6853              		.cfi_offset 9, -16
 6854              		.cfi_offset 10, -12
 6855              		.cfi_offset 11, -8
 6856              		.cfi_offset 14, -4
 6857 0004 85B0     		sub	sp, sp, #20
 6858              	.LCFI74:
 6859              		.cfi_def_cfa_offset 56
 6860 0006 0446     		mov	r4, r0
 6861 0008 8846     		mov	r8, r1
 6862 000a 1646     		mov	r6, r2
 6863 000c 9946     		mov	r9, r3
 6864              	.LVL1044:
3614:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&fp->obj, &fs);			/* Check validity of the file object */
 6865              		.loc 1 3614 0
 6866 000e 0023     		movs	r3, #0
 6867              	.LVL1045:
 6868 0010 C9F80030 		str	r3, [r9]
3615:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);	/* Check validity */
 6869              		.loc 1 3615 0
 6870 0014 0190     		str	r0, [sp, #4]
 6871 0016 03A9     		add	r1, sp, #12
 6872              	.LVL1046:
 6873 0018 FFF7FEFF 		bl	validate
 6874              	.LVL1047:
3616:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
 6875              		.loc 1 3616 0
 6876 001c 0090     		str	r0, [sp]
 6877 001e 60B9     		cbnz	r0, .L705
3616:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
 6878              		.loc 1 3616 0 is_stmt 0 discriminator 2
 6879 0020 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 242


 6880 0022 0093     		str	r3, [sp]
 6881              	.LVL1048:
 6882 0024 4BB9     		cbnz	r3, .L705
3617:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6883              		.loc 1 3617 0 is_stmt 1
 6884 0026 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 6885              	.LVL1049:
 6886 0028 13F0020F 		tst	r3, #2
 6887 002c 0DD0     		beq	.L732
3620:Middlewares/Third_Party/FatFs/src/ff.c **** 		btw = (UINT)(0xFFFFFFFF - (DWORD)fp->fptr);
 6888              		.loc 1 3620 0
 6889 002e A369     		ldr	r3, [r4, #24]
 6890 0030 F342     		cmn	r3, r6
 6891 0032 C0F0BB80 		bcc	.L710
3621:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 6892              		.loc 1 3621 0
 6893 0036 DE43     		mvns	r6, r3
 6894              	.LVL1050:
 6895 0038 B8E0     		b	.L710
 6896              	.LVL1051:
 6897              	.L705:
3616:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
 6898              		.loc 1 3616 0 discriminator 3
 6899 003a 0099     		ldr	r1, [sp]
 6900 003c 0398     		ldr	r0, [sp, #12]
 6901 003e FFF7FEFF 		bl	unlock_fs
 6902              	.LVL1052:
 6903              	.L707:
3712:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6904              		.loc 1 3712 0
 6905 0042 0098     		ldr	r0, [sp]
 6906 0044 05B0     		add	sp, sp, #20
 6907              	.LCFI75:
 6908              		.cfi_remember_state
 6909              		.cfi_def_cfa_offset 36
 6910              		@ sp needed
 6911 0046 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 6912              	.LVL1053:
 6913              	.L732:
 6914              	.LCFI76:
 6915              		.cfi_restore_state
3617:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6916              		.loc 1 3617 0 discriminator 1
 6917 004a 0721     		movs	r1, #7
 6918 004c 0398     		ldr	r0, [sp, #12]
 6919 004e FFF7FEFF 		bl	unlock_fs
 6920              	.LVL1054:
 6921 0052 0723     		movs	r3, #7
 6922 0054 0093     		str	r3, [sp]
 6923              	.LVL1055:
 6924 0056 F4E7     		b	.L707
 6925              	.LVL1056:
 6926              	.L713:
3636:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = clmt_clust(fp, fp->fptr);	/* Get cluster# from the CLMT */
 6927              		.loc 1 3636 0
 6928 0058 E36A     		ldr	r3, [r4, #44]
 6929 005a A3B3     		cbz	r3, .L715
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 243


3637:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else
 6930              		.loc 1 3637 0
 6931 005c 2046     		mov	r0, r4
 6932 005e FFF7FEFF 		bl	clmt_clust
 6933              	.LVL1057:
 6934              	.L714:
3644:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 1) ABORT(fs, FR_INT_ERR);
 6935              		.loc 1 3644 0
 6936 0062 0028     		cmp	r0, #0
 6937 0064 00F0CC80 		beq	.L716
3645:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 6938              		.loc 1 3645 0
 6939 0068 0128     		cmp	r0, #1
 6940 006a 31D0     		beq	.L733
3646:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;			/* Update current cluster */
 6941              		.loc 1 3646 0
 6942 006c B0F1FF3F 		cmp	r0, #-1
 6943 0070 36D0     		beq	.L734
3647:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->obj.sclust == 0) fp->obj.sclust = clst;	/* Set start cluster if the first write */
 6944              		.loc 1 3647 0
 6945 0072 E061     		str	r0, [r4, #28]
3648:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 6946              		.loc 1 3648 0
 6947 0074 A368     		ldr	r3, [r4, #8]
 6948 0076 03B9     		cbnz	r3, .L712
3648:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 6949              		.loc 1 3648 0 is_stmt 0 discriminator 1
 6950 0078 A060     		str	r0, [r4, #8]
 6951              	.LVL1058:
 6952              	.L712:
3653:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
 6953              		.loc 1 3653 0 is_stmt 1
 6954 007a 94F91430 		ldrsb	r3, [r4, #20]
 6955 007e 002B     		cmp	r3, #0
 6956 0080 36DB     		blt	.L735
 6957              	.L719:
3658:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!sect) ABORT(fs, FR_INT_ERR);
 6958              		.loc 1 3658 0
 6959 0082 DDF80CB0 		ldr	fp, [sp, #12]
 6960 0086 E169     		ldr	r1, [r4, #28]
 6961 0088 5846     		mov	r0, fp
 6962 008a FFF7FEFF 		bl	clust2sect
 6963              	.LVL1059:
3659:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += csect;
 6964              		.loc 1 3659 0
 6965 008e 8246     		mov	r10, r0
 6966 0090 0028     		cmp	r0, #0
 6967 0092 43D0     		beq	.L736
3660:Middlewares/Third_Party/FatFs/src/ff.c **** 			cc = btw / SS(fs);				/* When remaining bytes >= sector size, */
 6968              		.loc 1 3660 0
 6969 0094 BA44     		add	r10, r10, r7
 6970              	.LVL1060:
3662:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (csect + cc > fs->csize) {	/* Clip at cluster boundary */
 6971              		.loc 1 3662 0
 6972 0096 750A     		lsrs	r5, r6, #9
 6973              	.LVL1061:
 6974 0098 5DD0     		beq	.L722
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 244


3663:Middlewares/Third_Party/FatFs/src/ff.c **** 					cc = fs->csize - csect;
 6975              		.loc 1 3663 0
 6976 009a 7B19     		adds	r3, r7, r5
 6977 009c BBF80A20 		ldrh	r2, [fp, #10]
 6978 00a0 9342     		cmp	r3, r2
 6979 00a2 00D9     		bls	.L723
3664:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 6980              		.loc 1 3664 0
 6981 00a4 D51B     		subs	r5, r2, r7
 6982              	.LVL1062:
 6983              	.L723:
3666:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 2
 6984              		.loc 1 3666 0
 6985 00a6 2B46     		mov	r3, r5
 6986 00a8 5246     		mov	r2, r10
 6987 00aa 4146     		mov	r1, r8
 6988 00ac 9BF80100 		ldrb	r0, [fp, #1]	@ zero_extendqisi2
 6989 00b0 FFF7FEFF 		bl	disk_write
 6990              	.LVL1063:
 6991 00b4 0028     		cmp	r0, #0
 6992 00b6 39D1     		bne	.L737
3674:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(fp->buf, wbuff + ((fp->sect - sect) * SS(fs)), SS(fs));
 6993              		.loc 1 3674 0
 6994 00b8 216A     		ldr	r1, [r4, #32]
 6995 00ba A1EB0A01 		sub	r1, r1, r10
 6996 00be 8D42     		cmp	r5, r1
 6997 00c0 3CD8     		bhi	.L738
 6998              	.L725:
3680:Middlewares/Third_Party/FatFs/src/ff.c **** 				continue;
 6999              		.loc 1 3680 0
 7000 00c2 6D02     		lsls	r5, r5, #9
 7001              	.LVL1064:
3681:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 7002              		.loc 1 3681 0
 7003 00c4 63E0     		b	.L726
 7004              	.LVL1065:
 7005              	.L715:
3641:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 7006              		.loc 1 3641 0
 7007 00c6 E169     		ldr	r1, [r4, #28]
 7008 00c8 0198     		ldr	r0, [sp, #4]
 7009 00ca FFF7FEFF 		bl	create_chain
 7010              	.LVL1066:
 7011 00ce C8E7     		b	.L714
 7012              	.L733:
3645:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 7013              		.loc 1 3645 0 discriminator 1
 7014 00d0 0225     		movs	r5, #2
 7015 00d2 6575     		strb	r5, [r4, #21]
 7016 00d4 2946     		mov	r1, r5
 7017 00d6 0398     		ldr	r0, [sp, #12]
 7018              	.LVL1067:
 7019 00d8 FFF7FEFF 		bl	unlock_fs
 7020              	.LVL1068:
 7021 00dc 0095     		str	r5, [sp]
 7022              	.LVL1069:
 7023 00de B0E7     		b	.L707
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 245


 7024              	.LVL1070:
 7025              	.L734:
3646:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;			/* Update current cluster */
 7026              		.loc 1 3646 0 discriminator 1
 7027 00e0 0125     		movs	r5, #1
 7028 00e2 6575     		strb	r5, [r4, #21]
 7029 00e4 2946     		mov	r1, r5
 7030 00e6 0398     		ldr	r0, [sp, #12]
 7031              	.LVL1071:
 7032 00e8 FFF7FEFF 		bl	unlock_fs
 7033              	.LVL1072:
 7034 00ec 0095     		str	r5, [sp]
 7035              	.LVL1073:
 7036 00ee A8E7     		b	.L707
 7037              	.LVL1074:
 7038              	.L735:
3654:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
 7039              		.loc 1 3654 0
 7040 00f0 0123     		movs	r3, #1
 7041 00f2 226A     		ldr	r2, [r4, #32]
 7042 00f4 04F13001 		add	r1, r4, #48
 7043 00f8 0398     		ldr	r0, [sp, #12]
 7044 00fa 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 7045 00fc FFF7FEFF 		bl	disk_write
 7046              	.LVL1075:
 7047 0100 20B9     		cbnz	r0, .L739
3655:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 7048              		.loc 1 3655 0
 7049 0102 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 7050 0104 03F07F03 		and	r3, r3, #127
 7051 0108 2375     		strb	r3, [r4, #20]
 7052 010a BAE7     		b	.L719
 7053              	.L739:
3654:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
 7054              		.loc 1 3654 0 discriminator 1
 7055 010c 0125     		movs	r5, #1
 7056 010e 6575     		strb	r5, [r4, #21]
 7057 0110 2946     		mov	r1, r5
 7058 0112 0398     		ldr	r0, [sp, #12]
 7059 0114 FFF7FEFF 		bl	unlock_fs
 7060              	.LVL1076:
 7061 0118 0095     		str	r5, [sp]
 7062              	.LVL1077:
 7063 011a 92E7     		b	.L707
 7064              	.LVL1078:
 7065              	.L736:
3659:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += csect;
 7066              		.loc 1 3659 0 discriminator 1
 7067 011c 0225     		movs	r5, #2
 7068 011e 6575     		strb	r5, [r4, #21]
 7069 0120 2946     		mov	r1, r5
 7070 0122 5846     		mov	r0, fp
 7071              	.LVL1079:
 7072 0124 FFF7FEFF 		bl	unlock_fs
 7073              	.LVL1080:
 7074 0128 0095     		str	r5, [sp]
 7075              	.LVL1081:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 246


 7076 012a 8AE7     		b	.L707
 7077              	.LVL1082:
 7078              	.L737:
3666:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 2
 7079              		.loc 1 3666 0 discriminator 1
 7080 012c 0125     		movs	r5, #1
 7081              	.LVL1083:
 7082 012e 6575     		strb	r5, [r4, #21]
 7083 0130 2946     		mov	r1, r5
 7084 0132 0398     		ldr	r0, [sp, #12]
 7085 0134 FFF7FEFF 		bl	unlock_fs
 7086              	.LVL1084:
 7087 0138 0095     		str	r5, [sp]
 7088              	.LVL1085:
 7089 013a 82E7     		b	.L707
 7090              	.LVL1086:
 7091              	.L738:
3675:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->flag &= (BYTE)~FA_DIRTY;
 7092              		.loc 1 3675 0
 7093 013c 4FF40072 		mov	r2, #512
 7094 0140 08EB4121 		add	r1, r8, r1, lsl #9
 7095 0144 04F13000 		add	r0, r4, #48
 7096 0148 FFF7FEFF 		bl	mem_cpy
 7097              	.LVL1087:
3676:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 7098              		.loc 1 3676 0
 7099 014c 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 7100 014e 03F07F03 		and	r3, r3, #127
 7101 0152 2375     		strb	r3, [r4, #20]
 7102 0154 B5E7     		b	.L725
 7103              	.L722:
3689:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr < fp->obj.objsize &&
 7104              		.loc 1 3689 0
 7105 0156 236A     		ldr	r3, [r4, #32]
 7106 0158 9A45     		cmp	r10, r3
 7107 015a 03D0     		beq	.L727
3690:Middlewares/Third_Party/FatFs/src/ff.c **** 				disk_read(fs->drv, fp->buf, sect, 1) != RES_OK) {
 7108              		.loc 1 3690 0 discriminator 1
 7109 015c A269     		ldr	r2, [r4, #24]
 7110 015e E368     		ldr	r3, [r4, #12]
3689:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr < fp->obj.objsize &&
 7111              		.loc 1 3689 0 discriminator 1
 7112 0160 9A42     		cmp	r2, r3
 7113 0162 3BD3     		bcc	.L740
 7114              	.L727:
3695:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 7115              		.loc 1 3695 0
 7116 0164 C4F820A0 		str	r10, [r4, #32]
 7117              	.LVL1088:
 7118              	.L711:
3697:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (wcnt > btw) wcnt = btw;					/* Clip it by btw if needed */
 7119              		.loc 1 3697 0
 7120 0168 A369     		ldr	r3, [r4, #24]
 7121 016a C3F30803 		ubfx	r3, r3, #0, #9
 7122 016e C3F50075 		rsb	r5, r3, #512
 7123              	.LVL1089:
3698:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 247


 7124              		.loc 1 3698 0
 7125 0172 AE42     		cmp	r6, r5
 7126 0174 00D2     		bcs	.L728
 7127 0176 3546     		mov	r5, r6
 7128              	.LVL1090:
 7129              	.L728:
3704:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->flag |= FA_DIRTY;
 7130              		.loc 1 3704 0
 7131 0178 04F13000 		add	r0, r4, #48
 7132 017c 2A46     		mov	r2, r5
 7133 017e 4146     		mov	r1, r8
 7134 0180 1844     		add	r0, r0, r3
 7135 0182 FFF7FEFF 		bl	mem_cpy
 7136              	.LVL1091:
3705:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 7137              		.loc 1 3705 0
 7138 0186 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 7139 0188 63F07F03 		orn	r3, r3, #127
 7140 018c 2375     		strb	r3, [r4, #20]
 7141              	.L726:
3625:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->fptr % SS(fs) == 0) {		/* On the sector boundary? */
 7142              		.loc 1 3625 0
 7143 018e A844     		add	r8, r8, r5
 7144              	.LVL1092:
 7145 0190 A369     		ldr	r3, [r4, #24]
 7146 0192 2B44     		add	r3, r3, r5
 7147 0194 A361     		str	r3, [r4, #24]
 7148 0196 E268     		ldr	r2, [r4, #12]
 7149 0198 9342     		cmp	r3, r2
 7150 019a 38BF     		it	cc
 7151 019c 1346     		movcc	r3, r2
 7152 019e E360     		str	r3, [r4, #12]
 7153 01a0 D9F80030 		ldr	r3, [r9]
 7154 01a4 2B44     		add	r3, r3, r5
 7155 01a6 C9F80030 		str	r3, [r9]
 7156 01aa 761B     		subs	r6, r6, r5
 7157              	.LVL1093:
 7158              	.L710:
3624:Middlewares/Third_Party/FatFs/src/ff.c **** 		wbuff += wcnt, fp->fptr += wcnt, fp->obj.objsize = (fp->fptr > fp->obj.objsize) ? fp->fptr : fp->
 7159              		.loc 1 3624 0
 7160 01ac 46B3     		cbz	r6, .L716
3626:Middlewares/Third_Party/FatFs/src/ff.c **** 			csect = (UINT)(fp->fptr / SS(fs)) & (fs->csize - 1);	/* Sector offset in the cluster */
 7161              		.loc 1 3626 0
 7162 01ae A169     		ldr	r1, [r4, #24]
 7163 01b0 C1F30803 		ubfx	r3, r1, #0, #9
 7164 01b4 002B     		cmp	r3, #0
 7165 01b6 D7D1     		bne	.L711
3627:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (csect == 0) {				/* On the cluster boundary? */
 7166              		.loc 1 3627 0
 7167 01b8 039B     		ldr	r3, [sp, #12]
 7168 01ba 5F89     		ldrh	r7, [r3, #10]
 7169 01bc 013F     		subs	r7, r7, #1
 7170              	.LVL1094:
3628:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->fptr == 0) {		/* On the top of the file? */
 7171              		.loc 1 3628 0
 7172 01be 17EA5127 		ands	r7, r7, r1, lsr #9
 7173              	.LVL1095:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 248


 7174 01c2 7FF45AAF 		bne	.L712
3629:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = fp->obj.sclust;	/* Follow from the origin */
 7175              		.loc 1 3629 0
 7176 01c6 0029     		cmp	r1, #0
 7177 01c8 7FF446AF 		bne	.L713
3630:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0) {		/* If no cluster is allocated, */
 7178              		.loc 1 3630 0
 7179 01cc A068     		ldr	r0, [r4, #8]
 7180              	.LVL1096:
3631:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = create_chain(&fp->obj, 0);	/* create a new cluster chain */
 7181              		.loc 1 3631 0
 7182 01ce 0028     		cmp	r0, #0
 7183 01d0 7FF447AF 		bne	.L714
3632:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 7184              		.loc 1 3632 0
 7185 01d4 0198     		ldr	r0, [sp, #4]
 7186              	.LVL1097:
 7187 01d6 FFF7FEFF 		bl	create_chain
 7188              	.LVL1098:
 7189 01da 42E7     		b	.L714
 7190              	.LVL1099:
 7191              	.L740:
3691:Middlewares/Third_Party/FatFs/src/ff.c **** 					ABORT(fs, FR_DISK_ERR);
 7192              		.loc 1 3691 0
 7193 01dc 0123     		movs	r3, #1
 7194 01de 5246     		mov	r2, r10
 7195 01e0 04F13001 		add	r1, r4, #48
 7196 01e4 9BF80100 		ldrb	r0, [fp, #1]	@ zero_extendqisi2
 7197 01e8 FFF7FEFF 		bl	disk_read
 7198              	.LVL1100:
3690:Middlewares/Third_Party/FatFs/src/ff.c **** 				disk_read(fs->drv, fp->buf, sect, 1) != RES_OK) {
 7199              		.loc 1 3690 0
 7200 01ec 0028     		cmp	r0, #0
 7201 01ee B9D0     		beq	.L727
3692:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 7202              		.loc 1 3692 0
 7203 01f0 0125     		movs	r5, #1
 7204              	.LVL1101:
 7205 01f2 6575     		strb	r5, [r4, #21]
 7206 01f4 2946     		mov	r1, r5
 7207 01f6 0398     		ldr	r0, [sp, #12]
 7208 01f8 FFF7FEFF 		bl	unlock_fs
 7209              	.LVL1102:
 7210 01fc 0095     		str	r5, [sp]
 7211              	.LVL1103:
 7212 01fe 20E7     		b	.L707
 7213              	.LVL1104:
 7214              	.L716:
3709:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7215              		.loc 1 3709 0
 7216 0200 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 7217 0202 43F04003 		orr	r3, r3, #64
 7218 0206 2375     		strb	r3, [r4, #20]
3711:Middlewares/Third_Party/FatFs/src/ff.c **** }
 7219              		.loc 1 3711 0
 7220 0208 0021     		movs	r1, #0
 7221 020a 0398     		ldr	r0, [sp, #12]
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 249


 7222 020c FFF7FEFF 		bl	unlock_fs
 7223              	.LVL1105:
 7224 0210 17E7     		b	.L707
 7225              		.cfi_endproc
 7226              	.LFE191:
 7228              		.section	.text.putc_bfd,"ax",%progbits
 7229              		.align	1
 7230              		.syntax unified
 7231              		.thumb
 7232              		.thumb_func
 7233              		.fpu fpv5-sp-d16
 7235              	putc_bfd:
 7236              	.LFB211:
5910:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT bw;
 7237              		.loc 1 5910 0
 7238              		.cfi_startproc
 7239              		@ args = 0, pretend = 0, frame = 8
 7240              		@ frame_needed = 0, uses_anonymous_args = 0
 7241              	.LVL1106:
 7242 0000 70B5     		push	{r4, r5, r6, lr}
 7243              	.LCFI77:
 7244              		.cfi_def_cfa_offset 16
 7245              		.cfi_offset 4, -16
 7246              		.cfi_offset 5, -12
 7247              		.cfi_offset 6, -8
 7248              		.cfi_offset 14, -4
 7249 0002 82B0     		sub	sp, sp, #8
 7250              	.LCFI78:
 7251              		.cfi_def_cfa_offset 24
 7252 0004 0446     		mov	r4, r0
 7253 0006 0E46     		mov	r6, r1
5915:Middlewares/Third_Party/FatFs/src/ff.c **** 		putc_bfd(pb, '\r');
 7254              		.loc 1 5915 0
 7255 0008 0A29     		cmp	r1, #10
 7256 000a 0DD0     		beq	.L748
 7257              	.LVL1107:
 7258              	.L742:
5919:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (i < 0) return;
 7259              		.loc 1 5919 0
 7260 000c 6368     		ldr	r3, [r4, #4]
 7261              	.LVL1108:
5920:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7262              		.loc 1 5920 0
 7263 000e 002B     		cmp	r3, #0
 7264 0010 08DB     		blt	.L741
5949:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 7265              		.loc 1 5949 0
 7266 0012 5D1C     		adds	r5, r3, #1
 7267              	.LVL1109:
 7268 0014 2344     		add	r3, r3, r4
 7269 0016 1E73     		strb	r6, [r3, #12]
5952:Middlewares/Third_Party/FatFs/src/ff.c **** 		f_write(pb->fp, pb->buf, (UINT)i, &bw);
 7270              		.loc 1 5952 0
 7271 0018 3C2D     		cmp	r5, #60
 7272 001a 09DC     		bgt	.L749
 7273              	.LVL1110:
 7274              	.L744:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 250


5956:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->nchr++;
 7275              		.loc 1 5956 0
 7276 001c 6560     		str	r5, [r4, #4]
5957:Middlewares/Third_Party/FatFs/src/ff.c **** }
 7277              		.loc 1 5957 0
 7278 001e A368     		ldr	r3, [r4, #8]
 7279 0020 0133     		adds	r3, r3, #1
 7280 0022 A360     		str	r3, [r4, #8]
 7281              	.LVL1111:
 7282              	.L741:
5958:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7283              		.loc 1 5958 0
 7284 0024 02B0     		add	sp, sp, #8
 7285              	.LCFI79:
 7286              		.cfi_remember_state
 7287              		.cfi_def_cfa_offset 16
 7288              		@ sp needed
 7289 0026 70BD     		pop	{r4, r5, r6, pc}
 7290              	.LVL1112:
 7291              	.L748:
 7292              	.LCFI80:
 7293              		.cfi_restore_state
5916:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 7294              		.loc 1 5916 0
 7295 0028 0D21     		movs	r1, #13
 7296              	.LVL1113:
 7297 002a FFF7E9FF 		bl	putc_bfd
 7298              	.LVL1114:
 7299 002e EDE7     		b	.L742
 7300              	.LVL1115:
 7301              	.L749:
5953:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = (bw == (UINT)i) ? 0 : -1;
 7302              		.loc 1 5953 0
 7303 0030 01AB     		add	r3, sp, #4
 7304 0032 2A46     		mov	r2, r5
 7305 0034 04F10C01 		add	r1, r4, #12
 7306 0038 2068     		ldr	r0, [r4]
 7307 003a FFF7FEFF 		bl	f_write
 7308              	.LVL1116:
5954:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 7309              		.loc 1 5954 0
 7310 003e 019B     		ldr	r3, [sp, #4]
 7311 0040 9D42     		cmp	r5, r3
 7312 0042 02D0     		beq	.L750
 7313 0044 4FF0FF35 		mov	r5, #-1
 7314              	.LVL1117:
 7315 0048 E8E7     		b	.L744
 7316              	.LVL1118:
 7317              	.L750:
 7318 004a 0025     		movs	r5, #0
 7319              	.LVL1119:
 7320 004c E6E7     		b	.L744
 7321              		.cfi_endproc
 7322              	.LFE211:
 7324              		.section	.text.putc_flush,"ax",%progbits
 7325              		.align	1
 7326              		.syntax unified
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 251


 7327              		.thumb
 7328              		.thumb_func
 7329              		.fpu fpv5-sp-d16
 7331              	putc_flush:
 7332              	.LFB212:
5965:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT nw;
 7333              		.loc 1 5965 0
 7334              		.cfi_startproc
 7335              		@ args = 0, pretend = 0, frame = 8
 7336              		@ frame_needed = 0, uses_anonymous_args = 0
 7337              	.LVL1120:
5968:Middlewares/Third_Party/FatFs/src/ff.c **** 		&& f_write(pb->fp, pb->buf, (UINT)pb->idx, &nw) == FR_OK
 7338              		.loc 1 5968 0
 7339 0000 4268     		ldr	r2, [r0, #4]
 7340 0002 002A     		cmp	r2, #0
 7341 0004 10DB     		blt	.L753
5965:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT nw;
 7342              		.loc 1 5965 0
 7343 0006 10B5     		push	{r4, lr}
 7344              	.LCFI81:
 7345              		.cfi_def_cfa_offset 8
 7346              		.cfi_offset 4, -8
 7347              		.cfi_offset 14, -4
 7348 0008 82B0     		sub	sp, sp, #8
 7349              	.LCFI82:
 7350              		.cfi_def_cfa_offset 16
 7351 000a 0446     		mov	r4, r0
5969:Middlewares/Third_Party/FatFs/src/ff.c **** 		&& (UINT)pb->idx == nw) return pb->nchr;
 7352              		.loc 1 5969 0
 7353 000c 01AB     		add	r3, sp, #4
 7354 000e 00F10C01 		add	r1, r0, #12
 7355 0012 0068     		ldr	r0, [r0]
 7356              	.LVL1121:
 7357 0014 FFF7FEFF 		bl	f_write
 7358              	.LVL1122:
 7359 0018 48B9     		cbnz	r0, .L754
5970:Middlewares/Third_Party/FatFs/src/ff.c **** 	return EOF;
 7360              		.loc 1 5970 0
 7361 001a 6268     		ldr	r2, [r4, #4]
 7362 001c 019B     		ldr	r3, [sp, #4]
 7363 001e 9A42     		cmp	r2, r3
 7364 0020 08D1     		bne	.L755
5970:Middlewares/Third_Party/FatFs/src/ff.c **** 	return EOF;
 7365              		.loc 1 5970 0 is_stmt 0 discriminator 1
 7366 0022 A068     		ldr	r0, [r4, #8]
 7367              	.L751:
5972:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7368              		.loc 1 5972 0 is_stmt 1
 7369 0024 02B0     		add	sp, sp, #8
 7370              	.LCFI83:
 7371              		.cfi_def_cfa_offset 8
 7372              		@ sp needed
 7373 0026 10BD     		pop	{r4, pc}
 7374              	.LVL1123:
 7375              	.L753:
 7376              	.LCFI84:
 7377              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 252


 7378              		.cfi_restore 4
 7379              		.cfi_restore 14
5971:Middlewares/Third_Party/FatFs/src/ff.c **** }
 7380              		.loc 1 5971 0
 7381 0028 4FF0FF30 		mov	r0, #-1
 7382              	.LVL1124:
 7383 002c 7047     		bx	lr
 7384              	.LVL1125:
 7385              	.L754:
 7386              	.LCFI85:
 7387              		.cfi_def_cfa_offset 16
 7388              		.cfi_offset 4, -8
 7389              		.cfi_offset 14, -4
 7390 002e 4FF0FF30 		mov	r0, #-1
 7391 0032 F7E7     		b	.L751
 7392              	.L755:
 7393 0034 4FF0FF30 		mov	r0, #-1
 7394 0038 F4E7     		b	.L751
 7395              		.cfi_endproc
 7396              	.LFE212:
 7398              		.section	.text.f_sync,"ax",%progbits
 7399              		.align	1
 7400              		.global	f_sync
 7401              		.syntax unified
 7402              		.thumb
 7403              		.thumb_func
 7404              		.fpu fpv5-sp-d16
 7406              	f_sync:
 7407              	.LFB192:
3724:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 7408              		.loc 1 3724 0
 7409              		.cfi_startproc
 7410              		@ args = 0, pretend = 0, frame = 8
 7411              		@ frame_needed = 0, uses_anonymous_args = 0
 7412              	.LVL1126:
 7413 0000 70B5     		push	{r4, r5, r6, lr}
 7414              	.LCFI86:
 7415              		.cfi_def_cfa_offset 16
 7416              		.cfi_offset 4, -16
 7417              		.cfi_offset 5, -12
 7418              		.cfi_offset 6, -8
 7419              		.cfi_offset 14, -4
 7420 0002 82B0     		sub	sp, sp, #8
 7421              	.LCFI87:
 7422              		.cfi_def_cfa_offset 24
 7423 0004 0546     		mov	r5, r0
3734:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 7424              		.loc 1 3734 0
 7425 0006 01A9     		add	r1, sp, #4
 7426 0008 FFF7FEFF 		bl	validate
 7427              	.LVL1127:
3735:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->flag & FA_MODIFIED) {	/* Is there any change to the file? */
 7428              		.loc 1 3735 0
 7429 000c 0446     		mov	r4, r0
 7430 000e 78B9     		cbnz	r0, .L761
3736:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
 7431              		.loc 1 3736 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 253


 7432 0010 2B7D     		ldrb	r3, [r5, #20]	@ zero_extendqisi2
 7433 0012 13F0400F 		tst	r3, #64
 7434 0016 0BD0     		beq	.L761
3738:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) LEAVE_FF(fs, FR_DISK_ERR);
 7435              		.loc 1 3738 0
 7436 0018 13F0800F 		tst	r3, #128
 7437 001c 0FD1     		bne	.L766
 7438              	.LVL1128:
 7439              	.L762:
3744:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 7440              		.loc 1 3744 0
 7441 001e FFF7FEFF 		bl	get_fattime
 7442              	.LVL1129:
 7443 0022 0646     		mov	r6, r0
 7444              	.LVL1130:
3774:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {
 7445              		.loc 1 3774 0
 7446 0024 696A     		ldr	r1, [r5, #36]
 7447 0026 0198     		ldr	r0, [sp, #4]
 7448              	.LVL1131:
 7449 0028 FFF7FEFF 		bl	move_window
 7450              	.LVL1132:
3775:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir = fp->dir_ptr;
 7451              		.loc 1 3775 0
 7452 002c 0446     		mov	r4, r0
 7453 002e D0B1     		cbz	r0, .L767
 7454              	.LVL1133:
 7455              	.L761:
3790:Middlewares/Third_Party/FatFs/src/ff.c **** }
 7456              		.loc 1 3790 0
 7457 0030 2146     		mov	r1, r4
 7458 0032 0198     		ldr	r0, [sp, #4]
 7459 0034 FFF7FEFF 		bl	unlock_fs
 7460              	.LVL1134:
 7461              	.L764:
3791:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7462              		.loc 1 3791 0
 7463 0038 2046     		mov	r0, r4
 7464 003a 02B0     		add	sp, sp, #8
 7465              	.LCFI88:
 7466              		.cfi_remember_state
 7467              		.cfi_def_cfa_offset 16
 7468              		@ sp needed
 7469 003c 70BD     		pop	{r4, r5, r6, pc}
 7470              	.LVL1135:
 7471              	.L766:
 7472              	.LCFI89:
 7473              		.cfi_restore_state
3739:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
 7474              		.loc 1 3739 0
 7475 003e 0123     		movs	r3, #1
 7476 0040 2A6A     		ldr	r2, [r5, #32]
 7477 0042 05F13001 		add	r1, r5, #48
 7478 0046 0198     		ldr	r0, [sp, #4]
 7479              	.LVL1136:
 7480 0048 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 7481 004a FFF7FEFF 		bl	disk_write
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 254


 7482              	.LVL1137:
 7483 004e 20B9     		cbnz	r0, .L768
3740:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 7484              		.loc 1 3740 0
 7485 0050 2B7D     		ldrb	r3, [r5, #20]	@ zero_extendqisi2
 7486 0052 03F07F03 		and	r3, r3, #127
 7487 0056 2B75     		strb	r3, [r5, #20]
 7488 0058 E1E7     		b	.L762
 7489              	.L768:
3739:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
 7490              		.loc 1 3739 0 discriminator 1
 7491 005a 0121     		movs	r1, #1
 7492 005c 0198     		ldr	r0, [sp, #4]
 7493 005e FFF7FEFF 		bl	unlock_fs
 7494              	.LVL1138:
 7495 0062 0124     		movs	r4, #1
 7496 0064 E8E7     		b	.L764
 7497              	.LVL1139:
 7498              	.L767:
3776:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir[DIR_Attr] |= AM_ARC;						/* Set archive bit */
 7499              		.loc 1 3776 0
 7500 0066 AC6A     		ldr	r4, [r5, #40]
 7501              	.LVL1140:
3777:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fp->obj.fs, dir, fp->obj.sclust);		/* Update file allocation info  */
 7502              		.loc 1 3777 0
 7503 0068 E37A     		ldrb	r3, [r4, #11]	@ zero_extendqisi2
 7504 006a 43F02003 		orr	r3, r3, #32
 7505 006e E372     		strb	r3, [r4, #11]
3778:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dir + DIR_FileSize, (DWORD)fp->obj.objsize);	/* Update file size */
 7506              		.loc 1 3778 0
 7507 0070 AA68     		ldr	r2, [r5, #8]
 7508 0072 2146     		mov	r1, r4
 7509 0074 2868     		ldr	r0, [r5]
 7510              	.LVL1141:
 7511 0076 FFF7FEFF 		bl	st_clust
 7512              	.LVL1142:
3779:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dir + DIR_ModTime, tm);				/* Update modified time */
 7513              		.loc 1 3779 0
 7514 007a E968     		ldr	r1, [r5, #12]
 7515 007c 04F11C00 		add	r0, r4, #28
 7516 0080 FFF7FEFF 		bl	st_dword
 7517              	.LVL1143:
3780:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_word(dir + DIR_LstAccDate, 0);
 7518              		.loc 1 3780 0
 7519 0084 3146     		mov	r1, r6
 7520 0086 04F11600 		add	r0, r4, #22
 7521 008a FFF7FEFF 		bl	st_dword
 7522              	.LVL1144:
3781:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->wflag = 1;
 7523              		.loc 1 3781 0
 7524 008e 0021     		movs	r1, #0
 7525 0090 04F11200 		add	r0, r4, #18
 7526 0094 FFF7FEFF 		bl	st_word
 7527              	.LVL1145:
3782:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = sync_fs(fs);					/* Restore it to the directory */
 7528              		.loc 1 3782 0
 7529 0098 0122     		movs	r2, #1
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 255


 7530 009a 019B     		ldr	r3, [sp, #4]
 7531 009c DA70     		strb	r2, [r3, #3]
3783:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->flag &= (BYTE)~FA_MODIFIED;
 7532              		.loc 1 3783 0
 7533 009e 0198     		ldr	r0, [sp, #4]
 7534 00a0 FFF7FEFF 		bl	sync_fs
 7535              	.LVL1146:
 7536 00a4 0446     		mov	r4, r0
 7537              	.LVL1147:
3784:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 7538              		.loc 1 3784 0
 7539 00a6 2B7D     		ldrb	r3, [r5, #20]	@ zero_extendqisi2
 7540 00a8 23F04003 		bic	r3, r3, #64
 7541 00ac 2B75     		strb	r3, [r5, #20]
 7542 00ae BFE7     		b	.L761
 7543              		.cfi_endproc
 7544              	.LFE192:
 7546              		.section	.text.f_close,"ax",%progbits
 7547              		.align	1
 7548              		.global	f_close
 7549              		.syntax unified
 7550              		.thumb
 7551              		.thumb_func
 7552              		.fpu fpv5-sp-d16
 7554              	f_close:
 7555              	.LFB193:
3805:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 7556              		.loc 1 3805 0
 7557              		.cfi_startproc
 7558              		@ args = 0, pretend = 0, frame = 8
 7559              		@ frame_needed = 0, uses_anonymous_args = 0
 7560              	.LVL1148:
 7561 0000 30B5     		push	{r4, r5, lr}
 7562              	.LCFI90:
 7563              		.cfi_def_cfa_offset 12
 7564              		.cfi_offset 4, -12
 7565              		.cfi_offset 5, -8
 7566              		.cfi_offset 14, -4
 7567 0002 83B0     		sub	sp, sp, #12
 7568              	.LCFI91:
 7569              		.cfi_def_cfa_offset 24
 7570 0004 0546     		mov	r5, r0
3810:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK)
 7571              		.loc 1 3810 0
 7572 0006 FFF7FEFF 		bl	f_sync
 7573              	.LVL1149:
3811:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 7574              		.loc 1 3811 0
 7575 000a 0446     		mov	r4, r0
 7576 000c 10B1     		cbz	r0, .L773
 7577              	.LVL1150:
 7578              	.L770:
3829:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7579              		.loc 1 3829 0
 7580 000e 2046     		mov	r0, r4
 7581 0010 03B0     		add	sp, sp, #12
 7582              	.LCFI92:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 256


 7583              		.cfi_remember_state
 7584              		.cfi_def_cfa_offset 12
 7585              		@ sp needed
 7586 0012 30BD     		pop	{r4, r5, pc}
 7587              	.LVL1151:
 7588              	.L773:
 7589              	.LCFI93:
 7590              		.cfi_restore_state
3814:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
 7591              		.loc 1 3814 0
 7592 0014 01A9     		add	r1, sp, #4
 7593 0016 2846     		mov	r0, r5
 7594              	.LVL1152:
 7595 0018 FFF7FEFF 		bl	validate
 7596              	.LVL1153:
3815:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 7597              		.loc 1 3815 0
 7598 001c 0446     		mov	r4, r0
 7599 001e 0028     		cmp	r0, #0
 7600 0020 F5D1     		bne	.L770
3817:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK)
 7601              		.loc 1 3817 0
 7602 0022 2869     		ldr	r0, [r5, #16]
 7603              	.LVL1154:
 7604 0024 FFF7FEFF 		bl	dec_lock
 7605              	.LVL1155:
3818:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 7606              		.loc 1 3818 0
 7607 0028 0446     		mov	r4, r0
 7608 002a 08B9     		cbnz	r0, .L771
3821:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 7609              		.loc 1 3821 0
 7610 002c 0023     		movs	r3, #0
 7611 002e 2B60     		str	r3, [r5]
 7612              	.L771:
3824:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 7613              		.loc 1 3824 0
 7614 0030 0021     		movs	r1, #0
 7615 0032 0198     		ldr	r0, [sp, #4]
 7616              	.LVL1156:
 7617 0034 FFF7FEFF 		bl	unlock_fs
 7618              	.LVL1157:
 7619 0038 E9E7     		b	.L770
 7620              		.cfi_endproc
 7621              	.LFE193:
 7623              		.section	.text.f_chdrive,"ax",%progbits
 7624              		.align	1
 7625              		.global	f_chdrive
 7626              		.syntax unified
 7627              		.thumb
 7628              		.thumb_func
 7629              		.fpu fpv5-sp-d16
 7631              	f_chdrive:
 7632              	.LFB194:
3843:Middlewares/Third_Party/FatFs/src/ff.c **** 	int vol;
 7633              		.loc 1 3843 0
 7634              		.cfi_startproc
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 257


 7635              		@ args = 0, pretend = 0, frame = 8
 7636              		@ frame_needed = 0, uses_anonymous_args = 0
 7637              	.LVL1158:
 7638 0000 00B5     		push	{lr}
 7639              	.LCFI94:
 7640              		.cfi_def_cfa_offset 4
 7641              		.cfi_offset 14, -4
 7642 0002 83B0     		sub	sp, sp, #12
 7643              	.LCFI95:
 7644              		.cfi_def_cfa_offset 16
 7645 0004 02AB     		add	r3, sp, #8
 7646 0006 43F8040D 		str	r0, [r3, #-4]!
3848:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
 7647              		.loc 1 3848 0
 7648 000a 1846     		mov	r0, r3
 7649              	.LVL1159:
 7650 000c FFF7FEFF 		bl	get_ldnumber
 7651              	.LVL1160:
3849:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7652              		.loc 1 3849 0
 7653 0010 0028     		cmp	r0, #0
 7654 0012 05DB     		blt	.L776
3851:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7655              		.loc 1 3851 0
 7656 0014 034B     		ldr	r3, .L778
 7657 0016 1870     		strb	r0, [r3]
3853:Middlewares/Third_Party/FatFs/src/ff.c **** }
 7658              		.loc 1 3853 0
 7659 0018 0020     		movs	r0, #0
 7660              	.LVL1161:
 7661              	.L775:
3854:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 7662              		.loc 1 3854 0
 7663 001a 03B0     		add	sp, sp, #12
 7664              	.LCFI96:
 7665              		.cfi_remember_state
 7666              		.cfi_def_cfa_offset 4
 7667              		@ sp needed
 7668 001c 5DF804FB 		ldr	pc, [sp], #4
 7669              	.LVL1162:
 7670              	.L776:
 7671              	.LCFI97:
 7672              		.cfi_restore_state
3849:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7673              		.loc 1 3849 0
 7674 0020 0B20     		movs	r0, #11
 7675              	.LVL1163:
 7676 0022 FAE7     		b	.L775
 7677              	.L779:
 7678              		.align	2
 7679              	.L778:
 7680 0024 00000000 		.word	.LANCHOR3
 7681              		.cfi_endproc
 7682              	.LFE194:
 7684              		.section	.text.f_chdir,"ax",%progbits
 7685              		.align	1
 7686              		.global	f_chdir
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 258


 7687              		.syntax unified
 7688              		.thumb
 7689              		.thumb_func
 7690              		.fpu fpv5-sp-d16
 7692              	f_chdir:
 7693              	.LFB195:
3861:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 7694              		.loc 1 3861 0
 7695              		.cfi_startproc
 7696              		@ args = 0, pretend = 0, frame = 72
 7697              		@ frame_needed = 0, uses_anonymous_args = 0
 7698              	.LVL1164:
 7699 0000 70B5     		push	{r4, r5, r6, lr}
 7700              	.LCFI98:
 7701              		.cfi_def_cfa_offset 16
 7702              		.cfi_offset 4, -16
 7703              		.cfi_offset 5, -12
 7704              		.cfi_offset 6, -8
 7705              		.cfi_offset 14, -4
 7706 0002 92B0     		sub	sp, sp, #72
 7707              	.LCFI99:
 7708              		.cfi_def_cfa_offset 88
 7709 0004 0190     		str	r0, [sp, #4]
3868:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 7710              		.loc 1 3868 0
 7711 0006 0022     		movs	r2, #0
 7712 0008 03A9     		add	r1, sp, #12
 7713 000a 01A8     		add	r0, sp, #4
 7714              	.LVL1165:
 7715 000c FFF7FEFF 		bl	find_volume
 7716              	.LVL1166:
3869:Middlewares/Third_Party/FatFs/src/ff.c **** 		dj.obj.fs = fs;
 7717              		.loc 1 3869 0
 7718 0010 0446     		mov	r4, r0
 7719 0012 18BB     		cbnz	r0, .L781
3870:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
 7720              		.loc 1 3870 0
 7721 0014 039B     		ldr	r3, [sp, #12]
 7722 0016 0493     		str	r3, [sp, #16]
3871:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);		/* Follow the path */
 7723              		.loc 1 3871 0
 7724 0018 4FF40070 		mov	r0, #512
 7725              	.LVL1167:
 7726 001c FFF7FEFF 		bl	ff_memalloc
 7727              	.LVL1168:
 7728 0020 0546     		mov	r5, r0
 7729 0022 10B3     		cbz	r0, .L789
3871:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);		/* Follow the path */
 7730              		.loc 1 3871 0 is_stmt 0 discriminator 2
 7731 0024 039B     		ldr	r3, [sp, #12]
 7732 0026 D860     		str	r0, [r3, #12]
3872:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {					/* Follow completed */
 7733              		.loc 1 3872 0 is_stmt 1 discriminator 2
 7734 0028 0199     		ldr	r1, [sp, #4]
 7735 002a 04A8     		add	r0, sp, #16
 7736              	.LVL1169:
 7737 002c FFF7FEFF 		bl	follow_path
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 259


 7738              	.LVL1170:
3873:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {
 7739              		.loc 1 3873 0 discriminator 2
 7740 0030 0446     		mov	r4, r0
 7741 0032 70B9     		cbnz	r0, .L784
3874:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->cdir = dj.obj.sclust;	/* It is the start directory itself */
 7742              		.loc 1 3874 0
 7743 0034 9DF93F30 		ldrsb	r3, [sp, #63]
 7744 0038 002B     		cmp	r3, #0
 7745 003a 1CDB     		blt	.L790
3884:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 7746              		.loc 1 3884 0
 7747 003c 9DF81630 		ldrb	r3, [sp, #22]	@ zero_extendqisi2
 7748 0040 13F0100F 		tst	r3, #16
 7749 0044 1BD0     		beq	.L786
3894:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 7750              		.loc 1 3894 0
 7751 0046 039E     		ldr	r6, [sp, #12]
 7752 0048 0C99     		ldr	r1, [sp, #48]
 7753 004a 3046     		mov	r0, r6
 7754              	.LVL1171:
 7755 004c FFF7FEFF 		bl	ld_clust
 7756              	.LVL1172:
 7757 0050 F061     		str	r0, [r6, #28]
 7758              	.L784:
 7759              	.LVL1173:
3901:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_NO_FILE) res = FR_NO_PATH;
 7760              		.loc 1 3901 0
 7761 0052 2846     		mov	r0, r5
 7762 0054 FFF7FEFF 		bl	ff_memfree
 7763              	.LVL1174:
3902:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 7764              		.loc 1 3902 0
 7765 0058 042C     		cmp	r4, #4
 7766 005a 12D0     		beq	.L791
 7767              	.LVL1175:
 7768              	.L781:
3905:Middlewares/Third_Party/FatFs/src/ff.c **** }
 7769              		.loc 1 3905 0
 7770 005c 2146     		mov	r1, r4
 7771 005e 0398     		ldr	r0, [sp, #12]
 7772 0060 FFF7FEFF 		bl	unlock_fs
 7773              	.LVL1176:
 7774              	.L783:
3906:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7775              		.loc 1 3906 0
 7776 0064 2046     		mov	r0, r4
 7777 0066 12B0     		add	sp, sp, #72
 7778              	.LCFI100:
 7779              		.cfi_remember_state
 7780              		.cfi_def_cfa_offset 16
 7781              		@ sp needed
 7782 0068 70BD     		pop	{r4, r5, r6, pc}
 7783              	.LVL1177:
 7784              	.L789:
 7785              	.LCFI101:
 7786              		.cfi_restore_state
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 260


3871:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);		/* Follow the path */
 7787              		.loc 1 3871 0 discriminator 1
 7788 006a 1121     		movs	r1, #17
 7789 006c 0398     		ldr	r0, [sp, #12]
 7790              	.LVL1178:
 7791 006e FFF7FEFF 		bl	unlock_fs
 7792              	.LVL1179:
 7793 0072 1124     		movs	r4, #17
 7794 0074 F6E7     		b	.L783
 7795              	.LVL1180:
 7796              	.L790:
3875:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 7797              		.loc 1 3875 0
 7798 0076 069A     		ldr	r2, [sp, #24]
 7799 0078 039B     		ldr	r3, [sp, #12]
 7800 007a DA61     		str	r2, [r3, #28]
 7801 007c E9E7     		b	.L784
 7802              	.L786:
3897:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 7803              		.loc 1 3897 0
 7804 007e 0524     		movs	r4, #5
 7805 0080 E7E7     		b	.L784
 7806              	.LVL1181:
 7807              	.L791:
3902:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 7808              		.loc 1 3902 0
 7809 0082 0524     		movs	r4, #5
 7810              	.LVL1182:
 7811 0084 EAE7     		b	.L781
 7812              		.cfi_endproc
 7813              	.LFE195:
 7815              		.section	.text.f_getcwd,"ax",%progbits
 7816              		.align	1
 7817              		.global	f_getcwd
 7818              		.syntax unified
 7819              		.thumb
 7820              		.thumb_func
 7821              		.fpu fpv5-sp-d16
 7823              	f_getcwd:
 7824              	.LFB196:
3914:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 7825              		.loc 1 3914 0
 7826              		.cfi_startproc
 7827              		@ args = 0, pretend = 0, frame = 352
 7828              		@ frame_needed = 0, uses_anonymous_args = 0
 7829              	.LVL1183:
 7830 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 7831              	.LCFI102:
 7832              		.cfi_def_cfa_offset 24
 7833              		.cfi_offset 4, -24
 7834              		.cfi_offset 5, -20
 7835              		.cfi_offset 6, -16
 7836              		.cfi_offset 7, -12
 7837              		.cfi_offset 8, -8
 7838              		.cfi_offset 14, -4
 7839 0004 D8B0     		sub	sp, sp, #352
 7840              	.LCFI103:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 261


 7841              		.cfi_def_cfa_offset 376
 7842 0006 0190     		str	r0, [sp, #4]
 7843 0008 0E46     		mov	r6, r1
3925:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive */
 7844              		.loc 1 3925 0
 7845 000a 0022     		movs	r2, #0
 7846 000c 0270     		strb	r2, [r0]
3927:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 7847              		.loc 1 3927 0
 7848 000e 49A9     		add	r1, sp, #292
 7849              	.LVL1184:
 7850 0010 01A8     		add	r0, sp, #4
 7851              	.LVL1185:
 7852 0012 FFF7FEFF 		bl	find_volume
 7853              	.LVL1186:
3928:Middlewares/Third_Party/FatFs/src/ff.c **** 		dj.obj.fs = fs;
 7854              		.loc 1 3928 0
 7855 0016 0546     		mov	r5, r0
 7856 0018 0028     		cmp	r0, #0
 7857 001a 39D1     		bne	.L793
3929:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
 7858              		.loc 1 3929 0
 7859 001c 499B     		ldr	r3, [sp, #292]
 7860 001e 4A93     		str	r3, [sp, #296]
3930:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = len;			/* Bottom of buffer (directory stack base) */
 7861              		.loc 1 3930 0
 7862 0020 4FF40070 		mov	r0, #512
 7863              	.LVL1187:
 7864 0024 FFF7FEFF 		bl	ff_memalloc
 7865              	.LVL1188:
 7866 0028 8046     		mov	r8, r0
 7867 002a 28B1     		cbz	r0, .L811
3930:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = len;			/* Bottom of buffer (directory stack base) */
 7868              		.loc 1 3930 0 is_stmt 0 discriminator 2
 7869 002c 499B     		ldr	r3, [sp, #292]
 7870 002e D860     		str	r0, [r3, #12]
 7871              	.LVL1189:
3933:Middlewares/Third_Party/FatFs/src/ff.c **** 			while ((ccl = dj.obj.sclust) != 0) {	/* Repeat while current directory is a sub-directory */
 7872              		.loc 1 3933 0 is_stmt 1 discriminator 2
 7873 0030 DB69     		ldr	r3, [r3, #28]
 7874 0032 4C93     		str	r3, [sp, #304]
3931:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!_FS_EXFAT || fs->fs_type != FS_EXFAT) {	/* (Cannot do getcwd on exFAT and returns root path)
 7875              		.loc 1 3931 0 discriminator 2
 7876 0034 3446     		mov	r4, r6
3934:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_sdi(&dj, 1 * SZDIRE);	/* Get parent directory */
 7877              		.loc 1 3934 0 discriminator 2
 7878 0036 40E0     		b	.L796
 7879              	.LVL1190:
 7880              	.L811:
3930:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = len;			/* Bottom of buffer (directory stack base) */
 7881              		.loc 1 3930 0 discriminator 1
 7882 0038 1121     		movs	r1, #17
 7883 003a 4998     		ldr	r0, [sp, #292]
 7884              	.LVL1191:
 7885 003c FFF7FEFF 		bl	unlock_fs
 7886              	.LVL1192:
 7887 0040 1125     		movs	r5, #17
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 262


 7888 0042 29E0     		b	.L795
 7889              	.LVL1193:
 7890              	.L813:
3948:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res != FR_OK) break;
 7891              		.loc 1 3948 0
 7892 0044 0225     		movs	r5, #2
 7893              	.LVL1194:
 7894 0046 6AE0     		b	.L800
 7895              	.LVL1195:
 7896              	.L802:
3951:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (i < n + 3) {
 7897              		.loc 1 3951 0 discriminator 3
 7898 0048 0133     		adds	r3, r3, #1
 7899              	.LVL1196:
 7900              	.L801:
3951:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (i < n + 3) {
 7901              		.loc 1 3951 0 is_stmt 0 discriminator 1
 7902 004a 03AA     		add	r2, sp, #12
 7903 004c 1A44     		add	r2, r2, r3
 7904 004e 927D     		ldrb	r2, [r2, #22]	@ zero_extendqisi2
 7905 0050 002A     		cmp	r2, #0
 7906 0052 F9D1     		bne	.L802
3952:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_NOT_ENOUGH_CORE; break;
 7907              		.loc 1 3952 0 is_stmt 1
 7908 0054 DA1C     		adds	r2, r3, #3
 7909 0056 9442     		cmp	r4, r2
 7910 0058 29D2     		bcs	.L803
3953:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 7911              		.loc 1 3953 0
 7912 005a 1125     		movs	r5, #17
 7913              	.LVL1197:
 7914              	.L797:
3959:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
 7915              		.loc 1 3959 0
 7916 005c 019A     		ldr	r2, [sp, #4]
 7917              	.LVL1198:
3960:Middlewares/Third_Party/FatFs/src/ff.c **** #if _VOLUMES >= 2
 7918              		.loc 1 3960 0
 7919 005e 95B9     		cbnz	r5, .L806
 7920              	.LVL1199:
3962:Middlewares/Third_Party/FatFs/src/ff.c **** 			*tp++ = ':';
 7921              		.loc 1 3962 0
 7922 0060 354B     		ldr	r3, .L814
 7923 0062 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 7924 0064 3031     		adds	r1, r1, #48
 7925 0066 1346     		mov	r3, r2
 7926 0068 03F8021B 		strb	r1, [r3], #2
 7927              	.LVL1200:
3963:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 7928              		.loc 1 3963 0
 7929 006c 3A21     		movs	r1, #58
 7930 006e 5170     		strb	r1, [r2, #1]
3965:Middlewares/Third_Party/FatFs/src/ff.c **** 				*tp++ = '/';
 7931              		.loc 1 3965 0
 7932 0070 B442     		cmp	r4, r6
 7933 0072 5CD0     		beq	.L812
 7934              	.L807:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 263


3969:Middlewares/Third_Party/FatFs/src/ff.c **** 				while (i < len);
 7935              		.loc 1 3969 0 discriminator 1
 7936 0074 5A1C     		adds	r2, r3, #1
 7937              	.LVL1201:
 7938 0076 611C     		adds	r1, r4, #1
 7939              	.LVL1202:
 7940 0078 0198     		ldr	r0, [sp, #4]
 7941 007a 005D     		ldrb	r0, [r0, r4]	@ zero_extendqisi2
 7942 007c 1870     		strb	r0, [r3]
 7943 007e 0C46     		mov	r4, r1
 7944 0080 1346     		mov	r3, r2
3970:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 7945              		.loc 1 3970 0 discriminator 1
 7946 0082 8E42     		cmp	r6, r1
 7947 0084 F6D8     		bhi	.L807
 7948              	.LVL1203:
 7949              	.L806:
3973:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_NAMBUF();
 7950              		.loc 1 3973 0
 7951 0086 0023     		movs	r3, #0
 7952 0088 1370     		strb	r3, [r2]
3974:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 7953              		.loc 1 3974 0
 7954 008a 4046     		mov	r0, r8
 7955 008c FFF7FEFF 		bl	ff_memfree
 7956              	.LVL1204:
 7957              	.L793:
3977:Middlewares/Third_Party/FatFs/src/ff.c **** }
 7958              		.loc 1 3977 0
 7959 0090 2946     		mov	r1, r5
 7960 0092 4998     		ldr	r0, [sp, #292]
 7961 0094 FFF7FEFF 		bl	unlock_fs
 7962              	.LVL1205:
 7963              	.L795:
3978:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7964              		.loc 1 3978 0
 7965 0098 2846     		mov	r0, r5
 7966 009a 58B0     		add	sp, sp, #352
 7967              	.LCFI104:
 7968              		.cfi_remember_state
 7969              		.cfi_def_cfa_offset 24
 7970              		@ sp needed
 7971 009c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 7972              	.LVL1206:
 7973              	.L804:
 7974              	.LCFI105:
 7975              		.cfi_restore_state
3955:Middlewares/Third_Party/FatFs/src/ff.c **** 				buff[--i] = '/';
 7976              		.loc 1 3955 0 discriminator 2
 7977 00a0 013C     		subs	r4, r4, #1
 7978              	.LVL1207:
 7979 00a2 0199     		ldr	r1, [sp, #4]
 7980 00a4 013B     		subs	r3, r3, #1
 7981              	.LVL1208:
 7982 00a6 03AA     		add	r2, sp, #12
 7983 00a8 1A44     		add	r2, r2, r3
 7984 00aa 927D     		ldrb	r2, [r2, #22]	@ zero_extendqisi2
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 264


 7985 00ac 0A55     		strb	r2, [r1, r4]
 7986              	.L803:
3955:Middlewares/Third_Party/FatFs/src/ff.c **** 				buff[--i] = '/';
 7987              		.loc 1 3955 0 is_stmt 0 discriminator 1
 7988 00ae 002B     		cmp	r3, #0
 7989 00b0 F6D1     		bne	.L804
3956:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 7990              		.loc 1 3956 0 is_stmt 1
 7991 00b2 013C     		subs	r4, r4, #1
 7992              	.LVL1209:
 7993 00b4 019B     		ldr	r3, [sp, #4]
 7994              	.LVL1210:
 7995 00b6 2F22     		movs	r2, #47
 7996 00b8 1A55     		strb	r2, [r3, r4]
 7997              	.LVL1211:
 7998              	.L796:
3934:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_sdi(&dj, 1 * SZDIRE);	/* Get parent directory */
 7999              		.loc 1 3934 0
 8000 00ba 4C9F     		ldr	r7, [sp, #304]
 8001              	.LVL1212:
 8002 00bc 002F     		cmp	r7, #0
 8003 00be CDD0     		beq	.L797
3935:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res != FR_OK) break;
 8004              		.loc 1 3935 0
 8005 00c0 2021     		movs	r1, #32
 8006 00c2 4AA8     		add	r0, sp, #296
 8007 00c4 FFF7FEFF 		bl	dir_sdi
 8008              	.LVL1213:
3936:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = move_window(fs, dj.sect);
 8009              		.loc 1 3936 0
 8010 00c8 0546     		mov	r5, r0
 8011 00ca 0028     		cmp	r0, #0
 8012 00cc C6D1     		bne	.L797
3937:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res != FR_OK) break;
 8013              		.loc 1 3937 0
 8014 00ce 5199     		ldr	r1, [sp, #324]
 8015 00d0 4998     		ldr	r0, [sp, #292]
 8016              	.LVL1214:
 8017 00d2 FFF7FEFF 		bl	move_window
 8018              	.LVL1215:
3938:Middlewares/Third_Party/FatFs/src/ff.c **** 				dj.obj.sclust = ld_clust(fs, dj.dir);	/* Goto parent directory */
 8019              		.loc 1 3938 0
 8020 00d6 0546     		mov	r5, r0
 8021 00d8 0028     		cmp	r0, #0
 8022 00da BFD1     		bne	.L797
3939:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_sdi(&dj, 0);
 8023              		.loc 1 3939 0
 8024 00dc 5299     		ldr	r1, [sp, #328]
 8025 00de 4998     		ldr	r0, [sp, #292]
 8026              	.LVL1216:
 8027 00e0 FFF7FEFF 		bl	ld_clust
 8028              	.LVL1217:
 8029 00e4 4C90     		str	r0, [sp, #304]
3940:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res != FR_OK) break;
 8030              		.loc 1 3940 0
 8031 00e6 0021     		movs	r1, #0
 8032 00e8 4AA8     		add	r0, sp, #296
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 265


 8033 00ea FFF7FEFF 		bl	dir_sdi
 8034              	.LVL1218:
3941:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {							/* Find the entry links to the child directory */
 8035              		.loc 1 3941 0
 8036 00ee 0546     		mov	r5, r0
 8037 00f0 0028     		cmp	r0, #0
 8038 00f2 B3D1     		bne	.L797
 8039              	.L799:
3943:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res != FR_OK) break;
 8040              		.loc 1 3943 0
 8041 00f4 0021     		movs	r1, #0
 8042 00f6 4AA8     		add	r0, sp, #296
 8043              	.LVL1219:
 8044 00f8 FFF7FEFF 		bl	dir_read
 8045              	.LVL1220:
3944:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (ccl == ld_clust(fs, dj.dir)) break;	/* Found the entry */
 8046              		.loc 1 3944 0
 8047 00fc 0546     		mov	r5, r0
 8048 00fe 60B9     		cbnz	r0, .L798
3945:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = dir_next(&dj, 0);
 8049              		.loc 1 3945 0
 8050 0100 5299     		ldr	r1, [sp, #328]
 8051 0102 4998     		ldr	r0, [sp, #292]
 8052              	.LVL1221:
 8053 0104 FFF7FEFF 		bl	ld_clust
 8054              	.LVL1222:
 8055 0108 8742     		cmp	r7, r0
 8056 010a 06D0     		beq	.L798
3946:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while (res == FR_OK);
 8057              		.loc 1 3946 0
 8058 010c 0021     		movs	r1, #0
 8059 010e 4AA8     		add	r0, sp, #296
 8060 0110 FFF7FEFF 		bl	dir_next
 8061              	.LVL1223:
3947:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) res = FR_INT_ERR;/* It cannot be 'not found'. */
 8062              		.loc 1 3947 0
 8063 0114 0546     		mov	r5, r0
 8064 0116 0028     		cmp	r0, #0
 8065 0118 ECD0     		beq	.L799
 8066              	.LVL1224:
 8067              	.L798:
3948:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res != FR_OK) break;
 8068              		.loc 1 3948 0
 8069 011a 042D     		cmp	r5, #4
 8070 011c 92D0     		beq	.L813
 8071              	.LVL1225:
 8072              	.L800:
3949:Middlewares/Third_Party/FatFs/src/ff.c **** 				get_fileinfo(&dj, &fno);		/* Get the directory name and push it to the buffer */
 8073              		.loc 1 3949 0
 8074 011e 002D     		cmp	r5, #0
 8075 0120 9CD1     		bne	.L797
3950:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (n = 0; fno.fname[n]; n++) ;
 8076              		.loc 1 3950 0
 8077 0122 03A9     		add	r1, sp, #12
 8078 0124 4AA8     		add	r0, sp, #296
 8079 0126 FFF7FEFF 		bl	get_fileinfo
 8080              	.LVL1226:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 266


3951:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (i < n + 3) {
 8081              		.loc 1 3951 0
 8082 012a 0023     		movs	r3, #0
 8083 012c 8DE7     		b	.L801
 8084              	.LVL1227:
 8085              	.L812:
3966:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {						/* Sub-directroy */
 8086              		.loc 1 3966 0
 8087 012e 2F23     		movs	r3, #47
 8088 0130 9370     		strb	r3, [r2, #2]
 8089 0132 0332     		adds	r2, r2, #3
 8090              	.LVL1228:
 8091 0134 A7E7     		b	.L806
 8092              	.L815:
 8093 0136 00BF     		.align	2
 8094              	.L814:
 8095 0138 00000000 		.word	.LANCHOR3
 8096              		.cfi_endproc
 8097              	.LFE196:
 8099              		.section	.text.f_lseek,"ax",%progbits
 8100              		.align	1
 8101              		.global	f_lseek
 8102              		.syntax unified
 8103              		.thumb
 8104              		.thumb_func
 8105              		.fpu fpv5-sp-d16
 8107              	f_lseek:
 8108              	.LFB197:
3994:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 8109              		.loc 1 3994 0
 8110              		.cfi_startproc
 8111              		@ args = 0, pretend = 0, frame = 16
 8112              		@ frame_needed = 0, uses_anonymous_args = 0
 8113              	.LVL1229:
 8114 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 8115              	.LCFI106:
 8116              		.cfi_def_cfa_offset 36
 8117              		.cfi_offset 4, -36
 8118              		.cfi_offset 5, -32
 8119              		.cfi_offset 6, -28
 8120              		.cfi_offset 7, -24
 8121              		.cfi_offset 8, -20
 8122              		.cfi_offset 9, -16
 8123              		.cfi_offset 10, -12
 8124              		.cfi_offset 11, -8
 8125              		.cfi_offset 14, -4
 8126 0004 85B0     		sub	sp, sp, #20
 8127              	.LCFI107:
 8128              		.cfi_def_cfa_offset 56
 8129 0006 0446     		mov	r4, r0
 8130 0008 0E46     		mov	r6, r1
4003:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) res = (FRESULT)fp->err;
 8131              		.loc 1 4003 0
 8132 000a 8046     		mov	r8, r0
 8133 000c 03A9     		add	r1, sp, #12
 8134              	.LVL1230:
 8135 000e FFF7FEFF 		bl	validate
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 267


 8136              	.LVL1231:
4004:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT && !_FS_READONLY
 8137              		.loc 1 4004 0
 8138 0012 0546     		mov	r5, r0
 8139 0014 00B9     		cbnz	r0, .L817
4004:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT && !_FS_READONLY
 8140              		.loc 1 4004 0 is_stmt 0 discriminator 1
 8141 0016 657D     		ldrb	r5, [r4, #21]	@ zero_extendqisi2
 8142              	.LVL1232:
 8143              	.L817:
4010:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8144              		.loc 1 4010 0 is_stmt 1
 8145 0018 ADB9     		cbnz	r5, .L862
4013:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs == CREATE_LINKMAP) {	/* Create CLMT */
 8146              		.loc 1 4013 0
 8147 001a E36A     		ldr	r3, [r4, #44]
 8148 001c 002B     		cmp	r3, #0
 8149 001e 00F0A880 		beq	.L820
4014:Middlewares/Third_Party/FatFs/src/ff.c **** 			tbl = fp->cltbl;
 8150              		.loc 1 4014 0
 8151 0022 B6F1FF3F 		cmp	r6, #-1
 8152 0026 13D0     		beq	.L863
4040:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->fptr = ofs;				/* Set file pointer */
 8153              		.loc 1 4040 0
 8154 0028 E768     		ldr	r7, [r4, #12]
 8155 002a BE42     		cmp	r6, r7
 8156 002c 00D8     		bhi	.L829
 8157 002e 3746     		mov	r7, r6
 8158              	.L829:
 8159              	.LVL1233:
4041:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ofs) {
 8160              		.loc 1 4041 0
 8161 0030 A761     		str	r7, [r4, #24]
4042:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clmt_clust(fp, ofs - 1);
 8162              		.loc 1 4042 0
 8163 0032 002F     		cmp	r7, #0
 8164 0034 52D1     		bne	.L864
 8165              	.LVL1234:
 8166              	.L828:
4141:Middlewares/Third_Party/FatFs/src/ff.c **** }
 8167              		.loc 1 4141 0
 8168 0036 2946     		mov	r1, r5
 8169 0038 0398     		ldr	r0, [sp, #12]
 8170 003a FFF7FEFF 		bl	unlock_fs
 8171              	.LVL1235:
 8172              	.L819:
4142:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8173              		.loc 1 4142 0
 8174 003e 2846     		mov	r0, r5
 8175 0040 05B0     		add	sp, sp, #20
 8176              	.LCFI108:
 8177              		.cfi_remember_state
 8178              		.cfi_def_cfa_offset 36
 8179              		@ sp needed
 8180 0042 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 8181              	.LVL1236:
 8182              	.L862:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 268


 8183              	.LCFI109:
 8184              		.cfi_restore_state
4010:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8185              		.loc 1 4010 0 discriminator 1
 8186 0046 2946     		mov	r1, r5
 8187 0048 0398     		ldr	r0, [sp, #12]
 8188 004a FFF7FEFF 		bl	unlock_fs
 8189              	.LVL1237:
 8190 004e F6E7     		b	.L819
 8191              	.L863:
 8192              	.LVL1238:
4016:Middlewares/Third_Party/FatFs/src/ff.c **** 			cl = fp->obj.sclust;		/* Origin of the chain */
 8193              		.loc 1 4016 0
 8194 0050 1A1D     		adds	r2, r3, #4
 8195 0052 0192     		str	r2, [sp, #4]
 8196              	.LVL1239:
 8197 0054 D3F800B0 		ldr	fp, [r3]
 8198              	.LVL1240:
4017:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cl) {
 8199              		.loc 1 4017 0
 8200 0058 D4F808A0 		ldr	r10, [r4, #8]
 8201              	.LVL1241:
4018:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {
 8202              		.loc 1 4018 0
 8203 005c BAF1000F 		cmp	r10, #0
 8204 0060 30D0     		beq	.L854
 8205 0062 4FF00209 		mov	r9, #2
 8206              	.LVL1242:
 8207              	.L827:
4021:Middlewares/Third_Party/FatFs/src/ff.c **** 					do {
 8208              		.loc 1 4021 0
 8209 0066 09F10209 		add	r9, r9, #2
 8210              	.LVL1243:
 8211 006a 5646     		mov	r6, r10
 8212 006c 0027     		movs	r7, #0
 8213              	.LVL1244:
 8214              	.L825:
4023:Middlewares/Third_Party/FatFs/src/ff.c **** 						cl = get_fat(&fp->obj, cl);
 8215              		.loc 1 4023 0
 8216 006e 0137     		adds	r7, r7, #1
 8217              	.LVL1245:
4024:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (cl <= 1) ABORT(fs, FR_INT_ERR);
 8218              		.loc 1 4024 0
 8219 0070 3146     		mov	r1, r6
 8220 0072 4046     		mov	r0, r8
 8221 0074 FFF7FEFF 		bl	get_fat
 8222              	.LVL1246:
4025:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (cl == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 8223              		.loc 1 4025 0
 8224 0078 0128     		cmp	r0, #1
 8225 007a 15D9     		bls	.L865
4026:Middlewares/Third_Party/FatFs/src/ff.c **** 					} while (cl == pcl + 1);
 8226              		.loc 1 4026 0
 8227 007c B0F1FF3F 		cmp	r0, #-1
 8228 0080 19D0     		beq	.L866
4027:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (ulen <= tlen) {		/* Store the length and top of the fragment */
 8229              		.loc 1 4027 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 269


 8230 0082 731C     		adds	r3, r6, #1
4024:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (cl <= 1) ABORT(fs, FR_INT_ERR);
 8231              		.loc 1 4024 0
 8232 0084 0646     		mov	r6, r0
 8233              	.LVL1247:
4027:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (ulen <= tlen) {		/* Store the length and top of the fragment */
 8234              		.loc 1 4027 0
 8235 0086 9842     		cmp	r0, r3
 8236 0088 F1D0     		beq	.L825
4028:Middlewares/Third_Party/FatFs/src/ff.c **** 						*tbl++ = ncl; *tbl++ = tcl;
 8237              		.loc 1 4028 0
 8238 008a CB45     		cmp	fp, r9
 8239 008c 06D3     		bcc	.L826
 8240              	.LVL1248:
4029:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 8241              		.loc 1 4029 0
 8242 008e 019A     		ldr	r2, [sp, #4]
 8243 0090 1346     		mov	r3, r2
 8244              	.LVL1249:
 8245 0092 43F8087B 		str	r7, [r3], #8
 8246              	.LVL1250:
 8247 0096 C2F804A0 		str	r10, [r2, #4]
 8248 009a 0193     		str	r3, [sp, #4]
 8249              	.LVL1251:
 8250              	.L826:
4031:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 8251              		.loc 1 4031 0
 8252 009c 039B     		ldr	r3, [sp, #12]
 8253 009e 1B6A     		ldr	r3, [r3, #32]
 8254 00a0 9842     		cmp	r0, r3
 8255 00a2 11D2     		bcs	.L822
4024:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (cl <= 1) ABORT(fs, FR_INT_ERR);
 8256              		.loc 1 4024 0
 8257 00a4 8246     		mov	r10, r0
 8258              	.LVL1252:
 8259 00a6 DEE7     		b	.L827
 8260              	.LVL1253:
 8261              	.L865:
4025:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (cl == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 8262              		.loc 1 4025 0 discriminator 1
 8263 00a8 0225     		movs	r5, #2
 8264              	.LVL1254:
 8265 00aa 6575     		strb	r5, [r4, #21]
 8266 00ac 2946     		mov	r1, r5
 8267 00ae 0398     		ldr	r0, [sp, #12]
 8268              	.LVL1255:
 8269 00b0 FFF7FEFF 		bl	unlock_fs
 8270              	.LVL1256:
 8271 00b4 C3E7     		b	.L819
 8272              	.LVL1257:
 8273              	.L866:
4026:Middlewares/Third_Party/FatFs/src/ff.c **** 					} while (cl == pcl + 1);
 8274              		.loc 1 4026 0 discriminator 1
 8275 00b6 0125     		movs	r5, #1
 8276              	.LVL1258:
 8277 00b8 6575     		strb	r5, [r4, #21]
 8278 00ba 2946     		mov	r1, r5
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 270


 8279 00bc 0398     		ldr	r0, [sp, #12]
 8280              	.LVL1259:
 8281 00be FFF7FEFF 		bl	unlock_fs
 8282              	.LVL1260:
 8283 00c2 BCE7     		b	.L819
 8284              	.LVL1261:
 8285              	.L854:
4016:Middlewares/Third_Party/FatFs/src/ff.c **** 			cl = fp->obj.sclust;		/* Origin of the chain */
 8286              		.loc 1 4016 0
 8287 00c4 4FF00209 		mov	r9, #2
 8288              	.LVL1262:
 8289              	.L822:
4033:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ulen <= tlen) {
 8290              		.loc 1 4033 0
 8291 00c8 E36A     		ldr	r3, [r4, #44]
 8292 00ca C3F80090 		str	r9, [r3]
4034:Middlewares/Third_Party/FatFs/src/ff.c **** 				*tbl = 0;		/* Terminate table */
 8293              		.loc 1 4034 0
 8294 00ce D945     		cmp	r9, fp
 8295 00d0 00F21781 		bhi	.L856
4035:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
 8296              		.loc 1 4035 0
 8297 00d4 0023     		movs	r3, #0
 8298 00d6 019A     		ldr	r2, [sp, #4]
 8299 00d8 1360     		str	r3, [r2]
 8300 00da ACE7     		b	.L828
 8301              	.LVL1263:
 8302              	.L864:
4043:Middlewares/Third_Party/FatFs/src/ff.c **** 				dsc = clust2sect(fs, fp->clust);
 8303              		.loc 1 4043 0
 8304 00dc 07F1FF38 		add	r8, r7, #-1
 8305 00e0 4146     		mov	r1, r8
 8306 00e2 2046     		mov	r0, r4
 8307 00e4 FFF7FEFF 		bl	clmt_clust
 8308              	.LVL1264:
 8309 00e8 0146     		mov	r1, r0
 8310 00ea E061     		str	r0, [r4, #28]
4044:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!dsc) ABORT(fs, FR_INT_ERR);
 8311              		.loc 1 4044 0
 8312 00ec 039E     		ldr	r6, [sp, #12]
 8313 00ee 3046     		mov	r0, r6
 8314 00f0 FFF7FEFF 		bl	clust2sect
 8315              	.LVL1265:
4045:Middlewares/Third_Party/FatFs/src/ff.c **** 				dsc += (DWORD)((ofs - 1) / SS(fs)) & (fs->csize - 1);
 8316              		.loc 1 4045 0
 8317 00f4 E0B1     		cbz	r0, .L867
4046:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->fptr % SS(fs) && dsc != fp->sect) {	/* Refill sector cache if needed */
 8318              		.loc 1 4046 0
 8319 00f6 7189     		ldrh	r1, [r6, #10]
 8320 00f8 0139     		subs	r1, r1, #1
 8321 00fa 01EA5821 		and	r1, r1, r8, lsr #9
 8322 00fe 00EB0108 		add	r8, r0, r1
 8323              	.LVL1266:
4047:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
 8324              		.loc 1 4047 0
 8325 0102 C7F30807 		ubfx	r7, r7, #0, #9
 8326              	.LVL1267:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 271


 8327 0106 002F     		cmp	r7, #0
 8328 0108 95D0     		beq	.L828
4047:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
 8329              		.loc 1 4047 0 is_stmt 0 discriminator 1
 8330 010a 226A     		ldr	r2, [r4, #32]
 8331 010c 9045     		cmp	r8, r2
 8332 010e 92D0     		beq	.L828
4050:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
 8333              		.loc 1 4050 0 is_stmt 1
 8334 0110 94F91430 		ldrsb	r3, [r4, #20]
 8335 0114 002B     		cmp	r3, #0
 8336 0116 12DB     		blt	.L868
 8337              	.L831:
4055:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 8338              		.loc 1 4055 0
 8339 0118 0123     		movs	r3, #1
 8340 011a 4246     		mov	r2, r8
 8341 011c 04F13001 		add	r1, r4, #48
 8342 0120 0398     		ldr	r0, [sp, #12]
 8343 0122 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 8344 0124 FFF7FEFF 		bl	disk_read
 8345              	.LVL1268:
 8346 0128 E0B9     		cbnz	r0, .L869
4057:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8347              		.loc 1 4057 0
 8348 012a C4F82080 		str	r8, [r4, #32]
 8349 012e 82E7     		b	.L828
 8350              	.LVL1269:
 8351              	.L867:
4045:Middlewares/Third_Party/FatFs/src/ff.c **** 				dsc += (DWORD)((ofs - 1) / SS(fs)) & (fs->csize - 1);
 8352              		.loc 1 4045 0 discriminator 1
 8353 0130 0225     		movs	r5, #2
 8354              	.LVL1270:
 8355 0132 6575     		strb	r5, [r4, #21]
 8356 0134 2946     		mov	r1, r5
 8357 0136 3046     		mov	r0, r6
 8358              	.LVL1271:
 8359 0138 FFF7FEFF 		bl	unlock_fs
 8360              	.LVL1272:
 8361 013c 7FE7     		b	.L819
 8362              	.LVL1273:
 8363              	.L868:
4051:Middlewares/Third_Party/FatFs/src/ff.c **** 						fp->flag &= (BYTE)~FA_DIRTY;
 8364              		.loc 1 4051 0
 8365 013e 0123     		movs	r3, #1
 8366 0140 04F13001 		add	r1, r4, #48
 8367 0144 7078     		ldrb	r0, [r6, #1]	@ zero_extendqisi2
 8368 0146 FFF7FEFF 		bl	disk_write
 8369              	.LVL1274:
 8370 014a 20B9     		cbnz	r0, .L870
4052:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 8371              		.loc 1 4052 0
 8372 014c 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 8373 014e 03F07F03 		and	r3, r3, #127
 8374 0152 2375     		strb	r3, [r4, #20]
 8375 0154 E0E7     		b	.L831
 8376              	.L870:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 272


4051:Middlewares/Third_Party/FatFs/src/ff.c **** 						fp->flag &= (BYTE)~FA_DIRTY;
 8377              		.loc 1 4051 0 discriminator 1
 8378 0156 0125     		movs	r5, #1
 8379              	.LVL1275:
 8380 0158 6575     		strb	r5, [r4, #21]
 8381 015a 2946     		mov	r1, r5
 8382 015c 0398     		ldr	r0, [sp, #12]
 8383 015e FFF7FEFF 		bl	unlock_fs
 8384              	.LVL1276:
 8385 0162 6CE7     		b	.L819
 8386              	.LVL1277:
 8387              	.L869:
4055:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 8388              		.loc 1 4055 0 discriminator 1
 8389 0164 0125     		movs	r5, #1
 8390              	.LVL1278:
 8391 0166 6575     		strb	r5, [r4, #21]
 8392 0168 2946     		mov	r1, r5
 8393 016a 0398     		ldr	r0, [sp, #12]
 8394 016c FFF7FEFF 		bl	unlock_fs
 8395              	.LVL1279:
 8396 0170 65E7     		b	.L819
 8397              	.LVL1280:
 8398              	.L820:
4069:Middlewares/Third_Party/FatFs/src/ff.c **** 			ofs = fp->obj.objsize;
 8399              		.loc 1 4069 0
 8400 0172 E368     		ldr	r3, [r4, #12]
 8401 0174 9E42     		cmp	r6, r3
 8402 0176 04D9     		bls	.L834
4069:Middlewares/Third_Party/FatFs/src/ff.c **** 			ofs = fp->obj.objsize;
 8403              		.loc 1 4069 0 is_stmt 0 discriminator 1
 8404 0178 227D     		ldrb	r2, [r4, #20]	@ zero_extendqisi2
 8405 017a 12F0020F 		tst	r2, #2
 8406 017e 00D1     		bne	.L834
4070:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 8407              		.loc 1 4070 0 is_stmt 1
 8408 0180 1E46     		mov	r6, r3
 8409              	.LVL1281:
 8410              	.L834:
4072:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->fptr = nsect = 0;
 8411              		.loc 1 4072 0
 8412 0182 A369     		ldr	r3, [r4, #24]
 8413              	.LVL1282:
4073:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs) {
 8414              		.loc 1 4073 0
 8415 0184 0022     		movs	r2, #0
 8416 0186 A261     		str	r2, [r4, #24]
4074:Middlewares/Third_Party/FatFs/src/ff.c **** 			bcs = (DWORD)fs->csize * SS(fs);	/* Cluster size (byte) */
 8417              		.loc 1 4074 0
 8418 0188 002E     		cmp	r6, #0
 8419 018a 7BD0     		beq	.L858
4075:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ifptr > 0 &&
 8420              		.loc 1 4075 0
 8421 018c 039A     		ldr	r2, [sp, #12]
 8422 018e B2F80A90 		ldrh	r9, [r2, #10]
 8423 0192 4FEA4929 		lsl	r9, r9, #9
 8424              	.LVL1283:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 273


4076:Middlewares/Third_Party/FatFs/src/ff.c **** 				(ofs - 1) / bcs >= (ifptr - 1) / bcs) {	/* When seek to same or following cluster, */
 8425              		.loc 1 4076 0
 8426 0196 73B1     		cbz	r3, .L836
4077:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr = (ifptr - 1) & ~(FSIZE_t)(bcs - 1);	/* start from the current cluster */
 8427              		.loc 1 4077 0 discriminator 1
 8428 0198 721E     		subs	r2, r6, #1
 8429 019a B2FBF9F2 		udiv	r2, r2, r9
 8430 019e 013B     		subs	r3, r3, #1
 8431              	.LVL1284:
 8432 01a0 B3FBF9F1 		udiv	r1, r3, r9
4076:Middlewares/Third_Party/FatFs/src/ff.c **** 				(ofs - 1) / bcs >= (ifptr - 1) / bcs) {	/* When seek to same or following cluster, */
 8433              		.loc 1 4076 0 discriminator 1
 8434 01a4 8A42     		cmp	r2, r1
 8435 01a6 06D3     		bcc	.L836
4078:Middlewares/Third_Party/FatFs/src/ff.c **** 				ofs -= fp->fptr;
 8436              		.loc 1 4078 0
 8437 01a8 C9F10002 		rsb	r2, r9, #0
 8438 01ac 1340     		ands	r3, r3, r2
 8439              	.LVL1285:
 8440 01ae A361     		str	r3, [r4, #24]
4079:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = fp->clust;
 8441              		.loc 1 4079 0
 8442 01b0 F61A     		subs	r6, r6, r3
 8443              	.LVL1286:
4080:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {									/* When seek to back cluster, */
 8444              		.loc 1 4080 0
 8445 01b2 E769     		ldr	r7, [r4, #28]
 8446              	.LVL1287:
 8447 01b4 02E0     		b	.L837
 8448              	.LVL1288:
 8449              	.L836:
4082:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 8450              		.loc 1 4082 0
 8451 01b6 A768     		ldr	r7, [r4, #8]
 8452              	.LVL1289:
4084:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = create_chain(&fp->obj, 0);
 8453              		.loc 1 4084 0
 8454 01b8 17B1     		cbz	r7, .L871
 8455              	.L838:
4091:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 8456              		.loc 1 4091 0
 8457 01ba E761     		str	r7, [r4, #28]
 8458              	.L837:
4093:Middlewares/Third_Party/FatFs/src/ff.c **** 				while (ofs > bcs) {						/* Cluster following loop */
 8459              		.loc 1 4093 0
 8460 01bc 4FBB     		cbnz	r7, .L841
 8461 01be 62E0     		b	.L835
 8462              	.L871:
4085:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 1) ABORT(fs, FR_INT_ERR);
 8463              		.loc 1 4085 0
 8464 01c0 0021     		movs	r1, #0
 8465 01c2 2046     		mov	r0, r4
 8466 01c4 FFF7FEFF 		bl	create_chain
 8467              	.LVL1290:
 8468 01c8 0746     		mov	r7, r0
 8469              	.LVL1291:
4086:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 274


 8470              		.loc 1 4086 0
 8471 01ca 0128     		cmp	r0, #1
 8472 01cc 04D0     		beq	.L872
4087:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->obj.sclust = clst;
 8473              		.loc 1 4087 0
 8474 01ce B0F1FF3F 		cmp	r0, #-1
 8475 01d2 08D0     		beq	.L873
4088:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8476              		.loc 1 4088 0
 8477 01d4 A060     		str	r0, [r4, #8]
 8478 01d6 F0E7     		b	.L838
 8479              	.L872:
4086:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 8480              		.loc 1 4086 0 discriminator 1
 8481 01d8 0225     		movs	r5, #2
 8482              	.LVL1292:
 8483 01da 6575     		strb	r5, [r4, #21]
 8484 01dc 2946     		mov	r1, r5
 8485 01de 0398     		ldr	r0, [sp, #12]
 8486              	.LVL1293:
 8487 01e0 FFF7FEFF 		bl	unlock_fs
 8488              	.LVL1294:
 8489 01e4 2BE7     		b	.L819
 8490              	.LVL1295:
 8491              	.L873:
4087:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->obj.sclust = clst;
 8492              		.loc 1 4087 0 discriminator 1
 8493 01e6 0125     		movs	r5, #1
 8494              	.LVL1296:
 8495 01e8 6575     		strb	r5, [r4, #21]
 8496 01ea 2946     		mov	r1, r5
 8497 01ec 0398     		ldr	r0, [sp, #12]
 8498              	.LVL1297:
 8499 01ee FFF7FEFF 		bl	unlock_fs
 8500              	.LVL1298:
 8501 01f2 24E7     		b	.L819
 8502              	.LVL1299:
 8503              	.L842:
4109:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 8504              		.loc 1 4109 0
 8505 01f4 3946     		mov	r1, r7
 8506 01f6 4046     		mov	r0, r8
 8507 01f8 FFF7FEFF 		bl	get_fat
 8508              	.LVL1300:
 8509 01fc 0746     		mov	r7, r0
 8510              	.LVL1301:
 8511              	.L844:
4111:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst <= 1 || clst >= fs->n_fatent) ABORT(fs, FR_INT_ERR);
 8512              		.loc 1 4111 0
 8513 01fe B7F1FF3F 		cmp	r7, #-1
 8514 0202 2AD0     		beq	.L874
4112:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->clust = clst;
 8515              		.loc 1 4112 0
 8516 0204 012F     		cmp	r7, #1
 8517 0206 2FD9     		bls	.L846
4112:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->clust = clst;
 8518              		.loc 1 4112 0 is_stmt 0 discriminator 2
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 275


 8519 0208 039B     		ldr	r3, [sp, #12]
 8520 020a 1B6A     		ldr	r3, [r3, #32]
 8521 020c 9F42     		cmp	r7, r3
 8522 020e 2BD2     		bcs	.L846
4113:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8523              		.loc 1 4113 0 is_stmt 1
 8524 0210 E761     		str	r7, [r4, #28]
 8525              	.LVL1302:
 8526              	.L841:
4094:Middlewares/Third_Party/FatFs/src/ff.c **** 					ofs -= bcs; fp->fptr += bcs;
 8527              		.loc 1 4094 0
 8528 0212 4E45     		cmp	r6, r9
 8529 0214 10D9     		bls	.L843
4095:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 8530              		.loc 1 4095 0
 8531 0216 A6EB0906 		sub	r6, r6, r9
 8532              	.LVL1303:
 8533 021a A369     		ldr	r3, [r4, #24]
 8534 021c 4B44     		add	r3, r3, r9
 8535 021e A361     		str	r3, [r4, #24]
4097:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (_FS_EXFAT && fp->fptr > fp->obj.objsize) {	/* No FAT chain object needs correct objsize t
 8536              		.loc 1 4097 0
 8537 0220 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 8538 0222 13F0020F 		tst	r3, #2
 8539 0226 E5D0     		beq	.L842
4102:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (clst == 0) {				/* Clip file size in case of disk full */
 8540              		.loc 1 4102 0
 8541 0228 3946     		mov	r1, r7
 8542 022a 4046     		mov	r0, r8
 8543 022c FFF7FEFF 		bl	create_chain
 8544              	.LVL1304:
4103:Middlewares/Third_Party/FatFs/src/ff.c **** 							ofs = 0; break;
 8545              		.loc 1 4103 0
 8546 0230 0746     		mov	r7, r0
 8547 0232 0028     		cmp	r0, #0
 8548 0234 E3D1     		bne	.L844
4104:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
 8549              		.loc 1 4104 0
 8550 0236 0026     		movs	r6, #0
 8551              	.LVL1305:
 8552              	.L843:
4115:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (ofs % SS(fs)) {
 8553              		.loc 1 4115 0
 8554 0238 A369     		ldr	r3, [r4, #24]
 8555 023a 3344     		add	r3, r3, r6
 8556 023c A361     		str	r3, [r4, #24]
4116:Middlewares/Third_Party/FatFs/src/ff.c **** 					nsect = clust2sect(fs, clst);	/* Current sector */
 8557              		.loc 1 4116 0
 8558 023e C6F30803 		ubfx	r3, r6, #0, #9
 8559 0242 002B     		cmp	r3, #0
 8560 0244 40D0     		beq	.L860
4117:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!nsect) ABORT(fs, FR_INT_ERR);
 8561              		.loc 1 4117 0
 8562 0246 DDF80C80 		ldr	r8, [sp, #12]
 8563 024a 3946     		mov	r1, r7
 8564 024c 4046     		mov	r0, r8
 8565 024e FFF7FEFF 		bl	clust2sect
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 276


 8566              	.LVL1306:
4118:Middlewares/Third_Party/FatFs/src/ff.c **** 					nsect += (DWORD)(ofs / SS(fs));
 8567              		.loc 1 4118 0
 8568 0252 80B1     		cbz	r0, .L875
4119:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8569              		.loc 1 4119 0
 8570 0254 00EB5627 		add	r7, r0, r6, lsr #9
 8571              	.LVL1307:
 8572 0258 15E0     		b	.L835
 8573              	.LVL1308:
 8574              	.L874:
4111:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst <= 1 || clst >= fs->n_fatent) ABORT(fs, FR_INT_ERR);
 8575              		.loc 1 4111 0 discriminator 1
 8576 025a 0125     		movs	r5, #1
 8577              	.LVL1309:
 8578 025c 6575     		strb	r5, [r4, #21]
 8579 025e 2946     		mov	r1, r5
 8580 0260 0398     		ldr	r0, [sp, #12]
 8581              	.LVL1310:
 8582 0262 FFF7FEFF 		bl	unlock_fs
 8583              	.LVL1311:
 8584 0266 EAE6     		b	.L819
 8585              	.LVL1312:
 8586              	.L846:
4112:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->clust = clst;
 8587              		.loc 1 4112 0 discriminator 3
 8588 0268 0225     		movs	r5, #2
 8589              	.LVL1313:
 8590 026a 6575     		strb	r5, [r4, #21]
 8591 026c 2946     		mov	r1, r5
 8592 026e 0398     		ldr	r0, [sp, #12]
 8593              	.LVL1314:
 8594 0270 FFF7FEFF 		bl	unlock_fs
 8595              	.LVL1315:
 8596 0274 E3E6     		b	.L819
 8597              	.LVL1316:
 8598              	.L875:
4118:Middlewares/Third_Party/FatFs/src/ff.c **** 					nsect += (DWORD)(ofs / SS(fs));
 8599              		.loc 1 4118 0 discriminator 1
 8600 0276 0225     		movs	r5, #2
 8601              	.LVL1317:
 8602 0278 6575     		strb	r5, [r4, #21]
 8603 027a 2946     		mov	r1, r5
 8604 027c 4046     		mov	r0, r8
 8605              	.LVL1318:
 8606 027e FFF7FEFF 		bl	unlock_fs
 8607              	.LVL1319:
 8608 0282 DCE6     		b	.L819
 8609              	.LVL1320:
 8610              	.L858:
4073:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs) {
 8611              		.loc 1 4073 0
 8612 0284 0027     		movs	r7, #0
 8613              	.LVL1321:
 8614              	.L835:
4123:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->obj.objsize = fp->fptr;
 8615              		.loc 1 4123 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 277


 8616 0286 A369     		ldr	r3, [r4, #24]
 8617 0288 E268     		ldr	r2, [r4, #12]
 8618 028a 9342     		cmp	r3, r2
 8619 028c 04D9     		bls	.L850
4124:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->flag |= FA_MODIFIED;
 8620              		.loc 1 4124 0
 8621 028e E360     		str	r3, [r4, #12]
4125:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 8622              		.loc 1 4125 0
 8623 0290 227D     		ldrb	r2, [r4, #20]	@ zero_extendqisi2
 8624 0292 42F04002 		orr	r2, r2, #64
 8625 0296 2275     		strb	r2, [r4, #20]
 8626              	.L850:
4127:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
 8627              		.loc 1 4127 0
 8628 0298 C3F30803 		ubfx	r3, r3, #0, #9
 8629 029c 002B     		cmp	r3, #0
 8630 029e 3FF4CAAE 		beq	.L828
4127:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
 8631              		.loc 1 4127 0 is_stmt 0 discriminator 1
 8632 02a2 226A     		ldr	r2, [r4, #32]
 8633 02a4 9742     		cmp	r7, r2
 8634 02a6 3FF4C6AE 		beq	.L828
4130:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
 8635              		.loc 1 4130 0 is_stmt 1
 8636 02aa 94F91430 		ldrsb	r3, [r4, #20]
 8637 02ae 002B     		cmp	r3, #0
 8638 02b0 0CDB     		blt	.L876
 8639              	.L851:
4135:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 8640              		.loc 1 4135 0
 8641 02b2 0123     		movs	r3, #1
 8642 02b4 3A46     		mov	r2, r7
 8643 02b6 04F13001 		add	r1, r4, #48
 8644 02ba 0398     		ldr	r0, [sp, #12]
 8645 02bc 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 8646 02be FFF7FEFF 		bl	disk_read
 8647              	.LVL1322:
 8648 02c2 B8B9     		cbnz	r0, .L877
4137:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 8649              		.loc 1 4137 0
 8650 02c4 2762     		str	r7, [r4, #32]
 8651 02c6 B6E6     		b	.L828
 8652              	.LVL1323:
 8653              	.L860:
4073:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs) {
 8654              		.loc 1 4073 0
 8655 02c8 0027     		movs	r7, #0
 8656              	.LVL1324:
 8657 02ca DCE7     		b	.L835
 8658              	.LVL1325:
 8659              	.L876:
4131:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
 8660              		.loc 1 4131 0
 8661 02cc 0123     		movs	r3, #1
 8662 02ce 04F13001 		add	r1, r4, #48
 8663 02d2 0398     		ldr	r0, [sp, #12]
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 278


 8664 02d4 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 8665 02d6 FFF7FEFF 		bl	disk_write
 8666              	.LVL1326:
 8667 02da 20B9     		cbnz	r0, .L878
4132:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 8668              		.loc 1 4132 0
 8669 02dc 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 8670 02de 03F07F03 		and	r3, r3, #127
 8671 02e2 2375     		strb	r3, [r4, #20]
 8672 02e4 E5E7     		b	.L851
 8673              	.L878:
4131:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
 8674              		.loc 1 4131 0 discriminator 1
 8675 02e6 0125     		movs	r5, #1
 8676              	.LVL1327:
 8677 02e8 6575     		strb	r5, [r4, #21]
 8678 02ea 2946     		mov	r1, r5
 8679 02ec 0398     		ldr	r0, [sp, #12]
 8680 02ee FFF7FEFF 		bl	unlock_fs
 8681              	.LVL1328:
 8682 02f2 A4E6     		b	.L819
 8683              	.LVL1329:
 8684              	.L877:
4135:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 8685              		.loc 1 4135 0 discriminator 1
 8686 02f4 0125     		movs	r5, #1
 8687              	.LVL1330:
 8688 02f6 6575     		strb	r5, [r4, #21]
 8689 02f8 2946     		mov	r1, r5
 8690 02fa 0398     		ldr	r0, [sp, #12]
 8691 02fc FFF7FEFF 		bl	unlock_fs
 8692              	.LVL1331:
 8693 0300 9DE6     		b	.L819
 8694              	.LVL1332:
 8695              	.L856:
4037:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 8696              		.loc 1 4037 0
 8697 0302 1125     		movs	r5, #17
 8698              	.LVL1333:
 8699 0304 97E6     		b	.L828
 8700              		.cfi_endproc
 8701              	.LFE197:
 8703              		.section	.text.f_opendir,"ax",%progbits
 8704              		.align	1
 8705              		.global	f_opendir
 8706              		.syntax unified
 8707              		.thumb
 8708              		.thumb_func
 8709              		.fpu fpv5-sp-d16
 8711              	f_opendir:
 8712              	.LFB198:
4155:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 8713              		.loc 1 4155 0
 8714              		.cfi_startproc
 8715              		@ args = 0, pretend = 0, frame = 16
 8716              		@ frame_needed = 0, uses_anonymous_args = 0
 8717              	.LVL1334:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 279


 8718 0000 70B5     		push	{r4, r5, r6, lr}
 8719              	.LCFI110:
 8720              		.cfi_def_cfa_offset 16
 8721              		.cfi_offset 4, -16
 8722              		.cfi_offset 5, -12
 8723              		.cfi_offset 6, -8
 8724              		.cfi_offset 14, -4
 8725 0002 84B0     		sub	sp, sp, #16
 8726              	.LCFI111:
 8727              		.cfi_def_cfa_offset 32
 8728 0004 0191     		str	r1, [sp, #4]
4162:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8729              		.loc 1 4162 0
 8730 0006 0028     		cmp	r0, #0
 8731 0008 56D0     		beq	.L887
 8732 000a 0546     		mov	r5, r0
 8733              	.LVL1335:
4166:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 8734              		.loc 1 4166 0
 8735 000c 0022     		movs	r2, #0
 8736 000e 03A9     		add	r1, sp, #12
 8737              	.LVL1336:
 8738 0010 01A8     		add	r0, sp, #4
 8739              	.LVL1337:
 8740 0012 FFF7FEFF 		bl	find_volume
 8741              	.LVL1338:
4167:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->fs = fs;
 8742              		.loc 1 4167 0
 8743 0016 0446     		mov	r4, r0
 8744 0018 48B1     		cbz	r0, .L892
 8745              	.LVL1339:
 8746              	.L881:
4209:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8747              		.loc 1 4209 0
 8748 001a 0CB1     		cbz	r4, .L886
4209:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8749              		.loc 1 4209 0 is_stmt 0 discriminator 1
 8750 001c 0023     		movs	r3, #0
 8751 001e 2B60     		str	r3, [r5]
 8752              	.L886:
4211:Middlewares/Third_Party/FatFs/src/ff.c **** }
 8753              		.loc 1 4211 0 is_stmt 1
 8754 0020 2146     		mov	r1, r4
 8755 0022 0398     		ldr	r0, [sp, #12]
 8756 0024 FFF7FEFF 		bl	unlock_fs
 8757              	.LVL1340:
 8758              	.L880:
4212:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8759              		.loc 1 4212 0
 8760 0028 2046     		mov	r0, r4
 8761 002a 04B0     		add	sp, sp, #16
 8762              	.LCFI112:
 8763              		.cfi_remember_state
 8764              		.cfi_def_cfa_offset 16
 8765              		@ sp needed
 8766 002c 70BD     		pop	{r4, r5, r6, pc}
 8767              	.LVL1341:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 280


 8768              	.L892:
 8769              	.LCFI113:
 8770              		.cfi_restore_state
4168:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
 8771              		.loc 1 4168 0
 8772 002e 039B     		ldr	r3, [sp, #12]
 8773 0030 2B60     		str	r3, [r5]
4169:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(dp, path);			/* Follow the path to the directory */
 8774              		.loc 1 4169 0
 8775 0032 4FF40070 		mov	r0, #512
 8776              	.LVL1342:
 8777 0036 FFF7FEFF 		bl	ff_memalloc
 8778              	.LVL1343:
 8779 003a 0646     		mov	r6, r0
 8780 003c E0B1     		cbz	r0, .L893
4169:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(dp, path);			/* Follow the path to the directory */
 8781              		.loc 1 4169 0 is_stmt 0 discriminator 2
 8782 003e 039B     		ldr	r3, [sp, #12]
 8783 0040 D860     		str	r0, [r3, #12]
4170:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {						/* Follow completed */
 8784              		.loc 1 4170 0 is_stmt 1 discriminator 2
 8785 0042 0199     		ldr	r1, [sp, #4]
 8786 0044 2846     		mov	r0, r5
 8787              	.LVL1344:
 8788 0046 FFF7FEFF 		bl	follow_path
 8789              	.LVL1345:
4171:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!(dp->fn[NSFLAG] & NS_NONAME)) {	/* It is not the origin directory itself */
 8790              		.loc 1 4171 0 discriminator 2
 8791 004a 0446     		mov	r4, r0
 8792 004c 68B9     		cbnz	r0, .L883
4172:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (obj->attr & AM_DIR) {		/* This object is a sub-directory */
 8793              		.loc 1 4172 0
 8794 004e 95F92F30 		ldrsb	r3, [r5, #47]
 8795 0052 002B     		cmp	r3, #0
 8796 0054 08DB     		blt	.L884
4173:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 8797              		.loc 1 4173 0
 8798 0056 AB79     		ldrb	r3, [r5, #6]	@ zero_extendqisi2
 8799 0058 13F0100F 		tst	r3, #16
 8800 005c 12D0     		beq	.L888
4185:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 8801              		.loc 1 4185 0
 8802 005e 296A     		ldr	r1, [r5, #32]
 8803 0060 0398     		ldr	r0, [sp, #12]
 8804              	.LVL1346:
 8805 0062 FFF7FEFF 		bl	ld_clust
 8806              	.LVL1347:
 8807 0066 A860     		str	r0, [r5, #8]
 8808              	.L884:
 8809              	.LVL1348:
4191:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->id = fs->id;
 8810              		.loc 1 4191 0
 8811 0068 74B1     		cbz	r4, .L894
 8812              	.LVL1349:
 8813              	.L883:
4206:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_NO_FILE) res = FR_NO_PATH;
 8814              		.loc 1 4206 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 281


 8815 006a 3046     		mov	r0, r6
 8816 006c FFF7FEFF 		bl	ff_memfree
 8817              	.LVL1350:
4207:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 8818              		.loc 1 4207 0
 8819 0070 042C     		cmp	r4, #4
 8820 0072 D2D1     		bne	.L881
 8821 0074 0524     		movs	r4, #5
 8822              	.LVL1351:
 8823 0076 D0E7     		b	.L881
 8824              	.LVL1352:
 8825              	.L893:
4169:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(dp, path);			/* Follow the path to the directory */
 8826              		.loc 1 4169 0 discriminator 1
 8827 0078 1121     		movs	r1, #17
 8828 007a 0398     		ldr	r0, [sp, #12]
 8829              	.LVL1353:
 8830 007c FFF7FEFF 		bl	unlock_fs
 8831              	.LVL1354:
 8832 0080 1124     		movs	r4, #17
 8833 0082 D1E7     		b	.L880
 8834              	.LVL1355:
 8835              	.L888:
4188:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8836              		.loc 1 4188 0
 8837 0084 0524     		movs	r4, #5
 8838 0086 EFE7     		b	.L884
 8839              	.LVL1356:
 8840              	.L894:
4192:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_sdi(dp, 0);			/* Rewind directory */
 8841              		.loc 1 4192 0
 8842 0088 039B     		ldr	r3, [sp, #12]
 8843 008a DB88     		ldrh	r3, [r3, #6]
 8844 008c AB80     		strh	r3, [r5, #4]	@ movhi
4193:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 8845              		.loc 1 4193 0
 8846 008e 0021     		movs	r1, #0
 8847 0090 2846     		mov	r0, r5
 8848 0092 FFF7FEFF 		bl	dir_sdi
 8849              	.LVL1357:
4195:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (obj->sclust) {
 8850              		.loc 1 4195 0
 8851 0096 0446     		mov	r4, r0
 8852 0098 0028     		cmp	r0, #0
 8853 009a E6D1     		bne	.L883
4196:Middlewares/Third_Party/FatFs/src/ff.c **** 						obj->lockid = inc_lock(dp, 0);	/* Lock the sub directory */
 8854              		.loc 1 4196 0
 8855 009c AB68     		ldr	r3, [r5, #8]
 8856 009e 13B9     		cbnz	r3, .L895
4200:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 8857              		.loc 1 4200 0
 8858 00a0 0023     		movs	r3, #0
 8859 00a2 2B61     		str	r3, [r5, #16]
 8860 00a4 E1E7     		b	.L883
 8861              	.L895:
4197:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (!obj->lockid) res = FR_TOO_MANY_OPEN_FILES;
 8862              		.loc 1 4197 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 282


 8863 00a6 0021     		movs	r1, #0
 8864 00a8 2846     		mov	r0, r5
 8865              	.LVL1358:
 8866 00aa FFF7FEFF 		bl	inc_lock
 8867              	.LVL1359:
 8868 00ae 2861     		str	r0, [r5, #16]
4198:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else {
 8869              		.loc 1 4198 0
 8870 00b0 0028     		cmp	r0, #0
 8871 00b2 DAD1     		bne	.L883
 8872 00b4 1224     		movs	r4, #18
 8873 00b6 D8E7     		b	.L883
 8874              	.LVL1360:
 8875              	.L887:
4162:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8876              		.loc 1 4162 0
 8877 00b8 0924     		movs	r4, #9
 8878 00ba B5E7     		b	.L880
 8879              		.cfi_endproc
 8880              	.LFE198:
 8882              		.section	.text.f_closedir,"ax",%progbits
 8883              		.align	1
 8884              		.global	f_closedir
 8885              		.syntax unified
 8886              		.thumb
 8887              		.thumb_func
 8888              		.fpu fpv5-sp-d16
 8890              	f_closedir:
 8891              	.LFB199:
4224:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 8892              		.loc 1 4224 0
 8893              		.cfi_startproc
 8894              		@ args = 0, pretend = 0, frame = 8
 8895              		@ frame_needed = 0, uses_anonymous_args = 0
 8896              	.LVL1361:
 8897 0000 30B5     		push	{r4, r5, lr}
 8898              	.LCFI114:
 8899              		.cfi_def_cfa_offset 12
 8900              		.cfi_offset 4, -12
 8901              		.cfi_offset 5, -8
 8902              		.cfi_offset 14, -4
 8903 0002 83B0     		sub	sp, sp, #12
 8904              	.LCFI115:
 8905              		.cfi_def_cfa_offset 24
 8906 0004 0546     		mov	r5, r0
4229:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 8907              		.loc 1 4229 0
 8908 0006 01A9     		add	r1, sp, #4
 8909 0008 FFF7FEFF 		bl	validate
 8910              	.LVL1362:
4230:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 8911              		.loc 1 4230 0
 8912 000c 0446     		mov	r4, r0
 8913 000e 40B9     		cbnz	r0, .L897
4232:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dec_lock(dp->obj.lockid);
 8914              		.loc 1 4232 0
 8915 0010 2869     		ldr	r0, [r5, #16]
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 283


 8916              	.LVL1363:
 8917 0012 48B9     		cbnz	r0, .L901
 8918              	.L898:
 8919              	.LVL1364:
4235:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 8920              		.loc 1 4235 0
 8921 0014 0CB9     		cbnz	r4, .L899
4238:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 8922              		.loc 1 4238 0
 8923 0016 0023     		movs	r3, #0
 8924 0018 2B60     		str	r3, [r5]
 8925              	.L899:
4241:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 8926              		.loc 1 4241 0
 8927 001a 0021     		movs	r1, #0
 8928 001c 0198     		ldr	r0, [sp, #4]
 8929 001e FFF7FEFF 		bl	unlock_fs
 8930              	.LVL1365:
 8931              	.L897:
4245:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8932              		.loc 1 4245 0
 8933 0022 2046     		mov	r0, r4
 8934 0024 03B0     		add	sp, sp, #12
 8935              	.LCFI116:
 8936              		.cfi_remember_state
 8937              		.cfi_def_cfa_offset 12
 8938              		@ sp needed
 8939 0026 30BD     		pop	{r4, r5, pc}
 8940              	.LVL1366:
 8941              	.L901:
 8942              	.LCFI117:
 8943              		.cfi_restore_state
4233:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 8944              		.loc 1 4233 0
 8945 0028 FFF7FEFF 		bl	dec_lock
 8946              	.LVL1367:
 8947 002c 0446     		mov	r4, r0
 8948              	.LVL1368:
 8949 002e F1E7     		b	.L898
 8950              		.cfi_endproc
 8951              	.LFE199:
 8953              		.section	.text.f_readdir,"ax",%progbits
 8954              		.align	1
 8955              		.global	f_readdir
 8956              		.syntax unified
 8957              		.thumb
 8958              		.thumb_func
 8959              		.fpu fpv5-sp-d16
 8961              	f_readdir:
 8962              	.LFB200:
4258:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 8963              		.loc 1 4258 0
 8964              		.cfi_startproc
 8965              		@ args = 0, pretend = 0, frame = 8
 8966              		@ frame_needed = 0, uses_anonymous_args = 0
 8967              	.LVL1369:
 8968 0000 F0B5     		push	{r4, r5, r6, r7, lr}
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 284


 8969              	.LCFI118:
 8970              		.cfi_def_cfa_offset 20
 8971              		.cfi_offset 4, -20
 8972              		.cfi_offset 5, -16
 8973              		.cfi_offset 6, -12
 8974              		.cfi_offset 7, -8
 8975              		.cfi_offset 14, -4
 8976 0002 83B0     		sub	sp, sp, #12
 8977              	.LCFI119:
 8978              		.cfi_def_cfa_offset 32
 8979 0004 0646     		mov	r6, r0
 8980 0006 0D46     		mov	r5, r1
4264:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 8981              		.loc 1 4264 0
 8982 0008 01A9     		add	r1, sp, #4
 8983              	.LVL1370:
 8984 000a FFF7FEFF 		bl	validate
 8985              	.LVL1371:
4265:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!fno) {
 8986              		.loc 1 4265 0
 8987 000e 0446     		mov	r4, r0
 8988 0010 98B9     		cbnz	r0, .L903
4266:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_sdi(dp, 0);			/* Rewind the directory object */
 8989              		.loc 1 4266 0
 8990 0012 CDB1     		cbz	r5, .L910
4269:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_read(dp, 0);			/* Read an item */
 8991              		.loc 1 4269 0
 8992 0014 4FF40070 		mov	r0, #512
 8993              	.LVL1372:
 8994 0018 FFF7FEFF 		bl	ff_memalloc
 8995              	.LVL1373:
 8996 001c 0746     		mov	r7, r0
 8997 001e C8B1     		cbz	r0, .L911
4269:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_read(dp, 0);			/* Read an item */
 8998              		.loc 1 4269 0 is_stmt 0 discriminator 2
 8999 0020 019B     		ldr	r3, [sp, #4]
 9000 0022 D860     		str	r0, [r3, #12]
4270:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_NO_FILE) res = FR_OK;	/* Ignore end of directory */
 9001              		.loc 1 4270 0 is_stmt 1 discriminator 2
 9002 0024 0021     		movs	r1, #0
 9003 0026 3046     		mov	r0, r6
 9004              	.LVL1374:
 9005 0028 FFF7FEFF 		bl	dir_read
 9006              	.LVL1375:
4271:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {				/* A valid entry is found */
 9007              		.loc 1 4271 0 discriminator 2
 9008 002c 0428     		cmp	r0, #4
 9009 002e 00D0     		beq	.L907
4270:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_NO_FILE) res = FR_OK;	/* Ignore end of directory */
 9010              		.loc 1 4270 0
 9011 0030 0446     		mov	r4, r0
 9012              	.L907:
 9013              	.LVL1376:
4272:Middlewares/Third_Party/FatFs/src/ff.c **** 				get_fileinfo(dp, fno);		/* Get the object information */
 9014              		.loc 1 4272 0
 9015 0032 ACB1     		cbz	r4, .L912
 9016              	.LVL1377:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 285


 9017              	.L908:
4277:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 9018              		.loc 1 4277 0
 9019 0034 3846     		mov	r0, r7
 9020 0036 FFF7FEFF 		bl	ff_memfree
 9021              	.LVL1378:
 9022              	.L903:
4280:Middlewares/Third_Party/FatFs/src/ff.c **** }
 9023              		.loc 1 4280 0
 9024 003a 2146     		mov	r1, r4
 9025 003c 0198     		ldr	r0, [sp, #4]
 9026 003e FFF7FEFF 		bl	unlock_fs
 9027              	.LVL1379:
 9028              	.L906:
4281:Middlewares/Third_Party/FatFs/src/ff.c **** 
 9029              		.loc 1 4281 0
 9030 0042 2046     		mov	r0, r4
 9031 0044 03B0     		add	sp, sp, #12
 9032              	.LCFI120:
 9033              		.cfi_remember_state
 9034              		.cfi_def_cfa_offset 20
 9035              		@ sp needed
 9036 0046 F0BD     		pop	{r4, r5, r6, r7, pc}
 9037              	.LVL1380:
 9038              	.L910:
 9039              	.LCFI121:
 9040              		.cfi_restore_state
4267:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 9041              		.loc 1 4267 0
 9042 0048 0021     		movs	r1, #0
 9043 004a 3046     		mov	r0, r6
 9044              	.LVL1381:
 9045 004c FFF7FEFF 		bl	dir_sdi
 9046              	.LVL1382:
 9047 0050 0446     		mov	r4, r0
 9048              	.LVL1383:
 9049 0052 F2E7     		b	.L903
 9050              	.LVL1384:
 9051              	.L911:
4269:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_read(dp, 0);			/* Read an item */
 9052              		.loc 1 4269 0 discriminator 1
 9053 0054 1121     		movs	r1, #17
 9054 0056 0198     		ldr	r0, [sp, #4]
 9055              	.LVL1385:
 9056 0058 FFF7FEFF 		bl	unlock_fs
 9057              	.LVL1386:
 9058 005c 1124     		movs	r4, #17
 9059 005e F0E7     		b	.L906
 9060              	.LVL1387:
 9061              	.L912:
4273:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_next(dp, 0);		/* Increment index for next */
 9062              		.loc 1 4273 0
 9063 0060 2946     		mov	r1, r5
 9064 0062 3046     		mov	r0, r6
 9065 0064 FFF7FEFF 		bl	get_fileinfo
 9066              	.LVL1388:
4274:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) res = FR_OK;	/* Ignore end of directory now */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 286


 9067              		.loc 1 4274 0
 9068 0068 0021     		movs	r1, #0
 9069 006a 3046     		mov	r0, r6
 9070 006c FFF7FEFF 		bl	dir_next
 9071              	.LVL1389:
4275:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 9072              		.loc 1 4275 0
 9073 0070 0428     		cmp	r0, #4
 9074 0072 DFD0     		beq	.L908
4274:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) res = FR_OK;	/* Ignore end of directory now */
 9075              		.loc 1 4274 0
 9076 0074 0446     		mov	r4, r0
 9077 0076 DDE7     		b	.L908
 9078              		.cfi_endproc
 9079              	.LFE200:
 9081              		.section	.text.f_findnext,"ax",%progbits
 9082              		.align	1
 9083              		.global	f_findnext
 9084              		.syntax unified
 9085              		.thumb
 9086              		.thumb_func
 9087              		.fpu fpv5-sp-d16
 9089              	f_findnext:
 9090              	.LFB201:
4294:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 9091              		.loc 1 4294 0
 9092              		.cfi_startproc
 9093              		@ args = 0, pretend = 0, frame = 0
 9094              		@ frame_needed = 0, uses_anonymous_args = 0
 9095              	.LVL1390:
 9096 0000 70B5     		push	{r4, r5, r6, lr}
 9097              	.LCFI122:
 9098              		.cfi_def_cfa_offset 16
 9099              		.cfi_offset 4, -16
 9100              		.cfi_offset 5, -12
 9101              		.cfi_offset 6, -8
 9102              		.cfi_offset 14, -4
 9103 0002 0546     		mov	r5, r0
 9104 0004 0C46     		mov	r4, r1
 9105              	.LVL1391:
 9106              	.L915:
4299:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK || !fno || !fno->fname[0]) break;	/* Terminate if any error or end of directory 
 9107              		.loc 1 4299 0
 9108 0006 2146     		mov	r1, r4
 9109 0008 2846     		mov	r0, r5
 9110 000a FFF7FEFF 		bl	f_readdir
 9111              	.LVL1392:
4300:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (pattern_matching(dp->pat, fno->fname, 0, 0)) break;		/* Test for the file name */
 9112              		.loc 1 4300 0
 9113 000e 0646     		mov	r6, r0
 9114 0010 B4FA84F3 		clz	r3, r4
 9115 0014 5B09     		lsrs	r3, r3, #5
 9116 0016 0028     		cmp	r0, #0
 9117 0018 0CBF     		ite	eq
 9118 001a 1846     		moveq	r0, r3
 9119 001c 43F00100 		orrne	r0, r3, #1
 9120              	.LVL1393:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 287


 9121 0020 50B9     		cbnz	r0, .L914
4300:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (pattern_matching(dp->pat, fno->fname, 0, 0)) break;		/* Test for the file name */
 9122              		.loc 1 4300 0 is_stmt 0 discriminator 1
 9123 0022 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 9124 0024 43B1     		cbz	r3, .L914
4301:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0 && _USE_FIND == 2
 9125              		.loc 1 4301 0 is_stmt 1
 9126 0026 0023     		movs	r3, #0
 9127 0028 1A46     		mov	r2, r3
 9128 002a 04F11601 		add	r1, r4, #22
 9129 002e 686B     		ldr	r0, [r5, #52]
 9130 0030 FFF7FEFF 		bl	pattern_matching
 9131              	.LVL1394:
 9132 0034 0028     		cmp	r0, #0
 9133 0036 E6D0     		beq	.L915
 9134              	.L914:
4307:Middlewares/Third_Party/FatFs/src/ff.c **** 
 9135              		.loc 1 4307 0
 9136 0038 3046     		mov	r0, r6
 9137 003a 70BD     		pop	{r4, r5, r6, pc}
 9138              		.cfi_endproc
 9139              	.LFE201:
 9141              		.section	.text.f_findfirst,"ax",%progbits
 9142              		.align	1
 9143              		.global	f_findfirst
 9144              		.syntax unified
 9145              		.thumb
 9146              		.thumb_func
 9147              		.fpu fpv5-sp-d16
 9149              	f_findfirst:
 9150              	.LFB202:
4321:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 9151              		.loc 1 4321 0
 9152              		.cfi_startproc
 9153              		@ args = 0, pretend = 0, frame = 0
 9154              		@ frame_needed = 0, uses_anonymous_args = 0
 9155              	.LVL1395:
 9156 0000 38B5     		push	{r3, r4, r5, lr}
 9157              	.LCFI123:
 9158              		.cfi_def_cfa_offset 16
 9159              		.cfi_offset 3, -16
 9160              		.cfi_offset 4, -12
 9161              		.cfi_offset 5, -8
 9162              		.cfi_offset 14, -4
 9163 0002 0446     		mov	r4, r0
 9164 0004 0D46     		mov	r5, r1
4325:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = f_opendir(dp, path);		/* Open the target directory */
 9165              		.loc 1 4325 0
 9166 0006 4363     		str	r3, [r0, #52]
4326:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 9167              		.loc 1 4326 0
 9168 0008 1146     		mov	r1, r2
 9169              	.LVL1396:
 9170 000a FFF7FEFF 		bl	f_opendir
 9171              	.LVL1397:
4327:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = f_findnext(dp, fno);	/* Find the first item */
 9172              		.loc 1 4327 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 288


 9173 000e 0346     		mov	r3, r0
 9174 0010 08B1     		cbz	r0, .L920
 9175              	.LVL1398:
 9176              	.L918:
4331:Middlewares/Third_Party/FatFs/src/ff.c **** 
 9177              		.loc 1 4331 0
 9178 0012 1846     		mov	r0, r3
 9179 0014 38BD     		pop	{r3, r4, r5, pc}
 9180              	.LVL1399:
 9181              	.L920:
4328:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 9182              		.loc 1 4328 0
 9183 0016 2946     		mov	r1, r5
 9184 0018 2046     		mov	r0, r4
 9185              	.LVL1400:
 9186 001a FFF7FEFF 		bl	f_findnext
 9187              	.LVL1401:
 9188 001e 0346     		mov	r3, r0
 9189              	.LVL1402:
 9190 0020 F7E7     		b	.L918
 9191              		.cfi_endproc
 9192              	.LFE202:
 9194              		.section	.text.f_stat,"ax",%progbits
 9195              		.align	1
 9196              		.global	f_stat
 9197              		.syntax unified
 9198              		.thumb
 9199              		.thumb_func
 9200              		.fpu fpv5-sp-d16
 9202              	f_stat:
 9203              	.LFB203:
4346:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 9204              		.loc 1 4346 0
 9205              		.cfi_startproc
 9206              		@ args = 0, pretend = 0, frame = 64
 9207              		@ frame_needed = 0, uses_anonymous_args = 0
 9208              	.LVL1403:
 9209 0000 70B5     		push	{r4, r5, r6, lr}
 9210              	.LCFI124:
 9211              		.cfi_def_cfa_offset 16
 9212              		.cfi_offset 4, -16
 9213              		.cfi_offset 5, -12
 9214              		.cfi_offset 6, -8
 9215              		.cfi_offset 14, -4
 9216 0002 90B0     		sub	sp, sp, #64
 9217              	.LCFI125:
 9218              		.cfi_def_cfa_offset 80
 9219 0004 0190     		str	r0, [sp, #4]
 9220 0006 0E46     		mov	r6, r1
4353:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 9221              		.loc 1 4353 0
 9222 0008 0022     		movs	r2, #0
 9223 000a 02A9     		add	r1, sp, #8
 9224              	.LVL1404:
 9225 000c 01A8     		add	r0, sp, #4
 9226              	.LVL1405:
 9227 000e FFF7FEFF 		bl	find_volume
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 289


 9228              	.LVL1406:
4354:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(dj.obj.fs);
 9229              		.loc 1 4354 0
 9230 0012 0446     		mov	r4, r0
 9231 0014 C8B9     		cbnz	r0, .L922
4355:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);	/* Follow the file path */
 9232              		.loc 1 4355 0
 9233 0016 4FF40070 		mov	r0, #512
 9234              	.LVL1407:
 9235 001a FFF7FEFF 		bl	ff_memalloc
 9236              	.LVL1408:
 9237 001e 0546     		mov	r5, r0
 9238 0020 D0B1     		cbz	r0, .L928
4355:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);	/* Follow the file path */
 9239              		.loc 1 4355 0 is_stmt 0 discriminator 2
 9240 0022 029B     		ldr	r3, [sp, #8]
 9241 0024 D860     		str	r0, [r3, #12]
4356:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {				/* Follow completed */
 9242              		.loc 1 4356 0 is_stmt 1 discriminator 2
 9243 0026 0199     		ldr	r1, [sp, #4]
 9244 0028 02A8     		add	r0, sp, #8
 9245              	.LVL1409:
 9246 002a FFF7FEFF 		bl	follow_path
 9247              	.LVL1410:
4357:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {	/* It is origin directory */
 9248              		.loc 1 4357 0 discriminator 2
 9249 002e 0446     		mov	r4, r0
 9250 0030 40B9     		cbnz	r0, .L925
4358:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;
 9251              		.loc 1 4358 0
 9252 0032 9DF93730 		ldrsb	r3, [sp, #55]
 9253 0036 002B     		cmp	r3, #0
 9254 0038 14DB     		blt	.L926
4361:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 9255              		.loc 1 4361 0
 9256 003a 1EB1     		cbz	r6, .L925
4361:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 9257              		.loc 1 4361 0 is_stmt 0 discriminator 1
 9258 003c 3146     		mov	r1, r6
 9259 003e 02A8     		add	r0, sp, #8
 9260              	.LVL1411:
 9261 0040 FFF7FEFF 		bl	get_fileinfo
 9262              	.LVL1412:
 9263              	.L925:
4364:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 9264              		.loc 1 4364 0 is_stmt 1
 9265 0044 2846     		mov	r0, r5
 9266 0046 FFF7FEFF 		bl	ff_memfree
 9267              	.LVL1413:
 9268              	.L922:
4367:Middlewares/Third_Party/FatFs/src/ff.c **** }
 9269              		.loc 1 4367 0
 9270 004a 2146     		mov	r1, r4
 9271 004c 0298     		ldr	r0, [sp, #8]
 9272 004e FFF7FEFF 		bl	unlock_fs
 9273              	.LVL1414:
 9274              	.L924:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 290


4368:Middlewares/Third_Party/FatFs/src/ff.c **** 
 9275              		.loc 1 4368 0
 9276 0052 2046     		mov	r0, r4
 9277 0054 10B0     		add	sp, sp, #64
 9278              	.LCFI126:
 9279              		.cfi_remember_state
 9280              		.cfi_def_cfa_offset 16
 9281              		@ sp needed
 9282 0056 70BD     		pop	{r4, r5, r6, pc}
 9283              	.LVL1415:
 9284              	.L928:
 9285              	.LCFI127:
 9286              		.cfi_restore_state
4355:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);	/* Follow the file path */
 9287              		.loc 1 4355 0 discriminator 1
 9288 0058 1121     		movs	r1, #17
 9289 005a 0298     		ldr	r0, [sp, #8]
 9290              	.LVL1416:
 9291 005c FFF7FEFF 		bl	unlock_fs
 9292              	.LVL1417:
 9293 0060 1124     		movs	r4, #17
 9294 0062 F6E7     		b	.L924
 9295              	.LVL1418:
 9296              	.L926:
4359:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {							/* Found an object */
 9297              		.loc 1 4359 0
 9298 0064 0624     		movs	r4, #6
 9299 0066 EDE7     		b	.L925
 9300              		.cfi_endproc
 9301              	.LFE203:
 9303              		.section	.text.f_getfree,"ax",%progbits
 9304              		.align	1
 9305              		.global	f_getfree
 9306              		.syntax unified
 9307              		.thumb
 9308              		.thumb_func
 9309              		.fpu fpv5-sp-d16
 9311              	f_getfree:
 9312              	.LFB204:
4382:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 9313              		.loc 1 4382 0
 9314              		.cfi_startproc
 9315              		@ args = 0, pretend = 0, frame = 32
 9316              		@ frame_needed = 0, uses_anonymous_args = 0
 9317              	.LVL1419:
 9318 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 9319              	.LCFI128:
 9320              		.cfi_def_cfa_offset 32
 9321              		.cfi_offset 4, -32
 9322              		.cfi_offset 5, -28
 9323              		.cfi_offset 6, -24
 9324              		.cfi_offset 7, -20
 9325              		.cfi_offset 8, -16
 9326              		.cfi_offset 9, -12
 9327              		.cfi_offset 10, -8
 9328              		.cfi_offset 14, -4
 9329 0004 88B0     		sub	sp, sp, #32
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 291


 9330              	.LCFI129:
 9331              		.cfi_def_cfa_offset 64
 9332 0006 0190     		str	r0, [sp, #4]
 9333 0008 8A46     		mov	r10, r1
 9334 000a 1446     		mov	r4, r2
4392:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 9335              		.loc 1 4392 0
 9336 000c 0022     		movs	r2, #0
 9337              	.LVL1420:
 9338 000e 07A9     		add	r1, sp, #28
 9339              	.LVL1421:
 9340 0010 01A8     		add	r0, sp, #4
 9341              	.LVL1422:
 9342 0012 FFF7FEFF 		bl	find_volume
 9343              	.LVL1423:
4393:Middlewares/Third_Party/FatFs/src/ff.c **** 		*fatfs = fs;				/* Return ptr to the fs object */
 9344              		.loc 1 4393 0
 9345 0016 8046     		mov	r8, r0
 9346 0018 0028     		cmp	r0, #0
 9347 001a 5AD1     		bne	.L930
4394:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* If free_clst is valid, return it without full cluster scan */
 9348              		.loc 1 4394 0
 9349 001c 079B     		ldr	r3, [sp, #28]
 9350 001e 2360     		str	r3, [r4]
4396:Middlewares/Third_Party/FatFs/src/ff.c **** 			*nclst = fs->free_clst;
 9351              		.loc 1 4396 0
 9352 0020 9A69     		ldr	r2, [r3, #24]
 9353 0022 1E6A     		ldr	r6, [r3, #32]
 9354 0024 B11E     		subs	r1, r6, #2
 9355 0026 8A42     		cmp	r2, r1
 9356 0028 08D9     		bls	.L945
 9357              	.LVL1424:
4401:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = 2; obj.fs = fs;
 9358              		.loc 1 4401 0
 9359 002a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 9360 002c 012A     		cmp	r2, #1
 9361 002e 08D0     		beq	.L946
 9362              	.LVL1425:
4429:Middlewares/Third_Party/FatFs/src/ff.c **** 					i = 0; p = 0;
 9363              		.loc 1 4429 0
 9364 0030 D3F82C90 		ldr	r9, [r3, #44]
 9365              	.LVL1426:
4430:Middlewares/Third_Party/FatFs/src/ff.c **** 					do {
 9366              		.loc 1 4430 0
 9367 0034 0024     		movs	r4, #0
 9368              	.LVL1427:
 9369 0036 2546     		mov	r5, r4
4400:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->fs_type == FS_FAT12) {	/* FAT12: Sector unalighed FAT entries */
 9370              		.loc 1 4400 0
 9371 0038 2746     		mov	r7, r4
 9372 003a 32E0     		b	.L941
 9373              	.LVL1428:
 9374              	.L945:
4397:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 9375              		.loc 1 4397 0
 9376 003c CAF80020 		str	r2, [r10]
 9377 0040 47E0     		b	.L930
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 292


 9378              	.LVL1429:
 9379              	.L946:
4402:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {
 9380              		.loc 1 4402 0
 9381 0042 0293     		str	r3, [sp, #8]
 9382 0044 0224     		movs	r4, #2
 9383              	.LVL1430:
4400:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->fs_type == FS_FAT12) {	/* FAT12: Sector unalighed FAT entries */
 9384              		.loc 1 4400 0
 9385 0046 0027     		movs	r7, #0
 9386 0048 04E0     		b	.L935
 9387              	.LVL1431:
 9388              	.L934:
4408:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
 9389              		.loc 1 4408 0
 9390 004a 0134     		adds	r4, r4, #1
 9391              	.LVL1432:
 9392 004c 079B     		ldr	r3, [sp, #28]
 9393 004e 1B6A     		ldr	r3, [r3, #32]
 9394 0050 9C42     		cmp	r4, r3
 9395 0052 36D2     		bcs	.L933
 9396              	.LVL1433:
 9397              	.L935:
4404:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }
 9398              		.loc 1 4404 0
 9399 0054 2146     		mov	r1, r4
 9400 0056 02A8     		add	r0, sp, #8
 9401 0058 FFF7FEFF 		bl	get_fat
 9402              	.LVL1434:
4405:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 1) { res = FR_INT_ERR; break; }
 9403              		.loc 1 4405 0
 9404 005c B0F1FF3F 		cmp	r0, #-1
 9405 0060 2DD0     		beq	.L942
4406:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 0) nfree++;
 9406              		.loc 1 4406 0
 9407 0062 0128     		cmp	r0, #1
 9408 0064 3DD0     		beq	.L943
4407:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while (++clst < fs->n_fatent);
 9409              		.loc 1 4407 0
 9410 0066 0028     		cmp	r0, #0
 9411 0068 EFD1     		bne	.L934
4407:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while (++clst < fs->n_fatent);
 9412              		.loc 1 4407 0 is_stmt 0 discriminator 1
 9413 006a 0137     		adds	r7, r7, #1
 9414              	.LVL1435:
 9415 006c EDE7     		b	.L934
 9416              	.LVL1436:
 9417              	.L947:
4433:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res != FR_OK) break;
 9418              		.loc 1 4433 0 is_stmt 1
 9419 006e 09F10105 		add	r5, r9, #1
 9420              	.LVL1437:
 9421 0072 4946     		mov	r1, r9
 9422 0074 0798     		ldr	r0, [sp, #28]
 9423 0076 FFF7FEFF 		bl	move_window
 9424              	.LVL1438:
4434:Middlewares/Third_Party/FatFs/src/ff.c **** 							p = fs->win;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 293


 9425              		.loc 1 4434 0
 9426 007a 8046     		mov	r8, r0
 9427 007c 08BB     		cbnz	r0, .L933
4435:Middlewares/Third_Party/FatFs/src/ff.c **** 							i = SS(fs);
 9428              		.loc 1 4435 0
 9429 007e 079C     		ldr	r4, [sp, #28]
 9430              	.LVL1439:
 9431 0080 3C34     		adds	r4, r4, #60
 9432              	.LVL1440:
4433:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res != FR_OK) break;
 9433              		.loc 1 4433 0
 9434 0082 A946     		mov	r9, r5
4436:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
 9435              		.loc 1 4436 0
 9436 0084 4FF40075 		mov	r5, #512
 9437              	.LVL1441:
 9438 0088 0DE0     		b	.L936
 9439              	.LVL1442:
 9440              	.L948:
4439:Middlewares/Third_Party/FatFs/src/ff.c **** 							p += 2; i -= 2;
 9441              		.loc 1 4439 0
 9442 008a 2046     		mov	r0, r4
 9443 008c FFF7FEFF 		bl	ld_word
 9444              	.LVL1443:
 9445 0090 00B9     		cbnz	r0, .L938
4439:Middlewares/Third_Party/FatFs/src/ff.c **** 							p += 2; i -= 2;
 9446              		.loc 1 4439 0 is_stmt 0 discriminator 1
 9447 0092 0137     		adds	r7, r7, #1
 9448              	.LVL1444:
 9449              	.L938:
4440:Middlewares/Third_Party/FatFs/src/ff.c **** 						} else {
 9450              		.loc 1 4440 0 is_stmt 1
 9451 0094 0234     		adds	r4, r4, #2
 9452              	.LVL1445:
 9453 0096 023D     		subs	r5, r5, #2
 9454              	.LVL1446:
 9455 0098 01E0     		b	.L939
 9456              	.L940:
4443:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
 9457              		.loc 1 4443 0
 9458 009a 0434     		adds	r4, r4, #4
 9459              	.LVL1447:
 9460 009c 043D     		subs	r5, r5, #4
 9461              	.LVL1448:
 9462              	.L939:
4445:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 9463              		.loc 1 4445 0
 9464 009e 013E     		subs	r6, r6, #1
 9465              	.LVL1449:
 9466 00a0 0FD0     		beq	.L933
 9467              	.LVL1450:
 9468              	.L941:
4432:Middlewares/Third_Party/FatFs/src/ff.c **** 							res = move_window(fs, sect++);
 9469              		.loc 1 4432 0
 9470 00a2 002D     		cmp	r5, #0
 9471 00a4 E3D0     		beq	.L947
 9472              	.LVL1451:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 294


 9473              	.L936:
4438:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (ld_word(p) == 0) nfree++;
 9474              		.loc 1 4438 0
 9475 00a6 079B     		ldr	r3, [sp, #28]
 9476 00a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9477 00aa 022B     		cmp	r3, #2
 9478 00ac EDD0     		beq	.L948
4442:Middlewares/Third_Party/FatFs/src/ff.c **** 							p += 4; i -= 4;
 9479              		.loc 1 4442 0
 9480 00ae 2046     		mov	r0, r4
 9481 00b0 FFF7FEFF 		bl	ld_dword
 9482              	.LVL1452:
 9483 00b4 30F07043 		bics	r3, r0, #-268435456
 9484 00b8 EFD1     		bne	.L940
4442:Middlewares/Third_Party/FatFs/src/ff.c **** 							p += 4; i -= 4;
 9485              		.loc 1 4442 0 is_stmt 0 discriminator 1
 9486 00ba 0137     		adds	r7, r7, #1
 9487              	.LVL1453:
 9488 00bc EDE7     		b	.L940
 9489              	.LVL1454:
 9490              	.L942:
4405:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 1) { res = FR_INT_ERR; break; }
 9491              		.loc 1 4405 0 is_stmt 1
 9492 00be 4FF00108 		mov	r8, #1
 9493              	.LVL1455:
 9494              	.L933:
4448:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->free_clst = nfree;	/* Now free_clst is valid */
 9495              		.loc 1 4448 0
 9496 00c2 CAF80070 		str	r7, [r10]
4449:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->fsi_flag |= 1;		/* FSInfo is to be updated */
 9497              		.loc 1 4449 0
 9498 00c6 079B     		ldr	r3, [sp, #28]
 9499 00c8 9F61     		str	r7, [r3, #24]
4450:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 9500              		.loc 1 4450 0
 9501 00ca 1A79     		ldrb	r2, [r3, #4]	@ zero_extendqisi2
 9502 00cc 42F00102 		orr	r2, r2, #1
 9503 00d0 1A71     		strb	r2, [r3, #4]
 9504              	.LVL1456:
 9505              	.L930:
4454:Middlewares/Third_Party/FatFs/src/ff.c **** }
 9506              		.loc 1 4454 0
 9507 00d2 4146     		mov	r1, r8
 9508 00d4 0798     		ldr	r0, [sp, #28]
 9509 00d6 FFF7FEFF 		bl	unlock_fs
 9510              	.LVL1457:
4455:Middlewares/Third_Party/FatFs/src/ff.c **** 
 9511              		.loc 1 4455 0
 9512 00da 4046     		mov	r0, r8
 9513 00dc 08B0     		add	sp, sp, #32
 9514              	.LCFI130:
 9515              		.cfi_remember_state
 9516              		.cfi_def_cfa_offset 32
 9517              		@ sp needed
 9518 00de BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 9519              	.LVL1458:
 9520              	.L943:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 295


 9521              	.LCFI131:
 9522              		.cfi_restore_state
4406:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 0) nfree++;
 9523              		.loc 1 4406 0
 9524 00e2 4FF00208 		mov	r8, #2
 9525 00e6 ECE7     		b	.L933
 9526              		.cfi_endproc
 9527              	.LFE204:
 9529              		.section	.text.f_truncate,"ax",%progbits
 9530              		.align	1
 9531              		.global	f_truncate
 9532              		.syntax unified
 9533              		.thumb
 9534              		.thumb_func
 9535              		.fpu fpv5-sp-d16
 9537              	f_truncate:
 9538              	.LFB205:
4467:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 9539              		.loc 1 4467 0
 9540              		.cfi_startproc
 9541              		@ args = 0, pretend = 0, frame = 8
 9542              		@ frame_needed = 0, uses_anonymous_args = 0
 9543              	.LVL1459:
 9544 0000 30B5     		push	{r4, r5, lr}
 9545              	.LCFI132:
 9546              		.cfi_def_cfa_offset 12
 9547              		.cfi_offset 4, -12
 9548              		.cfi_offset 5, -8
 9549              		.cfi_offset 14, -4
 9550 0002 83B0     		sub	sp, sp, #12
 9551              	.LCFI133:
 9552              		.cfi_def_cfa_offset 24
 9553 0004 0546     		mov	r5, r0
4473:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);
 9554              		.loc 1 4473 0
 9555 0006 01A9     		add	r1, sp, #4
 9556 0008 FFF7FEFF 		bl	validate
 9557              	.LVL1460:
4474:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
 9558              		.loc 1 4474 0
 9559 000c 0446     		mov	r4, r0
 9560 000e 18BB     		cbnz	r0, .L950
4474:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
 9561              		.loc 1 4474 0 is_stmt 0 discriminator 2
 9562 0010 6C7D     		ldrb	r4, [r5, #21]	@ zero_extendqisi2
 9563              	.LVL1461:
 9564 0012 0CBB     		cbnz	r4, .L950
4475:Middlewares/Third_Party/FatFs/src/ff.c **** 
 9565              		.loc 1 4475 0 is_stmt 1
 9566 0014 2B7D     		ldrb	r3, [r5, #20]	@ zero_extendqisi2
 9567 0016 13F0020F 		tst	r3, #2
 9568 001a 24D0     		beq	.L964
4477:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->fptr == 0) {	/* When set file size to zero, remove entire cluster chain */
 9569              		.loc 1 4477 0
 9570 001c AB69     		ldr	r3, [r5, #24]
 9571 001e EA68     		ldr	r2, [r5, #12]
 9572 0020 9342     		cmp	r3, r2
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 296


 9573 0022 14D2     		bcs	.L954
4478:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = remove_chain(&fp->obj, fp->obj.sclust, 0);
 9574              		.loc 1 4478 0
 9575 0024 2BBB     		cbnz	r3, .L955
4479:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->obj.sclust = 0;
 9576              		.loc 1 4479 0
 9577 0026 0022     		movs	r2, #0
 9578 0028 A968     		ldr	r1, [r5, #8]
 9579 002a 2846     		mov	r0, r5
 9580 002c FFF7FEFF 		bl	remove_chain
 9581              	.LVL1462:
 9582 0030 0446     		mov	r4, r0
 9583              	.LVL1463:
4480:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {				/* When truncate a part of the file, remove remaining clusters */
 9584              		.loc 1 4480 0
 9585 0032 0023     		movs	r3, #0
 9586 0034 AB60     		str	r3, [r5, #8]
 9587              	.L956:
4490:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->flag |= FA_MODIFIED;
 9588              		.loc 1 4490 0
 9589 0036 AB69     		ldr	r3, [r5, #24]
 9590 0038 EB60     		str	r3, [r5, #12]
4491:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
 9591              		.loc 1 4491 0
 9592 003a 2B7D     		ldrb	r3, [r5, #20]	@ zero_extendqisi2
 9593 003c 43F04003 		orr	r3, r3, #64
 9594 0040 2B75     		strb	r3, [r5, #20]
4493:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) {
 9595              		.loc 1 4493 0
 9596 0042 14B9     		cbnz	r4, .L959
4493:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) {
 9597              		.loc 1 4493 0 is_stmt 0 discriminator 1
 9598 0044 13F0800F 		tst	r3, #128
 9599 0048 2DD1     		bne	.L965
 9600              	.LVL1464:
 9601              	.L959:
4501:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 9602              		.loc 1 4501 0 is_stmt 1
 9603 004a 002C     		cmp	r4, #0
 9604 004c 3BD1     		bne	.L966
 9605              	.L954:
4504:Middlewares/Third_Party/FatFs/src/ff.c **** }
 9606              		.loc 1 4504 0
 9607 004e 2146     		mov	r1, r4
 9608 0050 0198     		ldr	r0, [sp, #4]
 9609 0052 FFF7FEFF 		bl	unlock_fs
 9610              	.LVL1465:
 9611 0056 03E0     		b	.L952
 9612              	.LVL1466:
 9613              	.L950:
4474:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
 9614              		.loc 1 4474 0 discriminator 3
 9615 0058 2146     		mov	r1, r4
 9616 005a 0198     		ldr	r0, [sp, #4]
 9617 005c FFF7FEFF 		bl	unlock_fs
 9618              	.LVL1467:
 9619              	.L952:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 297


4505:Middlewares/Third_Party/FatFs/src/ff.c **** 
 9620              		.loc 1 4505 0
 9621 0060 2046     		mov	r0, r4
 9622 0062 03B0     		add	sp, sp, #12
 9623              	.LCFI134:
 9624              		.cfi_remember_state
 9625              		.cfi_def_cfa_offset 12
 9626              		@ sp needed
 9627 0064 30BD     		pop	{r4, r5, pc}
 9628              	.LVL1468:
 9629              	.L964:
 9630              	.LCFI135:
 9631              		.cfi_restore_state
4475:Middlewares/Third_Party/FatFs/src/ff.c **** 
 9632              		.loc 1 4475 0 discriminator 1
 9633 0066 0721     		movs	r1, #7
 9634 0068 0198     		ldr	r0, [sp, #4]
 9635 006a FFF7FEFF 		bl	unlock_fs
 9636              	.LVL1469:
 9637 006e 0724     		movs	r4, #7
 9638              	.LVL1470:
 9639 0070 F6E7     		b	.L952
 9640              	.LVL1471:
 9641              	.L955:
4482:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_OK;
 9642              		.loc 1 4482 0
 9643 0072 E969     		ldr	r1, [r5, #28]
 9644 0074 2846     		mov	r0, r5
 9645 0076 FFF7FEFF 		bl	get_fat
 9646              	.LVL1472:
4484:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ncl == 1) res = FR_INT_ERR;
 9647              		.loc 1 4484 0
 9648 007a B0F1FF3F 		cmp	r0, #-1
 9649 007e 0ED0     		beq	.L967
 9650              	.L957:
 9651              	.LVL1473:
4485:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK && ncl < fs->n_fatent) {
 9652              		.loc 1 4485 0
 9653 0080 0128     		cmp	r0, #1
 9654 0082 0ED0     		beq	.L968
 9655              	.LVL1474:
 9656              	.L958:
4486:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = remove_chain(&fp->obj, ncl, fp->clust);
 9657              		.loc 1 4486 0
 9658 0084 002C     		cmp	r4, #0
 9659 0086 D6D1     		bne	.L956
4486:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = remove_chain(&fp->obj, ncl, fp->clust);
 9660              		.loc 1 4486 0 is_stmt 0 discriminator 1
 9661 0088 019B     		ldr	r3, [sp, #4]
 9662 008a 1B6A     		ldr	r3, [r3, #32]
 9663 008c 9842     		cmp	r0, r3
 9664 008e D2D2     		bcs	.L956
4487:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 9665              		.loc 1 4487 0 is_stmt 1
 9666 0090 EA69     		ldr	r2, [r5, #28]
 9667 0092 0146     		mov	r1, r0
 9668 0094 2846     		mov	r0, r5
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 298


 9669              	.LVL1475:
 9670 0096 FFF7FEFF 		bl	remove_chain
 9671              	.LVL1476:
 9672 009a 0446     		mov	r4, r0
 9673              	.LVL1477:
 9674 009c CBE7     		b	.L956
 9675              	.LVL1478:
 9676              	.L967:
4484:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ncl == 1) res = FR_INT_ERR;
 9677              		.loc 1 4484 0
 9678 009e 0124     		movs	r4, #1
 9679 00a0 EEE7     		b	.L957
 9680              	.LVL1479:
 9681              	.L968:
4485:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK && ncl < fs->n_fatent) {
 9682              		.loc 1 4485 0
 9683 00a2 0224     		movs	r4, #2
 9684              	.LVL1480:
 9685 00a4 EEE7     		b	.L958
 9686              	.LVL1481:
 9687              	.L965:
4494:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_DISK_ERR;
 9688              		.loc 1 4494 0
 9689 00a6 0123     		movs	r3, #1
 9690 00a8 2A6A     		ldr	r2, [r5, #32]
 9691 00aa 05F13001 		add	r1, r5, #48
 9692 00ae 0198     		ldr	r0, [sp, #4]
 9693 00b0 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 9694 00b2 FFF7FEFF 		bl	disk_write
 9695              	.LVL1482:
 9696 00b6 20B9     		cbnz	r0, .L962
4497:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 9697              		.loc 1 4497 0
 9698 00b8 2B7D     		ldrb	r3, [r5, #20]	@ zero_extendqisi2
 9699 00ba 03F07F03 		and	r3, r3, #127
 9700 00be 2B75     		strb	r3, [r5, #20]
 9701 00c0 C3E7     		b	.L959
 9702              	.L962:
4495:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
 9703              		.loc 1 4495 0
 9704 00c2 0124     		movs	r4, #1
 9705              	.LVL1483:
 9706 00c4 C1E7     		b	.L959
 9707              	.LVL1484:
 9708              	.L966:
4501:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 9709              		.loc 1 4501 0 discriminator 1
 9710 00c6 6C75     		strb	r4, [r5, #21]
 9711 00c8 2146     		mov	r1, r4
 9712 00ca 0198     		ldr	r0, [sp, #4]
 9713 00cc FFF7FEFF 		bl	unlock_fs
 9714              	.LVL1485:
 9715 00d0 C6E7     		b	.L952
 9716              		.cfi_endproc
 9717              	.LFE205:
 9719              		.section	.text.f_unlink,"ax",%progbits
 9720              		.align	1
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 299


 9721              		.global	f_unlink
 9722              		.syntax unified
 9723              		.thumb
 9724              		.thumb_func
 9725              		.fpu fpv5-sp-d16
 9727              	f_unlink:
 9728              	.LFB206:
4517:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 9729              		.loc 1 4517 0
 9730              		.cfi_startproc
 9731              		@ args = 0, pretend = 0, frame = 128
 9732              		@ frame_needed = 0, uses_anonymous_args = 0
 9733              	.LVL1486:
 9734 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 9735              	.LCFI136:
 9736              		.cfi_def_cfa_offset 20
 9737              		.cfi_offset 4, -20
 9738              		.cfi_offset 5, -16
 9739              		.cfi_offset 6, -12
 9740              		.cfi_offset 7, -8
 9741              		.cfi_offset 14, -4
 9742 0002 A1B0     		sub	sp, sp, #132
 9743              	.LCFI137:
 9744              		.cfi_def_cfa_offset 152
 9745 0004 0190     		str	r0, [sp, #4]
 9746              	.LVL1487:
4529:Middlewares/Third_Party/FatFs/src/ff.c **** 	dj.obj.fs = fs;
 9747              		.loc 1 4529 0
 9748 0006 0222     		movs	r2, #2
 9749 0008 03A9     		add	r1, sp, #12
 9750 000a 01A8     		add	r0, sp, #4
 9751              	.LVL1488:
 9752 000c FFF7FEFF 		bl	find_volume
 9753              	.LVL1489:
4530:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 9754              		.loc 1 4530 0
 9755 0010 039B     		ldr	r3, [sp, #12]
 9756 0012 1293     		str	r3, [sp, #72]
4531:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
 9757              		.loc 1 4531 0
 9758 0014 0446     		mov	r4, r0
 9759 0016 0028     		cmp	r0, #0
 9760 0018 55D1     		bne	.L970
4532:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);		/* Follow the file path */
 9761              		.loc 1 4532 0
 9762 001a 4FF40070 		mov	r0, #512
 9763              	.LVL1490:
 9764 001e FFF7FEFF 		bl	ff_memalloc
 9765              	.LVL1491:
 9766 0022 0546     		mov	r5, r0
 9767 0024 0028     		cmp	r0, #0
 9768 0026 3FD0     		beq	.L987
4532:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);		/* Follow the file path */
 9769              		.loc 1 4532 0 is_stmt 0 discriminator 2
 9770 0028 039B     		ldr	r3, [sp, #12]
 9771 002a D860     		str	r0, [r3, #12]
4533:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_RPATH && res == FR_OK && (dj.fn[NSFLAG] & NS_DOT)) {
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 300


 9772              		.loc 1 4533 0 is_stmt 1 discriminator 2
 9773 002c 0199     		ldr	r1, [sp, #4]
 9774 002e 12A8     		add	r0, sp, #72
 9775              	.LVL1492:
 9776 0030 FFF7FEFF 		bl	follow_path
 9777              	.LVL1493:
4534:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_INVALID_NAME;			/* Cannot remove dot entry */
 9778              		.loc 1 4534 0 discriminator 2
 9779 0034 0446     		mov	r4, r0
 9780 0036 28B9     		cbnz	r0, .L973
4534:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_INVALID_NAME;			/* Cannot remove dot entry */
 9781              		.loc 1 4534 0 is_stmt 0 discriminator 1
 9782 0038 9DF87730 		ldrb	r3, [sp, #119]	@ zero_extendqisi2
 9783 003c 13F0200F 		tst	r3, #32
 9784 0040 00D0     		beq	.L973
4535:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 9785              		.loc 1 4535 0 is_stmt 1
 9786 0042 0624     		movs	r4, #6
 9787              	.L973:
 9788              	.LVL1494:
4538:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 9789              		.loc 1 4538 0
 9790 0044 24B9     		cbnz	r4, .L974
4538:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 9791              		.loc 1 4538 0 is_stmt 0 discriminator 1
 9792 0046 0221     		movs	r1, #2
 9793 0048 12A8     		add	r0, sp, #72
 9794 004a FFF7FEFF 		bl	chk_lock
 9795              	.LVL1495:
 9796 004e 0446     		mov	r4, r0
 9797              	.LVL1496:
 9798              	.L974:
4540:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {
 9799              		.loc 1 4540 0 is_stmt 1
 9800 0050 B4BB     		cbnz	r4, .L975
4541:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;		/* Cannot remove the origin directory */
 9801              		.loc 1 4541 0
 9802 0052 9DF97730 		ldrsb	r3, [sp, #119]
 9803 0056 002B     		cmp	r3, #0
 9804 0058 2CDB     		blt	.L981
4544:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_DENIED;		/* Cannot remove R/O object */
 9805              		.loc 1 4544 0
 9806 005a 9DF84E30 		ldrb	r3, [sp, #78]	@ zero_extendqisi2
 9807 005e 13F0010F 		tst	r3, #1
 9808 0062 29D1     		bne	.L982
 9809              	.LVL1497:
 9810              	.L976:
4548:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 9811              		.loc 1 4548 0
 9812 0064 54BB     		cbnz	r4, .L983
4558:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 9813              		.loc 1 4558 0
 9814 0066 039F     		ldr	r7, [sp, #12]
 9815 0068 1A99     		ldr	r1, [sp, #104]
 9816 006a 3846     		mov	r0, r7
 9817 006c FFF7FEFF 		bl	ld_clust
 9818              	.LVL1498:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 301


 9819 0070 0646     		mov	r6, r0
 9820              	.LVL1499:
4560:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH != 0
 9821              		.loc 1 4560 0
 9822 0072 9DF84E30 		ldrb	r3, [sp, #78]	@ zero_extendqisi2
 9823 0076 13F0100F 		tst	r3, #16
 9824 007a 20D0     		beq	.L977
4562:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = FR_DENIED;
 9825              		.loc 1 4562 0
 9826 007c FB69     		ldr	r3, [r7, #28]
 9827 007e 9842     		cmp	r0, r3
 9828 0080 28D0     		beq	.L984
4567:Middlewares/Third_Party/FatFs/src/ff.c **** 						sdj.obj.sclust = dclst;
 9829              		.loc 1 4567 0
 9830 0082 0497     		str	r7, [sp, #16]
4568:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 9831              		.loc 1 4568 0
 9832 0084 0690     		str	r0, [sp, #24]
4575:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (res == FR_OK) {
 9833              		.loc 1 4575 0
 9834 0086 0021     		movs	r1, #0
 9835 0088 04A8     		add	r0, sp, #16
 9836              	.LVL1500:
 9837 008a FFF7FEFF 		bl	dir_sdi
 9838              	.LVL1501:
4576:Middlewares/Third_Party/FatFs/src/ff.c **** 							res = dir_read(&sdj, 0);			/* Read an item */
 9839              		.loc 1 4576 0
 9840 008e 0446     		mov	r4, r0
 9841 0090 A8B9     		cbnz	r0, .L977
4577:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res == FR_OK) res = FR_DENIED;	/* Not empty? */
 9842              		.loc 1 4577 0
 9843 0092 0021     		movs	r1, #0
 9844 0094 04A8     		add	r0, sp, #16
 9845              	.LVL1502:
 9846 0096 FFF7FEFF 		bl	dir_read
 9847              	.LVL1503:
4578:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res == FR_NO_FILE) res = FR_OK;	/* Empty? */
 9848              		.loc 1 4578 0
 9849 009a 0346     		mov	r3, r0
 9850 009c 00B9     		cbnz	r0, .L978
 9851 009e 0723     		movs	r3, #7
 9852              	.L978:
 9853              	.LVL1504:
4579:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
 9854              		.loc 1 4579 0
 9855 00a0 042B     		cmp	r3, #4
 9856 00a2 0CD0     		beq	.L977
 9857 00a4 1C46     		mov	r4, r3
 9858 00a6 0AE0     		b	.L977
 9859              	.LVL1505:
 9860              	.L987:
4532:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);		/* Follow the file path */
 9861              		.loc 1 4532 0 discriminator 1
 9862 00a8 1121     		movs	r1, #17
 9863 00aa 0398     		ldr	r0, [sp, #12]
 9864              	.LVL1506:
 9865 00ac FFF7FEFF 		bl	unlock_fs
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 302


 9866              	.LVL1507:
 9867 00b0 1124     		movs	r4, #17
 9868 00b2 0CE0     		b	.L972
 9869              	.LVL1508:
 9870              	.L981:
4542:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
 9871              		.loc 1 4542 0
 9872 00b4 0624     		movs	r4, #6
 9873              	.LVL1509:
 9874 00b6 D5E7     		b	.L976
 9875              	.LVL1510:
 9876              	.L982:
4545:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 9877              		.loc 1 4545 0
 9878 00b8 0724     		movs	r4, #7
 9879              	.LVL1511:
 9880 00ba D3E7     		b	.L976
 9881              	.LVL1512:
 9882              	.L983:
4520:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
 9883              		.loc 1 4520 0
 9884 00bc 0026     		movs	r6, #0
 9885              	.LVL1513:
 9886              	.L977:
4584:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_remove(&dj);			/* Remove the directory entry */
 9887              		.loc 1 4584 0
 9888 00be 5CB1     		cbz	r4, .L988
 9889              	.LVL1514:
 9890              	.L975:
4596:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 9891              		.loc 1 4596 0
 9892 00c0 2846     		mov	r0, r5
 9893 00c2 FFF7FEFF 		bl	ff_memfree
 9894              	.LVL1515:
 9895              	.L970:
4599:Middlewares/Third_Party/FatFs/src/ff.c **** }
 9896              		.loc 1 4599 0
 9897 00c6 2146     		mov	r1, r4
 9898 00c8 0398     		ldr	r0, [sp, #12]
 9899 00ca FFF7FEFF 		bl	unlock_fs
 9900              	.LVL1516:
 9901              	.L972:
4600:Middlewares/Third_Party/FatFs/src/ff.c **** 
 9902              		.loc 1 4600 0
 9903 00ce 2046     		mov	r0, r4
 9904 00d0 21B0     		add	sp, sp, #132
 9905              	.LCFI138:
 9906              		.cfi_remember_state
 9907              		.cfi_def_cfa_offset 20
 9908              		@ sp needed
 9909 00d2 F0BD     		pop	{r4, r5, r6, r7, pc}
 9910              	.LVL1517:
 9911              	.L984:
 9912              	.LCFI139:
 9913              		.cfi_restore_state
4563:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else
 9914              		.loc 1 4563 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 303


 9915 00d4 0724     		movs	r4, #7
 9916              	.LVL1518:
 9917 00d6 F2E7     		b	.L977
 9918              	.LVL1519:
 9919              	.L988:
4585:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK && dclst) {	/* Remove the cluster chain if exist */
 9920              		.loc 1 4585 0
 9921 00d8 12A8     		add	r0, sp, #72
 9922 00da FFF7FEFF 		bl	dir_remove
 9923              	.LVL1520:
4586:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 9924              		.loc 1 4586 0
 9925 00de 0446     		mov	r4, r0
 9926 00e0 B0FA80F0 		clz	r0, r0
 9927              	.LVL1521:
 9928 00e4 4009     		lsrs	r0, r0, #5
 9929 00e6 002E     		cmp	r6, #0
 9930 00e8 08BF     		it	eq
 9931 00ea 0020     		moveq	r0, #0
 9932 00ec 30B9     		cbnz	r0, .L989
 9933              	.L979:
 9934              	.LVL1522:
4593:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 9935              		.loc 1 4593 0
 9936 00ee 002C     		cmp	r4, #0
 9937 00f0 E6D1     		bne	.L975
4593:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 9938              		.loc 1 4593 0 is_stmt 0 discriminator 1
 9939 00f2 0398     		ldr	r0, [sp, #12]
 9940 00f4 FFF7FEFF 		bl	sync_fs
 9941              	.LVL1523:
 9942 00f8 0446     		mov	r4, r0
 9943              	.LVL1524:
 9944 00fa E1E7     		b	.L975
 9945              	.LVL1525:
 9946              	.L989:
4590:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 9947              		.loc 1 4590 0 is_stmt 1
 9948 00fc 0022     		movs	r2, #0
 9949 00fe 3146     		mov	r1, r6
 9950 0100 12A8     		add	r0, sp, #72
 9951 0102 FFF7FEFF 		bl	remove_chain
 9952              	.LVL1526:
 9953 0106 0446     		mov	r4, r0
 9954              	.LVL1527:
 9955 0108 F1E7     		b	.L979
 9956              		.cfi_endproc
 9957              	.LFE206:
 9959              		.section	.text.f_mkdir,"ax",%progbits
 9960              		.align	1
 9961              		.global	f_mkdir
 9962              		.syntax unified
 9963              		.thumb
 9964              		.thumb_func
 9965              		.fpu fpv5-sp-d16
 9967              	f_mkdir:
 9968              	.LFB207:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 304


4612:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 9969              		.loc 1 4612 0
 9970              		.cfi_startproc
 9971              		@ args = 0, pretend = 0, frame = 72
 9972              		@ frame_needed = 0, uses_anonymous_args = 0
 9973              	.LVL1528:
 9974 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 9975              	.LCFI140:
 9976              		.cfi_def_cfa_offset 36
 9977              		.cfi_offset 4, -36
 9978              		.cfi_offset 5, -32
 9979              		.cfi_offset 6, -28
 9980              		.cfi_offset 7, -24
 9981              		.cfi_offset 8, -20
 9982              		.cfi_offset 9, -16
 9983              		.cfi_offset 10, -12
 9984              		.cfi_offset 11, -8
 9985              		.cfi_offset 14, -4
 9986 0004 93B0     		sub	sp, sp, #76
 9987              	.LCFI141:
 9988              		.cfi_def_cfa_offset 112
 9989 0006 0190     		str	r0, [sp, #4]
4623:Middlewares/Third_Party/FatFs/src/ff.c **** 	dj.obj.fs = fs;
 9990              		.loc 1 4623 0
 9991 0008 0222     		movs	r2, #2
 9992 000a 03A9     		add	r1, sp, #12
 9993 000c 01A8     		add	r0, sp, #4
 9994              	.LVL1529:
 9995 000e FFF7FEFF 		bl	find_volume
 9996              	.LVL1530:
4624:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 9997              		.loc 1 4624 0
 9998 0012 039B     		ldr	r3, [sp, #12]
 9999 0014 0493     		str	r3, [sp, #16]
4625:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
 10000              		.loc 1 4625 0
 10001 0016 0446     		mov	r4, r0
 10002 0018 B0B9     		cbnz	r0, .L991
4626:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);			/* Follow the file path */
 10003              		.loc 1 4626 0
 10004 001a 4FF40070 		mov	r0, #512
 10005              	.LVL1531:
 10006 001e FFF7FEFF 		bl	ff_memalloc
 10007              	.LVL1532:
 10008 0022 0546     		mov	r5, r0
 10009 0024 C0B1     		cbz	r0, .L1014
4626:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);			/* Follow the file path */
 10010              		.loc 1 4626 0 is_stmt 0 discriminator 2
 10011 0026 039B     		ldr	r3, [sp, #12]
 10012 0028 D860     		str	r0, [r3, #12]
4627:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) res = FR_EXIST;		/* Any object with same name is already existing */
 10013              		.loc 1 4627 0 is_stmt 1 discriminator 2
 10014 002a 0199     		ldr	r1, [sp, #4]
 10015 002c 04A8     		add	r0, sp, #16
 10016              	.LVL1533:
 10017 002e FFF7FEFF 		bl	follow_path
 10018              	.LVL1534:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 305


4628:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_RPATH && res == FR_NO_FILE && (dj.fn[NSFLAG] & NS_DOT)) {
 10019              		.loc 1 4628 0 discriminator 2
 10020 0032 0646     		mov	r6, r0
 10021 0034 00B9     		cbnz	r0, .L994
4628:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_RPATH && res == FR_NO_FILE && (dj.fn[NSFLAG] & NS_DOT)) {
 10022              		.loc 1 4628 0 is_stmt 0
 10023 0036 0826     		movs	r6, #8
 10024              	.L994:
 10025              	.LVL1535:
4629:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_INVALID_NAME;
 10026              		.loc 1 4629 0 is_stmt 1
 10027 0038 042E     		cmp	r6, #4
 10028 003a 13D0     		beq	.L1015
 10029              	.LVL1536:
 10030              	.L995:
4632:Middlewares/Third_Party/FatFs/src/ff.c **** 			dcl = create_chain(&dj.obj, 0);		/* Allocate a cluster for the new directory table */
 10031              		.loc 1 4632 0
 10032 003c 042E     		cmp	r6, #4
 10033 003e 18D0     		beq	.L1016
 10034              	.LVL1537:
 10035              	.L996:
4693:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 10036              		.loc 1 4693 0
 10037 0040 2846     		mov	r0, r5
 10038 0042 FFF7FEFF 		bl	ff_memfree
 10039              	.LVL1538:
 10040 0046 3446     		mov	r4, r6
 10041              	.LVL1539:
 10042              	.L991:
4696:Middlewares/Third_Party/FatFs/src/ff.c **** }
 10043              		.loc 1 4696 0
 10044 0048 2146     		mov	r1, r4
 10045 004a 0398     		ldr	r0, [sp, #12]
 10046 004c FFF7FEFF 		bl	unlock_fs
 10047              	.LVL1540:
 10048              	.L993:
4697:Middlewares/Third_Party/FatFs/src/ff.c **** 
 10049              		.loc 1 4697 0
 10050 0050 2046     		mov	r0, r4
 10051 0052 13B0     		add	sp, sp, #76
 10052              	.LCFI142:
 10053              		.cfi_remember_state
 10054              		.cfi_def_cfa_offset 36
 10055              		@ sp needed
 10056 0054 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 10057              	.LVL1541:
 10058              	.L1014:
 10059              	.LCFI143:
 10060              		.cfi_restore_state
4626:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);			/* Follow the file path */
 10061              		.loc 1 4626 0 discriminator 1
 10062 0058 1121     		movs	r1, #17
 10063 005a 0398     		ldr	r0, [sp, #12]
 10064              	.LVL1542:
 10065 005c FFF7FEFF 		bl	unlock_fs
 10066              	.LVL1543:
 10067 0060 1124     		movs	r4, #17
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 306


 10068 0062 F5E7     		b	.L993
 10069              	.LVL1544:
 10070              	.L1015:
4629:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_INVALID_NAME;
 10071              		.loc 1 4629 0 discriminator 1
 10072 0064 9DF83F30 		ldrb	r3, [sp, #63]	@ zero_extendqisi2
 10073 0068 13F0200F 		tst	r3, #32
 10074 006c E6D0     		beq	.L995
4630:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 10075              		.loc 1 4630 0
 10076 006e 0626     		movs	r6, #6
 10077              	.LVL1545:
 10078 0070 E4E7     		b	.L995
 10079              	.LVL1546:
 10080              	.L1016:
4633:Middlewares/Third_Party/FatFs/src/ff.c **** 			dj.obj.objsize = (DWORD)fs->csize * SS(fs);
 10081              		.loc 1 4633 0
 10082 0072 0021     		movs	r1, #0
 10083 0074 04A8     		add	r0, sp, #16
 10084 0076 FFF7FEFF 		bl	create_chain
 10085              	.LVL1547:
4634:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_OK;
 10086              		.loc 1 4634 0
 10087 007a 039A     		ldr	r2, [sp, #12]
 10088 007c 5389     		ldrh	r3, [r2, #10]
 10089 007e 5B02     		lsls	r3, r3, #9
 10090 0080 0793     		str	r3, [sp, #28]
 10091              	.LVL1548:
4636:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dcl == 1) res = FR_INT_ERR;
 10092              		.loc 1 4636 0
 10093 0082 0746     		mov	r7, r0
 10094 0084 00B9     		cbnz	r0, .L997
 10095 0086 0724     		movs	r4, #7
 10096              	.L997:
 10097              	.LVL1549:
4637:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dcl == 0xFFFFFFFF) res = FR_DISK_ERR;
 10098              		.loc 1 4637 0
 10099 0088 012F     		cmp	r7, #1
 10100 008a 20D0     		beq	.L1017
 10101              	.LVL1550:
 10102              	.L998:
4638:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) res = sync_window(fs);	/* Flush FAT */
 10103              		.loc 1 4638 0
 10104 008c B7F1FF3F 		cmp	r7, #-1
 10105 0090 1FD0     		beq	.L1018
 10106              	.LVL1551:
 10107              	.L999:
4639:Middlewares/Third_Party/FatFs/src/ff.c **** 			tm = GET_FATTIME();
 10108              		.loc 1 4639 0
 10109 0092 04B3     		cbz	r4, .L1019
 10110              	.LVL1552:
 10111              	.L1000:
4640:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {					/* Initialize the new directory table */
 10112              		.loc 1 4640 0
 10113 0094 FFF7FEFF 		bl	get_fattime
 10114              	.LVL1553:
 10115 0098 0090     		str	r0, [sp]
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 307


 10116              	.LVL1554:
4641:Middlewares/Third_Party/FatFs/src/ff.c **** 				dsc = clust2sect(fs, dcl);
 10117              		.loc 1 4641 0
 10118 009a 0CB3     		cbz	r4, .L1020
 10119              	.LVL1555:
 10120              	.L1001:
4664:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_register(&dj);	/* Register the object to the directoy */
 10121              		.loc 1 4664 0
 10122 009c 002C     		cmp	r4, #0
 10123 009e 76D0     		beq	.L1021
 10124              	.L1005:
4667:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 10125              		.loc 1 4667 0
 10126 00a0 002C     		cmp	r4, #0
 10127 00a2 79D1     		bne	.L1006
4680:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dir + DIR_ModTime, tm);	/* Created time */
 10128              		.loc 1 4680 0
 10129 00a4 0C9C     		ldr	r4, [sp, #48]
 10130              	.LVL1556:
4681:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fs, dir, dcl);				/* Table start cluster */
 10131              		.loc 1 4681 0
 10132 00a6 0099     		ldr	r1, [sp]
 10133 00a8 04F11600 		add	r0, r4, #22
 10134 00ac FFF7FEFF 		bl	st_dword
 10135              	.LVL1557:
4682:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir[DIR_Attr] = AM_DIR;				/* Attribute */
 10136              		.loc 1 4682 0
 10137 00b0 3A46     		mov	r2, r7
 10138 00b2 2146     		mov	r1, r4
 10139 00b4 0398     		ldr	r0, [sp, #12]
 10140 00b6 FFF7FEFF 		bl	st_clust
 10141              	.LVL1558:
4683:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->wflag = 1;
 10142              		.loc 1 4683 0
 10143 00ba 1023     		movs	r3, #16
 10144 00bc E372     		strb	r3, [r4, #11]
4684:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 10145              		.loc 1 4684 0
 10146 00be 0122     		movs	r2, #1
 10147 00c0 039B     		ldr	r3, [sp, #12]
 10148 00c2 DA70     		strb	r2, [r3, #3]
4687:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 10149              		.loc 1 4687 0
 10150 00c4 0398     		ldr	r0, [sp, #12]
 10151 00c6 FFF7FEFF 		bl	sync_fs
 10152              	.LVL1559:
 10153 00ca 0646     		mov	r6, r0
 10154              	.LVL1560:
 10155 00cc B8E7     		b	.L996
 10156              	.LVL1561:
 10157              	.L1017:
4637:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dcl == 0xFFFFFFFF) res = FR_DISK_ERR;
 10158              		.loc 1 4637 0
 10159 00ce 0224     		movs	r4, #2
 10160              	.LVL1562:
 10161 00d0 DCE7     		b	.L998
 10162              	.LVL1563:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 308


 10163              	.L1018:
4638:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) res = sync_window(fs);	/* Flush FAT */
 10164              		.loc 1 4638 0
 10165 00d2 0124     		movs	r4, #1
 10166              	.LVL1564:
 10167 00d4 DDE7     		b	.L999
 10168              	.LVL1565:
 10169              	.L1019:
4639:Middlewares/Third_Party/FatFs/src/ff.c **** 			tm = GET_FATTIME();
 10170              		.loc 1 4639 0 discriminator 1
 10171 00d6 1046     		mov	r0, r2
 10172              	.LVL1566:
 10173 00d8 FFF7FEFF 		bl	sync_window
 10174              	.LVL1567:
 10175 00dc 0446     		mov	r4, r0
 10176              	.LVL1568:
 10177 00de D9E7     		b	.L1000
 10178              	.LVL1569:
 10179              	.L1020:
4642:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir = fs->win;
 10180              		.loc 1 4642 0
 10181 00e0 DDF80C90 		ldr	r9, [sp, #12]
 10182 00e4 3946     		mov	r1, r7
 10183 00e6 4846     		mov	r0, r9
 10184              	.LVL1570:
 10185 00e8 FFF7FEFF 		bl	clust2sect
 10186              	.LVL1571:
 10187 00ec 0646     		mov	r6, r0
 10188              	.LVL1572:
4643:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_set(dir, 0, SS(fs));
 10189              		.loc 1 4643 0
 10190 00ee 09F13C08 		add	r8, r9, #60
 10191              	.LVL1573:
4644:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!_FS_EXFAT || fs->fs_type != FS_EXFAT) {
 10192              		.loc 1 4644 0
 10193 00f2 4FF40072 		mov	r2, #512
 10194 00f6 0021     		movs	r1, #0
 10195 00f8 4046     		mov	r0, r8
 10196              	.LVL1574:
 10197 00fa FFF7FEFF 		bl	mem_set
 10198              	.LVL1575:
4646:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir[DIR_Name] = '.';
 10199              		.loc 1 4646 0
 10200 00fe 0B22     		movs	r2, #11
 10201 0100 2021     		movs	r1, #32
 10202 0102 4046     		mov	r0, r8
 10203 0104 FFF7FEFF 		bl	mem_set
 10204              	.LVL1576:
4647:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir[DIR_Attr] = AM_DIR;
 10205              		.loc 1 4647 0
 10206 0108 4FF02E0B 		mov	fp, #46
 10207 010c 89F83CB0 		strb	fp, [r9, #60]
4648:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dir + DIR_ModTime, tm);
 10208              		.loc 1 4648 0
 10209 0110 1023     		movs	r3, #16
 10210 0112 89F84730 		strb	r3, [r9, #71]
4649:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fs, dir, dcl);
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 309


 10211              		.loc 1 4649 0
 10212 0116 0099     		ldr	r1, [sp]
 10213 0118 09F15200 		add	r0, r9, #82
 10214 011c FFF7FEFF 		bl	st_dword
 10215              	.LVL1577:
4650:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(dir + SZDIRE, dir, SZDIRE); 	/* Create ".." entry */
 10216              		.loc 1 4650 0
 10217 0120 3A46     		mov	r2, r7
 10218 0122 4146     		mov	r1, r8
 10219 0124 0398     		ldr	r0, [sp, #12]
 10220 0126 FFF7FEFF 		bl	st_clust
 10221              	.LVL1578:
4651:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir[SZDIRE + 1] = '.'; pcl = dj.obj.sclust;
 10222              		.loc 1 4651 0
 10223 012a 09F15C0A 		add	r10, r9, #92
 10224 012e 2022     		movs	r2, #32
 10225 0130 4146     		mov	r1, r8
 10226 0132 5046     		mov	r0, r10
 10227 0134 FFF7FEFF 		bl	mem_cpy
 10228              	.LVL1579:
4652:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (fs->fs_type == FS_FAT32 && pcl == fs->dirbase) pcl = 0;
 10229              		.loc 1 4652 0
 10230 0138 89F85DB0 		strb	fp, [r9, #93]
 10231 013c 069A     		ldr	r2, [sp, #24]
 10232              	.LVL1580:
4653:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fs, dir + SZDIRE, pcl);
 10233              		.loc 1 4653 0
 10234 013e 0398     		ldr	r0, [sp, #12]
 10235 0140 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 10236 0142 032B     		cmp	r3, #3
 10237 0144 1ED0     		beq	.L1022
 10238              	.LVL1581:
 10239              	.L1002:
4654:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 10240              		.loc 1 4654 0
 10241 0146 5146     		mov	r1, r10
 10242 0148 FFF7FEFF 		bl	st_clust
 10243              	.LVL1582:
4656:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->winsect = dsc++;
 10244              		.loc 1 4656 0
 10245 014c 039B     		ldr	r3, [sp, #12]
 10246 014e B3F80A90 		ldrh	r9, [r3, #10]
 10247              	.LVL1583:
 10248              	.L1003:
4656:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->winsect = dsc++;
 10249              		.loc 1 4656 0 is_stmt 0 discriminator 1
 10250 0152 B9F1000F 		cmp	r9, #0
 10251 0156 A1D0     		beq	.L1001
4657:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->wflag = 1;
 10252              		.loc 1 4657 0 is_stmt 1
 10253 0158 039B     		ldr	r3, [sp, #12]
 10254 015a 06F1010B 		add	fp, r6, #1
 10255              	.LVL1584:
 10256 015e 9E63     		str	r6, [r3, #56]
4658:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = sync_window(fs);
 10257              		.loc 1 4658 0
 10258 0160 0122     		movs	r2, #1
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 310


 10259 0162 DA70     		strb	r2, [r3, #3]
4659:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res != FR_OK) break;
 10260              		.loc 1 4659 0
 10261 0164 0398     		ldr	r0, [sp, #12]
 10262 0166 FFF7FEFF 		bl	sync_window
 10263              	.LVL1585:
4660:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_set(dir, 0, SS(fs));
 10264              		.loc 1 4660 0
 10265 016a 0446     		mov	r4, r0
 10266 016c 0028     		cmp	r0, #0
 10267 016e 95D1     		bne	.L1001
4661:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 10268              		.loc 1 4661 0 discriminator 2
 10269 0170 4FF40072 		mov	r2, #512
 10270 0174 0021     		movs	r1, #0
 10271 0176 4046     		mov	r0, r8
 10272              	.LVL1586:
 10273 0178 FFF7FEFF 		bl	mem_set
 10274              	.LVL1587:
4656:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->winsect = dsc++;
 10275              		.loc 1 4656 0 discriminator 2
 10276 017c 09F1FF39 		add	r9, r9, #-1
 10277              	.LVL1588:
4657:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->wflag = 1;
 10278              		.loc 1 4657 0 discriminator 2
 10279 0180 5E46     		mov	r6, fp
 10280 0182 E6E7     		b	.L1003
 10281              	.LVL1589:
 10282              	.L1022:
4653:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fs, dir + SZDIRE, pcl);
 10283              		.loc 1 4653 0 discriminator 1
 10284 0184 036B     		ldr	r3, [r0, #48]
 10285 0186 9A42     		cmp	r2, r3
 10286 0188 DDD1     		bne	.L1002
4653:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fs, dir + SZDIRE, pcl);
 10287              		.loc 1 4653 0 is_stmt 0
 10288 018a 0022     		movs	r2, #0
 10289              	.LVL1590:
 10290 018c DBE7     		b	.L1002
 10291              	.LVL1591:
 10292              	.L1021:
4665:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 10293              		.loc 1 4665 0 is_stmt 1
 10294 018e 04A8     		add	r0, sp, #16
 10295 0190 FFF7FEFF 		bl	dir_register
 10296              	.LVL1592:
 10297 0194 0446     		mov	r4, r0
 10298              	.LVL1593:
 10299 0196 83E7     		b	.L1005
 10300              	.L1006:
4690:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 10301              		.loc 1 4690 0
 10302 0198 0022     		movs	r2, #0
 10303 019a 3946     		mov	r1, r7
 10304 019c 04A8     		add	r0, sp, #16
 10305 019e FFF7FEFF 		bl	remove_chain
 10306              	.LVL1594:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 311


 10307 01a2 2646     		mov	r6, r4
 10308 01a4 4CE7     		b	.L996
 10309              		.cfi_endproc
 10310              	.LFE207:
 10312              		.section	.text.f_rename,"ax",%progbits
 10313              		.align	1
 10314              		.global	f_rename
 10315              		.syntax unified
 10316              		.thumb
 10317              		.thumb_func
 10318              		.fpu fpv5-sp-d16
 10320              	f_rename:
 10321              	.LFB208:
4710:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 10322              		.loc 1 4710 0
 10323              		.cfi_startproc
 10324              		@ args = 0, pretend = 0, frame = 152
 10325              		@ frame_needed = 0, uses_anonymous_args = 0
 10326              	.LVL1595:
 10327 0000 70B5     		push	{r4, r5, r6, lr}
 10328              	.LCFI144:
 10329              		.cfi_def_cfa_offset 16
 10330              		.cfi_offset 4, -16
 10331              		.cfi_offset 5, -12
 10332              		.cfi_offset 6, -8
 10333              		.cfi_offset 14, -4
 10334 0002 A6B0     		sub	sp, sp, #152
 10335              	.LCFI145:
 10336              		.cfi_def_cfa_offset 168
 10337 0004 0190     		str	r0, [sp, #4]
 10338 0006 26A8     		add	r0, sp, #152
 10339              	.LVL1596:
 10340 0008 40F8981D 		str	r1, [r0, #-152]!
4719:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path_old, &fs, FA_WRITE);	/* Get logical drive of the old object */
 10341              		.loc 1 4719 0
 10342 000c FFF7FEFF 		bl	get_ldnumber
 10343              	.LVL1597:
4720:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 10344              		.loc 1 4720 0
 10345 0010 0222     		movs	r2, #2
 10346 0012 09A9     		add	r1, sp, #36
 10347 0014 01A8     		add	r0, sp, #4
 10348 0016 FFF7FEFF 		bl	find_volume
 10349              	.LVL1598:
4721:Middlewares/Third_Party/FatFs/src/ff.c **** 		djo.obj.fs = fs;
 10350              		.loc 1 4721 0
 10351 001a 0446     		mov	r4, r0
 10352 001c F8B9     		cbnz	r0, .L1024
4722:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
 10353              		.loc 1 4722 0
 10354 001e 099B     		ldr	r3, [sp, #36]
 10355 0020 1893     		str	r3, [sp, #96]
4723:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&djo, path_old);		/* Check old object */
 10356              		.loc 1 4723 0
 10357 0022 4FF40070 		mov	r0, #512
 10358              	.LVL1599:
 10359 0026 FFF7FEFF 		bl	ff_memalloc
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 312


 10360              	.LVL1600:
 10361 002a 0546     		mov	r5, r0
 10362 002c F0B1     		cbz	r0, .L1037
4723:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&djo, path_old);		/* Check old object */
 10363              		.loc 1 4723 0 is_stmt 0 discriminator 2
 10364 002e 099B     		ldr	r3, [sp, #36]
 10365 0030 D860     		str	r0, [r3, #12]
4724:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK && (djo.fn[NSFLAG] & (NS_DOT | NS_NONAME))) res = FR_INVALID_NAME;	/* Check vali
 10366              		.loc 1 4724 0 is_stmt 1 discriminator 2
 10367 0032 0199     		ldr	r1, [sp, #4]
 10368 0034 18A8     		add	r0, sp, #96
 10369              	.LVL1601:
 10370 0036 FFF7FEFF 		bl	follow_path
 10371              	.LVL1602:
4725:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 10372              		.loc 1 4725 0 discriminator 2
 10373 003a 0446     		mov	r4, r0
 10374 003c 28B9     		cbnz	r0, .L1027
4725:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 10375              		.loc 1 4725 0 is_stmt 0 discriminator 1
 10376 003e 9DF88F30 		ldrb	r3, [sp, #143]	@ zero_extendqisi2
 10377 0042 13F0A00F 		tst	r3, #160
 10378 0046 00D0     		beq	.L1027
4725:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 10379              		.loc 1 4725 0
 10380 0048 0624     		movs	r4, #6
 10381              	.L1027:
 10382              	.LVL1603:
4727:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = chk_lock(&djo, 2);
 10383              		.loc 1 4727 0 is_stmt 1
 10384 004a 24B9     		cbnz	r4, .L1028
4728:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 10385              		.loc 1 4728 0
 10386 004c 0221     		movs	r1, #2
 10387 004e 18A8     		add	r0, sp, #96
 10388 0050 FFF7FEFF 		bl	chk_lock
 10389              	.LVL1604:
 10390 0054 0446     		mov	r4, r0
 10391              	.LVL1605:
 10392              	.L1028:
4731:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 10393              		.loc 1 4731 0
 10394 0056 7CB1     		cbz	r4, .L1038
 10395              	.LVL1606:
 10396              	.L1029:
4796:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 10397              		.loc 1 4796 0
 10398 0058 2846     		mov	r0, r5
 10399 005a FFF7FEFF 		bl	ff_memfree
 10400              	.LVL1607:
 10401              	.L1024:
4799:Middlewares/Third_Party/FatFs/src/ff.c **** }
 10402              		.loc 1 4799 0
 10403 005e 2146     		mov	r1, r4
 10404 0060 0998     		ldr	r0, [sp, #36]
 10405 0062 FFF7FEFF 		bl	unlock_fs
 10406              	.LVL1608:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 313


 10407              	.L1026:
4800:Middlewares/Third_Party/FatFs/src/ff.c **** 
 10408              		.loc 1 4800 0
 10409 0066 2046     		mov	r0, r4
 10410 0068 26B0     		add	sp, sp, #152
 10411              	.LCFI146:
 10412              		.cfi_remember_state
 10413              		.cfi_def_cfa_offset 16
 10414              		@ sp needed
 10415 006a 70BD     		pop	{r4, r5, r6, pc}
 10416              	.LVL1609:
 10417              	.L1037:
 10418              	.LCFI147:
 10419              		.cfi_restore_state
4723:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&djo, path_old);		/* Check old object */
 10420              		.loc 1 4723 0 discriminator 1
 10421 006c 1121     		movs	r1, #17
 10422 006e 0998     		ldr	r0, [sp, #36]
 10423              	.LVL1610:
 10424 0070 FFF7FEFF 		bl	unlock_fs
 10425              	.LVL1611:
 10426 0074 1124     		movs	r4, #17
 10427 0076 F6E7     		b	.L1026
 10428              	.LVL1612:
 10429              	.L1038:
4758:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_cpy(&djn, &djo, sizeof (DIR));		/* Duplicate the directory object */
 10430              		.loc 1 4758 0
 10431 0078 1522     		movs	r2, #21
 10432 007a 2099     		ldr	r1, [sp, #128]
 10433 007c 0B31     		adds	r1, r1, #11
 10434 007e 03A8     		add	r0, sp, #12
 10435 0080 FFF7FEFF 		bl	mem_cpy
 10436              	.LVL1613:
4759:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = follow_path(&djn, path_new);		/* Make sure if new object name is not in use */
 10437              		.loc 1 4759 0
 10438 0084 3822     		movs	r2, #56
 10439 0086 18A9     		add	r1, sp, #96
 10440 0088 0AA8     		add	r0, sp, #40
 10441 008a FFF7FEFF 		bl	mem_cpy
 10442              	.LVL1614:
4760:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {						/* Is new name already in use by any other object? */
 10443              		.loc 1 4760 0
 10444 008e 0099     		ldr	r1, [sp]
 10445 0090 0AA8     		add	r0, sp, #40
 10446 0092 FFF7FEFF 		bl	follow_path
 10447              	.LVL1615:
4761:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = (djn.obj.sclust == djo.obj.sclust && djn.dptr == djo.dptr) ? FR_NO_FILE : FR_EXIST;
 10448              		.loc 1 4761 0
 10449 0096 0446     		mov	r4, r0
 10450 0098 20B9     		cbnz	r0, .L1030
4762:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 10451              		.loc 1 4762 0
 10452 009a 1A9B     		ldr	r3, [sp, #104]
 10453 009c 0C9A     		ldr	r2, [sp, #48]
 10454 009e 9A42     		cmp	r2, r3
 10455 00a0 0FD0     		beq	.L1039
 10456 00a2 0824     		movs	r4, #8
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 314


 10457              	.L1030:
 10458              	.LVL1616:
4764:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = dir_register(&djn);			/* Register the new entry */
 10459              		.loc 1 4764 0
 10460 00a4 042C     		cmp	r4, #4
 10461 00a6 14D0     		beq	.L1040
 10462              	.LVL1617:
 10463              	.L1031:
4788:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_remove(&djo);		/* Remove old entry */
 10464              		.loc 1 4788 0
 10465 00a8 002C     		cmp	r4, #0
 10466 00aa D5D1     		bne	.L1029
4789:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {
 10467              		.loc 1 4789 0
 10468 00ac 18A8     		add	r0, sp, #96
 10469 00ae FFF7FEFF 		bl	dir_remove
 10470              	.LVL1618:
4790:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = sync_fs(fs);
 10471              		.loc 1 4790 0
 10472 00b2 0446     		mov	r4, r0
 10473 00b4 0028     		cmp	r0, #0
 10474 00b6 CFD1     		bne	.L1029
4791:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 10475              		.loc 1 4791 0
 10476 00b8 0998     		ldr	r0, [sp, #36]
 10477              	.LVL1619:
 10478 00ba FFF7FEFF 		bl	sync_fs
 10479              	.LVL1620:
 10480 00be 0446     		mov	r4, r0
 10481              	.LVL1621:
 10482 00c0 CAE7     		b	.L1029
 10483              	.LVL1622:
 10484              	.L1039:
4762:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 10485              		.loc 1 4762 0 discriminator 1
 10486 00c2 1D9B     		ldr	r3, [sp, #116]
 10487 00c4 0F9A     		ldr	r2, [sp, #60]
 10488 00c6 9A42     		cmp	r2, r3
 10489 00c8 01D0     		beq	.L1034
4762:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 10490              		.loc 1 4762 0 is_stmt 0
 10491 00ca 0824     		movs	r4, #8
 10492 00cc EAE7     		b	.L1030
 10493              	.L1034:
 10494 00ce 0424     		movs	r4, #4
 10495 00d0 E8E7     		b	.L1030
 10496              	.LVL1623:
 10497              	.L1040:
4765:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res == FR_OK) {
 10498              		.loc 1 4765 0 is_stmt 1
 10499 00d2 0AA8     		add	r0, sp, #40
 10500 00d4 FFF7FEFF 		bl	dir_register
 10501              	.LVL1624:
4766:Middlewares/Third_Party/FatFs/src/ff.c **** 						dir = djn.dir;					/* Copy information about object except name */
 10502              		.loc 1 4766 0
 10503 00d8 0446     		mov	r4, r0
 10504 00da 0028     		cmp	r0, #0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 315


 10505 00dc E4D1     		bne	.L1031
4767:Middlewares/Third_Party/FatFs/src/ff.c **** 						mem_cpy(dir + 13, buf + 2, 19);
 10506              		.loc 1 4767 0
 10507 00de 129E     		ldr	r6, [sp, #72]
 10508              	.LVL1625:
4768:Middlewares/Third_Party/FatFs/src/ff.c **** 						dir[DIR_Attr] = buf[0] | AM_ARC;
 10509              		.loc 1 4768 0
 10510 00e0 1322     		movs	r2, #19
 10511 00e2 0DF10E01 		add	r1, sp, #14
 10512 00e6 06F10D00 		add	r0, r6, #13
 10513              	.LVL1626:
 10514 00ea FFF7FEFF 		bl	mem_cpy
 10515              	.LVL1627:
4769:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->wflag = 1;
 10516              		.loc 1 4769 0
 10517 00ee 9DF80C30 		ldrb	r3, [sp, #12]	@ zero_extendqisi2
 10518 00f2 43F02003 		orr	r3, r3, #32
 10519 00f6 F372     		strb	r3, [r6, #11]
4770:Middlewares/Third_Party/FatFs/src/ff.c **** 						if ((dir[DIR_Attr] & AM_DIR) && djo.obj.sclust != djn.obj.sclust) {	/* Update .. entry in the
 10520              		.loc 1 4770 0
 10521 00f8 0122     		movs	r2, #1
 10522 00fa 099B     		ldr	r3, [sp, #36]
 10523 00fc DA70     		strb	r2, [r3, #3]
4771:Middlewares/Third_Party/FatFs/src/ff.c **** 							dw = clust2sect(fs, ld_clust(fs, dir));
 10524              		.loc 1 4771 0
 10525 00fe F37A     		ldrb	r3, [r6, #11]	@ zero_extendqisi2
 10526 0100 13F0100F 		tst	r3, #16
 10527 0104 D0D0     		beq	.L1031
4771:Middlewares/Third_Party/FatFs/src/ff.c **** 							dw = clust2sect(fs, ld_clust(fs, dir));
 10528              		.loc 1 4771 0 is_stmt 0 discriminator 1
 10529 0106 0C9B     		ldr	r3, [sp, #48]
 10530 0108 1A9A     		ldr	r2, [sp, #104]
 10531 010a 9A42     		cmp	r2, r3
 10532 010c CCD0     		beq	.L1031
4772:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (!dw) {
 10533              		.loc 1 4772 0 is_stmt 1
 10534 010e 099C     		ldr	r4, [sp, #36]
 10535 0110 3146     		mov	r1, r6
 10536 0112 2046     		mov	r0, r4
 10537 0114 FFF7FEFF 		bl	ld_clust
 10538              	.LVL1628:
 10539 0118 0146     		mov	r1, r0
 10540 011a 2046     		mov	r0, r4
 10541 011c FFF7FEFF 		bl	clust2sect
 10542              	.LVL1629:
4773:Middlewares/Third_Party/FatFs/src/ff.c **** 								res = FR_INT_ERR;
 10543              		.loc 1 4773 0
 10544 0120 0146     		mov	r1, r0
 10545 0122 08B9     		cbnz	r0, .L1041
4774:Middlewares/Third_Party/FatFs/src/ff.c **** 							} else {
 10546              		.loc 1 4774 0
 10547 0124 0224     		movs	r4, #2
 10548 0126 BFE7     		b	.L1031
 10549              	.L1041:
4777:Middlewares/Third_Party/FatFs/src/ff.c **** 								dir = fs->win + SZDIRE * 1;	/* Ptr to .. entry */
 10550              		.loc 1 4777 0
 10551 0128 2046     		mov	r0, r4
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 316


 10552              	.LVL1630:
 10553 012a FFF7FEFF 		bl	move_window
 10554              	.LVL1631:
4778:Middlewares/Third_Party/FatFs/src/ff.c **** 								if (res == FR_OK && dir[1] == '.') {
 10555              		.loc 1 4778 0
 10556 012e 099B     		ldr	r3, [sp, #36]
 10557 0130 03F15C01 		add	r1, r3, #92
 10558              	.LVL1632:
4779:Middlewares/Third_Party/FatFs/src/ff.c **** 									st_clust(fs, dir, djn.obj.sclust);
 10559              		.loc 1 4779 0
 10560 0134 0446     		mov	r4, r0
 10561 0136 0028     		cmp	r0, #0
 10562 0138 B6D1     		bne	.L1031
4779:Middlewares/Third_Party/FatFs/src/ff.c **** 									st_clust(fs, dir, djn.obj.sclust);
 10563              		.loc 1 4779 0 is_stmt 0 discriminator 1
 10564 013a 93F85D20 		ldrb	r2, [r3, #93]	@ zero_extendqisi2
 10565 013e 2E2A     		cmp	r2, #46
 10566 0140 B2D1     		bne	.L1031
4780:Middlewares/Third_Party/FatFs/src/ff.c **** 									fs->wflag = 1;
 10567              		.loc 1 4780 0 is_stmt 1
 10568 0142 0C9A     		ldr	r2, [sp, #48]
 10569 0144 1846     		mov	r0, r3
 10570              	.LVL1633:
 10571 0146 FFF7FEFF 		bl	st_clust
 10572              	.LVL1634:
4781:Middlewares/Third_Party/FatFs/src/ff.c **** 								}
 10573              		.loc 1 4781 0
 10574 014a 0122     		movs	r2, #1
 10575 014c 099B     		ldr	r3, [sp, #36]
 10576 014e DA70     		strb	r2, [r3, #3]
 10577 0150 AAE7     		b	.L1031
 10578              		.cfi_endproc
 10579              	.LFE208:
 10581              		.section	.text.f_mkfs,"ax",%progbits
 10582              		.align	1
 10583              		.global	f_mkfs
 10584              		.syntax unified
 10585              		.thumb
 10586              		.thumb_func
 10587              		.fpu fpv5-sp-d16
 10589              	f_mkfs:
 10590              	.LFB209:
5297:Middlewares/Third_Party/FatFs/src/ff.c **** 	const UINT n_fats = 1;		/* Number of FATs for FAT12/16/32 volume (1 or 2) */
 10591              		.loc 1 5297 0
 10592              		.cfi_startproc
 10593              		@ args = 4, pretend = 0, frame = 40
 10594              		@ frame_needed = 0, uses_anonymous_args = 0
 10595              	.LVL1635:
 10596 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 10597              	.LCFI148:
 10598              		.cfi_def_cfa_offset 36
 10599              		.cfi_offset 4, -36
 10600              		.cfi_offset 5, -32
 10601              		.cfi_offset 6, -28
 10602              		.cfi_offset 7, -24
 10603              		.cfi_offset 8, -20
 10604              		.cfi_offset 9, -16
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 317


 10605              		.cfi_offset 10, -12
 10606              		.cfi_offset 11, -8
 10607              		.cfi_offset 14, -4
 10608 0004 8BB0     		sub	sp, sp, #44
 10609              	.LCFI149:
 10610              		.cfi_def_cfa_offset 80
 10611 0006 0AAC     		add	r4, sp, #40
 10612 0008 44F80C0D 		str	r0, [r4, #-12]!
 10613 000c 0E46     		mov	r6, r1
 10614 000e 1746     		mov	r7, r2
 10615 0010 1D46     		mov	r5, r3
 10616              	.LVL1636:
5316:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
 10617              		.loc 1 5316 0
 10618 0012 2046     		mov	r0, r4
 10619              	.LVL1637:
 10620 0014 FFF7FEFF 		bl	get_ldnumber
 10621              	.LVL1638:
5317:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (FatFs[vol]) FatFs[vol]->fs_type = 0;	/* Clear the volume */
 10622              		.loc 1 5317 0
 10623 0018 0028     		cmp	r0, #0
 10624 001a C0F2E182 		blt	.L1085
5318:Middlewares/Third_Party/FatFs/src/ff.c **** 	pdrv = LD2PD(vol);	/* Physical drive */
 10625              		.loc 1 5318 0
 10626 001e 9D4B     		ldr	r3, .L1129
 10627 0020 53F82030 		ldr	r3, [r3, r0, lsl #2]
 10628 0024 0BB1     		cbz	r3, .L1044
5318:Middlewares/Third_Party/FatFs/src/ff.c **** 	pdrv = LD2PD(vol);	/* Physical drive */
 10629              		.loc 1 5318 0 is_stmt 0 discriminator 1
 10630 0026 0022     		movs	r2, #0
 10631 0028 1A70     		strb	r2, [r3]
 10632              	.L1044:
5319:Middlewares/Third_Party/FatFs/src/ff.c **** 	part = LD2PT(vol);	/* Partition (0:create as new, 1-4:get from partition table) */
 10633              		.loc 1 5319 0 is_stmt 1
 10634 002a C4B2     		uxtb	r4, r0
 10635              	.LVL1639:
5323:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_NOINIT) return FR_NOT_READY;
 10636              		.loc 1 5323 0
 10637 002c 2046     		mov	r0, r4
 10638              	.LVL1640:
 10639 002e FFF7FEFF 		bl	disk_initialize
 10640              	.LVL1641:
5324:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_PROTECT) return FR_WRITE_PROTECTED;
 10641              		.loc 1 5324 0
 10642 0032 10F0010F 		tst	r0, #1
 10643 0036 01D0     		beq	.L1123
 10644 0038 0320     		movs	r0, #3
 10645              	.LVL1642:
 10646 003a D2E2     		b	.L1043
 10647              	.LVL1643:
 10648              	.L1123:
5325:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (disk_ioctl(pdrv, GET_BLOCK_SIZE, &sz_blk) != RES_OK || !sz_blk || sz_blk > 32768 || (sz_blk & 
 10649              		.loc 1 5325 0
 10650 003c 10F0040F 		tst	r0, #4
 10651 0040 01D0     		beq	.L1124
 10652 0042 0A20     		movs	r0, #10
 10653              	.LVL1644:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 318


 10654 0044 CDE2     		b	.L1043
 10655              	.LVL1645:
 10656              	.L1124:
5326:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS != _MIN_SS		/* Get sector size of the medium if variable sector size cfg. */
 10657              		.loc 1 5326 0
 10658 0046 09AA     		add	r2, sp, #36
 10659 0048 0321     		movs	r1, #3
 10660 004a 2046     		mov	r0, r4
 10661              	.LVL1646:
 10662 004c FFF7FEFF 		bl	disk_ioctl
 10663              	.LVL1647:
 10664 0050 38B9     		cbnz	r0, .L1045
5326:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS != _MIN_SS		/* Get sector size of the medium if variable sector size cfg. */
 10665              		.loc 1 5326 0 is_stmt 0 discriminator 2
 10666 0052 099B     		ldr	r3, [sp, #36]
 10667 0054 2BB1     		cbz	r3, .L1045
5326:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS != _MIN_SS		/* Get sector size of the medium if variable sector size cfg. */
 10668              		.loc 1 5326 0 discriminator 4
 10669 0056 B3F5004F 		cmp	r3, #32768
 10670 005a 02D8     		bhi	.L1045
5326:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS != _MIN_SS		/* Get sector size of the medium if variable sector size cfg. */
 10671              		.loc 1 5326 0 discriminator 6
 10672 005c 5A1E     		subs	r2, r3, #1
 10673 005e 1342     		tst	r3, r2
 10674 0060 01D0     		beq	.L1046
 10675              	.L1045:
5326:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS != _MIN_SS		/* Get sector size of the medium if variable sector size cfg. */
 10676              		.loc 1 5326 0 discriminator 7
 10677 0062 0123     		movs	r3, #1
 10678 0064 0993     		str	r3, [sp, #36]
 10679              	.L1046:
 10680              	.LVL1648:
5333:Middlewares/Third_Party/FatFs/src/ff.c **** 	au /= ss;	/* Cluster size in unit of sector */
 10681              		.loc 1 5333 0 is_stmt 1
 10682 0066 27B1     		cbz	r7, .L1047
5333:Middlewares/Third_Party/FatFs/src/ff.c **** 	au /= ss;	/* Cluster size in unit of sector */
 10683              		.loc 1 5333 0 is_stmt 0 discriminator 1
 10684 0068 B7F5007F 		cmp	r7, #512
 10685 006c 01D2     		bcs	.L1047
5333:Middlewares/Third_Party/FatFs/src/ff.c **** 	au /= ss;	/* Cluster size in unit of sector */
 10686              		.loc 1 5333 0
 10687 006e 1320     		movs	r0, #19
 10688 0070 B7E2     		b	.L1043
 10689              	.L1047:
5333:Middlewares/Third_Party/FatFs/src/ff.c **** 	au /= ss;	/* Cluster size in unit of sector */
 10690              		.loc 1 5333 0 discriminator 4
 10691 0072 B7F1807F 		cmp	r7, #16777216
 10692 0076 01D9     		bls	.L1125
5333:Middlewares/Third_Party/FatFs/src/ff.c **** 	au /= ss;	/* Cluster size in unit of sector */
 10693              		.loc 1 5333 0
 10694 0078 1320     		movs	r0, #19
 10695 007a B2E2     		b	.L1043
 10696              	.L1125:
5333:Middlewares/Third_Party/FatFs/src/ff.c **** 	au /= ss;	/* Cluster size in unit of sector */
 10697              		.loc 1 5333 0 discriminator 6
 10698 007c 7B1E     		subs	r3, r7, #1
 10699 007e 1F42     		tst	r7, r3
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 319


 10700 0080 01D0     		beq	.L1126
5333:Middlewares/Third_Party/FatFs/src/ff.c **** 	au /= ss;	/* Cluster size in unit of sector */
 10701              		.loc 1 5333 0
 10702 0082 1320     		movs	r0, #19
 10703 0084 ADE2     		b	.L1043
 10704              	.L1126:
5334:Middlewares/Third_Party/FatFs/src/ff.c **** 
 10705              		.loc 1 5334 0 is_stmt 1
 10706 0086 4FEA5729 		lsr	r9, r7, #9
 10707              	.LVL1649:
5338:Middlewares/Third_Party/FatFs/src/ff.c **** 	szb_buf = sz_buf * ss;	/* Size of working buffer (byte) */
 10708              		.loc 1 5338 0
 10709 008a 149B     		ldr	r3, [sp, #80]
 10710 008c 5B0A     		lsrs	r3, r3, #9
 10711 008e 0593     		str	r3, [sp, #20]
 10712              	.LVL1650:
5339:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!szb_buf) return FR_MKFS_ABORTED;
 10713              		.loc 1 5339 0
 10714 0090 DFF804A2 		ldr	r10, .L1129+4
 10715 0094 149B     		ldr	r3, [sp, #80]
 10716              	.LVL1651:
 10717 0096 03EA0A0A 		and	r10, r3, r10
 10718              	.LVL1652:
5340:Middlewares/Third_Party/FatFs/src/ff.c **** 
 10719              		.loc 1 5340 0
 10720 009a BAF1000F 		cmp	r10, #0
 10721 009e 01D1     		bne	.L1127
 10722 00a0 0E20     		movs	r0, #14
 10723 00a2 9EE2     		b	.L1043
 10724              	.L1127:
5353:Middlewares/Third_Party/FatFs/src/ff.c **** 		b_vol = (opt & FM_SFD) ? 0 : 63;		/* Volume start sector */
 10725              		.loc 1 5353 0
 10726 00a4 08AA     		add	r2, sp, #32
 10727 00a6 0121     		movs	r1, #1
 10728 00a8 2046     		mov	r0, r4
 10729 00aa FFF7FEFF 		bl	disk_ioctl
 10730              	.LVL1653:
 10731 00ae 0028     		cmp	r0, #0
 10732 00b0 40F09A82 		bne	.L1092
5354:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (sz_vol < b_vol) return FR_MKFS_ABORTED;
 10733              		.loc 1 5354 0
 10734 00b4 16F00803 		ands	r3, r6, #8
 10735 00b8 0693     		str	r3, [sp, #24]
 10736 00ba 0CD0     		beq	.L1093
 10737 00bc 4FF00008 		mov	r8, #0
 10738              	.L1048:
 10739              	.LVL1654:
5355:Middlewares/Third_Party/FatFs/src/ff.c **** 		sz_vol -= b_vol;						/* Volume size */
 10740              		.loc 1 5355 0 discriminator 4
 10741 00c0 089A     		ldr	r2, [sp, #32]
 10742 00c2 9045     		cmp	r8, r2
 10743 00c4 00F29282 		bhi	.L1094
5356:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 10744              		.loc 1 5356 0
 10745 00c8 A2EB0802 		sub	r2, r2, r8
 10746 00cc 0892     		str	r2, [sp, #32]
5358:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 320


 10747              		.loc 1 5358 0
 10748 00ce 7F2A     		cmp	r2, #127
 10749 00d0 04D8     		bhi	.L1128
 10750 00d2 0E20     		movs	r0, #14
 10751 00d4 85E2     		b	.L1043
 10752              	.LVL1655:
 10753              	.L1093:
5354:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (sz_vol < b_vol) return FR_MKFS_ABORTED;
 10754              		.loc 1 5354 0
 10755 00d6 4FF03F08 		mov	r8, #63
 10756 00da F1E7     		b	.L1048
 10757              	.LVL1656:
 10758              	.L1128:
5367:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (opt & FM_FAT32) {	/* FAT32 possible? */
 10759              		.loc 1 5367 0
 10760 00dc B9F1800F 		cmp	r9, #128
 10761 00e0 00F28682 		bhi	.L1096
5368:Middlewares/Third_Party/FatFs/src/ff.c **** 			if ((opt & FM_ANY) == FM_FAT32 || !(opt & FM_FAT)) {	/* FAT32 only or no-FAT? */
 10762              		.loc 1 5368 0
 10763 00e4 16F00201 		ands	r1, r6, #2
 10764 00e8 06D0     		beq	.L1049
5369:Middlewares/Third_Party/FatFs/src/ff.c **** 				fmt = FS_FAT32; break;
 10765              		.loc 1 5369 0
 10766 00ea 06F00703 		and	r3, r6, #7
 10767 00ee 022B     		cmp	r3, #2
 10768 00f0 69D0     		beq	.L1097
5369:Middlewares/Third_Party/FatFs/src/ff.c **** 				fmt = FS_FAT32; break;
 10769              		.loc 1 5369 0 is_stmt 0 discriminator 1
 10770 00f2 16F0010F 		tst	r6, #1
 10771 00f6 6AD0     		beq	.L1098
 10772              	.L1049:
5373:Middlewares/Third_Party/FatFs/src/ff.c **** 		fmt = FS_FAT16;
 10773              		.loc 1 5373 0 is_stmt 1
 10774 00f8 16F0010F 		tst	r6, #1
 10775 00fc 00F07A82 		beq	.L1099
5374:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (0);
 10776              		.loc 1 5374 0
 10777 0100 0227     		movs	r7, #2
 10778 0102 4846     		mov	r0, r9
 10779 0104 0191     		str	r1, [sp, #4]
 10780              	.LVL1657:
 10781              	.L1051:
5544:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!pau) {	/* au auto-selection */
 10782              		.loc 1 5544 0
 10783 0106 032F     		cmp	r7, #3
 10784 0108 70D1     		bne	.L1052
5545:Middlewares/Third_Party/FatFs/src/ff.c **** 					n = sz_vol / 0x20000;	/* Volume size in unit of 128KS */
 10785              		.loc 1 5545 0
 10786 010a 0028     		cmp	r0, #0
 10787 010c 6AD1     		bne	.L1100
5546:Middlewares/Third_Party/FatFs/src/ff.c **** 					for (i = 0, pau = 1; cst32[i] && cst32[i] <= n; i++, pau <<= 1) ;	/* Get from table */
 10788              		.loc 1 5546 0
 10789 010e 4FEA524C 		lsr	ip, r2, #17
 10790              	.LVL1658:
5547:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 10791              		.loc 1 5547 0
 10792 0112 0023     		movs	r3, #0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 321


 10793 0114 0126     		movs	r6, #1
 10794 0116 0199     		ldr	r1, [sp, #4]
 10795              	.LVL1659:
 10796              	.L1054:
5547:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 10797              		.loc 1 5547 0 is_stmt 0 discriminator 1
 10798 0118 DFF880E1 		ldr	lr, .L1129+8
 10799 011c 3EF813E0 		ldrh	lr, [lr, r3, lsl #1]
 10800 0120 BEF1000F 		cmp	lr, #0
 10801 0124 60D0     		beq	.L1119
5547:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 10802              		.loc 1 5547 0 discriminator 3
 10803 0126 F445     		cmp	ip, lr
 10804 0128 59D2     		bcs	.L1055
 10805 012a 0191     		str	r1, [sp, #4]
 10806              	.LVL1660:
 10807              	.L1053:
5549:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_fat = (n_clst * 4 + 8 + ss - 1) / ss;	/* FAT size [sector] */
 10808              		.loc 1 5549 0 is_stmt 1
 10809 012c B2FBF6FE 		udiv	lr, r2, r6
 10810              	.LVL1661:
5550:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_rsv = 32;	/* Number of reserved sectors */
 10811              		.loc 1 5550 0
 10812 0130 0EF10203 		add	r3, lr, #2
 10813 0134 9B00     		lsls	r3, r3, #2
 10814 0136 03F2FF13 		addw	r3, r3, #511
 10815 013a 5B0A     		lsrs	r3, r3, #9
 10816 013c 0293     		str	r3, [sp, #8]
 10817              	.LVL1662:
5553:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {				/* FAT12/16 volume */
 10818              		.loc 1 5553 0
 10819 013e DFF860C1 		ldr	ip, .L1129+12
 10820 0142 F444     		add	ip, ip, lr
 10821 0144 DFF85CE1 		ldr	lr, .L1129+16
 10822              	.LVL1663:
 10823 0148 F445     		cmp	ip, lr
 10824 014a 00F25582 		bhi	.L1101
5552:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (n_clst <= MAX_FAT16 || n_clst > MAX_FAT32) return FR_MKFS_ABORTED;
 10825              		.loc 1 5552 0
 10826 014e 0023     		movs	r3, #0
 10827              	.LVL1664:
 10828 0150 0493     		str	r3, [sp, #16]
5551:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_dir = 0;		/* No static directory */
 10829              		.loc 1 5551 0
 10830 0152 4FF02009 		mov	r9, #32
 10831              	.LVL1665:
 10832              	.L1056:
5570:Middlewares/Third_Party/FatFs/src/ff.c **** 			b_data = b_fat + sz_fat * n_fats + sz_dir;	/* Data base */
 10833              		.loc 1 5570 0
 10834 0156 09EB0803 		add	r3, r9, r8
 10835 015a 0393     		str	r3, [sp, #12]
 10836              	.LVL1666:
5571:Middlewares/Third_Party/FatFs/src/ff.c **** 
 10837              		.loc 1 5571 0
 10838 015c 0299     		ldr	r1, [sp, #8]
 10839 015e 01EB030E 		add	lr, r1, r3
 10840 0162 049B     		ldr	r3, [sp, #16]
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 322


 10841              	.LVL1667:
 10842 0164 9E44     		add	lr, lr, r3
 10843              	.LVL1668:
5574:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT32) {		/* FAT32: Move FAT base */
 10844              		.loc 1 5574 0
 10845 0166 DDF824B0 		ldr	fp, [sp, #36]
 10846 016a 0EEB0B0C 		add	ip, lr, fp
 10847 016e 0CF1FF3C 		add	ip, ip, #-1
 10848 0172 CBF1000B 		rsb	fp, fp, #0
 10849 0176 0CEA0B0C 		and	ip, ip, fp
 10850 017a ACEB0E0C 		sub	ip, ip, lr
 10851              	.LVL1669:
5575:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_rsv += n; b_fat += n;
 10852              		.loc 1 5575 0
 10853 017e 032F     		cmp	r7, #3
 10854 0180 63D1     		bne	.L1062
5576:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {					/* FAT12/16: Expand FAT size */
 10855              		.loc 1 5576 0
 10856 0182 E144     		add	r9, r9, ip
 10857              	.LVL1670:
 10858 0184 039B     		ldr	r3, [sp, #12]
 10859 0186 6344     		add	r3, r3, ip
 10860 0188 0393     		str	r3, [sp, #12]
 10861              	.LVL1671:
 10862              	.L1063:
5582:Middlewares/Third_Party/FatFs/src/ff.c **** 			n_clst = (sz_vol - sz_rsv - sz_fat * n_fats - sz_dir) / pau;
 10863              		.loc 1 5582 0
 10864 018a 0EEB061E 		add	lr, lr, r6, lsl #4
 10865              	.LVL1672:
 10866 018e AEEB080E 		sub	lr, lr, r8
 10867 0192 7245     		cmp	r2, lr
 10868 0194 C0F03282 		bcc	.L1103
5583:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT32) {
 10869              		.loc 1 5583 0
 10870 0198 A2EB090B 		sub	fp, r2, r9
 10871 019c 029B     		ldr	r3, [sp, #8]
 10872 019e ABEB030B 		sub	fp, fp, r3
 10873 01a2 049B     		ldr	r3, [sp, #16]
 10874 01a4 ABEB030B 		sub	fp, fp, r3
 10875 01a8 BBFBF6FB 		udiv	fp, fp, r6
 10876              	.LVL1673:
5584:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (n_clst <= MAX_FAT16) {	/* Too few clusters for FAT32 */
 10877              		.loc 1 5584 0
 10878 01ac 032F     		cmp	r7, #3
 10879 01ae 50D1     		bne	.L1064
5585:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!au && (au = pau / 2) != 0) continue;	/* Adjust cluster size and retry */
 10880              		.loc 1 5585 0
 10881 01b0 4FF6F57E 		movw	lr, #65525
 10882 01b4 F345     		cmp	fp, lr
 10883 01b6 4CD8     		bhi	.L1064
5586:Middlewares/Third_Party/FatFs/src/ff.c **** 					return FR_MKFS_ABORTED;
 10884              		.loc 1 5586 0
 10885 01b8 0028     		cmp	r0, #0
 10886 01ba 40F02182 		bne	.L1104
 10887              	.LVL1674:
5586:Middlewares/Third_Party/FatFs/src/ff.c **** 					return FR_MKFS_ABORTED;
 10888              		.loc 1 5586 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 323


 10889 01be 7308     		lsrs	r3, r6, #1
 10890              	.LVL1675:
 10891 01c0 0BD1     		bne	.L1065
5587:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 10892              		.loc 1 5587 0 is_stmt 1
 10893 01c2 0E20     		movs	r0, #14
 10894 01c4 0DE2     		b	.L1043
 10895              	.LVL1676:
 10896              	.L1097:
5370:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 10897              		.loc 1 5370 0
 10898 01c6 0327     		movs	r7, #3
 10899 01c8 4846     		mov	r0, r9
 10900 01ca 0191     		str	r1, [sp, #4]
 10901 01cc 9BE7     		b	.L1051
 10902              	.L1098:
 10903 01ce 0327     		movs	r7, #3
 10904 01d0 4846     		mov	r0, r9
 10905 01d2 0191     		str	r1, [sp, #4]
 10906 01d4 97E7     		b	.L1051
 10907              	.LVL1677:
 10908              	.L1105:
 10909 01d6 0346     		mov	r3, r0
5596:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 10910              		.loc 1 5596 0
 10911 01d8 0327     		movs	r7, #3
 10912              	.LVL1678:
 10913              	.L1065:
 10914 01da 1846     		mov	r0, r3
 10915 01dc 93E7     		b	.L1051
 10916              	.LVL1679:
 10917              	.L1055:
5547:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 10918              		.loc 1 5547 0 discriminator 4
 10919 01de 0133     		adds	r3, r3, #1
 10920              	.LVL1680:
 10921 01e0 7600     		lsls	r6, r6, #1
 10922              	.LVL1681:
 10923 01e2 99E7     		b	.L1054
 10924              	.LVL1682:
 10925              	.L1100:
5542:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Pre-determine number of clusters and FAT sub-type */
 10926              		.loc 1 5542 0
 10927 01e4 0646     		mov	r6, r0
 10928 01e6 A1E7     		b	.L1053
 10929              	.LVL1683:
 10930              	.L1119:
 10931 01e8 0191     		str	r1, [sp, #4]
 10932 01ea 9FE7     		b	.L1053
 10933              	.LVL1684:
 10934              	.L1052:
5555:Middlewares/Third_Party/FatFs/src/ff.c **** 					n = sz_vol / 0x1000;	/* Volume size in unit of 4KS */
 10935              		.loc 1 5555 0
 10936 01ec 10BB     		cbnz	r0, .L1102
5556:Middlewares/Third_Party/FatFs/src/ff.c **** 					for (i = 0, pau = 1; cst[i] && cst[i] <= n; i++, pau <<= 1) ;	/* Get from table */
 10937              		.loc 1 5556 0
 10938 01ee 4FEA123C 		lsr	ip, r2, #12
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 324


 10939              	.LVL1685:
5557:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 10940              		.loc 1 5557 0
 10941 01f2 0023     		movs	r3, #0
 10942 01f4 0126     		movs	r6, #1
 10943 01f6 0199     		ldr	r1, [sp, #4]
 10944              	.LVL1686:
 10945              	.L1058:
5557:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 10946              		.loc 1 5557 0 is_stmt 0 discriminator 1
 10947 01f8 DFF8ACE0 		ldr	lr, .L1129+20
 10948 01fc 3EF813E0 		ldrh	lr, [lr, r3, lsl #1]
 10949 0200 BEF1000F 		cmp	lr, #0
 10950 0204 18D0     		beq	.L1120
5557:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 10951              		.loc 1 5557 0 discriminator 3
 10952 0206 F445     		cmp	ip, lr
 10953 0208 11D2     		bcs	.L1059
 10954 020a 0191     		str	r1, [sp, #4]
 10955              	.LVL1687:
 10956              	.L1057:
5559:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (n_clst > MAX_FAT12) {
 10957              		.loc 1 5559 0 is_stmt 1
 10958 020c B2FBF6F3 		udiv	r3, r2, r6
 10959              	.LVL1688:
5560:Middlewares/Third_Party/FatFs/src/ff.c **** 					n = n_clst * 2 + 4;		/* FAT size [byte] */
 10960              		.loc 1 5560 0
 10961 0210 40F6F57E 		movw	lr, #4085
 10962 0214 7345     		cmp	r3, lr
 10963 0216 11D9     		bls	.L1060
5561:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
 10964              		.loc 1 5561 0
 10965 0218 0233     		adds	r3, r3, #2
 10966              	.LVL1689:
 10967 021a 5B00     		lsls	r3, r3, #1
 10968              	.LVL1690:
 10969              	.L1061:
5566:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_rsv = 1;						/* Number of reserved sectors */
 10970              		.loc 1 5566 0
 10971 021c 03F2FF13 		addw	r3, r3, #511
 10972              	.LVL1691:
 10973 0220 5B0A     		lsrs	r3, r3, #9
 10974              	.LVL1692:
 10975 0222 0293     		str	r3, [sp, #8]
 10976              	.LVL1693:
5568:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 10977              		.loc 1 5568 0
 10978 0224 2023     		movs	r3, #32
 10979              	.LVL1694:
 10980 0226 0493     		str	r3, [sp, #16]
5567:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_dir = (DWORD)n_rootdir * SZDIRE / ss;	/* Rootdir size [sector] */
 10981              		.loc 1 5567 0
 10982 0228 4FF00109 		mov	r9, #1
 10983 022c 93E7     		b	.L1056
 10984              	.LVL1695:
 10985              	.L1059:
5557:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 325


 10986              		.loc 1 5557 0 discriminator 4
 10987 022e 0133     		adds	r3, r3, #1
 10988              	.LVL1696:
 10989 0230 7600     		lsls	r6, r6, #1
 10990              	.LVL1697:
 10991 0232 E1E7     		b	.L1058
 10992              	.LVL1698:
 10993              	.L1102:
5542:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Pre-determine number of clusters and FAT sub-type */
 10994              		.loc 1 5542 0
 10995 0234 0646     		mov	r6, r0
 10996 0236 E9E7     		b	.L1057
 10997              	.LVL1699:
 10998              	.L1120:
 10999 0238 0191     		str	r1, [sp, #4]
 11000 023a E7E7     		b	.L1057
 11001              	.LVL1700:
 11002              	.L1060:
5564:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 11003              		.loc 1 5564 0
 11004 023c 03EB4303 		add	r3, r3, r3, lsl #1
 11005              	.LVL1701:
 11006 0240 0133     		adds	r3, r3, #1
 11007 0242 5B08     		lsrs	r3, r3, #1
 11008 0244 0333     		adds	r3, r3, #3
 11009              	.LVL1702:
5563:Middlewares/Third_Party/FatFs/src/ff.c **** 					n = (n_clst * 3 + 1) / 2 + 3;	/* FAT size [byte] */
 11010              		.loc 1 5563 0
 11011 0246 0127     		movs	r7, #1
 11012 0248 E8E7     		b	.L1061
 11013              	.LVL1703:
 11014              	.L1062:
5578:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 11015              		.loc 1 5578 0
 11016 024a 029B     		ldr	r3, [sp, #8]
 11017              	.LVL1704:
 11018 024c 6344     		add	r3, r3, ip
 11019 024e 0293     		str	r3, [sp, #8]
 11020              	.LVL1705:
 11021 0250 9BE7     		b	.L1063
 11022              	.LVL1706:
 11023              	.L1064:
5590:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (n_clst > MAX_FAT16) {	/* Too many clusters for FAT16 */
 11024              		.loc 1 5590 0
 11025 0252 022F     		cmp	r7, #2
 11026 0254 2AD1     		bne	.L1066
5591:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!au && (pau * 2) <= 64) {
 11027              		.loc 1 5591 0
 11028 0256 4FF6F57E 		movw	lr, #65525
 11029 025a F345     		cmp	fp, lr
 11030 025c 0ED9     		bls	.L1067
5592:Middlewares/Third_Party/FatFs/src/ff.c **** 						au = pau * 2; continue;		/* Adjust cluster size and retry */
 11031              		.loc 1 5592 0
 11032 025e 10B9     		cbnz	r0, .L1068
5592:Middlewares/Third_Party/FatFs/src/ff.c **** 						au = pau * 2; continue;		/* Adjust cluster size and retry */
 11033              		.loc 1 5592 0 is_stmt 0 discriminator 1
 11034 0260 7300     		lsls	r3, r6, #1
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 326


 11035 0262 402B     		cmp	r3, #64
 11036 0264 B9D9     		bls	.L1065
 11037              	.L1068:
5595:Middlewares/Third_Party/FatFs/src/ff.c **** 						fmt = FS_FAT32; continue;	/* Switch type to FAT32 and retry */
 11038              		.loc 1 5595 0 is_stmt 1
 11039 0266 019B     		ldr	r3, [sp, #4]
 11040 0268 002B     		cmp	r3, #0
 11041 026a B4D1     		bne	.L1105
5598:Middlewares/Third_Party/FatFs/src/ff.c **** 					return FR_MKFS_ABORTED;
 11042              		.loc 1 5598 0
 11043 026c 0028     		cmp	r0, #0
 11044 026e 40F0C981 		bne	.L1106
5598:Middlewares/Third_Party/FatFs/src/ff.c **** 					return FR_MKFS_ABORTED;
 11045              		.loc 1 5598 0 is_stmt 0 discriminator 1
 11046 0272 7300     		lsls	r3, r6, #1
 11047              	.LVL1707:
 11048 0274 802B     		cmp	r3, #128
 11049 0276 B0D9     		bls	.L1065
5599:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 11050              		.loc 1 5599 0 is_stmt 1
 11051 0278 0E20     		movs	r0, #14
 11052 027a B2E1     		b	.L1043
 11053              	.LVL1708:
 11054              	.L1067:
5601:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!au && (au = pau * 2) <= 128) continue;	/* Adjust cluster size and retry */
 11055              		.loc 1 5601 0
 11056 027c 40F6F57E 		movw	lr, #4085
 11057 0280 F345     		cmp	fp, lr
 11058 0282 13D8     		bhi	.L1066
5602:Middlewares/Third_Party/FatFs/src/ff.c **** 					return FR_MKFS_ABORTED;
 11059              		.loc 1 5602 0
 11060 0284 0028     		cmp	r0, #0
 11061 0286 40F0BF81 		bne	.L1107
5602:Middlewares/Third_Party/FatFs/src/ff.c **** 					return FR_MKFS_ABORTED;
 11062              		.loc 1 5602 0 is_stmt 0 discriminator 1
 11063 028a 7300     		lsls	r3, r6, #1
 11064              	.LVL1709:
 11065 028c 802B     		cmp	r3, #128
 11066 028e A4D9     		bls	.L1065
5603:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 11067              		.loc 1 5603 0 is_stmt 1
 11068 0290 0E20     		movs	r0, #14
 11069 0292 A6E1     		b	.L1043
 11070              	.L1130:
 11071              		.align	2
 11072              	.L1129:
 11073 0294 00000000 		.word	.LANCHOR4
 11074 0298 00FEFFFF 		.word	-512
 11075 029c 00000000 		.word	.LANCHOR6
 11076 02a0 0A00FFFF 		.word	-65526
 11077 02a4 FFFFFE0F 		.word	268369919
 11078 02a8 00000000 		.word	.LANCHOR7
 11079              	.LVL1710:
 11080              	.L1066:
5606:Middlewares/Third_Party/FatFs/src/ff.c **** 
 11081              		.loc 1 5606 0
 11082 02ac 40F6F572 		movw	r2, #4085
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 327


 11083 02b0 012F     		cmp	r7, #1
 11084 02b2 14BF     		ite	ne
 11085 02b4 0023     		movne	r3, #0
 11086 02b6 0123     		moveq	r3, #1
 11087 02b8 9345     		cmp	fp, r2
 11088 02ba 98BF     		it	ls
 11089 02bc 0023     		movls	r3, #0
 11090 02be 002B     		cmp	r3, #0
 11091 02c0 40F0A481 		bne	.L1108
5617:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(buf + BS_JmpBoot, "\xEB\xFE\x90" "MSDOS5.0", 11);/* Boot jump code (x86), OEM name */
 11092              		.loc 1 5617 0
 11093 02c4 4FF40072 		mov	r2, #512
 11094 02c8 0021     		movs	r1, #0
 11095 02ca 2846     		mov	r0, r5
 11096              	.LVL1711:
 11097 02cc FFF7FEFF 		bl	mem_set
 11098              	.LVL1712:
5618:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BPB_BytsPerSec, ss);				/* Sector size [byte] */
 11099              		.loc 1 5618 0
 11100 02d0 0B22     		movs	r2, #11
 11101 02d2 D449     		ldr	r1, .L1131
 11102 02d4 2846     		mov	r0, r5
 11103 02d6 FFF7FEFF 		bl	mem_cpy
 11104              	.LVL1713:
5619:Middlewares/Third_Party/FatFs/src/ff.c **** 		buf[BPB_SecPerClus] = (BYTE)pau;				/* Cluster size [sector] */
 11105              		.loc 1 5619 0
 11106 02da 4FF40071 		mov	r1, #512
 11107 02de 05F10B00 		add	r0, r5, #11
 11108 02e2 FFF7FEFF 		bl	st_word
 11109              	.LVL1714:
5620:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BPB_RsvdSecCnt, (WORD)sz_rsv);	/* Size of reserved area */
 11110              		.loc 1 5620 0
 11111 02e6 6E73     		strb	r6, [r5, #13]
5621:Middlewares/Third_Party/FatFs/src/ff.c **** 		buf[BPB_NumFATs] = (BYTE)n_fats;				/* Number of FATs */
 11112              		.loc 1 5621 0
 11113 02e8 1FFA89F1 		uxth	r1, r9
 11114 02ec 05F10E00 		add	r0, r5, #14
 11115 02f0 FFF7FEFF 		bl	st_word
 11116              	.LVL1715:
5622:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BPB_RootEntCnt, (WORD)((fmt == FS_FAT32) ? 0 : n_rootdir));	/* Number of root direc
 11117              		.loc 1 5622 0
 11118 02f4 0123     		movs	r3, #1
 11119 02f6 2B74     		strb	r3, [r5, #16]
5623:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (sz_vol < 0x10000) {
 11120              		.loc 1 5623 0
 11121 02f8 05F11100 		add	r0, r5, #17
 11122 02fc 032F     		cmp	r7, #3
 11123 02fe 00F00581 		beq	.L1109
 11124 0302 4FF40071 		mov	r1, #512
 11125              	.L1069:
5623:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (sz_vol < 0x10000) {
 11126              		.loc 1 5623 0 is_stmt 0 discriminator 4
 11127 0306 FFF7FEFF 		bl	st_word
 11128              	.LVL1716:
5624:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BPB_TotSec16, (WORD)sz_vol);	/* Volume size in 16-bit LBA */
 11129              		.loc 1 5624 0 is_stmt 1 discriminator 4
 11130 030a 0899     		ldr	r1, [sp, #32]
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 328


 11131 030c B1F5803F 		cmp	r1, #65536
 11132 0310 80F0FE80 		bcs	.L1070
5625:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 11133              		.loc 1 5625 0
 11134 0314 89B2     		uxth	r1, r1
 11135 0316 05F11300 		add	r0, r5, #19
 11136 031a FFF7FEFF 		bl	st_word
 11137              	.LVL1717:
 11138              	.L1071:
5629:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BPB_SecPerTrk, 63);				/* Number of sectors per track (for int13) */
 11139              		.loc 1 5629 0
 11140 031e F823     		movs	r3, #248
 11141 0320 6B75     		strb	r3, [r5, #21]
5630:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BPB_NumHeads, 255);				/* Number of heads (for int13) */
 11142              		.loc 1 5630 0
 11143 0322 3F21     		movs	r1, #63
 11144 0324 05F11800 		add	r0, r5, #24
 11145 0328 FFF7FEFF 		bl	st_word
 11146              	.LVL1718:
5631:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_dword(buf + BPB_HiddSec, b_vol);				/* Volume offset in the physical drive [sector] */
 11147              		.loc 1 5631 0
 11148 032c FF21     		movs	r1, #255
 11149 032e 05F11A00 		add	r0, r5, #26
 11150 0332 FFF7FEFF 		bl	st_word
 11151              	.LVL1719:
5632:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fmt == FS_FAT32) {
 11152              		.loc 1 5632 0
 11153 0336 4146     		mov	r1, r8
 11154 0338 05F11C00 		add	r0, r5, #28
 11155 033c FFF7FEFF 		bl	st_dword
 11156              	.LVL1720:
5633:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BS_VolID32, GET_FATTIME());	/* VSN */
 11157              		.loc 1 5633 0
 11158 0340 032F     		cmp	r7, #3
 11159 0342 40F0EA80 		bne	.L1072
5634:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_FATSz32, sz_fat);		/* FAT size [sector] */
 11160              		.loc 1 5634 0
 11161 0346 FFF7FEFF 		bl	get_fattime
 11162              	.LVL1721:
 11163 034a 0146     		mov	r1, r0
 11164 034c 05F14300 		add	r0, r5, #67
 11165 0350 FFF7FEFF 		bl	st_dword
 11166              	.LVL1722:
5635:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_RootClus32, 2);			/* Root directory cluster # (2) */
 11167              		.loc 1 5635 0
 11168 0354 0299     		ldr	r1, [sp, #8]
 11169 0356 05F12400 		add	r0, r5, #36
 11170 035a FFF7FEFF 		bl	st_dword
 11171              	.LVL1723:
5636:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BPB_FSInfo32, 1);				/* Offset of FSINFO sector (VBR + 1) */
 11172              		.loc 1 5636 0
 11173 035e 0221     		movs	r1, #2
 11174 0360 05F12C00 		add	r0, r5, #44
 11175 0364 FFF7FEFF 		bl	st_dword
 11176              	.LVL1724:
5637:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BPB_BkBootSec32, 6);			/* Offset of backup VBR (VBR + 6) */
 11177              		.loc 1 5637 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 329


 11178 0368 0121     		movs	r1, #1
 11179 036a 05F13000 		add	r0, r5, #48
 11180 036e FFF7FEFF 		bl	st_word
 11181              	.LVL1725:
5638:Middlewares/Third_Party/FatFs/src/ff.c **** 			buf[BS_DrvNum32] = 0x80;					/* Drive number (for int13) */
 11182              		.loc 1 5638 0
 11183 0372 0621     		movs	r1, #6
 11184 0374 05F13200 		add	r0, r5, #50
 11185 0378 FFF7FEFF 		bl	st_word
 11186              	.LVL1726:
5639:Middlewares/Third_Party/FatFs/src/ff.c **** 			buf[BS_BootSig32] = 0x29;					/* Extended boot signature */
 11187              		.loc 1 5639 0
 11188 037c 8023     		movs	r3, #128
 11189 037e 85F84030 		strb	r3, [r5, #64]
5640:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_cpy(buf + BS_VolLab32, "NO NAME    " "FAT32   ", 19);	/* Volume label, FAT signature */
 11190              		.loc 1 5640 0
 11191 0382 2923     		movs	r3, #41
 11192 0384 85F84230 		strb	r3, [r5, #66]
5641:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 11193              		.loc 1 5641 0
 11194 0388 1322     		movs	r2, #19
 11195 038a A749     		ldr	r1, .L1131+4
 11196 038c 05F14700 		add	r0, r5, #71
 11197 0390 FFF7FEFF 		bl	mem_cpy
 11198              	.LVL1727:
 11199              	.L1073:
5649:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_write(pdrv, buf, b_vol, 1) != RES_OK) return FR_DISK_ERR;	/* Write it to the VBR sector 
 11200              		.loc 1 5649 0
 11201 0394 05F5FF73 		add	r3, r5, #510
 11202 0398 0193     		str	r3, [sp, #4]
 11203 039a 4AF65521 		movw	r1, #43605
 11204 039e 1846     		mov	r0, r3
 11205 03a0 FFF7FEFF 		bl	st_word
 11206              	.LVL1728:
5650:Middlewares/Third_Party/FatFs/src/ff.c **** 
 11207              		.loc 1 5650 0
 11208 03a4 0123     		movs	r3, #1
 11209 03a6 4246     		mov	r2, r8
 11210 03a8 2946     		mov	r1, r5
 11211 03aa 2046     		mov	r0, r4
 11212 03ac FFF7FEFF 		bl	disk_write
 11213              	.LVL1729:
 11214 03b0 0028     		cmp	r0, #0
 11215 03b2 40F02D81 		bne	.L1110
5653:Middlewares/Third_Party/FatFs/src/ff.c **** 			disk_write(pdrv, buf, b_vol + 6, 1);		/* Write backup VBR (VBR + 6) */
 11216              		.loc 1 5653 0
 11217 03b6 032F     		cmp	r7, #3
 11218 03b8 33D1     		bne	.L1074
5654:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(buf, 0, ss);
 11219              		.loc 1 5654 0
 11220 03ba 0123     		movs	r3, #1
 11221 03bc 08F10602 		add	r2, r8, #6
 11222 03c0 2946     		mov	r1, r5
 11223 03c2 2046     		mov	r0, r4
 11224 03c4 FFF7FEFF 		bl	disk_write
 11225              	.LVL1730:
5655:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + FSI_LeadSig, 0x41615252);
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 330


 11226              		.loc 1 5655 0
 11227 03c8 4FF40072 		mov	r2, #512
 11228 03cc 0021     		movs	r1, #0
 11229 03ce 2846     		mov	r0, r5
 11230 03d0 FFF7FEFF 		bl	mem_set
 11231              	.LVL1731:
5656:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + FSI_StrucSig, 0x61417272);
 11232              		.loc 1 5656 0
 11233 03d4 9549     		ldr	r1, .L1131+8
 11234 03d6 2846     		mov	r0, r5
 11235 03d8 FFF7FEFF 		bl	st_dword
 11236              	.LVL1732:
5657:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + FSI_Free_Count, n_clst - 1);	/* Number of free clusters */
 11237              		.loc 1 5657 0
 11238 03dc 9449     		ldr	r1, .L1131+12
 11239 03de 05F5F270 		add	r0, r5, #484
 11240 03e2 FFF7FEFF 		bl	st_dword
 11241              	.LVL1733:
5658:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + FSI_Nxt_Free, 2);			/* Last allocated cluster# */
 11242              		.loc 1 5658 0
 11243 03e6 0BF1FF31 		add	r1, fp, #-1
 11244 03ea 05F5F470 		add	r0, r5, #488
 11245 03ee FFF7FEFF 		bl	st_dword
 11246              	.LVL1734:
5659:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BS_55AA, 0xAA55);
 11247              		.loc 1 5659 0
 11248 03f2 0221     		movs	r1, #2
 11249 03f4 05F5F670 		add	r0, r5, #492
 11250 03f8 FFF7FEFF 		bl	st_dword
 11251              	.LVL1735:
5660:Middlewares/Third_Party/FatFs/src/ff.c **** 			disk_write(pdrv, buf, b_vol + 7, 1);		/* Write backup FSINFO (VBR + 7) */
 11252              		.loc 1 5660 0
 11253 03fc 4AF65521 		movw	r1, #43605
 11254 0400 0198     		ldr	r0, [sp, #4]
 11255 0402 FFF7FEFF 		bl	st_word
 11256              	.LVL1736:
5661:Middlewares/Third_Party/FatFs/src/ff.c **** 			disk_write(pdrv, buf, b_vol + 1, 1);		/* Write original FSINFO (VBR + 1) */
 11257              		.loc 1 5661 0
 11258 0406 0123     		movs	r3, #1
 11259 0408 08F10702 		add	r2, r8, #7
 11260 040c 2946     		mov	r1, r5
 11261 040e 2046     		mov	r0, r4
 11262 0410 FFF7FEFF 		bl	disk_write
 11263              	.LVL1737:
5662:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 11264              		.loc 1 5662 0
 11265 0414 0123     		movs	r3, #1
 11266 0416 08EB0302 		add	r2, r8, r3
 11267 041a 2946     		mov	r1, r5
 11268 041c 2046     		mov	r0, r4
 11269 041e FFF7FEFF 		bl	disk_write
 11270              	.LVL1738:
 11271              	.L1074:
5666:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect = b_fat;		/* FAT start sector */
 11272              		.loc 1 5666 0
 11273 0422 5246     		mov	r2, r10
 11274 0424 0021     		movs	r1, #0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 331


 11275 0426 2846     		mov	r0, r5
 11276 0428 FFF7FEFF 		bl	mem_set
 11277              	.LVL1739:
5668:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT32) {
 11278              		.loc 1 5668 0
 11279 042c 4FF0000B 		mov	fp, #0
 11280              	.LVL1740:
 11281              	.L1075:
5668:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT32) {
 11282              		.loc 1 5668 0 is_stmt 0 discriminator 1
 11283 0430 BBF1000F 		cmp	fp, #0
 11284 0434 00F08B80 		beq	.L1080
5686:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
 11285              		.loc 1 5686 0 is_stmt 1
 11286 0438 032F     		cmp	r7, #3
 11287 043a 40F0C380 		bne	.L1121
 11288 043e DDF80CA0 		ldr	r10, [sp, #12]
 11289 0442 B146     		mov	r9, r6
 11290              	.LVL1741:
 11291              	.L1082:
5688:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, buf, sect, (UINT)n) != RES_OK) return FR_DISK_ERR;
 11292              		.loc 1 5688 0
 11293 0444 059B     		ldr	r3, [sp, #20]
 11294 0446 4B45     		cmp	r3, r9
 11295 0448 28BF     		it	cs
 11296 044a 4B46     		movcs	r3, r9
 11297 044c 1E46     		mov	r6, r3
 11298              	.LVL1742:
5689:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += n; nsect -= n;
 11299              		.loc 1 5689 0
 11300 044e 5246     		mov	r2, r10
 11301 0450 2946     		mov	r1, r5
 11302 0452 2046     		mov	r0, r4
 11303 0454 FFF7FEFF 		bl	disk_write
 11304              	.LVL1743:
 11305 0458 0028     		cmp	r0, #0
 11306 045a 40F0DD80 		bne	.L1113
5690:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (nsect);
 11307              		.loc 1 5690 0
 11308 045e B244     		add	r10, r10, r6
 11309              	.LVL1744:
5691:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 11310              		.loc 1 5691 0
 11311 0460 B9EB0609 		subs	r9, r9, r6
 11312              	.LVL1745:
 11313 0464 EED1     		bne	.L1082
5698:Middlewares/Third_Party/FatFs/src/ff.c **** 			sys = 0x0C;		/* FAT32X */
 11314              		.loc 1 5698 0
 11315 0466 032F     		cmp	r7, #3
 11316 0468 00F0B180 		beq	.L1114
5701:Middlewares/Third_Party/FatFs/src/ff.c **** 				sys = 0x06;	/* FAT12/16 (>=64KS) */
 11317              		.loc 1 5701 0
 11318 046c 089B     		ldr	r3, [sp, #32]
 11319 046e B3F5803F 		cmp	r3, #65536
 11320 0472 80F0AF80 		bcs	.L1115
5704:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 11321              		.loc 1 5704 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 332


 11322 0476 022F     		cmp	r7, #2
 11323 0478 40F0AF80 		bne	.L1116
 11324 047c 4FF00409 		mov	r9, #4
 11325              	.LVL1746:
 11326              	.L1083:
5716:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(buf, 0, ss);
 11327              		.loc 1 5716 0
 11328 0480 069B     		ldr	r3, [sp, #24]
 11329 0482 CBBB     		cbnz	r3, .L1084
5717:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BS_55AA, 0xAA55);		/* MBR signature */
 11330              		.loc 1 5717 0
 11331 0484 4FF40072 		mov	r2, #512
 11332 0488 0021     		movs	r1, #0
 11333 048a 2846     		mov	r0, r5
 11334 048c FFF7FEFF 		bl	mem_set
 11335              	.LVL1747:
5718:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte = buf + MBR_Table;				/* Create partition table for single partition in the drive */
 11336              		.loc 1 5718 0
 11337 0490 4AF65521 		movw	r1, #43605
 11338 0494 0198     		ldr	r0, [sp, #4]
 11339 0496 FFF7FEFF 		bl	st_word
 11340              	.LVL1748:
5720:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_StHead] = 1;				/* Start head */
 11341              		.loc 1 5720 0
 11342 049a 0026     		movs	r6, #0
 11343              	.LVL1749:
 11344 049c 85F8BE61 		strb	r6, [r5, #446]
5721:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_StSec] = 1;					/* Start sector */
 11345              		.loc 1 5721 0
 11346 04a0 0127     		movs	r7, #1
 11347 04a2 85F8BF71 		strb	r7, [r5, #447]
5722:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_StCyl] = 0;					/* Start cylinder */
 11348              		.loc 1 5722 0
 11349 04a6 85F8C071 		strb	r7, [r5, #448]
5723:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_System] = sys;				/* System type */
 11350              		.loc 1 5723 0
 11351 04aa 85F8C161 		strb	r6, [r5, #449]
5724:Middlewares/Third_Party/FatFs/src/ff.c **** 			n = (b_vol + sz_vol) / (63 * 255);	/* (End CHS may be invalid) */
 11352              		.loc 1 5724 0
 11353 04ae 85F8C291 		strb	r9, [r5, #450]
5725:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_EdHead] = 254;				/* End head */
 11354              		.loc 1 5725 0
 11355 04b2 089B     		ldr	r3, [sp, #32]
 11356 04b4 4344     		add	r3, r3, r8
 11357 04b6 43F6C162 		movw	r2, #16065
 11358 04ba B3FBF2F3 		udiv	r3, r3, r2
 11359              	.LVL1750:
5726:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_EdSec] = (BYTE)(n >> 2 | 63);	/* End sector */
 11360              		.loc 1 5726 0
 11361 04be FE22     		movs	r2, #254
 11362 04c0 85F8C321 		strb	r2, [r5, #451]
5727:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_EdCyl] = (BYTE)n;			/* End cylinder */
 11363              		.loc 1 5727 0
 11364 04c4 9A08     		lsrs	r2, r3, #2
 11365 04c6 42F03F02 		orr	r2, r2, #63
 11366 04ca 85F8C421 		strb	r2, [r5, #452]
5728:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(pte + PTE_StLba, b_vol);	/* Start offset in LBA */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 333


 11367              		.loc 1 5728 0
 11368 04ce 85F8C531 		strb	r3, [r5, #453]
5729:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(pte + PTE_SizLba, sz_vol);	/* Size in sectors */
 11369              		.loc 1 5729 0
 11370 04d2 4146     		mov	r1, r8
 11371 04d4 05F5E370 		add	r0, r5, #454
 11372 04d8 FFF7FEFF 		bl	st_dword
 11373              	.LVL1751:
5730:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, buf, 0, 1) != RES_OK) return FR_DISK_ERR;	/* Write it to the MBR */
 11374              		.loc 1 5730 0
 11375 04dc 0899     		ldr	r1, [sp, #32]
 11376 04de 05F5E570 		add	r0, r5, #458
 11377 04e2 FFF7FEFF 		bl	st_dword
 11378              	.LVL1752:
5731:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 11379              		.loc 1 5731 0
 11380 04e6 3B46     		mov	r3, r7
 11381 04e8 3246     		mov	r2, r6
 11382 04ea 2946     		mov	r1, r5
 11383 04ec 2046     		mov	r0, r4
 11384 04ee FFF7FEFF 		bl	disk_write
 11385              	.LVL1753:
 11386 04f2 0028     		cmp	r0, #0
 11387 04f4 40F09280 		bne	.L1117
 11388              	.LVL1754:
 11389              	.L1084:
5735:Middlewares/Third_Party/FatFs/src/ff.c **** 
 11390              		.loc 1 5735 0
 11391 04f8 0022     		movs	r2, #0
 11392 04fa 1146     		mov	r1, r2
 11393 04fc 2046     		mov	r0, r4
 11394 04fe FFF7FEFF 		bl	disk_ioctl
 11395              	.LVL1755:
 11396 0502 0028     		cmp	r0, #0
 11397 0504 00F08C80 		beq	.L1118
 11398 0508 0120     		movs	r0, #1
 11399 050a 6AE0     		b	.L1043
 11400              	.LVL1756:
 11401              	.L1109:
5623:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (sz_vol < 0x10000) {
 11402              		.loc 1 5623 0
 11403 050c 0021     		movs	r1, #0
 11404 050e FAE6     		b	.L1069
 11405              	.L1070:
5627:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 11406              		.loc 1 5627 0
 11407 0510 05F12000 		add	r0, r5, #32
 11408 0514 FFF7FEFF 		bl	st_dword
 11409              	.LVL1757:
 11410 0518 01E7     		b	.L1071
 11411              	.L1072:
5643:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BPB_FATSz16, (WORD)sz_fat);	/* FAT size [sector] */
 11412              		.loc 1 5643 0
 11413 051a FFF7FEFF 		bl	get_fattime
 11414              	.LVL1758:
 11415 051e 0146     		mov	r1, r0
 11416 0520 05F12700 		add	r0, r5, #39
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 334


 11417 0524 FFF7FEFF 		bl	st_dword
 11418              	.LVL1759:
5644:Middlewares/Third_Party/FatFs/src/ff.c **** 			buf[BS_DrvNum] = 0x80;						/* Drive number (for int13) */
 11419              		.loc 1 5644 0
 11420 0528 BDF80810 		ldrh	r1, [sp, #8]
 11421 052c 05F11600 		add	r0, r5, #22
 11422 0530 FFF7FEFF 		bl	st_word
 11423              	.LVL1760:
5645:Middlewares/Third_Party/FatFs/src/ff.c **** 			buf[BS_BootSig] = 0x29;						/* Extended boot signature */
 11424              		.loc 1 5645 0
 11425 0534 8023     		movs	r3, #128
 11426 0536 85F82430 		strb	r3, [r5, #36]
5646:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_cpy(buf + BS_VolLab, "NO NAME    " "FAT     ", 19);	/* Volume label, FAT signature */
 11427              		.loc 1 5646 0
 11428 053a 2923     		movs	r3, #41
 11429 053c 85F82630 		strb	r3, [r5, #38]
5647:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 11430              		.loc 1 5647 0
 11431 0540 1322     		movs	r2, #19
 11432 0542 3C49     		ldr	r1, .L1131+16
 11433 0544 05F12B00 		add	r0, r5, #43
 11434 0548 FFF7FEFF 		bl	mem_cpy
 11435              	.LVL1761:
 11436 054c 22E7     		b	.L1073
 11437              	.LVL1762:
 11438              	.L1080:
5669:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(buf + 0, 0xFFFFFFF8);	/* Entry 0 */
 11439              		.loc 1 5669 0
 11440 054e 032F     		cmp	r7, #3
 11441 0550 2ED1     		bne	.L1076
5670:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(buf + 4, 0xFFFFFFFF);	/* Entry 1 */
 11442              		.loc 1 5670 0
 11443 0552 6FF00701 		mvn	r1, #7
 11444 0556 2846     		mov	r0, r5
 11445 0558 FFF7FEFF 		bl	st_dword
 11446              	.LVL1763:
5671:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(buf + 8, 0x0FFFFFFF);	/* Entry 2 (root directory) */
 11447              		.loc 1 5671 0
 11448 055c 4FF0FF31 		mov	r1, #-1
 11449 0560 281D     		adds	r0, r5, #4
 11450 0562 FFF7FEFF 		bl	st_dword
 11451              	.LVL1764:
5672:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
 11452              		.loc 1 5672 0
 11453 0566 6FF07041 		mvn	r1, #-268435456
 11454 056a 05F10800 		add	r0, r5, #8
 11455 056e FFF7FEFF 		bl	st_dword
 11456              	.LVL1765:
 11457              	.L1077:
5674:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 11458              		.loc 1 5674 0
 11459 0572 DDF80890 		ldr	r9, [sp, #8]
 11460 0576 BA46     		mov	r10, r7
 11461              	.L1079:
 11462              	.LVL1766:
5678:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(pdrv, buf, sect, (UINT)n) != RES_OK) return FR_DISK_ERR;
 11463              		.loc 1 5678 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 335


 11464 0578 059B     		ldr	r3, [sp, #20]
 11465 057a 4B45     		cmp	r3, r9
 11466 057c 28BF     		it	cs
 11467 057e 4B46     		movcs	r3, r9
 11468 0580 1F46     		mov	r7, r3
 11469              	.LVL1767:
5679:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_set(buf, 0, ss);
 11470              		.loc 1 5679 0
 11471 0582 039A     		ldr	r2, [sp, #12]
 11472 0584 2946     		mov	r1, r5
 11473 0586 2046     		mov	r0, r4
 11474 0588 FFF7FEFF 		bl	disk_write
 11475              	.LVL1768:
 11476 058c 0028     		cmp	r0, #0
 11477 058e 41D1     		bne	.L1112
5680:Middlewares/Third_Party/FatFs/src/ff.c **** 				sect += n; nsect -= n;
 11478              		.loc 1 5680 0
 11479 0590 4FF40072 		mov	r2, #512
 11480 0594 0021     		movs	r1, #0
 11481 0596 2846     		mov	r0, r5
 11482 0598 FFF7FEFF 		bl	mem_set
 11483              	.LVL1769:
5681:Middlewares/Third_Party/FatFs/src/ff.c **** 			} while (nsect);
 11484              		.loc 1 5681 0
 11485 059c 039B     		ldr	r3, [sp, #12]
 11486 059e 3B44     		add	r3, r3, r7
 11487 05a0 0393     		str	r3, [sp, #12]
 11488              	.LVL1770:
5682:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 11489              		.loc 1 5682 0
 11490 05a2 B9EB0709 		subs	r9, r9, r7
 11491              	.LVL1771:
 11492 05a6 E7D1     		bne	.L1079
 11493 05a8 5746     		mov	r7, r10
 11494              	.LVL1772:
5668:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT32) {
 11495              		.loc 1 5668 0 discriminator 2
 11496 05aa 0BF1010B 		add	fp, fp, #1
 11497              	.LVL1773:
 11498 05ae 3FE7     		b	.L1075
 11499              	.LVL1774:
 11500              	.L1076:
5674:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 11501              		.loc 1 5674 0
 11502 05b0 012F     		cmp	r7, #1
 11503 05b2 04D1     		bne	.L1111
 11504 05b4 2049     		ldr	r1, .L1131+20
 11505              	.L1078:
5674:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 11506              		.loc 1 5674 0 is_stmt 0 discriminator 4
 11507 05b6 2846     		mov	r0, r5
 11508 05b8 FFF7FEFF 		bl	st_dword
 11509              	.LVL1775:
 11510 05bc D9E7     		b	.L1077
 11511              	.L1111:
5674:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 11512              		.loc 1 5674 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 336


 11513 05be 6FF00701 		mvn	r1, #7
 11514 05c2 F8E7     		b	.L1078
 11515              	.L1121:
 11516 05c4 DDF80CA0 		ldr	r10, [sp, #12]
 11517 05c8 DDF81090 		ldr	r9, [sp, #16]
 11518 05cc 3AE7     		b	.L1082
 11519              	.LVL1776:
 11520              	.L1114:
5699:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 11521              		.loc 1 5699 0 is_stmt 1
 11522 05ce 4FF00C09 		mov	r9, #12
 11523              	.LVL1777:
 11524 05d2 55E7     		b	.L1083
 11525              	.LVL1778:
 11526              	.L1115:
5702:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
 11527              		.loc 1 5702 0
 11528 05d4 4FF00609 		mov	r9, #6
 11529              	.LVL1779:
 11530 05d8 52E7     		b	.L1083
 11531              	.LVL1780:
 11532              	.L1116:
5704:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 11533              		.loc 1 5704 0
 11534 05da 4FF00109 		mov	r9, #1
 11535              	.LVL1781:
 11536 05de 4FE7     		b	.L1083
 11537              	.LVL1782:
 11538              	.L1085:
5317:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (FatFs[vol]) FatFs[vol]->fs_type = 0;	/* Clear the volume */
 11539              		.loc 1 5317 0
 11540 05e0 0B20     		movs	r0, #11
 11541              	.LVL1783:
 11542              	.L1043:
5738:Middlewares/Third_Party/FatFs/src/ff.c **** 
 11543              		.loc 1 5738 0
 11544 05e2 0BB0     		add	sp, sp, #44
 11545              	.LCFI150:
 11546              		.cfi_remember_state
 11547              		.cfi_def_cfa_offset 36
 11548              		@ sp needed
 11549 05e4 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 11550              	.LVL1784:
 11551              	.L1092:
 11552              	.LCFI151:
 11553              		.cfi_restore_state
5353:Middlewares/Third_Party/FatFs/src/ff.c **** 		b_vol = (opt & FM_SFD) ? 0 : 63;		/* Volume start sector */
 11554              		.loc 1 5353 0
 11555 05e8 0120     		movs	r0, #1
 11556 05ea FAE7     		b	.L1043
 11557              	.LVL1785:
 11558              	.L1094:
5355:Middlewares/Third_Party/FatFs/src/ff.c **** 		sz_vol -= b_vol;						/* Volume size */
 11559              		.loc 1 5355 0
 11560 05ec 0E20     		movs	r0, #14
 11561 05ee F8E7     		b	.L1043
 11562              	.L1096:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 337


5367:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (opt & FM_FAT32) {	/* FAT32 possible? */
 11563              		.loc 1 5367 0
 11564 05f0 1320     		movs	r0, #19
 11565 05f2 F6E7     		b	.L1043
 11566              	.L1099:
5373:Middlewares/Third_Party/FatFs/src/ff.c **** 		fmt = FS_FAT16;
 11567              		.loc 1 5373 0
 11568 05f4 1320     		movs	r0, #19
 11569 05f6 F4E7     		b	.L1043
 11570              	.LVL1786:
 11571              	.L1101:
5553:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {				/* FAT12/16 volume */
 11572              		.loc 1 5553 0
 11573 05f8 0E20     		movs	r0, #14
 11574              	.LVL1787:
 11575 05fa F2E7     		b	.L1043
 11576              	.LVL1788:
 11577              	.L1103:
5582:Middlewares/Third_Party/FatFs/src/ff.c **** 			n_clst = (sz_vol - sz_rsv - sz_fat * n_fats - sz_dir) / pau;
 11578              		.loc 1 5582 0
 11579 05fc 0E20     		movs	r0, #14
 11580              	.LVL1789:
 11581 05fe F0E7     		b	.L1043
 11582              	.LVL1790:
 11583              	.L1104:
5587:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 11584              		.loc 1 5587 0
 11585 0600 0E20     		movs	r0, #14
 11586              	.LVL1791:
 11587 0602 EEE7     		b	.L1043
 11588              	.LVL1792:
 11589              	.L1106:
5599:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 11590              		.loc 1 5599 0
 11591 0604 0E20     		movs	r0, #14
 11592              	.LVL1793:
 11593 0606 ECE7     		b	.L1043
 11594              	.LVL1794:
 11595              	.L1107:
5603:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 11596              		.loc 1 5603 0
 11597 0608 0E20     		movs	r0, #14
 11598              	.LVL1795:
 11599 060a EAE7     		b	.L1043
 11600              	.LVL1796:
 11601              	.L1108:
5606:Middlewares/Third_Party/FatFs/src/ff.c **** 
 11602              		.loc 1 5606 0
 11603 060c 0E20     		movs	r0, #14
 11604              	.LVL1797:
 11605 060e E8E7     		b	.L1043
 11606              	.LVL1798:
 11607              	.L1110:
5650:Middlewares/Third_Party/FatFs/src/ff.c **** 
 11608              		.loc 1 5650 0
 11609 0610 0120     		movs	r0, #1
 11610 0612 E6E7     		b	.L1043
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 338


 11611              	.LVL1799:
 11612              	.L1112:
5679:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_set(buf, 0, ss);
 11613              		.loc 1 5679 0
 11614 0614 0120     		movs	r0, #1
 11615 0616 E4E7     		b	.L1043
 11616              	.LVL1800:
 11617              	.L1113:
5689:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += n; nsect -= n;
 11618              		.loc 1 5689 0
 11619 0618 0120     		movs	r0, #1
 11620 061a E2E7     		b	.L1043
 11621              	.LVL1801:
 11622              	.L1117:
5731:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 11623              		.loc 1 5731 0
 11624 061c 0120     		movs	r0, #1
 11625 061e E0E7     		b	.L1043
 11626              	.LVL1802:
 11627              	.L1118:
5737:Middlewares/Third_Party/FatFs/src/ff.c **** }
 11628              		.loc 1 5737 0
 11629 0620 0020     		movs	r0, #0
 11630 0622 DEE7     		b	.L1043
 11631              	.L1132:
 11632              		.align	2
 11633              	.L1131:
 11634 0624 00000000 		.word	.LC2
 11635 0628 0C000000 		.word	.LC3
 11636 062c 52526141 		.word	1096897106
 11637 0630 72724161 		.word	1631679090
 11638 0634 20000000 		.word	.LC4
 11639 0638 F8FFFF00 		.word	16777208
 11640              		.cfi_endproc
 11641              	.LFE209:
 11643              		.section	.text.f_gets,"ax",%progbits
 11644              		.align	1
 11645              		.global	f_gets
 11646              		.syntax unified
 11647              		.thumb
 11648              		.thumb_func
 11649              		.fpu fpv5-sp-d16
 11651              	f_gets:
 11652              	.LFB210:
5824:Middlewares/Third_Party/FatFs/src/ff.c **** 	int n = 0;
 11653              		.loc 1 5824 0
 11654              		.cfi_startproc
 11655              		@ args = 0, pretend = 0, frame = 8
 11656              		@ frame_needed = 0, uses_anonymous_args = 0
 11657              	.LVL1803:
 11658 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 11659              	.LCFI152:
 11660              		.cfi_def_cfa_offset 24
 11661              		.cfi_offset 4, -24
 11662              		.cfi_offset 5, -20
 11663              		.cfi_offset 6, -16
 11664              		.cfi_offset 7, -12
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 339


 11665              		.cfi_offset 8, -8
 11666              		.cfi_offset 14, -4
 11667 0004 82B0     		sub	sp, sp, #8
 11668              	.LCFI153:
 11669              		.cfi_def_cfa_offset 32
 11670 0006 8046     		mov	r8, r0
 11671 0008 0E46     		mov	r6, r1
 11672 000a 1746     		mov	r7, r2
 11673              	.LVL1804:
5826:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE s[2];
 11674              		.loc 1 5826 0
 11675 000c 0546     		mov	r5, r0
5825:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR c, *p = buff;
 11676              		.loc 1 5825 0
 11677 000e 0024     		movs	r4, #0
 11678              	.LVL1805:
 11679              	.L1134:
5831:Middlewares/Third_Party/FatFs/src/ff.c **** #if _LFN_UNICODE
 11680              		.loc 1 5831 0
 11681 0010 731E     		subs	r3, r6, #1
 11682 0012 9C42     		cmp	r4, r3
 11683 0014 14DA     		bge	.L1135
5876:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rc != 1) break;
 11684              		.loc 1 5876 0
 11685 0016 6B46     		mov	r3, sp
 11686 0018 0122     		movs	r2, #1
 11687 001a 01A9     		add	r1, sp, #4
 11688 001c 3846     		mov	r0, r7
 11689 001e FFF7FEFF 		bl	f_read
 11690              	.LVL1806:
5877:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = s[0];
 11691              		.loc 1 5877 0
 11692 0022 009B     		ldr	r3, [sp]
 11693 0024 012B     		cmp	r3, #1
 11694 0026 0BD1     		bne	.L1135
5878:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 11695              		.loc 1 5878 0
 11696 0028 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 11697              	.LVL1807:
5880:Middlewares/Third_Party/FatFs/src/ff.c **** 		*p++ = c;
 11698              		.loc 1 5880 0
 11699 002c 0D2B     		cmp	r3, #13
 11700 002e EFD0     		beq	.L1134
5881:Middlewares/Third_Party/FatFs/src/ff.c **** 		n++;
 11701              		.loc 1 5881 0
 11702 0030 6A1C     		adds	r2, r5, #1
 11703              	.LVL1808:
 11704 0032 2B70     		strb	r3, [r5]
5882:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == '\n') break;		/* Break on EOL */
 11705              		.loc 1 5882 0
 11706 0034 0134     		adds	r4, r4, #1
 11707              	.LVL1809:
5883:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 11708              		.loc 1 5883 0
 11709 0036 0A2B     		cmp	r3, #10
 11710 0038 01D0     		beq	.L1139
5881:Middlewares/Third_Party/FatFs/src/ff.c **** 		n++;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 340


 11711              		.loc 1 5881 0
 11712 003a 1546     		mov	r5, r2
 11713 003c E8E7     		b	.L1134
 11714              	.L1139:
 11715 003e 1546     		mov	r5, r2
 11716              	.LVL1810:
 11717              	.L1135:
5885:Middlewares/Third_Party/FatFs/src/ff.c **** 	return n ? buff : 0;			/* When no data read (eof or error), return with error. */
 11718              		.loc 1 5885 0
 11719 0040 0023     		movs	r3, #0
 11720 0042 2B70     		strb	r3, [r5]
5886:Middlewares/Third_Party/FatFs/src/ff.c **** }
 11721              		.loc 1 5886 0
 11722 0044 1CB1     		cbz	r4, .L1140
 11723 0046 4046     		mov	r0, r8
 11724              	.L1133:
5887:Middlewares/Third_Party/FatFs/src/ff.c **** 
 11725              		.loc 1 5887 0
 11726 0048 02B0     		add	sp, sp, #8
 11727              	.LCFI154:
 11728              		.cfi_remember_state
 11729              		.cfi_def_cfa_offset 24
 11730              		@ sp needed
 11731 004a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 11732              	.LVL1811:
 11733              	.L1140:
 11734              	.LCFI155:
 11735              		.cfi_restore_state
5886:Middlewares/Third_Party/FatFs/src/ff.c **** }
 11736              		.loc 1 5886 0
 11737 004e 0020     		movs	r0, #0
 11738 0050 FAE7     		b	.L1133
 11739              		.cfi_endproc
 11740              	.LFE210:
 11742              		.section	.text.f_putc,"ax",%progbits
 11743              		.align	1
 11744              		.global	f_putc
 11745              		.syntax unified
 11746              		.thumb
 11747              		.thumb_func
 11748              		.fpu fpv5-sp-d16
 11750              	f_putc:
 11751              	.LFB214:
5983:Middlewares/Third_Party/FatFs/src/ff.c **** }
5984:Middlewares/Third_Party/FatFs/src/ff.c **** 
5985:Middlewares/Third_Party/FatFs/src/ff.c **** 
5986:Middlewares/Third_Party/FatFs/src/ff.c **** 
5987:Middlewares/Third_Party/FatFs/src/ff.c **** int f_putc (
5988:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR c,	/* A character to be output */
5989:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp		/* Pointer to the file object */
5990:Middlewares/Third_Party/FatFs/src/ff.c **** )
5991:Middlewares/Third_Party/FatFs/src/ff.c **** {
 11752              		.loc 1 5991 0
 11753              		.cfi_startproc
 11754              		@ args = 0, pretend = 0, frame = 80
 11755              		@ frame_needed = 0, uses_anonymous_args = 0
 11756              	.LVL1812:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 341


 11757 0000 10B5     		push	{r4, lr}
 11758              	.LCFI156:
 11759              		.cfi_def_cfa_offset 8
 11760              		.cfi_offset 4, -8
 11761              		.cfi_offset 14, -4
 11762 0002 94B0     		sub	sp, sp, #80
 11763              	.LCFI157:
 11764              		.cfi_def_cfa_offset 88
 11765 0004 0446     		mov	r4, r0
5992:Middlewares/Third_Party/FatFs/src/ff.c **** 	putbuff pb;
5993:Middlewares/Third_Party/FatFs/src/ff.c **** 
5994:Middlewares/Third_Party/FatFs/src/ff.c **** 
5995:Middlewares/Third_Party/FatFs/src/ff.c **** 	putc_init(&pb, fp);
 11766              		.loc 1 5995 0
 11767 0006 01A8     		add	r0, sp, #4
 11768              	.LVL1813:
 11769 0008 FFF7FEFF 		bl	putc_init
 11770              	.LVL1814:
5996:Middlewares/Third_Party/FatFs/src/ff.c **** 	putc_bfd(&pb, c);	/* Put the character */
 11771              		.loc 1 5996 0
 11772 000c 2146     		mov	r1, r4
 11773 000e 01A8     		add	r0, sp, #4
 11774 0010 FFF7FEFF 		bl	putc_bfd
 11775              	.LVL1815:
5997:Middlewares/Third_Party/FatFs/src/ff.c **** 	return putc_flush(&pb);
 11776              		.loc 1 5997 0
 11777 0014 01A8     		add	r0, sp, #4
 11778 0016 FFF7FEFF 		bl	putc_flush
 11779              	.LVL1816:
5998:Middlewares/Third_Party/FatFs/src/ff.c **** }
 11780              		.loc 1 5998 0
 11781 001a 14B0     		add	sp, sp, #80
 11782              	.LCFI158:
 11783              		.cfi_def_cfa_offset 8
 11784              		@ sp needed
 11785 001c 10BD     		pop	{r4, pc}
 11786              		.cfi_endproc
 11787              	.LFE214:
 11789              		.section	.text.f_puts,"ax",%progbits
 11790              		.align	1
 11791              		.global	f_puts
 11792              		.syntax unified
 11793              		.thumb
 11794              		.thumb_func
 11795              		.fpu fpv5-sp-d16
 11797              	f_puts:
 11798              	.LFB215:
5999:Middlewares/Third_Party/FatFs/src/ff.c **** 
6000:Middlewares/Third_Party/FatFs/src/ff.c **** 
6001:Middlewares/Third_Party/FatFs/src/ff.c **** 
6002:Middlewares/Third_Party/FatFs/src/ff.c **** 
6003:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
6004:Middlewares/Third_Party/FatFs/src/ff.c **** /* Put a string to the file                                              */
6005:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
6006:Middlewares/Third_Party/FatFs/src/ff.c **** 
6007:Middlewares/Third_Party/FatFs/src/ff.c **** int f_puts (
6008:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* str,	/* Pointer to the string to be output */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 342


6009:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp				/* Pointer to the file object */
6010:Middlewares/Third_Party/FatFs/src/ff.c **** )
6011:Middlewares/Third_Party/FatFs/src/ff.c **** {
 11799              		.loc 1 6011 0
 11800              		.cfi_startproc
 11801              		@ args = 0, pretend = 0, frame = 80
 11802              		@ frame_needed = 0, uses_anonymous_args = 0
 11803              	.LVL1817:
 11804 0000 10B5     		push	{r4, lr}
 11805              	.LCFI159:
 11806              		.cfi_def_cfa_offset 8
 11807              		.cfi_offset 4, -8
 11808              		.cfi_offset 14, -4
 11809 0002 94B0     		sub	sp, sp, #80
 11810              	.LCFI160:
 11811              		.cfi_def_cfa_offset 88
 11812 0004 0446     		mov	r4, r0
6012:Middlewares/Third_Party/FatFs/src/ff.c **** 	putbuff pb;
6013:Middlewares/Third_Party/FatFs/src/ff.c **** 
6014:Middlewares/Third_Party/FatFs/src/ff.c **** 
6015:Middlewares/Third_Party/FatFs/src/ff.c **** 	putc_init(&pb, fp);
 11813              		.loc 1 6015 0
 11814 0006 01A8     		add	r0, sp, #4
 11815              	.LVL1818:
 11816 0008 FFF7FEFF 		bl	putc_init
 11817              	.LVL1819:
6016:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (*str) putc_bfd(&pb, *str++);		/* Put the string */
 11818              		.loc 1 6016 0
 11819 000c 03E0     		b	.L1145
 11820              	.L1146:
 11821              		.loc 1 6016 0 is_stmt 0 discriminator 2
 11822 000e 0134     		adds	r4, r4, #1
 11823              	.LVL1820:
 11824 0010 01A8     		add	r0, sp, #4
 11825 0012 FFF7FEFF 		bl	putc_bfd
 11826              	.LVL1821:
 11827              	.L1145:
 11828              		.loc 1 6016 0 discriminator 1
 11829 0016 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 11830 0018 0029     		cmp	r1, #0
 11831 001a F8D1     		bne	.L1146
6017:Middlewares/Third_Party/FatFs/src/ff.c **** 	return putc_flush(&pb);
 11832              		.loc 1 6017 0 is_stmt 1
 11833 001c 01A8     		add	r0, sp, #4
 11834 001e FFF7FEFF 		bl	putc_flush
 11835              	.LVL1822:
6018:Middlewares/Third_Party/FatFs/src/ff.c **** }
 11836              		.loc 1 6018 0
 11837 0022 14B0     		add	sp, sp, #80
 11838              	.LCFI161:
 11839              		.cfi_def_cfa_offset 8
 11840              		@ sp needed
 11841 0024 10BD     		pop	{r4, pc}
 11842              		.cfi_endproc
 11843              	.LFE215:
 11845              		.section	.text.f_printf,"ax",%progbits
 11846              		.align	1
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 343


 11847              		.global	f_printf
 11848              		.syntax unified
 11849              		.thumb
 11850              		.thumb_func
 11851              		.fpu fpv5-sp-d16
 11853              	f_printf:
 11854              	.LFB216:
6019:Middlewares/Third_Party/FatFs/src/ff.c **** 
6020:Middlewares/Third_Party/FatFs/src/ff.c **** 
6021:Middlewares/Third_Party/FatFs/src/ff.c **** 
6022:Middlewares/Third_Party/FatFs/src/ff.c **** 
6023:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
6024:Middlewares/Third_Party/FatFs/src/ff.c **** /* Put a formatted string to the file                                    */
6025:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
6026:Middlewares/Third_Party/FatFs/src/ff.c **** 
6027:Middlewares/Third_Party/FatFs/src/ff.c **** int f_printf (
6028:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp,			/* Pointer to the file object */
6029:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* fmt,	/* Pointer to the format string */
6030:Middlewares/Third_Party/FatFs/src/ff.c **** 	...					/* Optional arguments... */
6031:Middlewares/Third_Party/FatFs/src/ff.c **** )
6032:Middlewares/Third_Party/FatFs/src/ff.c **** {
 11855              		.loc 1 6032 0
 11856              		.cfi_startproc
 11857              		@ args = 4, pretend = 12, frame = 112
 11858              		@ frame_needed = 0, uses_anonymous_args = 1
 11859              	.LVL1823:
 11860 0000 0EB4     		push	{r1, r2, r3}
 11861              	.LCFI162:
 11862              		.cfi_def_cfa_offset 12
 11863              		.cfi_offset 1, -12
 11864              		.cfi_offset 2, -8
 11865              		.cfi_offset 3, -4
 11866 0002 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 11867              	.LCFI163:
 11868              		.cfi_def_cfa_offset 44
 11869              		.cfi_offset 4, -44
 11870              		.cfi_offset 5, -40
 11871              		.cfi_offset 6, -36
 11872              		.cfi_offset 7, -32
 11873              		.cfi_offset 8, -28
 11874              		.cfi_offset 9, -24
 11875              		.cfi_offset 10, -20
 11876              		.cfi_offset 14, -16
 11877 0006 9DB0     		sub	sp, sp, #116
 11878              	.LCFI164:
 11879              		.cfi_def_cfa_offset 160
 11880 0008 25AC     		add	r4, sp, #148
 11881 000a 54F8046B 		ldr	r6, [r4], #4
6033:Middlewares/Third_Party/FatFs/src/ff.c **** 	va_list arp;
6034:Middlewares/Third_Party/FatFs/src/ff.c **** 	putbuff pb;
6035:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE f, r;
6036:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, j, w;
6037:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD v;
6038:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR c, d, str[32], *p;
6039:Middlewares/Third_Party/FatFs/src/ff.c **** 
6040:Middlewares/Third_Party/FatFs/src/ff.c **** 
6041:Middlewares/Third_Party/FatFs/src/ff.c **** 	putc_init(&pb, fp);
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 344


 11882              		.loc 1 6041 0
 11883 000e 0146     		mov	r1, r0
 11884 0010 08A8     		add	r0, sp, #32
 11885              	.LVL1824:
 11886 0012 FFF7FEFF 		bl	putc_init
 11887              	.LVL1825:
6042:Middlewares/Third_Party/FatFs/src/ff.c **** 
6043:Middlewares/Third_Party/FatFs/src/ff.c **** 	va_start(arp, fmt);
 11888              		.loc 1 6043 0
 11889 0016 1B94     		str	r4, [sp, #108]
 11890 0018 F9E0     		b	.L1149
 11891              	.LVL1826:
 11892              	.L1151:
6044:Middlewares/Third_Party/FatFs/src/ff.c **** 
6045:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
6046:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = *fmt++;
6047:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 0) break;			/* End of string */
6048:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c != '%') {				/* Non escape character */
6049:Middlewares/Third_Party/FatFs/src/ff.c **** 			putc_bfd(&pb, c);
6050:Middlewares/Third_Party/FatFs/src/ff.c **** 			continue;
6051:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
6052:Middlewares/Third_Party/FatFs/src/ff.c **** 		w = f = 0;
6053:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = *fmt++;
 11893              		.loc 1 6053 0
 11894 001a 0236     		adds	r6, r6, #2
 11895              	.LVL1827:
 11896 001c 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 11897              	.LVL1828:
6054:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == '0') {				/* Flag: '0' padding */
 11898              		.loc 1 6054 0
 11899 001e 3029     		cmp	r1, #48
 11900 0020 04D0     		beq	.L1198
6055:Middlewares/Third_Party/FatFs/src/ff.c **** 			f = 1; c = *fmt++;
6056:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
6057:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (c == '-') {			/* Flag: left justified */
 11901              		.loc 1 6057 0
 11902 0022 2D29     		cmp	r1, #45
 11903 0024 06D0     		beq	.L1199
6052:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = *fmt++;
 11904              		.loc 1 6052 0
 11905 0026 0027     		movs	r7, #0
 11906              	.LVL1829:
 11907              	.L1154:
6055:Middlewares/Third_Party/FatFs/src/ff.c **** 			f = 1; c = *fmt++;
 11908              		.loc 1 6055 0
 11909 0028 0025     		movs	r5, #0
 11910 002a 0EE0     		b	.L1155
 11911              	.LVL1830:
 11912              	.L1198:
 11913 002c A61C     		adds	r6, r4, #2
 11914              	.LVL1831:
 11915 002e 6178     		ldrb	r1, [r4, #1]	@ zero_extendqisi2
 11916              	.LVL1832:
 11917 0030 0127     		movs	r7, #1
 11918 0032 F9E7     		b	.L1154
 11919              	.LVL1833:
 11920              	.L1199:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 345


6058:Middlewares/Third_Party/FatFs/src/ff.c **** 				f = 2; c = *fmt++;
 11921              		.loc 1 6058 0
 11922 0034 A61C     		adds	r6, r4, #2
 11923              	.LVL1834:
 11924 0036 6178     		ldrb	r1, [r4, #1]	@ zero_extendqisi2
 11925              	.LVL1835:
 11926 0038 0227     		movs	r7, #2
 11927 003a F5E7     		b	.L1154
 11928              	.LVL1836:
 11929              	.L1156:
6059:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
6060:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
6061:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (IsDigit(c)) {		/* Precision */
6062:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = w * 10 + c - '0';
 11930              		.loc 1 6062 0
 11931 003c 05EB8505 		add	r5, r5, r5, lsl #2
 11932              	.LVL1837:
 11933 0040 6B00     		lsls	r3, r5, #1
 11934 0042 CD18     		adds	r5, r1, r3
 11935 0044 303D     		subs	r5, r5, #48
 11936              	.LVL1838:
6063:Middlewares/Third_Party/FatFs/src/ff.c **** 			c = *fmt++;
 11937              		.loc 1 6063 0
 11938 0046 3178     		ldrb	r1, [r6]	@ zero_extendqisi2
 11939              	.LVL1839:
 11940 0048 0136     		adds	r6, r6, #1
 11941              	.LVL1840:
 11942              	.L1155:
6061:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = w * 10 + c - '0';
 11943              		.loc 1 6061 0
 11944 004a A1F13003 		sub	r3, r1, #48
 11945 004e DBB2     		uxtb	r3, r3
 11946 0050 092B     		cmp	r3, #9
 11947 0052 F3D9     		bls	.L1156
6064:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
6065:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 'l' || c == 'L') {	/* Prefix: Size is long int */
 11948              		.loc 1 6065 0
 11949 0054 4C29     		cmp	r1, #76
 11950 0056 18BF     		it	ne
 11951 0058 6C29     		cmpne	r1, #108
 11952 005a 03D1     		bne	.L1157
6066:Middlewares/Third_Party/FatFs/src/ff.c **** 			f |= 4; c = *fmt++;
 11953              		.loc 1 6066 0
 11954 005c 47F00407 		orr	r7, r7, #4
 11955              	.LVL1841:
 11956 0060 3178     		ldrb	r1, [r6]	@ zero_extendqisi2
 11957              	.LVL1842:
 11958 0062 0136     		adds	r6, r6, #1
 11959              	.LVL1843:
 11960              	.L1157:
6067:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
6068:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!c) break;
 11961              		.loc 1 6068 0
 11962 0064 0029     		cmp	r1, #0
 11963 0066 00F0DD80 		beq	.L1150
 11964              	.LVL1844:
6069:Middlewares/Third_Party/FatFs/src/ff.c **** 		d = c;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 346


6070:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (IsLower(d)) d -= 0x20;
 11965              		.loc 1 6070 0
 11966 006a A1F16103 		sub	r3, r1, #97
 11967 006e DBB2     		uxtb	r3, r3
 11968 0070 192B     		cmp	r3, #25
 11969 0072 14D8     		bhi	.L1192
 11970              		.loc 1 6070 0 is_stmt 0 discriminator 1
 11971 0074 A1F12003 		sub	r3, r1, #32
 11972 0078 DBB2     		uxtb	r3, r3
 11973              	.LVL1845:
 11974              	.L1158:
6071:Middlewares/Third_Party/FatFs/src/ff.c **** 		switch (d) {				/* Type is... */
 11975              		.loc 1 6071 0 is_stmt 1
 11976 007a A3F14202 		sub	r2, r3, #66
 11977 007e 162A     		cmp	r2, #22
 11978 0080 48D8     		bhi	.L1159
 11979 0082 DFE802F0 		tbb	[pc, r2]
 11980              	.L1161:
 11981 0086 4B       		.byte	(.L1160-.L1161)/2
 11982 0087 39       		.byte	(.L1162-.L1161)/2
 11983 0088 41       		.byte	(.L1163-.L1161)/2
 11984 0089 47       		.byte	(.L1159-.L1161)/2
 11985 008a 47       		.byte	(.L1159-.L1161)/2
 11986 008b 47       		.byte	(.L1159-.L1161)/2
 11987 008c 47       		.byte	(.L1159-.L1161)/2
 11988 008d 47       		.byte	(.L1159-.L1161)/2
 11989 008e 47       		.byte	(.L1159-.L1161)/2
 11990 008f 47       		.byte	(.L1159-.L1161)/2
 11991 0090 47       		.byte	(.L1159-.L1161)/2
 11992 0091 47       		.byte	(.L1159-.L1161)/2
 11993 0092 47       		.byte	(.L1159-.L1161)/2
 11994 0093 4E       		.byte	(.L1193-.L1161)/2
 11995 0094 47       		.byte	(.L1159-.L1161)/2
 11996 0095 47       		.byte	(.L1159-.L1161)/2
 11997 0096 47       		.byte	(.L1159-.L1161)/2
 11998 0097 0E       		.byte	(.L1165-.L1161)/2
 11999 0098 47       		.byte	(.L1159-.L1161)/2
 12000 0099 41       		.byte	(.L1163-.L1161)/2
 12001 009a 47       		.byte	(.L1159-.L1161)/2
 12002 009b 47       		.byte	(.L1159-.L1161)/2
 12003 009c 44       		.byte	(.L1166-.L1161)/2
 12004              	.LVL1846:
 12005 009d 00       		.p2align 1
 12006              	.L1192:
6069:Middlewares/Third_Party/FatFs/src/ff.c **** 		d = c;
 12007              		.loc 1 6069 0
 12008 009e 0B46     		mov	r3, r1
 12009 00a0 EBE7     		b	.L1158
 12010              	.LVL1847:
 12011              	.L1165:
6072:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'S' :					/* String */
6073:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = va_arg(arp, TCHAR*);
 12012              		.loc 1 6073 0
 12013 00a2 1B9B     		ldr	r3, [sp, #108]
 12014              	.LVL1848:
 12015 00a4 1A1D     		adds	r2, r3, #4
 12016 00a6 1B92     		str	r2, [sp, #108]
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 347


 12017 00a8 1C68     		ldr	r4, [r3]
 12018              	.LVL1849:
6074:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (j = 0; p[j]; j++) ;
 12019              		.loc 1 6074 0
 12020 00aa 0023     		movs	r3, #0
 12021 00ac 00E0     		b	.L1167
 12022              	.LVL1850:
 12023              	.L1168:
 12024              		.loc 1 6074 0 is_stmt 0 discriminator 3
 12025 00ae 0133     		adds	r3, r3, #1
 12026              	.LVL1851:
 12027              	.L1167:
 12028              		.loc 1 6074 0 discriminator 1
 12029 00b0 E25C     		ldrb	r2, [r4, r3]	@ zero_extendqisi2
 12030 00b2 002A     		cmp	r2, #0
 12031 00b4 FBD1     		bne	.L1168
6075:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!(f & 2)) {
 12032              		.loc 1 6075 0 is_stmt 1
 12033 00b6 17F0020F 		tst	r7, #2
 12034 00ba 07D0     		beq	.L1169
 12035 00bc 1F46     		mov	r7, r3
 12036              	.LVL1852:
 12037 00be 0DE0     		b	.L1172
 12038              	.LVL1853:
 12039              	.L1171:
6076:Middlewares/Third_Party/FatFs/src/ff.c **** 				while (j++ < w) putc_bfd(&pb, ' ');
 12040              		.loc 1 6076 0 discriminator 2
 12041 00c0 2021     		movs	r1, #32
 12042 00c2 0DEB0100 		add	r0, sp, r1
 12043 00c6 FFF7FEFF 		bl	putc_bfd
 12044              	.LVL1854:
 12045 00ca 3B46     		mov	r3, r7
 12046              	.LVL1855:
 12047              	.L1169:
 12048              		.loc 1 6076 0 is_stmt 0 discriminator 1
 12049 00cc 5F1C     		adds	r7, r3, #1
 12050              	.LVL1856:
 12051 00ce AB42     		cmp	r3, r5
 12052 00d0 F6D3     		bcc	.L1171
 12053 00d2 03E0     		b	.L1172
 12054              	.LVL1857:
 12055              	.L1173:
6077:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
6078:Middlewares/Third_Party/FatFs/src/ff.c **** 			while (*p) putc_bfd(&pb, *p++);
 12056              		.loc 1 6078 0 is_stmt 1 discriminator 2
 12057 00d4 0134     		adds	r4, r4, #1
 12058              	.LVL1858:
 12059 00d6 08A8     		add	r0, sp, #32
 12060 00d8 FFF7FEFF 		bl	putc_bfd
 12061              	.LVL1859:
 12062              	.L1172:
 12063              		.loc 1 6078 0 is_stmt 0 discriminator 1
 12064 00dc 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 12065 00de 0029     		cmp	r1, #0
 12066 00e0 F8D1     		bne	.L1173
 12067 00e2 05E0     		b	.L1174
 12068              	.LVL1860:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 348


 12069              	.L1175:
6079:Middlewares/Third_Party/FatFs/src/ff.c **** 			while (j++ < w) putc_bfd(&pb, ' ');
 12070              		.loc 1 6079 0 is_stmt 1 discriminator 2
 12071 00e4 2021     		movs	r1, #32
 12072 00e6 0DEB0100 		add	r0, sp, r1
 12073 00ea FFF7FEFF 		bl	putc_bfd
 12074              	.LVL1861:
 12075 00ee 2746     		mov	r7, r4
 12076              	.LVL1862:
 12077              	.L1174:
 12078              		.loc 1 6079 0 is_stmt 0 discriminator 1
 12079 00f0 7C1C     		adds	r4, r7, #1
 12080              	.LVL1863:
 12081 00f2 AF42     		cmp	r7, r5
 12082 00f4 F6D3     		bcc	.L1175
 12083 00f6 8AE0     		b	.L1149
 12084              	.LVL1864:
 12085              	.L1162:
6080:Middlewares/Third_Party/FatFs/src/ff.c **** 			continue;
6081:Middlewares/Third_Party/FatFs/src/ff.c **** 
6082:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'C' :					/* Character */
6083:Middlewares/Third_Party/FatFs/src/ff.c **** 			putc_bfd(&pb, (TCHAR)va_arg(arp, int)); continue;
 12086              		.loc 1 6083 0 is_stmt 1
 12087 00f8 1B9B     		ldr	r3, [sp, #108]
 12088              	.LVL1865:
 12089 00fa 1A1D     		adds	r2, r3, #4
 12090 00fc 1B92     		str	r2, [sp, #108]
 12091 00fe 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12092              	.LVL1866:
 12093 0100 08A8     		add	r0, sp, #32
 12094 0102 FFF7FEFF 		bl	putc_bfd
 12095              	.LVL1867:
 12096 0106 82E0     		b	.L1149
 12097              	.LVL1868:
 12098              	.L1163:
6084:Middlewares/Third_Party/FatFs/src/ff.c **** 
6085:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'B' :					/* Binary */
6086:Middlewares/Third_Party/FatFs/src/ff.c **** 			r = 2; break;
6087:Middlewares/Third_Party/FatFs/src/ff.c **** 
6088:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'O' :					/* Octal */
6089:Middlewares/Third_Party/FatFs/src/ff.c **** 			r = 8; break;
6090:Middlewares/Third_Party/FatFs/src/ff.c **** 
6091:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'D' :					/* Signed decimal */
6092:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'U' :					/* Unsigned decimal */
6093:Middlewares/Third_Party/FatFs/src/ff.c **** 			r = 10; break;
 12099              		.loc 1 6093 0
 12100 0108 4FF00A0C 		mov	ip, #10
 12101 010c 0BE0     		b	.L1164
 12102              	.LVL1869:
 12103              	.L1166:
6094:Middlewares/Third_Party/FatFs/src/ff.c **** 
6095:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'X' :					/* Hexdecimal */
6096:Middlewares/Third_Party/FatFs/src/ff.c **** 			r = 16; break;
 12104              		.loc 1 6096 0
 12105 010e 4FF0100C 		mov	ip, #16
 12106 0112 08E0     		b	.L1164
 12107              	.LVL1870:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 349


 12108              	.L1159:
6097:Middlewares/Third_Party/FatFs/src/ff.c **** 
6098:Middlewares/Third_Party/FatFs/src/ff.c **** 		default:					/* Unknown type (pass-through) */
6099:Middlewares/Third_Party/FatFs/src/ff.c **** 			putc_bfd(&pb, c); continue;
 12109              		.loc 1 6099 0
 12110 0114 08A8     		add	r0, sp, #32
 12111 0116 FFF7FEFF 		bl	putc_bfd
 12112              	.LVL1871:
 12113 011a 78E0     		b	.L1149
 12114              	.LVL1872:
 12115              	.L1160:
6086:Middlewares/Third_Party/FatFs/src/ff.c **** 
 12116              		.loc 1 6086 0
 12117 011c 4FF0020C 		mov	ip, #2
 12118 0120 01E0     		b	.L1164
 12119              	.L1193:
6089:Middlewares/Third_Party/FatFs/src/ff.c **** 
 12120              		.loc 1 6089 0
 12121 0122 4FF0080C 		mov	ip, #8
 12122              	.L1164:
 12123              	.LVL1873:
6100:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
6101:Middlewares/Third_Party/FatFs/src/ff.c **** 
6102:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Get an argument and put it in numeral */
6103:Middlewares/Third_Party/FatFs/src/ff.c **** 		v = (f & 4) ? (DWORD)va_arg(arp, long) : ((d == 'D') ? (DWORD)(long)va_arg(arp, int) : (DWORD)va_
 12124              		.loc 1 6103 0
 12125 0126 17F0040F 		tst	r7, #4
 12126 012a 12D1     		bne	.L1200
 12127              		.loc 1 6103 0 is_stmt 0 discriminator 2
 12128 012c 442B     		cmp	r3, #68
 12129 012e 15D0     		beq	.L1201
 12130              		.loc 1 6103 0
 12131 0130 1B9A     		ldr	r2, [sp, #108]
 12132 0132 101D     		adds	r0, r2, #4
 12133 0134 1B90     		str	r0, [sp, #108]
 12134 0136 1068     		ldr	r0, [r2]
 12135              	.L1177:
 12136              	.LVL1874:
6104:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (d == 'D' && (v & 0x80000000)) {
 12137              		.loc 1 6104 0 is_stmt 1 discriminator 8
 12138 0138 C20F     		lsrs	r2, r0, #31
 12139 013a 442B     		cmp	r3, #68
 12140 013c 14BF     		ite	ne
 12141 013e 0023     		movne	r3, #0
 12142 0140 02F00103 		andeq	r3, r2, #1
 12143              	.LVL1875:
 12144 0144 13B1     		cbz	r3, .L1179
6105:Middlewares/Third_Party/FatFs/src/ff.c **** 			v = 0 - v;
 12145              		.loc 1 6105 0
 12146 0146 4042     		negs	r0, r0
 12147              	.LVL1876:
6106:Middlewares/Third_Party/FatFs/src/ff.c **** 			f |= 8;
 12148              		.loc 1 6106 0
 12149 0148 47F00807 		orr	r7, r7, #8
 12150              	.LVL1877:
 12151              	.L1179:
6107:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 350


6108:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = 0;
 12152              		.loc 1 6108 0
 12153 014c 4FF0000E 		mov	lr, #0
 12154 0150 1CE0     		b	.L1182
 12155              	.LVL1878:
 12156              	.L1200:
6103:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (d == 'D' && (v & 0x80000000)) {
 12157              		.loc 1 6103 0
 12158 0152 1B9A     		ldr	r2, [sp, #108]
 12159 0154 101D     		adds	r0, r2, #4
 12160 0156 1B90     		str	r0, [sp, #108]
 12161 0158 1068     		ldr	r0, [r2]
 12162 015a EDE7     		b	.L1177
 12163              	.L1201:
 12164 015c 1B9A     		ldr	r2, [sp, #108]
 12165 015e 101D     		adds	r0, r2, #4
 12166 0160 1B90     		str	r0, [sp, #108]
 12167 0162 1068     		ldr	r0, [r2]
 12168 0164 E8E7     		b	.L1177
 12169              	.LVL1879:
 12170              	.L1203:
6109:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
6110:Middlewares/Third_Party/FatFs/src/ff.c **** 			d = (TCHAR)(v % r); v /= r;
6111:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (d > 9) d += (c == 'x') ? 0x27 : 0x07;
 12171              		.loc 1 6111 0
 12172 0166 2724     		movs	r4, #39
 12173              	.L1181:
 12174              		.loc 1 6111 0 is_stmt 0 discriminator 5
 12175 0168 2344     		add	r3, r3, r4
 12176              	.LVL1880:
 12177 016a DBB2     		uxtb	r3, r3
 12178              	.LVL1881:
 12179              	.L1180:
6112:Middlewares/Third_Party/FatFs/src/ff.c **** 			str[i++] = d + '0';
 12180              		.loc 1 6112 0 is_stmt 1
 12181 016c 0EF10104 		add	r4, lr, #1
 12182              	.LVL1882:
 12183 0170 3033     		adds	r3, r3, #48
 12184              	.LVL1883:
 12185 0172 0DF17008 		add	r8, sp, #112
 12186 0176 F044     		add	r8, r8, lr
 12187 0178 08F8703C 		strb	r3, [r8, #-112]
6113:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (v && i < sizeof str / sizeof str[0]);
 12188              		.loc 1 6113 0
 12189 017c 0032     		adds	r2, r2, #0
 12190 017e 18BF     		it	ne
 12191 0180 0122     		movne	r2, #1
 12192 0182 1F2C     		cmp	r4, #31
 12193 0184 88BF     		it	hi
 12194 0186 0022     		movhi	r2, #0
 12195 0188 62B1     		cbz	r2, .L1202
6112:Middlewares/Third_Party/FatFs/src/ff.c **** 			str[i++] = d + '0';
 12196              		.loc 1 6112 0
 12197 018a A646     		mov	lr, r4
 12198              	.LVL1884:
 12199              	.L1182:
6110:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (d > 9) d += (c == 'x') ? 0x27 : 0x07;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 351


 12200              		.loc 1 6110 0
 12201 018c B0FBFCF2 		udiv	r2, r0, ip
 12202 0190 0CFB1203 		mls	r3, ip, r2, r0
 12203 0194 DBB2     		uxtb	r3, r3
 12204              	.LVL1885:
 12205 0196 1046     		mov	r0, r2
 12206              	.LVL1886:
6111:Middlewares/Third_Party/FatFs/src/ff.c **** 			str[i++] = d + '0';
 12207              		.loc 1 6111 0
 12208 0198 092B     		cmp	r3, #9
 12209 019a E7D9     		bls	.L1180
6111:Middlewares/Third_Party/FatFs/src/ff.c **** 			str[i++] = d + '0';
 12210              		.loc 1 6111 0 is_stmt 0 discriminator 1
 12211 019c 7829     		cmp	r1, #120
 12212 019e E2D0     		beq	.L1203
6111:Middlewares/Third_Party/FatFs/src/ff.c **** 			str[i++] = d + '0';
 12213              		.loc 1 6111 0
 12214 01a0 0724     		movs	r4, #7
 12215 01a2 E1E7     		b	.L1181
 12216              	.LVL1887:
 12217              	.L1202:
6114:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (f & 8) str[i++] = '-';
 12218              		.loc 1 6114 0 is_stmt 1
 12219 01a4 17F0080F 		tst	r7, #8
 12220 01a8 06D0     		beq	.L1183
 12221              	.LVL1888:
 12222              		.loc 1 6114 0 is_stmt 0 discriminator 1
 12223 01aa 1CAB     		add	r3, sp, #112
 12224 01ac 1C44     		add	r4, r4, r3
 12225 01ae 2D23     		movs	r3, #45
 12226 01b0 04F8703C 		strb	r3, [r4, #-112]
 12227 01b4 0EF10204 		add	r4, lr, #2
 12228              	.LVL1889:
 12229              	.L1183:
6115:Middlewares/Third_Party/FatFs/src/ff.c **** 		j = i; d = (f & 1) ? '0' : ' ';
 12230              		.loc 1 6115 0 is_stmt 1
 12231 01b8 17F0010F 		tst	r7, #1
 12232 01bc 03D0     		beq	.L1196
 12233 01be 4FF0300A 		mov	r10, #48
 12234              	.L1184:
 12235              	.LVL1890:
 12236              		.loc 1 6115 0 is_stmt 0 discriminator 4
 12237 01c2 A046     		mov	r8, r4
6116:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (!(f & 2) && j++ < w) putc_bfd(&pb, d);
 12238              		.loc 1 6116 0 is_stmt 1 discriminator 4
 12239 01c4 07E0     		b	.L1185
 12240              	.LVL1891:
 12241              	.L1196:
6115:Middlewares/Third_Party/FatFs/src/ff.c **** 		j = i; d = (f & 1) ? '0' : ' ';
 12242              		.loc 1 6115 0
 12243 01c6 4FF0200A 		mov	r10, #32
 12244 01ca FAE7     		b	.L1184
 12245              	.LVL1892:
 12246              	.L1187:
 12247              		.loc 1 6116 0 discriminator 3
 12248 01cc 5146     		mov	r1, r10
 12249 01ce 08A8     		add	r0, sp, #32
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 352


 12250 01d0 FFF7FEFF 		bl	putc_bfd
 12251              	.LVL1893:
 12252 01d4 C846     		mov	r8, r9
 12253              	.LVL1894:
 12254              	.L1185:
 12255              		.loc 1 6116 0 is_stmt 0 discriminator 1
 12256 01d6 17F0020F 		tst	r7, #2
 12257 01da 04D1     		bne	.L1188
 12258              		.loc 1 6116 0 discriminator 2
 12259 01dc 08F10109 		add	r9, r8, #1
 12260              	.LVL1895:
 12261 01e0 A845     		cmp	r8, r5
 12262 01e2 F3D3     		bcc	.L1187
 12263              		.loc 1 6116 0
 12264 01e4 C846     		mov	r8, r9
 12265              	.LVL1896:
 12266              	.L1188:
6117:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
6118:Middlewares/Third_Party/FatFs/src/ff.c **** 			putc_bfd(&pb, str[--i]);
 12267              		.loc 1 6118 0 is_stmt 1 discriminator 1
 12268 01e6 013C     		subs	r4, r4, #1
 12269              	.LVL1897:
 12270 01e8 1CAB     		add	r3, sp, #112
 12271 01ea 2344     		add	r3, r3, r4
 12272 01ec 13F8701C 		ldrb	r1, [r3, #-112]	@ zero_extendqisi2
 12273 01f0 08A8     		add	r0, sp, #32
 12274 01f2 FFF7FEFF 		bl	putc_bfd
 12275              	.LVL1898:
6119:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (i);
 12276              		.loc 1 6119 0 discriminator 1
 12277 01f6 002C     		cmp	r4, #0
 12278 01f8 F5D1     		bne	.L1188
 12279 01fa 04E0     		b	.L1189
 12280              	.LVL1899:
 12281              	.L1190:
6120:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (j++ < w) putc_bfd(&pb, d);
 12282              		.loc 1 6120 0 discriminator 2
 12283 01fc 5146     		mov	r1, r10
 12284 01fe 08A8     		add	r0, sp, #32
 12285 0200 FFF7FEFF 		bl	putc_bfd
 12286              	.LVL1900:
 12287 0204 A046     		mov	r8, r4
 12288              	.LVL1901:
 12289              	.L1189:
 12290              		.loc 1 6120 0 is_stmt 0 discriminator 1
 12291 0206 08F10104 		add	r4, r8, #1
 12292              	.LVL1902:
 12293 020a A845     		cmp	r8, r5
 12294 020c F6D3     		bcc	.L1190
 12295              	.LVL1903:
 12296              	.L1149:
6046:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 0) break;			/* End of string */
 12297              		.loc 1 6046 0 is_stmt 1
 12298 020e 741C     		adds	r4, r6, #1
 12299              	.LVL1904:
 12300 0210 3178     		ldrb	r1, [r6]	@ zero_extendqisi2
 12301              	.LVL1905:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 353


6047:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c != '%') {				/* Non escape character */
 12302              		.loc 1 6047 0
 12303 0212 39B1     		cbz	r1, .L1150
6048:Middlewares/Third_Party/FatFs/src/ff.c **** 			putc_bfd(&pb, c);
 12304              		.loc 1 6048 0
 12305 0214 2529     		cmp	r1, #37
 12306 0216 3FF400AF 		beq	.L1151
6049:Middlewares/Third_Party/FatFs/src/ff.c **** 			continue;
 12307              		.loc 1 6049 0
 12308 021a 08A8     		add	r0, sp, #32
 12309 021c FFF7FEFF 		bl	putc_bfd
 12310              	.LVL1906:
6046:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 0) break;			/* End of string */
 12311              		.loc 1 6046 0
 12312 0220 2646     		mov	r6, r4
6050:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 12313              		.loc 1 6050 0
 12314 0222 F4E7     		b	.L1149
 12315              	.LVL1907:
 12316              	.L1150:
6121:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
6122:Middlewares/Third_Party/FatFs/src/ff.c **** 
6123:Middlewares/Third_Party/FatFs/src/ff.c **** 	va_end(arp);
6124:Middlewares/Third_Party/FatFs/src/ff.c **** 
6125:Middlewares/Third_Party/FatFs/src/ff.c **** 	return putc_flush(&pb);
 12317              		.loc 1 6125 0
 12318 0224 08A8     		add	r0, sp, #32
 12319 0226 FFF7FEFF 		bl	putc_flush
 12320              	.LVL1908:
6126:Middlewares/Third_Party/FatFs/src/ff.c **** }
 12321              		.loc 1 6126 0
 12322 022a 1DB0     		add	sp, sp, #116
 12323              	.LCFI165:
 12324              		.cfi_def_cfa_offset 44
 12325              		@ sp needed
 12326 022c BDE8F047 		pop	{r4, r5, r6, r7, r8, r9, r10, lr}
 12327              	.LCFI166:
 12328              		.cfi_restore 14
 12329              		.cfi_restore 10
 12330              		.cfi_restore 9
 12331              		.cfi_restore 8
 12332              		.cfi_restore 7
 12333              		.cfi_restore 6
 12334              		.cfi_restore 5
 12335              		.cfi_restore 4
 12336              		.cfi_def_cfa_offset 12
 12337 0230 03B0     		add	sp, sp, #12
 12338              	.LCFI167:
 12339              		.cfi_restore 3
 12340              		.cfi_restore 2
 12341              		.cfi_restore 1
 12342              		.cfi_def_cfa_offset 0
 12343 0232 7047     		bx	lr
 12344              		.cfi_endproc
 12345              	.LFE216:
 12347              		.section	.bss.CurrVol,"aw",%nobits
 12348              		.set	.LANCHOR3,. + 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 354


 12351              	CurrVol:
 12352 0000 00       		.space	1
 12353              		.section	.bss.FatFs,"aw",%nobits
 12354              		.align	2
 12355              		.set	.LANCHOR4,. + 0
 12358              	FatFs:
 12359 0000 00000000 		.space	8
 12359      00000000 
 12360              		.section	.bss.Files,"aw",%nobits
 12361              		.align	2
 12362              		.set	.LANCHOR0,. + 0
 12365              	Files:
 12366 0000 00000000 		.space	32
 12366      00000000 
 12366      00000000 
 12366      00000000 
 12366      00000000 
 12367              		.section	.bss.Fsid,"aw",%nobits
 12368              		.align	1
 12369              		.set	.LANCHOR5,. + 0
 12372              	Fsid:
 12373 0000 0000     		.space	2
 12374              		.section	.rodata.ExCvt,"a",%progbits
 12375              		.align	2
 12376              		.set	.LANCHOR2,. + 0
 12379              	ExCvt:
 12380 0000 43       		.byte	67
 12381 0001 55       		.byte	85
 12382 0002 45       		.byte	69
 12383 0003 41       		.byte	65
 12384 0004 41       		.byte	65
 12385 0005 41       		.byte	65
 12386 0006 41       		.byte	65
 12387 0007 43       		.byte	67
 12388 0008 45       		.byte	69
 12389 0009 45       		.byte	69
 12390 000a 45       		.byte	69
 12391 000b 49       		.byte	73
 12392 000c 49       		.byte	73
 12393 000d 49       		.byte	73
 12394 000e 41       		.byte	65
 12395 000f 41       		.byte	65
 12396 0010 45       		.byte	69
 12397 0011 92       		.byte	-110
 12398 0012 92       		.byte	-110
 12399 0013 4F       		.byte	79
 12400 0014 4F       		.byte	79
 12401 0015 4F       		.byte	79
 12402 0016 55       		.byte	85
 12403 0017 55       		.byte	85
 12404 0018 59       		.byte	89
 12405 0019 4F       		.byte	79
 12406 001a 55       		.byte	85
 12407 001b 4F       		.byte	79
 12408 001c 9C       		.byte	-100
 12409 001d 4F       		.byte	79
 12410 001e 9E       		.byte	-98
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 355


 12411 001f 9F       		.byte	-97
 12412 0020 41       		.byte	65
 12413 0021 49       		.byte	73
 12414 0022 4F       		.byte	79
 12415 0023 55       		.byte	85
 12416 0024 A5       		.byte	-91
 12417 0025 A5       		.byte	-91
 12418 0026 A6       		.byte	-90
 12419 0027 A7       		.byte	-89
 12420 0028 A8       		.byte	-88
 12421 0029 A9       		.byte	-87
 12422 002a AA       		.byte	-86
 12423 002b AB       		.byte	-85
 12424 002c AC       		.byte	-84
 12425 002d AD       		.byte	-83
 12426 002e AE       		.byte	-82
 12427 002f AF       		.byte	-81
 12428 0030 B0       		.byte	-80
 12429 0031 B1       		.byte	-79
 12430 0032 B2       		.byte	-78
 12431 0033 B3       		.byte	-77
 12432 0034 B4       		.byte	-76
 12433 0035 41       		.byte	65
 12434 0036 41       		.byte	65
 12435 0037 41       		.byte	65
 12436 0038 B8       		.byte	-72
 12437 0039 B9       		.byte	-71
 12438 003a BA       		.byte	-70
 12439 003b BB       		.byte	-69
 12440 003c BC       		.byte	-68
 12441 003d BD       		.byte	-67
 12442 003e BE       		.byte	-66
 12443 003f BF       		.byte	-65
 12444 0040 C0       		.byte	-64
 12445 0041 C1       		.byte	-63
 12446 0042 C2       		.byte	-62
 12447 0043 C3       		.byte	-61
 12448 0044 C4       		.byte	-60
 12449 0045 C5       		.byte	-59
 12450 0046 41       		.byte	65
 12451 0047 41       		.byte	65
 12452 0048 C8       		.byte	-56
 12453 0049 C9       		.byte	-55
 12454 004a CA       		.byte	-54
 12455 004b CB       		.byte	-53
 12456 004c CC       		.byte	-52
 12457 004d CD       		.byte	-51
 12458 004e CE       		.byte	-50
 12459 004f CF       		.byte	-49
 12460 0050 D1       		.byte	-47
 12461 0051 D1       		.byte	-47
 12462 0052 45       		.byte	69
 12463 0053 45       		.byte	69
 12464 0054 45       		.byte	69
 12465 0055 49       		.byte	73
 12466 0056 49       		.byte	73
 12467 0057 49       		.byte	73
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 356


 12468 0058 49       		.byte	73
 12469 0059 D9       		.byte	-39
 12470 005a DA       		.byte	-38
 12471 005b DB       		.byte	-37
 12472 005c DC       		.byte	-36
 12473 005d DD       		.byte	-35
 12474 005e 49       		.byte	73
 12475 005f DF       		.byte	-33
 12476 0060 4F       		.byte	79
 12477 0061 E1       		.byte	-31
 12478 0062 4F       		.byte	79
 12479 0063 4F       		.byte	79
 12480 0064 4F       		.byte	79
 12481 0065 4F       		.byte	79
 12482 0066 E6       		.byte	-26
 12483 0067 E8       		.byte	-24
 12484 0068 E8       		.byte	-24
 12485 0069 55       		.byte	85
 12486 006a 55       		.byte	85
 12487 006b 55       		.byte	85
 12488 006c 59       		.byte	89
 12489 006d 59       		.byte	89
 12490 006e EE       		.byte	-18
 12491 006f EF       		.byte	-17
 12492 0070 F0       		.byte	-16
 12493 0071 F1       		.byte	-15
 12494 0072 F2       		.byte	-14
 12495 0073 F3       		.byte	-13
 12496 0074 F4       		.byte	-12
 12497 0075 F5       		.byte	-11
 12498 0076 F6       		.byte	-10
 12499 0077 F7       		.byte	-9
 12500 0078 F8       		.byte	-8
 12501 0079 F9       		.byte	-7
 12502 007a FA       		.byte	-6
 12503 007b FB       		.byte	-5
 12504 007c FC       		.byte	-4
 12505 007d FD       		.byte	-3
 12506 007e FE       		.byte	-2
 12507 007f FF       		.byte	-1
 12508              		.section	.rodata.LfnOfs,"a",%progbits
 12509              		.align	2
 12510              		.set	.LANCHOR1,. + 0
 12513              	LfnOfs:
 12514 0000 01       		.byte	1
 12515 0001 03       		.byte	3
 12516 0002 05       		.byte	5
 12517 0003 07       		.byte	7
 12518 0004 09       		.byte	9
 12519 0005 0E       		.byte	14
 12520 0006 10       		.byte	16
 12521 0007 12       		.byte	18
 12522 0008 14       		.byte	20
 12523 0009 16       		.byte	22
 12524 000a 18       		.byte	24
 12525 000b 1C       		.byte	28
 12526 000c 1E       		.byte	30
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 357


 12527              		.section	.rodata.create_name.str1.4,"aMS",%progbits,1
 12528              		.align	2
 12529              	.LC0:
 12530 0000 222A3A3C 		.ascii	"\"*:<>?|\177\000"
 12530      3E3F7C7F 
 12530      00
 12531 0009 000000   		.space	3
 12532              	.LC1:
 12533 000c 2B2C3B3D 		.ascii	"+,;=[]\000"
 12533      5B5D00
 12534              		.section	.rodata.cst.14587,"a",%progbits
 12535              		.align	2
 12536              		.set	.LANCHOR7,. + 0
 12539              	cst.14587:
 12540 0000 0100     		.short	1
 12541 0002 0400     		.short	4
 12542 0004 1000     		.short	16
 12543 0006 4000     		.short	64
 12544 0008 0001     		.short	256
 12545 000a 0002     		.short	512
 12546 000c 0000     		.short	0
 12547              		.section	.rodata.cst32.14588,"a",%progbits
 12548              		.align	2
 12549              		.set	.LANCHOR6,. + 0
 12552              	cst32.14588:
 12553 0000 0100     		.short	1
 12554 0002 0200     		.short	2
 12555 0004 0400     		.short	4
 12556 0006 0800     		.short	8
 12557 0008 1000     		.short	16
 12558 000a 2000     		.short	32
 12559 000c 0000     		.short	0
 12560              		.section	.rodata.f_mkfs.str1.4,"aMS",%progbits,1
 12561              		.align	2
 12562              	.LC2:
 12563 0000 EBFE904D 		.ascii	"\353\376\220MSDOS5.0\000"
 12563      53444F53 
 12563      352E3000 
 12564              	.LC3:
 12565 000c 4E4F204E 		.ascii	"NO NAME    FAT32   \000"
 12565      414D4520 
 12565      20202046 
 12565      41543332 
 12565      20202000 
 12566              	.LC4:
 12567 0020 4E4F204E 		.ascii	"NO NAME    FAT     \000"
 12567      414D4520 
 12567      20202046 
 12567      41542020 
 12567      20202000 
 12568              		.text
 12569              	.Letext0:
 12570              		.file 2 "Middlewares/Third_Party/FatFs/src/integer.h"
 12571              		.file 3 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\machine\\_default_types.h"
 12572              		.file 4 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\sys\\_stdint.h"
 12573              		.file 5 "Drivers/CMSIS/Include/core_cm7.h"
 12574              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 358


 12575              		.file 7 "c:\\gcc_toolchain\\6_2017-q1-update\\lib\\gcc\\arm-none-eabi\\6.3.1\\include\\stdarg.h"
 12576              		.file 8 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\stdio.h"
 12577              		.file 9 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\sys\\lock.h"
 12578              		.file 10 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\sys\\_types.h"
 12579              		.file 11 "c:\\gcc_toolchain\\6_2017-q1-update\\lib\\gcc\\arm-none-eabi\\6.3.1\\include\\stddef.h"
 12580              		.file 12 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\sys\\reent.h"
 12581              		.file 13 "<built-in>"
 12582              		.file 14 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 12583              		.file 15 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 12584              		.file 16 "Middlewares/Third_Party/FreeRTOS/Source/include/semphr.h"
 12585              		.file 17 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 12586              		.file 18 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\stdlib.h"
 12587              		.file 19 "Middlewares/ST/STM32_USB_Host_Library/Core/Inc/usbh_def.h"
 12588              		.file 20 "Middlewares/ST/STM32_USB_Host_Library/Core/Inc/usbh_ctlreq.h"
 12589              		.file 21 "Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc/usbh_msc.h"
 12590              		.file 22 "Middlewares/Third_Party/FatFs/src/ff.h"
 12591              		.file 23 "Middlewares/Third_Party/FatFs/src/diskio.h"
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 359


DEFINED SYMBOLS
                            *ABS*:00000000 ff.c
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:18     .text.ld_word:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:24     .text.ld_word:00000000 ld_word
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:47     .text.ld_dword:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:53     .text.ld_dword:00000000 ld_dword
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:83     .text.st_word:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:89     .text.st_word:00000000 st_word
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:109    .text.st_dword:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:115    .text.st_dword:00000000 st_dword
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:143    .text.mem_cpy:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:149    .text.mem_cpy:00000000 mem_cpy
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:180    .text.mem_set:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:186    .text.mem_set:00000000 mem_set
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:210    .text.mem_cmp:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:216    .text.mem_cmp:00000000 mem_cmp
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:266    .text.chk_chr:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:272    .text.chk_chr:00000000 chk_chr
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:302    .text.chk_lock:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:308    .text.chk_lock:00000000 chk_lock
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:421    .text.chk_lock:00000070 $d
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:426    .text.enq_lock:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:432    .text.enq_lock:00000000 enq_lock
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:469    .text.enq_lock:0000001c $d
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:474    .text.inc_lock:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:480    .text.inc_lock:00000000 inc_lock
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:632    .text.inc_lock:000000a0 $d
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:637    .text.dec_lock:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:643    .text.dec_lock:00000000 dec_lock
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:711    .text.dec_lock:0000003c $d
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:716    .text.clear_lock:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:722    .text.clear_lock:00000000 clear_lock
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:788    .text.clear_lock:00000038 $d
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:793    .text.clust2sect:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:799    .text.clust2sect:00000000 clust2sect
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:832    .text.clmt_clust:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:838    .text.clmt_clust:00000000 clmt_clust
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:889    .text.ld_clust:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:895    .text.ld_clust:00000000 ld_clust
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:940    .text.st_clust:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:946    .text.st_clust:00000000 st_clust
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:989    .text.pick_lfn:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:995    .text.pick_lfn:00000000 pick_lfn
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:1111   .text.pick_lfn:00000088 $d
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:1116   .text.put_lfn:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:1122   .text.put_lfn:00000000 put_lfn
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:1221   .text.put_lfn:00000074 $d
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:1226   .text.gen_numname:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:1232   .text.gen_numname:00000000 gen_numname
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:1402   .text.sum_sfn:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:1408   .text.sum_sfn:00000000 sum_sfn
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:1445   .text.get_achar:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:1451   .text.get_achar:00000000 get_achar
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:1491   .text.get_achar:00000024 $d
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:1496   .text.pattern_matching:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:1502   .text.pattern_matching:00000000 pattern_matching
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:1662   .text.get_ldnumber:00000000 $t
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 360


C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:1668   .text.get_ldnumber:00000000 get_ldnumber
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:1764   .text.get_ldnumber:00000054 $d
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:1769   .text.putc_init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:1775   .text.putc_init:00000000 putc_init
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:1794   .text.lock_fs:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:1800   .text.lock_fs:00000000 lock_fs
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:1837   .text.validate:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:1843   .text.validate:00000000 validate
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:1911   .text.sync_window:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:1917   .text.sync_window:00000000 sync_window
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:2008   .text.move_window:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:2014   .text.move_window:00000000 move_window
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:2075   .text.check_fs:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:2081   .text.check_fs:00000000 check_fs
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:2166   .text.check_fs:00000070 $d
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:2173   .text.find_volume:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:2179   .text.find_volume:00000000 find_volume
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:2733   .text.find_volume:000002d0 $d
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:2741   .text.put_fat:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:2747   .text.put_fat:00000000 put_fat
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:2945   .text.get_fat:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:2951   .text.get_fat:00000000 get_fat
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:3117   .text.dir_sdi:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:3123   .text.dir_sdi:00000000 dir_sdi
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:3279   .text.create_chain:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:3285   .text.create_chain:00000000 create_chain
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:3470   .text.remove_chain:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:3476   .text.remove_chain:00000000 remove_chain
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:3598   .text.dir_next:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:3604   .text.dir_next:00000000 dir_next
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:3831   .text.dir_alloc:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:3837   .text.dir_alloc:00000000 dir_alloc
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:3926   .text.dir_read:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:3932   .text.dir_read:00000000 dir_read
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:4108   .text.dir_remove:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:4114   .text.dir_remove:00000000 dir_remove
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:4203   .text.unlock_fs:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:4209   .text.unlock_fs:00000000 unlock_fs
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:4252   .text.create_name:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:4258   .text.create_name:00000000 create_name
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:4747   .text.create_name:00000288 $d
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:4755   .text.get_fileinfo:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:4761   .text.get_fileinfo:00000000 get_fileinfo
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:4982   .text.cmp_lfn:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:4988   .text.cmp_lfn:00000000 cmp_lfn
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:5125   .text.cmp_lfn:000000ac $d
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:5130   .text.dir_find:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:5136   .text.dir_find:00000000 dir_find
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:5329   .text.follow_path:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:5335   .text.follow_path:00000000 follow_path
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:5495   .text.dir_register:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:5501   .text.dir_register:00000000 dir_register
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:5745   .text.dir_register:00000140 $d
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:5750   .text.sync_fs:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:5756   .text.sync_fs:00000000 sync_fs
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:5852   .text.sync_fs:00000084 $d
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:5858   .text.f_mount:00000000 $t
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 361


C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:5865   .text.f_mount:00000000 f_mount
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:5987   .text.f_mount:0000008c $d
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:5992   .text.f_open:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:5999   .text.f_open:00000000 f_open
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:6465   .text.f_read:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:6472   .text.f_read:00000000 f_read
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:6831   .text.f_write:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:6838   .text.f_write:00000000 f_write
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:7229   .text.putc_bfd:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:7235   .text.putc_bfd:00000000 putc_bfd
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:7325   .text.putc_flush:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:7331   .text.putc_flush:00000000 putc_flush
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:7399   .text.f_sync:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:7406   .text.f_sync:00000000 f_sync
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:7547   .text.f_close:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:7554   .text.f_close:00000000 f_close
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:7624   .text.f_chdrive:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:7631   .text.f_chdrive:00000000 f_chdrive
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:7680   .text.f_chdrive:00000024 $d
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:7685   .text.f_chdir:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:7692   .text.f_chdir:00000000 f_chdir
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:7816   .text.f_getcwd:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:7823   .text.f_getcwd:00000000 f_getcwd
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:8095   .text.f_getcwd:00000138 $d
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:8100   .text.f_lseek:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:8107   .text.f_lseek:00000000 f_lseek
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:8704   .text.f_opendir:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:8711   .text.f_opendir:00000000 f_opendir
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:8883   .text.f_closedir:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:8890   .text.f_closedir:00000000 f_closedir
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:8954   .text.f_readdir:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:8961   .text.f_readdir:00000000 f_readdir
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:9082   .text.f_findnext:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:9089   .text.f_findnext:00000000 f_findnext
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:9142   .text.f_findfirst:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:9149   .text.f_findfirst:00000000 f_findfirst
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:9195   .text.f_stat:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:9202   .text.f_stat:00000000 f_stat
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:9304   .text.f_getfree:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:9311   .text.f_getfree:00000000 f_getfree
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:9530   .text.f_truncate:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:9537   .text.f_truncate:00000000 f_truncate
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:9720   .text.f_unlink:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:9727   .text.f_unlink:00000000 f_unlink
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:9960   .text.f_mkdir:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:9967   .text.f_mkdir:00000000 f_mkdir
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:10313  .text.f_rename:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:10320  .text.f_rename:00000000 f_rename
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:10582  .text.f_mkfs:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:10589  .text.f_mkfs:00000000 f_mkfs
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:11073  .text.f_mkfs:00000294 $d
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:11082  .text.f_mkfs:000002ac $t
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:11634  .text.f_mkfs:00000624 $d
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:11644  .text.f_gets:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:11651  .text.f_gets:00000000 f_gets
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:11743  .text.f_putc:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:11750  .text.f_putc:00000000 f_putc
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s 			page 362


C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:11790  .text.f_puts:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:11797  .text.f_puts:00000000 f_puts
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:11846  .text.f_printf:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:11853  .text.f_printf:00000000 f_printf
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:11981  .text.f_printf:00000086 $d
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:12351  .bss.CurrVol:00000000 CurrVol
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:12352  .bss.CurrVol:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:12354  .bss.FatFs:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:12358  .bss.FatFs:00000000 FatFs
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:12361  .bss.Files:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:12365  .bss.Files:00000000 Files
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:12368  .bss.Fsid:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:12372  .bss.Fsid:00000000 Fsid
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:12375  .rodata.ExCvt:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:12379  .rodata.ExCvt:00000000 ExCvt
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:12509  .rodata.LfnOfs:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:12513  .rodata.LfnOfs:00000000 LfnOfs
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:12528  .rodata.create_name.str1.4:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:12535  .rodata.cst.14587:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:12539  .rodata.cst.14587:00000000 cst.14587
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:12548  .rodata.cst32.14588:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:12552  .rodata.cst32.14588:00000000 cst32.14588
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:12561  .rodata.f_mkfs.str1.4:00000000 $d
                     .debug_frame:00000010 $d
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:12005  .text.f_printf:0000009d $d
C:\Users\Student\AppData\Local\Temp\ccbnTWYq.s:12005  .text.f_printf:0000009e $t

UNDEFINED SYMBOLS
ff_req_grant
disk_status
disk_write
disk_read
disk_initialize
ff_rel_grant
ff_convert
ff_wtoupper
disk_ioctl
ff_del_syncobj
ff_cre_syncobj
ff_memalloc
ff_memfree
get_fattime
